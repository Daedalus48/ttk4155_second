
Ping Pong_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000128  00800100  00001e88  00001f1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800228  00800228  00002044  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002044  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000310  00000000  00000000  000020a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003a40  00000000  00000000  000023b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000127f  00000000  00000000  00005df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002b43  00000000  00000000  0000706f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000007d4  00000000  00000000  00009bb4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000096a1  00000000  00000000  0000a388  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001af8  00000000  00000000  00013a29  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002e0  00000000  00000000  00015521  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00001628  00000000  00000000  00015801  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5f c3       	rjmp	.+1726   	; 0x6c0 <__ctors_end>
       2:	00 00       	nop
       4:	79 c3       	rjmp	.+1778   	; 0x6f8 <__bad_interrupt>
       6:	00 00       	nop
       8:	77 c3       	rjmp	.+1774   	; 0x6f8 <__bad_interrupt>
       a:	00 00       	nop
       c:	75 c3       	rjmp	.+1770   	; 0x6f8 <__bad_interrupt>
       e:	00 00       	nop
      10:	73 c3       	rjmp	.+1766   	; 0x6f8 <__bad_interrupt>
      12:	00 00       	nop
      14:	71 c3       	rjmp	.+1762   	; 0x6f8 <__bad_interrupt>
      16:	00 00       	nop
      18:	6f c3       	rjmp	.+1758   	; 0x6f8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6d c3       	rjmp	.+1754   	; 0x6f8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6b c3       	rjmp	.+1750   	; 0x6f8 <__bad_interrupt>
      22:	00 00       	nop
      24:	69 c3       	rjmp	.+1746   	; 0x6f8 <__bad_interrupt>
      26:	00 00       	nop
      28:	67 c3       	rjmp	.+1742   	; 0x6f8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	65 c3       	rjmp	.+1738   	; 0x6f8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	63 c3       	rjmp	.+1734   	; 0x6f8 <__bad_interrupt>
      32:	00 00       	nop
      34:	61 c3       	rjmp	.+1730   	; 0x6f8 <__bad_interrupt>
      36:	00 00       	nop
      38:	5f c3       	rjmp	.+1726   	; 0x6f8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5d c3       	rjmp	.+1722   	; 0x6f8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5b c3       	rjmp	.+1718   	; 0x6f8 <__bad_interrupt>
      42:	00 00       	nop
      44:	59 c3       	rjmp	.+1714   	; 0x6f8 <__bad_interrupt>
      46:	00 00       	nop
      48:	57 c3       	rjmp	.+1710   	; 0x6f8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	55 c3       	rjmp	.+1706   	; 0x6f8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	53 c3       	rjmp	.+1702   	; 0x6f8 <__bad_interrupt>
      52:	00 00       	nop
      54:	51 c3       	rjmp	.+1698   	; 0x6f8 <__bad_interrupt>
      56:	00 00       	nop
      58:	4f c3       	rjmp	.+1694   	; 0x6f8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4d c3       	rjmp	.+1690   	; 0x6f8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4b c3       	rjmp	.+1686   	; 0x6f8 <__bad_interrupt>
      62:	00 00       	nop
      64:	49 c3       	rjmp	.+1682   	; 0x6f8 <__bad_interrupt>
      66:	00 00       	nop
      68:	47 c3       	rjmp	.+1678   	; 0x6f8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	45 c3       	rjmp	.+1674   	; 0x6f8 <__bad_interrupt>
	...

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font5>:
     1ec:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     1fc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     20c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     21c:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     22c:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     23c:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     24c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     25c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     26c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     27c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     28c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     29c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     2ac:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     2bc:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     2cc:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     2dc:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     2ec:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     2fc:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     30c:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     31c:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     32c:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     33c:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     34c:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     35c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     36c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     37c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     38c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     39c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     3ac:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     3bc:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

000003c7 <font8>:
	...
     3cf:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     3df:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     3ef:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     3ff:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     40f:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     41f:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     42f:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     43f:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     44f:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     45f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     46f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     47f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     48f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     49f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     4af:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     4bf:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     4cf:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     4df:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     4ef:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     4ff:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     50f:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     51f:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     52f:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     53f:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     54f:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     55f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     56f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     57f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     58f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     59f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     5af:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     5bf:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     5cf:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     5df:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     5ef:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     5ff:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     60f:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     61f:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     62f:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     63f:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     64f:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     65f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     66f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     67f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     68f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     69f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     6af:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

000006c0 <__ctors_end>:
     6c0:	11 24       	eor	r1, r1
     6c2:	1f be       	out	0x3f, r1	; 63
     6c4:	cf ef       	ldi	r28, 0xFF	; 255
     6c6:	d4 e0       	ldi	r29, 0x04	; 4
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	cd bf       	out	0x3d, r28	; 61

000006cc <__do_copy_data>:
     6cc:	12 e0       	ldi	r17, 0x02	; 2
     6ce:	a0 e0       	ldi	r26, 0x00	; 0
     6d0:	b1 e0       	ldi	r27, 0x01	; 1
     6d2:	e8 e8       	ldi	r30, 0x88	; 136
     6d4:	fe e1       	ldi	r31, 0x1E	; 30
     6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__do_copy_data+0x10>
     6d8:	05 90       	lpm	r0, Z+
     6da:	0d 92       	st	X+, r0
     6dc:	a8 32       	cpi	r26, 0x28	; 40
     6de:	b1 07       	cpc	r27, r17
     6e0:	d9 f7       	brne	.-10     	; 0x6d8 <__do_copy_data+0xc>

000006e2 <__do_clear_bss>:
     6e2:	22 e0       	ldi	r18, 0x02	; 2
     6e4:	a8 e2       	ldi	r26, 0x28	; 40
     6e6:	b2 e0       	ldi	r27, 0x02	; 2
     6e8:	01 c0       	rjmp	.+2      	; 0x6ec <.do_clear_bss_start>

000006ea <.do_clear_bss_loop>:
     6ea:	1d 92       	st	X+, r1

000006ec <.do_clear_bss_start>:
     6ec:	a0 34       	cpi	r26, 0x40	; 64
     6ee:	b2 07       	cpc	r27, r18
     6f0:	e1 f7       	brne	.-8      	; 0x6ea <.do_clear_bss_loop>
     6f2:	e4 d6       	rcall	.+3528   	; 0x14bc <main>
     6f4:	0c 94 42 0f 	jmp	0x1e84	; 0x1e84 <_exit>

000006f8 <__bad_interrupt>:
     6f8:	83 cc       	rjmp	.-1786   	; 0x0 <__vectors>

000006fa <adc_read>:
	else{
		ans = joy_adc_direction;
	}
	//printf("answer % d \n \r \n \r", ans);
	return ans;*/
}
     6fa:	9f ef       	ldi	r25, 0xFF	; 255
     6fc:	98 0f       	add	r25, r24
     6fe:	94 30       	cpi	r25, 0x04	; 4
     700:	58 f4       	brcc	.+22     	; 0x718 <adc_read+0x1e>
     702:	8d 5f       	subi	r24, 0xFD	; 253
     704:	80 93 00 14 	sts	0x1400, r24
     708:	85 e3       	ldi	r24, 0x35	; 53
     70a:	8a 95       	dec	r24
     70c:	f1 f7       	brne	.-4      	; 0x70a <adc_read+0x10>
     70e:	00 00       	nop
     710:	80 91 00 14 	lds	r24, 0x1400
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	08 95       	ret
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	08 95       	ret

0000071e <adc_joystick_direction>:
     71e:	84 e0       	ldi	r24, 0x04	; 4
     720:	80 93 00 14 	sts	0x1400, r24
     724:	85 e3       	ldi	r24, 0x35	; 53
     726:	8a 95       	dec	r24
     728:	f1 f7       	brne	.-4      	; 0x726 <adc_joystick_direction+0x8>
     72a:	00 00       	nop
     72c:	e0 e0       	ldi	r30, 0x00	; 0
     72e:	f4 e1       	ldi	r31, 0x14	; 20
     730:	40 81       	ld	r20, Z
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	4c 58       	subi	r20, 0x8C	; 140
     736:	51 09       	sbc	r21, r1
     738:	85 e0       	ldi	r24, 0x05	; 5
     73a:	80 83       	st	Z, r24
     73c:	85 e3       	ldi	r24, 0x35	; 53
     73e:	8a 95       	dec	r24
     740:	f1 f7       	brne	.-4      	; 0x73e <adc_joystick_direction+0x20>
     742:	00 00       	nop
     744:	20 91 00 14 	lds	r18, 0x1400
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	2c 58       	subi	r18, 0x8C	; 140
     74c:	31 09       	sbc	r19, r1
     74e:	ba 01       	movw	r22, r20
     750:	55 23       	and	r21, r21
     752:	24 f4       	brge	.+8      	; 0x75c <adc_joystick_direction+0x3e>
     754:	66 27       	eor	r22, r22
     756:	77 27       	eor	r23, r23
     758:	64 1b       	sub	r22, r20
     75a:	75 0b       	sbc	r23, r21
     75c:	c9 01       	movw	r24, r18
     75e:	33 23       	and	r19, r19
     760:	24 f4       	brge	.+8      	; 0x76a <adc_joystick_direction+0x4c>
     762:	88 27       	eor	r24, r24
     764:	99 27       	eor	r25, r25
     766:	82 1b       	sub	r24, r18
     768:	93 0b       	sbc	r25, r19
     76a:	68 17       	cp	r22, r24
     76c:	79 07       	cpc	r23, r25
     76e:	44 f4       	brge	.+16     	; 0x780 <adc_joystick_direction+0x62>
     770:	33 23       	and	r19, r19
     772:	8c f0       	brlt	.+34     	; 0x796 <adc_joystick_direction+0x78>
     774:	12 16       	cp	r1, r18
     776:	13 06       	cpc	r1, r19
     778:	8c f0       	brlt	.+34     	; 0x79c <adc_joystick_direction+0x7e>
     77a:	84 e0       	ldi	r24, 0x04	; 4
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	19 c0       	rjmp	.+50     	; 0x7b2 <adc_joystick_direction+0x94>
     780:	86 17       	cp	r24, r22
     782:	97 07       	cpc	r25, r23
     784:	74 f4       	brge	.+28     	; 0x7a2 <adc_joystick_direction+0x84>
     786:	55 23       	and	r21, r21
     788:	7c f0       	brlt	.+30     	; 0x7a8 <adc_joystick_direction+0x8a>
     78a:	14 16       	cp	r1, r20
     78c:	15 06       	cpc	r1, r21
     78e:	7c f0       	brlt	.+30     	; 0x7ae <adc_joystick_direction+0x90>
     790:	84 e0       	ldi	r24, 0x04	; 4
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e c0       	rjmp	.+28     	; 0x7b2 <adc_joystick_direction+0x94>
     796:	83 e0       	ldi	r24, 0x03	; 3
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	0b c0       	rjmp	.+22     	; 0x7b2 <adc_joystick_direction+0x94>
     79c:	82 e0       	ldi	r24, 0x02	; 2
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	08 c0       	rjmp	.+16     	; 0x7b2 <adc_joystick_direction+0x94>
     7a2:	84 e0       	ldi	r24, 0x04	; 4
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	05 c0       	rjmp	.+10     	; 0x7b2 <adc_joystick_direction+0x94>
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <adc_joystick_direction+0x94>
     7ae:	81 e0       	ldi	r24, 0x01	; 1
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	43 5e       	subi	r20, 0xE3	; 227
     7b4:	5f 4f       	sbci	r21, 0xFF	; 255
     7b6:	4b 33       	cpi	r20, 0x3B	; 59
     7b8:	51 05       	cpc	r21, r1
     7ba:	38 f4       	brcc	.+14     	; 0x7ca <adc_joystick_direction+0xac>
     7bc:	23 5e       	subi	r18, 0xE3	; 227
     7be:	3f 4f       	sbci	r19, 0xFF	; 255
     7c0:	2b 33       	cpi	r18, 0x3B	; 59
     7c2:	31 05       	cpc	r19, r1
     7c4:	10 f4       	brcc	.+4      	; 0x7ca <adc_joystick_direction+0xac>
     7c6:	84 e0       	ldi	r24, 0x04	; 4
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	08 95       	ret

000007cc <get_joy_adc_direction>:

int get_joy_adc_direction(){
	return xmem_read(JOY_DIR_ADDRESS);
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	98 e1       	ldi	r25, 0x18	; 24
     7d0:	66 d6       	rcall	.+3276   	; 0x149e <xmem_read>
}
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	08 95       	ret

000007d6 <set_joy_adc_direction>:

void set_joy_adc_direction(int joy_adc_direction){
	xmem_write(joy_adc_direction, JOY_DIR_ADDRESS);
     7d6:	60 e0       	ldi	r22, 0x00	; 0
     7d8:	78 e1       	ldi	r23, 0x18	; 24
     7da:	5d c6       	rjmp	.+3258   	; 0x1496 <xmem_write>
     7dc:	08 95       	ret

000007de <adc_init>:




void adc_init(){
	set_joy_adc_direction(NEUTRAL);
     7de:	84 e0       	ldi	r24, 0x04	; 4
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	f9 cf       	rjmp	.-14     	; 0x7d6 <set_joy_adc_direction>
     7e4:	08 95       	ret

000007e6 <adc_joy_pos_changed>:
		ans = NEUTRAL;
	}
	return ans;
}

int adc_joy_pos_changed(){
     7e6:	cf 93       	push	r28
     7e8:	df 93       	push	r29
	int ans = 0;
	int joy_adc_direction = get_joy_adc_direction();
     7ea:	f0 df       	rcall	.-32     	; 0x7cc <get_joy_adc_direction>
     7ec:	ec 01       	movw	r28, r24
	int previous_joy_adc_direction = joy_adc_direction;
	joy_adc_direction = adc_joystick_direction();
     7ee:	97 df       	rcall	.-210    	; 0x71e <adc_joystick_direction>

	
	if(previous_joy_adc_direction == joy_adc_direction){
     7f0:	c8 17       	cp	r28, r24
     7f2:	d9 07       	cpc	r29, r25
     7f4:	19 f4       	brne	.+6      	; 0x7fc <adc_joy_pos_changed+0x16>
		ans = 5;
     7f6:	d5 e0       	ldi	r29, 0x05	; 5
     7f8:	c0 e0       	ldi	r28, 0x00	; 0
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <adc_joy_pos_changed+0x1a>
	}
	else{
		ans = joy_adc_direction;
     7fc:	d8 2f       	mov	r29, r24
     7fe:	c9 2f       	mov	r28, r25
	}
	set_joy_adc_direction(joy_adc_direction);
     800:	ea df       	rcall	.-44     	; 0x7d6 <set_joy_adc_direction>
	return ans;
}
     802:	8d 2f       	mov	r24, r29
     804:	9c 2f       	mov	r25, r28
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	08 95       	ret

0000080c <can_init>:


// "Main" for using can:

void can_init()
{
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
     810:	cd b7       	in	r28, 0x3d	; 61
     812:	de b7       	in	r29, 0x3e	; 62
     814:	2a 97       	sbiw	r28, 0x0a	; 10
     816:	0f b6       	in	r0, 0x3f	; 63
     818:	f8 94       	cli
     81a:	de bf       	out	0x3e, r29	; 62
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	cd bf       	out	0x3d, r28	; 61
	mcp2515_init(); //Init
     820:	ab d2       	rcall	.+1366   	; 0xd78 <mcp2515_init>
	
	
	mcp2515_write(MCP_RXB0CTRL, MCP_RXBnCTRL_NOFILTER_bm, 1); // Set to no filter
     822:	41 e0       	ldi	r20, 0x01	; 1
     824:	60 e6       	ldi	r22, 0x60	; 96
     826:	80 e6       	ldi	r24, 0x60	; 96
     828:	c8 d2       	rcall	.+1424   	; 0xdba <mcp2515_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     82a:	8f ef       	ldi	r24, 0xFF	; 255
     82c:	9f e8       	ldi	r25, 0x8F	; 143
     82e:	01 97       	sbiw	r24, 0x01	; 1
     830:	f1 f7       	brne	.-4      	; 0x82e <can_init+0x22>
     832:	00 c0       	rjmp	.+0      	; 0x834 <can_init+0x28>
     834:	00 00       	nop
	_delay_ms(30);
	
	mcp2515_bit_modify(MCP_CANINTE, 0b00000001, 1); // Enable Interrupt when message is received
     836:	41 e0       	ldi	r20, 0x01	; 1
     838:	61 e0       	ldi	r22, 0x01	; 1
     83a:	8b e2       	ldi	r24, 0x2B	; 43
     83c:	e5 d2       	rcall	.+1482   	; 0xe08 <mcp2515_bit_modify>
     83e:	8f ef       	ldi	r24, 0xFF	; 255
     840:	9f e8       	ldi	r25, 0x8F	; 143
     842:	01 97       	sbiw	r24, 0x01	; 1
     844:	f1 f7       	brne	.-4      	; 0x842 <can_init+0x36>
     846:	00 c0       	rjmp	.+0      	; 0x848 <can_init+0x3c>
     848:	00 00       	nop
	_delay_ms(30);

	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);//0b11100000 instead of MODE_MASK
     84a:	40 e0       	ldi	r20, 0x00	; 0
     84c:	60 ee       	ldi	r22, 0xE0	; 224
     84e:	8f e0       	ldi	r24, 0x0F	; 15
     850:	db d2       	rcall	.+1462   	; 0xe08 <mcp2515_bit_modify>
     852:	8f ef       	ldi	r24, 0xFF	; 255
     854:	9f e8       	ldi	r25, 0x8F	; 143
     856:	01 97       	sbiw	r24, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <can_init+0x4a>
     85a:	00 c0       	rjmp	.+0      	; 0x85c <can_init+0x50>
     85c:	00 00       	nop
	_delay_ms(30);
	
	uint8_t mode_bits;
	uint8_t data[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANSTAT, data, MAX_CAN_LENGTH);
     85e:	4a e0       	ldi	r20, 0x0A	; 10
     860:	be 01       	movw	r22, r28
     862:	6f 5f       	subi	r22, 0xFF	; 255
     864:	7f 4f       	sbci	r23, 0xFF	; 255
     866:	8e e0       	ldi	r24, 0x0E	; 14
     868:	8a d2       	rcall	.+1300   	; 0xd7e <mcp2515_read>
	uint8_t val = data[0];
	
	mode_bits = (val & MODE_MASK);
     86a:	89 81       	ldd	r24, Y+1	; 0x01
     86c:	80 7e       	andi	r24, 0xE0	; 224
	if(mode_bits != MODE_NORMAL){
     86e:	99 f0       	breq	.+38     	; 0x896 <can_init+0x8a>
		
		printf("MCP2515 is NOT in correct mode after reset! Its config bits are %x\n", mode_bits);
     870:	1f 92       	push	r1
     872:	8f 93       	push	r24
     874:	8a e0       	ldi	r24, 0x0A	; 10
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	9f 93       	push	r25
     87a:	8f 93       	push	r24
     87c:	eb d6       	rcall	.+3542   	; 0x1654 <printf>
		printf("\n\r");
     87e:	8f e6       	ldi	r24, 0x6F	; 111
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	9f 93       	push	r25
     884:	8f 93       	push	r24
     886:	e6 d6       	rcall	.+3532   	; 0x1654 <printf>
     888:	0f 90       	pop	r0
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
     88e:	0f 90       	pop	r0
     890:	0f 90       	pop	r0
     892:	0f 90       	pop	r0
     894:	07 c0       	rjmp	.+14     	; 0x8a4 <can_init+0x98>
	}
	else
	printf("in mode normal \n\r");
     896:	8e e4       	ldi	r24, 0x4E	; 78
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	9f 93       	push	r25
     89c:	8f 93       	push	r24
     89e:	da d6       	rcall	.+3508   	; 0x1654 <printf>
     8a0:	0f 90       	pop	r0
     8a2:	0f 90       	pop	r0
	
}
     8a4:	2a 96       	adiw	r28, 0x0a	; 10
     8a6:	0f b6       	in	r0, 0x3f	; 63
     8a8:	f8 94       	cli
     8aa:	de bf       	out	0x3e, r29	; 62
     8ac:	0f be       	out	0x3f, r0	; 63
     8ae:	cd bf       	out	0x3d, r28	; 61
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	08 95       	ret

000008b6 <can_message_send>:

void can_message_send(struct can_message* msg)
{
     8b6:	1f 93       	push	r17
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	ec 01       	movw	r28, r24

	mcp2515_write(MCP_TXB0DLC, msg->length, 1);
     8be:	41 e0       	ldi	r20, 0x01	; 1
     8c0:	6a 81       	ldd	r22, Y+2	; 0x02
     8c2:	85 e3       	ldi	r24, 0x35	; 53
     8c4:	7a d2       	rcall	.+1268   	; 0xdba <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDH, msg->id, 1);
     8c6:	41 e0       	ldi	r20, 0x01	; 1
     8c8:	68 81       	ld	r22, Y
     8ca:	81 e3       	ldi	r24, 0x31	; 49
     8cc:	76 d2       	rcall	.+1260   	; 0xdba <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, msg->id, 1);
     8ce:	41 e0       	ldi	r20, 0x01	; 1
     8d0:	68 81       	ld	r22, Y
     8d2:	82 e3       	ldi	r24, 0x32	; 50
     8d4:	72 d2       	rcall	.+1252   	; 0xdba <mcp2515_write>
	
	uint8_t i;
	for (i = 0; i < msg->length; i++)
     8d6:	8a 81       	ldd	r24, Y+2	; 0x02
     8d8:	88 23       	and	r24, r24
     8da:	61 f0       	breq	.+24     	; 0x8f4 <can_message_send+0x3e>
     8dc:	10 e0       	ldi	r17, 0x00	; 0
	{
		mcp2515_write(MCP_TXB0D(0), msg->data[i], 1);
     8de:	fe 01       	movw	r30, r28
     8e0:	e1 0f       	add	r30, r17
     8e2:	f1 1d       	adc	r31, r1
     8e4:	41 e0       	ldi	r20, 0x01	; 1
     8e6:	63 81       	ldd	r22, Z+3	; 0x03
     8e8:	86 e3       	ldi	r24, 0x36	; 54
     8ea:	67 d2       	rcall	.+1230   	; 0xdba <mcp2515_write>
	mcp2515_write(MCP_TXB0DLC, msg->length, 1);
	mcp2515_write(MCP_TXB0SIDH, msg->id, 1);
	mcp2515_write(MCP_TXB0SIDL, msg->id, 1);
	
	uint8_t i;
	for (i = 0; i < msg->length; i++)
     8ec:	1f 5f       	subi	r17, 0xFF	; 255
     8ee:	8a 81       	ldd	r24, Y+2	; 0x02
     8f0:	18 17       	cp	r17, r24
     8f2:	a8 f3       	brcs	.-22     	; 0x8de <can_message_send+0x28>
	{
		mcp2515_write(MCP_TXB0D(0), msg->data[i], 1);
	}
	mcp2515_request(MCP_RTS_TX0);
     8f4:	81 e8       	ldi	r24, 0x81	; 129
     8f6:	78 d2       	rcall	.+1264   	; 0xde8 <mcp2515_request>
	//Do something...
}
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <can_data_receive>:
{
	
}
*/
void can_data_receive(struct can_message* msg, int buffer)
{
     900:	ff 92       	push	r15
     902:	0f 93       	push	r16
     904:	1f 93       	push	r17
     906:	cf 93       	push	r28
     908:	df 93       	push	r29
     90a:	cd b7       	in	r28, 0x3d	; 61
     90c:	de b7       	in	r29, 0x3e	; 62
     90e:	2a 97       	sbiw	r28, 0x0a	; 10
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	f8 94       	cli
     914:	de bf       	out	0x3e, r29	; 62
     916:	0f be       	out	0x3f, r0	; 63
     918:	cd bf       	out	0x3d, r28	; 61
     91a:	8c 01       	movw	r16, r24
     91c:	f6 2e       	mov	r15, r22
	uint8_t result[MAX_CAN_LENGTH];
	
	
	mcp2515_read(MCP_CANINTF, result, 1);
     91e:	41 e0       	ldi	r20, 0x01	; 1
     920:	be 01       	movw	r22, r28
     922:	6f 5f       	subi	r22, 0xFF	; 255
     924:	7f 4f       	sbci	r23, 0xFF	; 255
     926:	8c e2       	ldi	r24, 0x2C	; 44
     928:	2a d2       	rcall	.+1108   	; 0xd7e <mcp2515_read>

	if (!result[0]){
     92a:	89 81       	ldd	r24, Y+1	; 0x01
     92c:	81 11       	cpse	r24, r1
     92e:	0b c0       	rjmp	.+22     	; 0x946 <can_data_receive+0x46>
		printf("CANINTF out %d \n\r", result[0] & 0b1);
     930:	1f 92       	push	r1
     932:	1f 92       	push	r1
     934:	20 e6       	ldi	r18, 0x60	; 96
     936:	31 e0       	ldi	r19, 0x01	; 1
     938:	3f 93       	push	r19
     93a:	2f 93       	push	r18
     93c:	8b d6       	rcall	.+3350   	; 0x1654 <printf>
     93e:	0f 90       	pop	r0
     940:	0f 90       	pop	r0
     942:	0f 90       	pop	r0
     944:	0f 90       	pop	r0
	}
	
	uint8_t i;
	
	mcp2515_read(MCP_RXB0DLC + buffer, result, 1);
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	be 01       	movw	r22, r28
     94a:	6f 5f       	subi	r22, 0xFF	; 255
     94c:	7f 4f       	sbci	r23, 0xFF	; 255
     94e:	85 e6       	ldi	r24, 0x65	; 101
     950:	8f 0d       	add	r24, r15
     952:	15 d2       	rcall	.+1066   	; 0xd7e <mcp2515_read>
	msg->length = result[0];
     954:	89 81       	ldd	r24, Y+1	; 0x01
     956:	f8 01       	movw	r30, r16
     958:	82 83       	std	Z+2, r24	; 0x02
	
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
     95a:	41 e0       	ldi	r20, 0x01	; 1
     95c:	be 01       	movw	r22, r28
     95e:	6f 5f       	subi	r22, 0xFF	; 255
     960:	7f 4f       	sbci	r23, 0xFF	; 255
     962:	81 e6       	ldi	r24, 0x61	; 97
     964:	8f 0d       	add	r24, r15
     966:	0b d2       	rcall	.+1046   	; 0xd7e <mcp2515_read>
	msg->id = result[0];
     968:	29 81       	ldd	r18, Y+1	; 0x01
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	f8 01       	movw	r30, r16
     96e:	31 83       	std	Z+1, r19	; 0x01
     970:	20 83       	st	Z, r18
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
     972:	42 81       	ldd	r20, Z+2	; 0x02
     974:	be 01       	movw	r22, r28
     976:	6f 5f       	subi	r22, 0xFF	; 255
     978:	7f 4f       	sbci	r23, 0xFF	; 255
     97a:	86 e6       	ldi	r24, 0x66	; 102
     97c:	8f 0d       	add	r24, r15
     97e:	ff d1       	rcall	.+1022   	; 0xd7e <mcp2515_read>
	
	for (i = 0; i < msg->length; i++)
     980:	f8 01       	movw	r30, r16
     982:	92 81       	ldd	r25, Z+2	; 0x02
     984:	99 23       	and	r25, r25
     986:	61 f0       	breq	.+24     	; 0x9a0 <can_data_receive+0xa0>
     988:	9e 01       	movw	r18, r28
     98a:	2f 5f       	subi	r18, 0xFF	; 255
     98c:	3f 4f       	sbci	r19, 0xFF	; 255
     98e:	d8 01       	movw	r26, r16
     990:	13 96       	adiw	r26, 0x03	; 3
     992:	f9 01       	movw	r30, r18
	{
		msg->data[i] = result[i];
     994:	81 91       	ld	r24, Z+
     996:	8d 93       	st	X+, r24
     998:	8e 2f       	mov	r24, r30
     99a:	82 1b       	sub	r24, r18
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
	msg->id = result[0];
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
	
	for (i = 0; i < msg->length; i++)
     99c:	89 17       	cp	r24, r25
     99e:	d0 f3       	brcs	.-12     	; 0x994 <can_data_receive+0x94>
	{
		msg->data[i] = result[i];
	}

	
	mcp2515_bit_modify(MCP_CANINTF, 0x01, 0x00);
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	61 e0       	ldi	r22, 0x01	; 1
     9a4:	8c e2       	ldi	r24, 0x2C	; 44
     9a6:	30 d2       	rcall	.+1120   	; 0xe08 <mcp2515_bit_modify>
}
     9a8:	2a 96       	adiw	r28, 0x0a	; 10
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	de bf       	out	0x3e, r29	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	cd bf       	out	0x3d, r28	; 61
     9b4:	df 91       	pop	r29
     9b6:	cf 91       	pop	r28
     9b8:	1f 91       	pop	r17
     9ba:	0f 91       	pop	r16
     9bc:	ff 90       	pop	r15
     9be:	08 95       	ret

000009c0 <can_get_message>:



int can_get_message(struct can_message* message)
{
     9c0:	0f 93       	push	r16
     9c2:	1f 93       	push	r17
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	cd b7       	in	r28, 0x3d	; 61
     9ca:	de b7       	in	r29, 0x3e	; 62
     9cc:	2a 97       	sbiw	r28, 0x0a	; 10
     9ce:	0f b6       	in	r0, 0x3f	; 63
     9d0:	f8 94       	cli
     9d2:	de bf       	out	0x3e, r29	; 62
     9d4:	0f be       	out	0x3f, r0	; 63
     9d6:	cd bf       	out	0x3d, r28	; 61
     9d8:	8c 01       	movw	r16, r24
	uint8_t result[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANINTF, result, 1);
     9da:	41 e0       	ldi	r20, 0x01	; 1
     9dc:	be 01       	movw	r22, r28
     9de:	6f 5f       	subi	r22, 0xFF	; 255
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	8c e2       	ldi	r24, 0x2C	; 44
     9e4:	cc d1       	rcall	.+920    	; 0xd7e <mcp2515_read>
	
	if ((result[0] & 0x01) == 0x01)
     9e6:	89 81       	ldd	r24, Y+1	; 0x01
     9e8:	80 ff       	sbrs	r24, 0
     9ea:	0b c0       	rjmp	.+22     	; 0xa02 <can_get_message+0x42>
	{
		can_data_receive(message,0);
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	c8 01       	movw	r24, r16
     9f2:	86 df       	rcall	.-244    	; 0x900 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     9f4:	40 e0       	ldi	r20, 0x00	; 0
     9f6:	61 e0       	ldi	r22, 0x01	; 1
     9f8:	8c e2       	ldi	r24, 0x2C	; 44
     9fa:	06 d2       	rcall	.+1036   	; 0xe08 <mcp2515_bit_modify>
		return 1;
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0f c0       	rjmp	.+30     	; 0xa20 <can_get_message+0x60>
	}
	else if ((result[0] & 0x02) == 0x02)
     a02:	81 ff       	sbrs	r24, 1
     a04:	0b c0       	rjmp	.+22     	; 0xa1c <can_get_message+0x5c>
	{
		can_data_receive(message,1);
     a06:	61 e0       	ldi	r22, 0x01	; 1
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	c8 01       	movw	r24, r16
     a0c:	79 df       	rcall	.-270    	; 0x900 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	62 e0       	ldi	r22, 0x02	; 2
     a12:	8c e2       	ldi	r24, 0x2C	; 44
     a14:	f9 d1       	rcall	.+1010   	; 0xe08 <mcp2515_bit_modify>
		return 1;
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	02 c0       	rjmp	.+4      	; 0xa20 <can_get_message+0x60>
	}
	else
	{
		return 0;
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     a20:	2a 96       	adiw	r28, 0x0a	; 10
     a22:	0f b6       	in	r0, 0x3f	; 63
     a24:	f8 94       	cli
     a26:	de bf       	out	0x3e, r29	; 62
     a28:	0f be       	out	0x3f, r0	; 63
     a2a:	cd bf       	out	0x3d, r28	; 61
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	1f 91       	pop	r17
     a32:	0f 91       	pop	r16
     a34:	08 95       	ret

00000a36 <com_navigate_display>:
		oled_reset_lives();
		com_reset_score();
	}
}

void com_gain_menu(){
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	86 b3       	in	r24, 0x16	; 22
     a3c:	d4 de       	rcall	.-600    	; 0x7e6 <adc_joy_pos_changed>
     a3e:	9c 01       	movw	r18, r24
     a40:	22 50       	subi	r18, 0x02	; 2
     a42:	31 09       	sbc	r19, r1
     a44:	22 30       	cpi	r18, 0x02	; 2
     a46:	31 05       	cpc	r19, r1
     a48:	30 f5       	brcc	.+76     	; 0xa96 <com_navigate_display+0x60>
     a4a:	60 91 2e 02 	lds	r22, 0x022E
     a4e:	70 91 2f 02 	lds	r23, 0x022F
     a52:	79 d3       	rcall	.+1778   	; 0x1146 <oled_actualise_joy_pos>
     a54:	80 91 2e 02 	lds	r24, 0x022E
     a58:	90 91 2f 02 	lds	r25, 0x022F
     a5c:	81 30       	cpi	r24, 0x01	; 1
     a5e:	91 05       	cpc	r25, r1
     a60:	39 f0       	breq	.+14     	; 0xa70 <com_navigate_display+0x3a>
     a62:	82 30       	cpi	r24, 0x02	; 2
     a64:	91 05       	cpc	r25, r1
     a66:	31 f0       	breq	.+12     	; 0xa74 <com_navigate_display+0x3e>
     a68:	89 2b       	or	r24, r25
     a6a:	61 f4       	brne	.+24     	; 0xa84 <com_navigate_display+0x4e>
     a6c:	f9 d2       	rcall	.+1522   	; 0x1060 <oled_display_activity>
     a6e:	0a c0       	rjmp	.+20     	; 0xa84 <com_navigate_display+0x4e>
     a70:	e0 d3       	rcall	.+1984   	; 0x1232 <oled_navigate_gain_menu>
     a72:	08 c0       	rjmp	.+16     	; 0xa84 <com_navigate_display+0x4e>
     a74:	82 e7       	ldi	r24, 0x72	; 114
     a76:	91 e0       	ldi	r25, 0x01	; 1
     a78:	9f 93       	push	r25
     a7a:	8f 93       	push	r24
     a7c:	eb d5       	rcall	.+3030   	; 0x1654 <printf>
     a7e:	a3 d3       	rcall	.+1862   	; 0x11c6 <oled_print_high_score>
     a80:	0f 90       	pop	r0
     a82:	0f 90       	pop	r0
     a84:	2f e7       	ldi	r18, 0x7F	; 127
     a86:	88 e3       	ldi	r24, 0x38	; 56
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	21 50       	subi	r18, 0x01	; 1
     a8c:	80 40       	sbci	r24, 0x00	; 0
     a8e:	90 40       	sbci	r25, 0x00	; 0
     a90:	e1 f7       	brne	.-8      	; 0xa8a <com_navigate_display+0x54>
     a92:	00 c0       	rjmp	.+0      	; 0xa94 <com_navigate_display+0x5e>
     a94:	00 00       	nop
     a96:	86 b3       	in	r24, 0x16	; 22
     a98:	82 fb       	bst	r24, 2
     a9a:	88 27       	eor	r24, r24
     a9c:	80 f9       	bld	r24, 0
     a9e:	c8 2f       	mov	r28, r24
     aa0:	20 e0       	ldi	r18, 0x00	; 0
     aa2:	d2 2f       	mov	r29, r18
     aa4:	80 91 06 01 	lds	r24, 0x0106
     aa8:	90 91 07 01 	lds	r25, 0x0107
     aac:	00 97       	sbiw	r24, 0x00	; 0
     aae:	81 f4       	brne	.+32     	; 0xad0 <com_navigate_display+0x9a>
     ab0:	21 97       	sbiw	r28, 0x01	; 1
     ab2:	09 f0       	breq	.+2      	; 0xab6 <com_navigate_display+0x80>
     ab4:	55 c0       	rjmp	.+170    	; 0xb60 <com_navigate_display+0x12a>
     ab6:	81 e0       	ldi	r24, 0x01	; 1
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	90 93 07 01 	sts	0x0107, r25
     abe:	80 93 06 01 	sts	0x0106, r24
     ac2:	83 ed       	ldi	r24, 0xD3	; 211
     ac4:	90 e3       	ldi	r25, 0x30	; 48
     ac6:	01 97       	sbiw	r24, 0x01	; 1
     ac8:	f1 f7       	brne	.-4      	; 0xac6 <com_navigate_display+0x90>
     aca:	00 c0       	rjmp	.+0      	; 0xacc <com_navigate_display+0x96>
     acc:	00 00       	nop
     ace:	48 c0       	rjmp	.+144    	; 0xb60 <com_navigate_display+0x12a>
     ad0:	01 97       	sbiw	r24, 0x01	; 1
     ad2:	09 f0       	breq	.+2      	; 0xad6 <com_navigate_display+0xa0>
     ad4:	45 c0       	rjmp	.+138    	; 0xb60 <com_navigate_display+0x12a>
     ad6:	cd 2b       	or	r28, r29
     ad8:	09 f0       	breq	.+2      	; 0xadc <com_navigate_display+0xa6>
     ada:	42 c0       	rjmp	.+132    	; 0xb60 <com_navigate_display+0x12a>
     adc:	10 92 07 01 	sts	0x0107, r1
     ae0:	10 92 06 01 	sts	0x0106, r1
     ae4:	83 ed       	ldi	r24, 0xD3	; 211
     ae6:	90 e3       	ldi	r25, 0x30	; 48
     ae8:	01 97       	sbiw	r24, 0x01	; 1
     aea:	f1 f7       	brne	.-4      	; 0xae8 <com_navigate_display+0xb2>
     aec:	00 c0       	rjmp	.+0      	; 0xaee <com_navigate_display+0xb8>
     aee:	00 00       	nop
     af0:	80 91 2e 02 	lds	r24, 0x022E
     af4:	90 91 2f 02 	lds	r25, 0x022F
     af8:	89 2b       	or	r24, r25
     afa:	91 f5       	brne	.+100    	; 0xb60 <com_navigate_display+0x12a>
     afc:	ac d2       	rcall	.+1368   	; 0x1056 <oled_get_joy_pos>
     afe:	89 2b       	or	r24, r25
     b00:	71 f4       	brne	.+28     	; 0xb1e <com_navigate_display+0xe8>
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	90 93 29 02 	sts	0x0229, r25
     b0a:	80 93 28 02 	sts	0x0228, r24
     b0e:	81 e8       	ldi	r24, 0x81	; 129
     b10:	91 e0       	ldi	r25, 0x01	; 1
     b12:	9f 93       	push	r25
     b14:	8f 93       	push	r24
     b16:	9e d5       	rcall	.+2876   	; 0x1654 <printf>
     b18:	0f 90       	pop	r0
     b1a:	0f 90       	pop	r0
     b1c:	21 c0       	rjmp	.+66     	; 0xb60 <com_navigate_display+0x12a>
     b1e:	80 91 2e 02 	lds	r24, 0x022E
     b22:	90 91 2f 02 	lds	r25, 0x022F
     b26:	89 2b       	or	r24, r25
     b28:	d9 f4       	brne	.+54     	; 0xb60 <com_navigate_display+0x12a>
     b2a:	95 d2       	rcall	.+1322   	; 0x1056 <oled_get_joy_pos>
     b2c:	01 97       	sbiw	r24, 0x01	; 1
     b2e:	41 f4       	brne	.+16     	; 0xb40 <com_navigate_display+0x10a>
     b30:	81 e0       	ldi	r24, 0x01	; 1
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	90 93 2f 02 	sts	0x022F, r25
     b38:	80 93 2e 02 	sts	0x022E, r24
     b3c:	7a d3       	rcall	.+1780   	; 0x1232 <oled_navigate_gain_menu>
     b3e:	10 c0       	rjmp	.+32     	; 0xb60 <com_navigate_display+0x12a>
     b40:	80 91 2e 02 	lds	r24, 0x022E
     b44:	90 91 2f 02 	lds	r25, 0x022F
     b48:	89 2b       	or	r24, r25
     b4a:	51 f4       	brne	.+20     	; 0xb60 <com_navigate_display+0x12a>
     b4c:	84 d2       	rcall	.+1288   	; 0x1056 <oled_get_joy_pos>
     b4e:	02 97       	sbiw	r24, 0x02	; 2
     b50:	39 f4       	brne	.+14     	; 0xb60 <com_navigate_display+0x12a>
     b52:	82 e0       	ldi	r24, 0x02	; 2
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	90 93 2f 02 	sts	0x022F, r25
     b5a:	80 93 2e 02 	sts	0x022E, r24
     b5e:	33 d3       	rcall	.+1638   	; 0x11c6 <oled_print_high_score>
     b60:	b1 9b       	sbis	0x16, 1	; 22
     b62:	41 c0       	rjmp	.+130    	; 0xbe6 <com_navigate_display+0x1b0>
     b64:	80 91 2e 02 	lds	r24, 0x022E
     b68:	90 91 2f 02 	lds	r25, 0x022F
     b6c:	89 2b       	or	r24, r25
     b6e:	99 f5       	brne	.+102    	; 0xbd6 <com_navigate_display+0x1a0>
     b70:	72 d2       	rcall	.+1252   	; 0x1056 <oled_get_joy_pos>
     b72:	89 2b       	or	r24, r25
     b74:	71 f4       	brne	.+28     	; 0xb92 <com_navigate_display+0x15c>
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	90 93 29 02 	sts	0x0229, r25
     b7e:	80 93 28 02 	sts	0x0228, r24
     b82:	81 e8       	ldi	r24, 0x81	; 129
     b84:	91 e0       	ldi	r25, 0x01	; 1
     b86:	9f 93       	push	r25
     b88:	8f 93       	push	r24
     b8a:	64 d5       	rcall	.+2760   	; 0x1654 <printf>
     b8c:	0f 90       	pop	r0
     b8e:	0f 90       	pop	r0
     b90:	2a c0       	rjmp	.+84     	; 0xbe6 <com_navigate_display+0x1b0>
     b92:	80 91 2e 02 	lds	r24, 0x022E
     b96:	90 91 2f 02 	lds	r25, 0x022F
     b9a:	89 2b       	or	r24, r25
     b9c:	e1 f4       	brne	.+56     	; 0xbd6 <com_navigate_display+0x1a0>
     b9e:	5b d2       	rcall	.+1206   	; 0x1056 <oled_get_joy_pos>
     ba0:	01 97       	sbiw	r24, 0x01	; 1
     ba2:	41 f4       	brne	.+16     	; 0xbb4 <com_navigate_display+0x17e>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	90 93 2f 02 	sts	0x022F, r25
     bac:	80 93 2e 02 	sts	0x022E, r24
     bb0:	40 d3       	rcall	.+1664   	; 0x1232 <oled_navigate_gain_menu>
     bb2:	19 c0       	rjmp	.+50     	; 0xbe6 <com_navigate_display+0x1b0>
     bb4:	80 91 2e 02 	lds	r24, 0x022E
     bb8:	90 91 2f 02 	lds	r25, 0x022F
     bbc:	89 2b       	or	r24, r25
     bbe:	59 f4       	brne	.+22     	; 0xbd6 <com_navigate_display+0x1a0>
     bc0:	4a d2       	rcall	.+1172   	; 0x1056 <oled_get_joy_pos>
     bc2:	02 97       	sbiw	r24, 0x02	; 2
     bc4:	41 f4       	brne	.+16     	; 0xbd6 <com_navigate_display+0x1a0>
     bc6:	82 e0       	ldi	r24, 0x02	; 2
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	90 93 2f 02 	sts	0x022F, r25
     bce:	80 93 2e 02 	sts	0x022E, r24
     bd2:	f9 d2       	rcall	.+1522   	; 0x11c6 <oled_print_high_score>
     bd4:	08 c0       	rjmp	.+16     	; 0xbe6 <com_navigate_display+0x1b0>
     bd6:	80 91 2e 02 	lds	r24, 0x022E
     bda:	90 91 2f 02 	lds	r25, 0x022F
     bde:	02 97       	sbiw	r24, 0x02	; 2
     be0:	11 f4       	brne	.+4      	; 0xbe6 <com_navigate_display+0x1b0>
     be2:	f0 d3       	rcall	.+2016   	; 0x13c4 <oled_reset_hs>
     be4:	f0 d2       	rcall	.+1504   	; 0x11c6 <oled_print_high_score>
     be6:	b0 9b       	sbis	0x16, 0	; 22
     be8:	0c c0       	rjmp	.+24     	; 0xc02 <com_navigate_display+0x1cc>
     bea:	80 91 2e 02 	lds	r24, 0x022E
     bee:	90 91 2f 02 	lds	r25, 0x022F
     bf2:	01 97       	sbiw	r24, 0x01	; 1
     bf4:	02 97       	sbiw	r24, 0x02	; 2
     bf6:	28 f4       	brcc	.+10     	; 0xc02 <com_navigate_display+0x1cc>
     bf8:	10 92 2f 02 	sts	0x022F, r1
     bfc:	10 92 2e 02 	sts	0x022E, r1
     c00:	2f d2       	rcall	.+1118   	; 0x1060 <oled_display_activity>
     c02:	df 91       	pop	r29
     c04:	cf 91       	pop	r28
     c06:	08 95       	ret

00000c08 <com_play_game>:
     c08:	0f 93       	push	r16
     c0a:	1f 93       	push	r17
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	cd b7       	in	r28, 0x3d	; 61
     c12:	de b7       	in	r29, 0x3e	; 62
     c14:	a7 97       	sbiw	r28, 0x27	; 39
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	f8 94       	cli
     c1a:	de bf       	out	0x3e, r29	; 62
     c1c:	0f be       	out	0x3f, r0	; 63
     c1e:	cd bf       	out	0x3d, r28	; 61
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	9a 83       	std	Y+2, r25	; 0x02
     c26:	89 83       	std	Y+1, r24	; 0x01
     c28:	21 e0       	ldi	r18, 0x01	; 1
     c2a:	2b 83       	std	Y+3, r18	; 0x03
     c2c:	82 e0       	ldi	r24, 0x02	; 2
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	9f 87       	std	Y+15, r25	; 0x0f
     c32:	8e 87       	std	Y+14, r24	; 0x0e
     c34:	28 8b       	std	Y+16, r18	; 0x10
     c36:	83 e0       	ldi	r24, 0x03	; 3
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	9c 8f       	std	Y+28, r25	; 0x1c
     c3c:	8b 8f       	std	Y+27, r24	; 0x1b
     c3e:	2d 8f       	std	Y+29, r18	; 0x1d
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	5b dd       	rcall	.-1354   	; 0x6fa <adc_read>
     c44:	8c 83       	std	Y+4, r24	; 0x04
     c46:	ce 01       	movw	r24, r28
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	35 de       	rcall	.-918    	; 0x8b6 <can_message_send>
     c4c:	84 e0       	ldi	r24, 0x04	; 4
     c4e:	55 dd       	rcall	.-1366   	; 0x6fa <adc_read>
     c50:	89 8b       	std	Y+17, r24	; 0x11
     c52:	ce 01       	movw	r24, r28
     c54:	0e 96       	adiw	r24, 0x0e	; 14
     c56:	2f de       	rcall	.-930    	; 0x8b6 <can_message_send>
     c58:	86 b3       	in	r24, 0x16	; 22
     c5a:	82 fb       	bst	r24, 2
     c5c:	00 27       	eor	r16, r16
     c5e:	00 f9       	bld	r16, 0
     c60:	10 e0       	ldi	r17, 0x00	; 0
     c62:	80 91 06 01 	lds	r24, 0x0106
     c66:	90 91 07 01 	lds	r25, 0x0107
     c6a:	00 97       	sbiw	r24, 0x00	; 0
     c6c:	81 f4       	brne	.+32     	; 0xc8e <com_play_game+0x86>
     c6e:	01 30       	cpi	r16, 0x01	; 1
     c70:	11 05       	cpc	r17, r1
     c72:	39 f5       	brne	.+78     	; 0xcc2 <com_play_game+0xba>
     c74:	81 e0       	ldi	r24, 0x01	; 1
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	90 93 07 01 	sts	0x0107, r25
     c7c:	80 93 06 01 	sts	0x0106, r24
     c80:	83 ed       	ldi	r24, 0xD3	; 211
     c82:	90 e3       	ldi	r25, 0x30	; 48
     c84:	01 97       	sbiw	r24, 0x01	; 1
     c86:	f1 f7       	brne	.-4      	; 0xc84 <com_play_game+0x7c>
     c88:	00 c0       	rjmp	.+0      	; 0xc8a <com_play_game+0x82>
     c8a:	00 00       	nop
     c8c:	1a c0       	rjmp	.+52     	; 0xcc2 <com_play_game+0xba>
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	c1 f4       	brne	.+48     	; 0xcc2 <com_play_game+0xba>
     c92:	01 2b       	or	r16, r17
     c94:	b1 f4       	brne	.+44     	; 0xcc2 <com_play_game+0xba>
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	8e 8f       	std	Y+30, r24	; 0x1e
     c9a:	8d e8       	ldi	r24, 0x8D	; 141
     c9c:	91 e0       	ldi	r25, 0x01	; 1
     c9e:	9f 93       	push	r25
     ca0:	8f 93       	push	r24
     ca2:	d8 d4       	rcall	.+2480   	; 0x1654 <printf>
     ca4:	ce 01       	movw	r24, r28
     ca6:	4b 96       	adiw	r24, 0x1b	; 27
     ca8:	06 de       	rcall	.-1012   	; 0x8b6 <can_message_send>
     caa:	10 92 07 01 	sts	0x0107, r1
     cae:	10 92 06 01 	sts	0x0106, r1
     cb2:	83 ed       	ldi	r24, 0xD3	; 211
     cb4:	90 e3       	ldi	r25, 0x30	; 48
     cb6:	01 97       	sbiw	r24, 0x01	; 1
     cb8:	f1 f7       	brne	.-4      	; 0xcb6 <com_play_game+0xae>
     cba:	00 c0       	rjmp	.+0      	; 0xcbc <com_play_game+0xb4>
     cbc:	00 00       	nop
     cbe:	0f 90       	pop	r0
     cc0:	0f 90       	pop	r0
     cc2:	ea d2       	rcall	.+1492   	; 0x1298 <oled_in_game_mode>
     cc4:	57 d3       	rcall	.+1710   	; 0x1374 <oled_get_lives>
     cc6:	89 2b       	or	r24, r25
     cc8:	11 f0       	breq	.+4      	; 0xcce <com_play_game+0xc6>
     cca:	b0 9b       	sbis	0x16, 0	; 22
     ccc:	16 c0       	rjmp	.+44     	; 0xcfa <com_play_game+0xf2>
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	90 93 2b 02 	sts	0x022B, r25
     cd6:	80 93 2a 02 	sts	0x022A, r24
     cda:	7d d3       	rcall	.+1786   	; 0x13d6 <oled_game_over>
     cdc:	9f eb       	ldi	r25, 0xBF	; 191
     cde:	27 e2       	ldi	r18, 0x27	; 39
     ce0:	89 e0       	ldi	r24, 0x09	; 9
     ce2:	91 50       	subi	r25, 0x01	; 1
     ce4:	20 40       	sbci	r18, 0x00	; 0
     ce6:	80 40       	sbci	r24, 0x00	; 0
     ce8:	e1 f7       	brne	.-8      	; 0xce2 <com_play_game+0xda>
     cea:	00 c0       	rjmp	.+0      	; 0xcec <com_play_game+0xe4>
     cec:	00 00       	nop
     cee:	b8 d1       	rcall	.+880    	; 0x1060 <oled_display_activity>
     cf0:	50 d3       	rcall	.+1696   	; 0x1392 <oled_reset_lives>
     cf2:	10 92 2d 02 	sts	0x022D, r1
     cf6:	10 92 2c 02 	sts	0x022C, r1
     cfa:	a7 96       	adiw	r28, 0x27	; 39
     cfc:	0f b6       	in	r0, 0x3f	; 63
     cfe:	f8 94       	cli
     d00:	de bf       	out	0x3e, r29	; 62
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	cd bf       	out	0x3d, r28	; 61
     d06:	df 91       	pop	r29
     d08:	cf 91       	pop	r28
     d0a:	1f 91       	pop	r17
     d0c:	0f 91       	pop	r16
     d0e:	08 95       	ret

00000d10 <com_reset_score>:
	
}

void com_reset_score(){
	score = 0;
     d10:	10 92 2d 02 	sts	0x022D, r1
     d14:	10 92 2c 02 	sts	0x022C, r1
     d18:	08 95       	ret

00000d1a <com_get_score>:
}

int com_get_score(){
	
	return score;
}
     d1a:	80 91 2c 02 	lds	r24, 0x022C
     d1e:	90 91 2d 02 	lds	r25, 0x022D
     d22:	08 95       	ret

00000d24 <com_set_score>:

void com_set_score(int score_node2){
	score = score_node2;
     d24:	90 93 2d 02 	sts	0x022D, r25
     d28:	80 93 2c 02 	sts	0x022C, r24
     d2c:	08 95       	ret

00000d2e <com_get_back>:
}

int com_get_back(){
	return back;
}
     d2e:	80 91 2a 02 	lds	r24, 0x022A
     d32:	90 91 2b 02 	lds	r25, 0x022B
     d36:	08 95       	ret

00000d38 <com_set_back>:

void com_set_back(){
	back = 0;
     d38:	10 92 2b 02 	sts	0x022B, r1
     d3c:	10 92 2a 02 	sts	0x022A, r1
     d40:	08 95       	ret

00000d42 <com_get_start_game>:
}

int com_get_start_game(){
	return start_game;
}
     d42:	80 91 28 02 	lds	r24, 0x0228
     d46:	90 91 29 02 	lds	r25, 0x0229
     d4a:	08 95       	ret

00000d4c <com_set_start_game>:

void com_set_start_game(){
	start_game = 0;
     d4c:	10 92 29 02 	sts	0x0229, r1
     d50:	10 92 28 02 	sts	0x0228, r1
     d54:	08 95       	ret

00000d56 <mcp2515_reset>:
	 spi_init();
	 mcp2515_reset();
}

void mcp2515_reset()
{
     d56:	cf 93       	push	r28
     d58:	df 93       	push	r29
     d5a:	1f 92       	push	r1
     d5c:	cd b7       	in	r28, 0x3d	; 61
     d5e:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     d60:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);	
	
	uint8_t reset[] = {MCP_RESET};
     d62:	80 ec       	ldi	r24, 0xC0	; 192
     d64:	89 83       	std	Y+1, r24	; 0x01
	spi_write(reset, 1);
     d66:	61 e0       	ldi	r22, 0x01	; 1
     d68:	ce 01       	movw	r24, r28
     d6a:	01 96       	adiw	r24, 0x01	; 1
     d6c:	66 d3       	rcall	.+1740   	; 0x143a <spi_write>
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
     d6e:	c4 9a       	sbi	0x18, 4	; 24
}
     d70:	0f 90       	pop	r0
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	08 95       	ret

00000d78 <mcp2515_init>:
#include "MCP2515_driver.h"


void mcp2515_init() 
{
	 spi_init();
     d78:	35 d3       	rcall	.+1642   	; 0x13e4 <spi_init>
	 mcp2515_reset();
     d7a:	ed cf       	rjmp	.-38     	; 0xd56 <mcp2515_reset>
     d7c:	08 95       	ret

00000d7e <mcp2515_read>:
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
}

void mcp2515_read(uint8_t address, uint8_t result[MAX_CAN_LENGTH], uint8_t data_size)
{	
     d7e:	ff 92       	push	r15
     d80:	0f 93       	push	r16
     d82:	1f 93       	push	r17
     d84:	cf 93       	push	r28
     d86:	df 93       	push	r29
     d88:	00 d0       	rcall	.+0      	; 0xd8a <mcp2515_read+0xc>
     d8a:	cd b7       	in	r28, 0x3d	; 61
     d8c:	de b7       	in	r29, 0x3e	; 62
     d8e:	8b 01       	movw	r16, r22
     d90:	f4 2e       	mov	r15, r20
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     d92:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);
	
	uint8_t write[] = {MCP_READ, address};
     d94:	93 e0       	ldi	r25, 0x03	; 3
     d96:	99 83       	std	Y+1, r25	; 0x01
     d98:	8a 83       	std	Y+2, r24	; 0x02
	spi_write(write, 2); // Send read instruction
     d9a:	62 e0       	ldi	r22, 0x02	; 2
     d9c:	ce 01       	movw	r24, r28
     d9e:	01 96       	adiw	r24, 0x01	; 1
     da0:	4c d3       	rcall	.+1688   	; 0x143a <spi_write>
	
	spi_read(result, data_size); // Readresult
     da2:	6f 2d       	mov	r22, r15
     da4:	c8 01       	movw	r24, r16
     da6:	24 d3       	rcall	.+1608   	; 0x13f0 <spi_read>
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
     da8:	c4 9a       	sbi	0x18, 4	; 24
	
	
}
     daa:	0f 90       	pop	r0
     dac:	0f 90       	pop	r0
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	1f 91       	pop	r17
     db4:	0f 91       	pop	r16
     db6:	ff 90       	pop	r15
     db8:	08 95       	ret

00000dba <mcp2515_write>:

void mcp2515_write(uint8_t address, uint8_t data, uint8_t data_size)
{
     dba:	cf 93       	push	r28
     dbc:	df 93       	push	r29
     dbe:	00 d0       	rcall	.+0      	; 0xdc0 <mcp2515_write+0x6>
     dc0:	1f 92       	push	r1
     dc2:	cd b7       	in	r28, 0x3d	; 61
     dc4:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     dc6:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);
	
	uint8_t write[] = {MCP_WRITE, address, data};
     dc8:	92 e0       	ldi	r25, 0x02	; 2
     dca:	99 83       	std	Y+1, r25	; 0x01
     dcc:	8a 83       	std	Y+2, r24	; 0x02
     dce:	6b 83       	std	Y+3, r22	; 0x03
	spi_write(write, data_size + 2); // Send read instruction
     dd0:	62 e0       	ldi	r22, 0x02	; 2
     dd2:	64 0f       	add	r22, r20
     dd4:	ce 01       	movw	r24, r28
     dd6:	01 96       	adiw	r24, 0x01	; 1
     dd8:	30 d3       	rcall	.+1632   	; 0x143a <spi_write>
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
     dda:	c4 9a       	sbi	0x18, 4	; 24
		
}
     ddc:	0f 90       	pop	r0
     dde:	0f 90       	pop	r0
     de0:	0f 90       	pop	r0
     de2:	df 91       	pop	r29
     de4:	cf 91       	pop	r28
     de6:	08 95       	ret

00000de8 <mcp2515_request>:

void mcp2515_request(uint8_t rqs)
{
     de8:	cf 93       	push	r28
     dea:	df 93       	push	r29
     dec:	1f 92       	push	r1
     dee:	cd b7       	in	r28, 0x3d	; 61
     df0:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     df2:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);		
		
	uint8_t cmd[] = {rqs};
     df4:	89 83       	std	Y+1, r24	; 0x01
	spi_write(cmd, 1);		
     df6:	61 e0       	ldi	r22, 0x01	; 1
     df8:	ce 01       	movw	r24, r28
     dfa:	01 96       	adiw	r24, 0x01	; 1
     dfc:	1e d3       	rcall	.+1596   	; 0x143a <spi_write>
	
	PORTB |= (1<<PINB4); // Deselect CAN-controller
     dfe:	c4 9a       	sbi	0x18, 4	; 24
}
     e00:	0f 90       	pop	r0
     e02:	df 91       	pop	r29
     e04:	cf 91       	pop	r28
     e06:	08 95       	ret

00000e08 <mcp2515_bit_modify>:

// Modify bits in the register / See datasheet 12.10
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data) 
{
     e08:	cf 93       	push	r28
     e0a:	df 93       	push	r29
     e0c:	00 d0       	rcall	.+0      	; 0xe0e <mcp2515_bit_modify+0x6>
     e0e:	00 d0       	rcall	.+0      	; 0xe10 <mcp2515_bit_modify+0x8>
     e10:	cd b7       	in	r28, 0x3d	; 61
     e12:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     e14:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);	
	
	uint8_t bit_list[] = {MCP_BITMOD, address, mask, data};
     e16:	95 e0       	ldi	r25, 0x05	; 5
     e18:	99 83       	std	Y+1, r25	; 0x01
     e1a:	8a 83       	std	Y+2, r24	; 0x02
     e1c:	6b 83       	std	Y+3, r22	; 0x03
     e1e:	4c 83       	std	Y+4, r20	; 0x04
	spi_write(bit_list, 4);	
     e20:	64 e0       	ldi	r22, 0x04	; 4
     e22:	ce 01       	movw	r24, r28
     e24:	01 96       	adiw	r24, 0x01	; 1
     e26:	09 d3       	rcall	.+1554   	; 0x143a <spi_write>
	
	PORTB |= (1<<PINB4); //Deselect CAN-controller
     e28:	c4 9a       	sbi	0x18, 4	; 24

}
     e2a:	0f 90       	pop	r0
     e2c:	0f 90       	pop	r0
     e2e:	0f 90       	pop	r0
     e30:	0f 90       	pop	r0
     e32:	df 91       	pop	r29
     e34:	cf 91       	pop	r28
     e36:	08 95       	ret

00000e38 <oled_columb_range_select>:
void oled_set_joy_pos(int joy_pos){
	xmem_write(joy_pos, JOY_POS_ADDRESS);
}

void oled_set_high_score(int score){
	high_score = score;
     e38:	91 e2       	ldi	r25, 0x21	; 33
     e3a:	90 93 00 10 	sts	0x1000, r25
     e3e:	88 23       	and	r24, r24
     e40:	1c f0       	brlt	.+6      	; 0xe48 <oled_columb_range_select+0x10>
     e42:	80 93 00 10 	sts	0x1000, r24
     e46:	03 c0       	rjmp	.+6      	; 0xe4e <oled_columb_range_select+0x16>
     e48:	8f e7       	ldi	r24, 0x7F	; 127
     e4a:	80 93 00 10 	sts	0x1000, r24
     e4e:	66 23       	and	r22, r22
     e50:	1c f0       	brlt	.+6      	; 0xe58 <oled_columb_range_select+0x20>
     e52:	60 93 00 10 	sts	0x1000, r22
     e56:	08 95       	ret
     e58:	8f e7       	ldi	r24, 0x7F	; 127
     e5a:	80 93 00 10 	sts	0x1000, r24
     e5e:	08 95       	ret

00000e60 <oled_page_select>:
     e60:	92 e2       	ldi	r25, 0x22	; 34
     e62:	90 93 00 10 	sts	0x1000, r25
     e66:	88 30       	cpi	r24, 0x08	; 8
     e68:	28 f4       	brcc	.+10     	; 0xe74 <oled_page_select+0x14>
     e6a:	e0 e0       	ldi	r30, 0x00	; 0
     e6c:	f0 e1       	ldi	r31, 0x10	; 16
     e6e:	80 83       	st	Z, r24
     e70:	80 83       	st	Z, r24
     e72:	08 95       	ret
     e74:	e0 e0       	ldi	r30, 0x00	; 0
     e76:	f0 e1       	ldi	r31, 0x10	; 16
     e78:	87 e0       	ldi	r24, 0x07	; 7
     e7a:	80 83       	st	Z, r24
     e7c:	80 83       	st	Z, r24
     e7e:	08 95       	ret

00000e80 <oled_clear_page>:
     e80:	88 30       	cpi	r24, 0x08	; 8
     e82:	60 f4       	brcc	.+24     	; 0xe9c <oled_clear_page+0x1c>
     e84:	ed df       	rcall	.-38     	; 0xe60 <oled_page_select>
     e86:	6f e7       	ldi	r22, 0x7F	; 127
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	d6 df       	rcall	.-84     	; 0xe38 <oled_columb_range_select>
     e8c:	80 e8       	ldi	r24, 0x80	; 128
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	e0 e0       	ldi	r30, 0x00	; 0
     e92:	f2 e1       	ldi	r31, 0x12	; 18
     e94:	10 82       	st	Z, r1
     e96:	01 97       	sbiw	r24, 0x01	; 1
     e98:	00 97       	sbiw	r24, 0x00	; 0
     e9a:	e1 f7       	brne	.-8      	; 0xe94 <oled_clear_page+0x14>
     e9c:	08 95       	ret

00000e9e <oled_clear_screen>:
     e9e:	cf 93       	push	r28
     ea0:	c0 e0       	ldi	r28, 0x00	; 0
     ea2:	8c 2f       	mov	r24, r28
     ea4:	ed df       	rcall	.-38     	; 0xe80 <oled_clear_page>
     ea6:	cf 5f       	subi	r28, 0xFF	; 255
     ea8:	c8 30       	cpi	r28, 0x08	; 8
     eaa:	d9 f7       	brne	.-10     	; 0xea2 <oled_clear_screen+0x4>
     eac:	cf 91       	pop	r28
     eae:	08 95       	ret

00000eb0 <oled_print_char_of_size>:
     eb0:	62 30       	cpi	r22, 0x02	; 2
     eb2:	41 f4       	brne	.+16     	; 0xec4 <oled_print_char_of_size+0x14>
     eb4:	94 e0       	ldi	r25, 0x04	; 4
     eb6:	89 02       	muls	r24, r25
     eb8:	a0 01       	movw	r20, r0
     eba:	11 24       	eor	r1, r1
     ebc:	40 51       	subi	r20, 0x10	; 16
     ebe:	50 40       	sbci	r21, 0x00	; 0
     ec0:	24 e0       	ldi	r18, 0x04	; 4
     ec2:	25 c0       	rjmp	.+74     	; 0xf0e <oled_print_char_of_size+0x5e>
     ec4:	61 30       	cpi	r22, 0x01	; 1
     ec6:	89 f4       	brne	.+34     	; 0xeea <oled_print_char_of_size+0x3a>
     ec8:	48 2f       	mov	r20, r24
     eca:	55 27       	eor	r21, r21
     ecc:	47 fd       	sbrc	r20, 7
     ece:	50 95       	com	r21
     ed0:	40 52       	subi	r20, 0x20	; 32
     ed2:	51 09       	sbc	r21, r1
     ed4:	ca 01       	movw	r24, r20
     ed6:	88 0f       	add	r24, r24
     ed8:	99 1f       	adc	r25, r25
     eda:	88 0f       	add	r24, r24
     edc:	99 1f       	adc	r25, r25
     ede:	48 0f       	add	r20, r24
     ee0:	59 1f       	adc	r21, r25
     ee2:	44 51       	subi	r20, 0x14	; 20
     ee4:	5e 4f       	sbci	r21, 0xFE	; 254
     ee6:	25 e0       	ldi	r18, 0x05	; 5
     ee8:	12 c0       	rjmp	.+36     	; 0xf0e <oled_print_char_of_size+0x5e>
     eea:	98 e0       	ldi	r25, 0x08	; 8
     eec:	89 02       	muls	r24, r25
     eee:	a0 01       	movw	r20, r0
     ef0:	11 24       	eor	r1, r1
     ef2:	49 53       	subi	r20, 0x39	; 57
     ef4:	5d 4f       	sbci	r21, 0xFD	; 253
     ef6:	28 e0       	ldi	r18, 0x08	; 8
     ef8:	0a c0       	rjmp	.+20     	; 0xf0e <oled_print_char_of_size+0x5e>
     efa:	fa 01       	movw	r30, r20
     efc:	e8 0f       	add	r30, r24
     efe:	f9 1f       	adc	r31, r25
     f00:	e4 91       	lpm	r30, Z
     f02:	ec 93       	st	X, r30
     f04:	01 96       	adiw	r24, 0x01	; 1
     f06:	82 17       	cp	r24, r18
     f08:	93 07       	cpc	r25, r19
     f0a:	bc f3       	brlt	.-18     	; 0xefa <oled_print_char_of_size+0x4a>
     f0c:	08 95       	ret
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	a0 e0       	ldi	r26, 0x00	; 0
     f16:	b2 e1       	ldi	r27, 0x12	; 18
     f18:	f0 cf       	rjmp	.-32     	; 0xefa <oled_print_char_of_size+0x4a>

00000f1a <oled_print_char_of_size_inverted>:
     f1a:	62 30       	cpi	r22, 0x02	; 2
     f1c:	41 f4       	brne	.+16     	; 0xf2e <oled_print_char_of_size_inverted+0x14>
     f1e:	94 e0       	ldi	r25, 0x04	; 4
     f20:	89 02       	muls	r24, r25
     f22:	a0 01       	movw	r20, r0
     f24:	11 24       	eor	r1, r1
     f26:	40 51       	subi	r20, 0x10	; 16
     f28:	50 40       	sbci	r21, 0x00	; 0
     f2a:	24 e0       	ldi	r18, 0x04	; 4
     f2c:	26 c0       	rjmp	.+76     	; 0xf7a <oled_print_char_of_size_inverted+0x60>
     f2e:	61 30       	cpi	r22, 0x01	; 1
     f30:	89 f4       	brne	.+34     	; 0xf54 <oled_print_char_of_size_inverted+0x3a>
     f32:	48 2f       	mov	r20, r24
     f34:	55 27       	eor	r21, r21
     f36:	47 fd       	sbrc	r20, 7
     f38:	50 95       	com	r21
     f3a:	40 52       	subi	r20, 0x20	; 32
     f3c:	51 09       	sbc	r21, r1
     f3e:	ca 01       	movw	r24, r20
     f40:	88 0f       	add	r24, r24
     f42:	99 1f       	adc	r25, r25
     f44:	88 0f       	add	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	48 0f       	add	r20, r24
     f4a:	59 1f       	adc	r21, r25
     f4c:	44 51       	subi	r20, 0x14	; 20
     f4e:	5e 4f       	sbci	r21, 0xFE	; 254
     f50:	25 e0       	ldi	r18, 0x05	; 5
     f52:	13 c0       	rjmp	.+38     	; 0xf7a <oled_print_char_of_size_inverted+0x60>
     f54:	98 e0       	ldi	r25, 0x08	; 8
     f56:	89 02       	muls	r24, r25
     f58:	a0 01       	movw	r20, r0
     f5a:	11 24       	eor	r1, r1
     f5c:	49 53       	subi	r20, 0x39	; 57
     f5e:	5d 4f       	sbci	r21, 0xFD	; 253
     f60:	28 e0       	ldi	r18, 0x08	; 8
     f62:	0b c0       	rjmp	.+22     	; 0xf7a <oled_print_char_of_size_inverted+0x60>
     f64:	fa 01       	movw	r30, r20
     f66:	e8 0f       	add	r30, r24
     f68:	f9 1f       	adc	r31, r25
     f6a:	e4 91       	lpm	r30, Z
     f6c:	e0 95       	com	r30
     f6e:	ec 93       	st	X, r30
     f70:	01 96       	adiw	r24, 0x01	; 1
     f72:	82 17       	cp	r24, r18
     f74:	93 07       	cpc	r25, r19
     f76:	b4 f3       	brlt	.-20     	; 0xf64 <oled_print_char_of_size_inverted+0x4a>
     f78:	08 95       	ret
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	a0 e0       	ldi	r26, 0x00	; 0
     f82:	b2 e1       	ldi	r27, 0x12	; 18
     f84:	ef cf       	rjmp	.-34     	; 0xf64 <oled_print_char_of_size_inverted+0x4a>

00000f86 <oled_print_char>:
     f86:	8a 30       	cpi	r24, 0x0A	; 10
     f88:	51 f4       	brne	.+20     	; 0xf9e <oled_print_char+0x18>
     f8a:	80 91 31 02 	lds	r24, 0x0231
     f8e:	8f 5f       	subi	r24, 0xFF	; 255
     f90:	80 93 31 02 	sts	0x0231, r24
     f94:	65 df       	rcall	.-310    	; 0xe60 <oled_page_select>
     f96:	60 e8       	ldi	r22, 0x80	; 128
     f98:	80 e0       	ldi	r24, 0x00	; 0
     f9a:	4e df       	rcall	.-356    	; 0xe38 <oled_columb_range_select>
     f9c:	03 c0       	rjmp	.+6      	; 0xfa4 <oled_print_char+0x1e>
     f9e:	60 91 30 02 	lds	r22, 0x0230
     fa2:	86 df       	rcall	.-244    	; 0xeb0 <oled_print_char_of_size>
     fa4:	80 e0       	ldi	r24, 0x00	; 0
     fa6:	08 95       	ret

00000fa8 <oled_print_char_inverted>:
     fa8:	8a 30       	cpi	r24, 0x0A	; 10
     faa:	51 f4       	brne	.+20     	; 0xfc0 <oled_print_char_inverted+0x18>
     fac:	80 91 31 02 	lds	r24, 0x0231
     fb0:	8f 5f       	subi	r24, 0xFF	; 255
     fb2:	80 93 31 02 	sts	0x0231, r24
     fb6:	54 df       	rcall	.-344    	; 0xe60 <oled_page_select>
     fb8:	60 e8       	ldi	r22, 0x80	; 128
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	3d df       	rcall	.-390    	; 0xe38 <oled_columb_range_select>
     fbe:	03 c0       	rjmp	.+6      	; 0xfc6 <oled_print_char_inverted+0x1e>
     fc0:	60 91 30 02 	lds	r22, 0x0230
     fc4:	aa df       	rcall	.-172    	; 0xf1a <oled_print_char_of_size_inverted>
     fc6:	80 e0       	ldi	r24, 0x00	; 0
     fc8:	08 95       	ret

00000fca <oled_printf>:
     fca:	ef 92       	push	r14
     fcc:	ff 92       	push	r15
     fce:	0f 93       	push	r16
     fd0:	1f 93       	push	r17
     fd2:	cf 93       	push	r28
     fd4:	df 93       	push	r29
     fd6:	fc 01       	movw	r30, r24
     fd8:	01 90       	ld	r0, Z+
     fda:	00 20       	and	r0, r0
     fdc:	e9 f7       	brne	.-6      	; 0xfd8 <oled_printf+0xe>
     fde:	31 97       	sbiw	r30, 0x01	; 1
     fe0:	7f 01       	movw	r14, r30
     fe2:	e8 1a       	sub	r14, r24
     fe4:	f9 0a       	sbc	r15, r25
     fe6:	1e 14       	cp	r1, r14
     fe8:	1f 04       	cpc	r1, r15
     fea:	5c f4       	brge	.+22     	; 0x1002 <oled_printf+0x38>
     fec:	8c 01       	movw	r16, r24
     fee:	c0 e0       	ldi	r28, 0x00	; 0
     ff0:	d0 e0       	ldi	r29, 0x00	; 0
     ff2:	f8 01       	movw	r30, r16
     ff4:	81 91       	ld	r24, Z+
     ff6:	8f 01       	movw	r16, r30
     ff8:	c6 df       	rcall	.-116    	; 0xf86 <oled_print_char>
     ffa:	21 96       	adiw	r28, 0x01	; 1
     ffc:	ec 16       	cp	r14, r28
     ffe:	fd 06       	cpc	r15, r29
    1000:	c1 f7       	brne	.-16     	; 0xff2 <oled_printf+0x28>
    1002:	df 91       	pop	r29
    1004:	cf 91       	pop	r28
    1006:	1f 91       	pop	r17
    1008:	0f 91       	pop	r16
    100a:	ff 90       	pop	r15
    100c:	ef 90       	pop	r14
    100e:	08 95       	ret

00001010 <oled_printf_inverted>:
    1010:	ef 92       	push	r14
    1012:	ff 92       	push	r15
    1014:	0f 93       	push	r16
    1016:	1f 93       	push	r17
    1018:	cf 93       	push	r28
    101a:	df 93       	push	r29
    101c:	fc 01       	movw	r30, r24
    101e:	01 90       	ld	r0, Z+
    1020:	00 20       	and	r0, r0
    1022:	e9 f7       	brne	.-6      	; 0x101e <oled_printf_inverted+0xe>
    1024:	31 97       	sbiw	r30, 0x01	; 1
    1026:	7f 01       	movw	r14, r30
    1028:	e8 1a       	sub	r14, r24
    102a:	f9 0a       	sbc	r15, r25
    102c:	1e 14       	cp	r1, r14
    102e:	1f 04       	cpc	r1, r15
    1030:	5c f4       	brge	.+22     	; 0x1048 <oled_printf_inverted+0x38>
    1032:	8c 01       	movw	r16, r24
    1034:	c0 e0       	ldi	r28, 0x00	; 0
    1036:	d0 e0       	ldi	r29, 0x00	; 0
    1038:	f8 01       	movw	r30, r16
    103a:	81 91       	ld	r24, Z+
    103c:	8f 01       	movw	r16, r30
    103e:	b4 df       	rcall	.-152    	; 0xfa8 <oled_print_char_inverted>
    1040:	21 96       	adiw	r28, 0x01	; 1
    1042:	ec 16       	cp	r14, r28
    1044:	fd 06       	cpc	r15, r29
    1046:	c1 f7       	brne	.-16     	; 0x1038 <oled_printf_inverted+0x28>
    1048:	df 91       	pop	r29
    104a:	cf 91       	pop	r28
    104c:	1f 91       	pop	r17
    104e:	0f 91       	pop	r16
    1050:	ff 90       	pop	r15
    1052:	ef 90       	pop	r14
    1054:	08 95       	ret

00001056 <oled_get_joy_pos>:
    1056:	82 e0       	ldi	r24, 0x02	; 2
    1058:	98 e1       	ldi	r25, 0x18	; 24
    105a:	21 d2       	rcall	.+1090   	; 0x149e <xmem_read>
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	08 95       	ret

00001060 <oled_display_activity>:
    1060:	cf 93       	push	r28
    1062:	df 93       	push	r29
    1064:	1c df       	rcall	.-456    	; 0xe9e <oled_clear_screen>
    1066:	f7 df       	rcall	.-18     	; 0x1056 <oled_get_joy_pos>
    1068:	ec 01       	movw	r28, r24
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	f9 de       	rcall	.-526    	; 0xe60 <oled_page_select>
    106e:	20 97       	sbiw	r28, 0x00	; 0
    1070:	59 f4       	brne	.+22     	; 0x1088 <oled_display_activity+0x28>
    1072:	85 e9       	ldi	r24, 0x95	; 149
    1074:	91 e0       	ldi	r25, 0x01	; 1
    1076:	cc df       	rcall	.-104    	; 0x1010 <oled_printf_inverted>
    1078:	82 e0       	ldi	r24, 0x02	; 2
    107a:	f2 de       	rcall	.-540    	; 0xe60 <oled_page_select>
    107c:	81 ea       	ldi	r24, 0xA1	; 161
    107e:	91 e0       	ldi	r25, 0x01	; 1
    1080:	a4 df       	rcall	.-184    	; 0xfca <oled_printf>
    1082:	83 e0       	ldi	r24, 0x03	; 3
    1084:	ed de       	rcall	.-550    	; 0xe60 <oled_page_select>
    1086:	19 c0       	rjmp	.+50     	; 0x10ba <oled_display_activity+0x5a>
    1088:	85 e9       	ldi	r24, 0x95	; 149
    108a:	91 e0       	ldi	r25, 0x01	; 1
    108c:	9e df       	rcall	.-196    	; 0xfca <oled_printf>
    108e:	82 e0       	ldi	r24, 0x02	; 2
    1090:	e7 de       	rcall	.-562    	; 0xe60 <oled_page_select>
    1092:	c1 30       	cpi	r28, 0x01	; 1
    1094:	d1 05       	cpc	r29, r1
    1096:	31 f4       	brne	.+12     	; 0x10a4 <oled_display_activity+0x44>
    1098:	81 ea       	ldi	r24, 0xA1	; 161
    109a:	91 e0       	ldi	r25, 0x01	; 1
    109c:	b9 df       	rcall	.-142    	; 0x1010 <oled_printf_inverted>
    109e:	83 e0       	ldi	r24, 0x03	; 3
    10a0:	df de       	rcall	.-578    	; 0xe60 <oled_page_select>
    10a2:	0b c0       	rjmp	.+22     	; 0x10ba <oled_display_activity+0x5a>
    10a4:	81 ea       	ldi	r24, 0xA1	; 161
    10a6:	91 e0       	ldi	r25, 0x01	; 1
    10a8:	90 df       	rcall	.-224    	; 0xfca <oled_printf>
    10aa:	83 e0       	ldi	r24, 0x03	; 3
    10ac:	d9 de       	rcall	.-590    	; 0xe60 <oled_page_select>
    10ae:	22 97       	sbiw	r28, 0x02	; 2
    10b0:	21 f4       	brne	.+8      	; 0x10ba <oled_display_activity+0x5a>
    10b2:	8c ea       	ldi	r24, 0xAC	; 172
    10b4:	91 e0       	ldi	r25, 0x01	; 1
    10b6:	ac df       	rcall	.-168    	; 0x1010 <oled_printf_inverted>
    10b8:	03 c0       	rjmp	.+6      	; 0x10c0 <oled_display_activity+0x60>
    10ba:	8c ea       	ldi	r24, 0xAC	; 172
    10bc:	91 e0       	ldi	r25, 0x01	; 1
    10be:	85 df       	rcall	.-246    	; 0xfca <oled_printf>
    10c0:	df 91       	pop	r29
    10c2:	cf 91       	pop	r28
    10c4:	08 95       	ret

000010c6 <oled_init>:
    10c6:	e0 e0       	ldi	r30, 0x00	; 0
    10c8:	f0 e1       	ldi	r31, 0x10	; 16
    10ca:	8e ea       	ldi	r24, 0xAE	; 174
    10cc:	80 83       	st	Z, r24
    10ce:	81 ea       	ldi	r24, 0xA1	; 161
    10d0:	80 83       	st	Z, r24
    10d2:	8a ed       	ldi	r24, 0xDA	; 218
    10d4:	80 83       	st	Z, r24
    10d6:	82 e1       	ldi	r24, 0x12	; 18
    10d8:	80 83       	st	Z, r24
    10da:	88 ec       	ldi	r24, 0xC8	; 200
    10dc:	80 83       	st	Z, r24
    10de:	88 ea       	ldi	r24, 0xA8	; 168
    10e0:	80 83       	st	Z, r24
    10e2:	8f e3       	ldi	r24, 0x3F	; 63
    10e4:	80 83       	st	Z, r24
    10e6:	85 ed       	ldi	r24, 0xD5	; 213
    10e8:	80 83       	st	Z, r24
    10ea:	80 e8       	ldi	r24, 0x80	; 128
    10ec:	80 83       	st	Z, r24
    10ee:	81 e8       	ldi	r24, 0x81	; 129
    10f0:	80 83       	st	Z, r24
    10f2:	80 e5       	ldi	r24, 0x50	; 80
    10f4:	80 83       	st	Z, r24
    10f6:	89 ed       	ldi	r24, 0xD9	; 217
    10f8:	80 83       	st	Z, r24
    10fa:	81 e2       	ldi	r24, 0x21	; 33
    10fc:	80 83       	st	Z, r24
    10fe:	80 e2       	ldi	r24, 0x20	; 32
    1100:	80 83       	st	Z, r24
    1102:	82 e0       	ldi	r24, 0x02	; 2
    1104:	80 83       	st	Z, r24
    1106:	8b ed       	ldi	r24, 0xDB	; 219
    1108:	80 83       	st	Z, r24
    110a:	80 e3       	ldi	r24, 0x30	; 48
    110c:	80 83       	st	Z, r24
    110e:	8d ea       	ldi	r24, 0xAD	; 173
    1110:	80 83       	st	Z, r24
    1112:	10 82       	st	Z, r1
    1114:	84 ea       	ldi	r24, 0xA4	; 164
    1116:	80 83       	st	Z, r24
    1118:	86 ea       	ldi	r24, 0xA6	; 166
    111a:	80 83       	st	Z, r24
    111c:	8f ea       	ldi	r24, 0xAF	; 175
    111e:	80 83       	st	Z, r24
    1120:	be de       	rcall	.-644    	; 0xe9e <oled_clear_screen>
    1122:	10 92 35 02 	sts	0x0235, r1
    1126:	10 92 34 02 	sts	0x0234, r1
    112a:	84 e0       	ldi	r24, 0x04	; 4
    112c:	98 e1       	ldi	r25, 0x18	; 24
    112e:	b7 d1       	rcall	.+878    	; 0x149e <xmem_read>
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	90 93 33 02 	sts	0x0233, r25
    1136:	80 93 32 02 	sts	0x0232, r24
    113a:	92 cf       	rjmp	.-220    	; 0x1060 <oled_display_activity>
    113c:	08 95       	ret

0000113e <oled_set_joy_pos>:
    113e:	62 e0       	ldi	r22, 0x02	; 2
    1140:	78 e1       	ldi	r23, 0x18	; 24
    1142:	a9 c1       	rjmp	.+850    	; 0x1496 <xmem_write>
    1144:	08 95       	ret

00001146 <oled_actualise_joy_pos>:
    1146:	ef 92       	push	r14
    1148:	ff 92       	push	r15
    114a:	0f 93       	push	r16
    114c:	1f 93       	push	r17
    114e:	cf 93       	push	r28
    1150:	df 93       	push	r29
    1152:	8c 01       	movw	r16, r24
    1154:	62 30       	cpi	r22, 0x02	; 2
    1156:	71 05       	cpc	r23, r1
    1158:	29 f0       	breq	.+10     	; 0x1164 <oled_actualise_joy_pos+0x1e>
    115a:	68 94       	set
    115c:	ee 24       	eor	r14, r14
    115e:	e1 f8       	bld	r14, 1
    1160:	f1 2c       	mov	r15, r1
    1162:	03 c0       	rjmp	.+6      	; 0x116a <oled_actualise_joy_pos+0x24>
    1164:	ee 24       	eor	r14, r14
    1166:	e3 94       	inc	r14
    1168:	f1 2c       	mov	r15, r1
    116a:	75 df       	rcall	.-278    	; 0x1056 <oled_get_joy_pos>
    116c:	ec 01       	movw	r28, r24
    116e:	02 30       	cpi	r16, 0x02	; 2
    1170:	11 05       	cpc	r17, r1
    1172:	21 f4       	brne	.+8      	; 0x117c <oled_actualise_joy_pos+0x36>
    1174:	00 97       	sbiw	r24, 0x00	; 0
    1176:	79 f0       	breq	.+30     	; 0x1196 <oled_actualise_joy_pos+0x50>
    1178:	21 97       	sbiw	r28, 0x01	; 1
    117a:	11 c0       	rjmp	.+34     	; 0x119e <oled_actualise_joy_pos+0x58>
    117c:	03 30       	cpi	r16, 0x03	; 3
    117e:	11 05       	cpc	r17, r1
    1180:	71 f4       	brne	.+28     	; 0x119e <oled_actualise_joy_pos+0x58>
    1182:	8e 15       	cp	r24, r14
    1184:	9f 05       	cpc	r25, r15
    1186:	49 f0       	breq	.+18     	; 0x119a <oled_actualise_joy_pos+0x54>
    1188:	01 96       	adiw	r24, 0x01	; 1
    118a:	b7 01       	movw	r22, r14
    118c:	6f 5f       	subi	r22, 0xFF	; 255
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	f0 d1       	rcall	.+992    	; 0x1572 <__divmodhi4>
    1192:	ec 01       	movw	r28, r24
    1194:	04 c0       	rjmp	.+8      	; 0x119e <oled_actualise_joy_pos+0x58>
    1196:	e7 01       	movw	r28, r14
    1198:	02 c0       	rjmp	.+4      	; 0x119e <oled_actualise_joy_pos+0x58>
    119a:	c0 e0       	ldi	r28, 0x00	; 0
    119c:	d0 e0       	ldi	r29, 0x00	; 0
    119e:	ce 01       	movw	r24, r28
    11a0:	ce df       	rcall	.-100    	; 0x113e <oled_set_joy_pos>
    11a2:	df 93       	push	r29
    11a4:	cf 93       	push	r28
    11a6:	89 eb       	ldi	r24, 0xB9	; 185
    11a8:	91 e0       	ldi	r25, 0x01	; 1
    11aa:	9f 93       	push	r25
    11ac:	8f 93       	push	r24
    11ae:	52 d2       	rcall	.+1188   	; 0x1654 <printf>
    11b0:	0f 90       	pop	r0
    11b2:	0f 90       	pop	r0
    11b4:	0f 90       	pop	r0
    11b6:	0f 90       	pop	r0
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	1f 91       	pop	r17
    11be:	0f 91       	pop	r16
    11c0:	ff 90       	pop	r15
    11c2:	ef 90       	pop	r14
    11c4:	08 95       	ret

000011c6 <oled_print_high_score>:
}

void oled_print_high_score(){
    11c6:	0f 93       	push	r16
    11c8:	1f 93       	push	r17
    11ca:	cf 93       	push	r28
    11cc:	df 93       	push	r29
    11ce:	00 d0       	rcall	.+0      	; 0x11d0 <oled_print_high_score+0xa>
    11d0:	00 d0       	rcall	.+0      	; 0x11d2 <oled_print_high_score+0xc>
    11d2:	cd b7       	in	r28, 0x3d	; 61
    11d4:	de b7       	in	r29, 0x3e	; 62
	oled_clear_screen();
    11d6:	63 de       	rcall	.-826    	; 0xe9e <oled_clear_screen>
	oled_page_select(1);
    11d8:	81 e0       	ldi	r24, 0x01	; 1
    11da:	42 de       	rcall	.-892    	; 0xe60 <oled_page_select>
	oled_printf("High score :\n");
    11dc:	83 ec       	ldi	r24, 0xC3	; 195
    11de:	91 e0       	ldi	r25, 0x01	; 1
    11e0:	f4 de       	rcall	.-536    	; 0xfca <oled_printf>
	
	oled_page_select(2);
    11e2:	82 e0       	ldi	r24, 0x02	; 2
    11e4:	3d de       	rcall	.-902    	; 0xe60 <oled_page_select>
	char high_score_char [4];
	sprintf(high_score_char, "%d", high_score);
    11e6:	80 91 33 02 	lds	r24, 0x0233
    11ea:	8f 93       	push	r24
    11ec:	80 91 32 02 	lds	r24, 0x0232
    11f0:	8f 93       	push	r24
    11f2:	81 ed       	ldi	r24, 0xD1	; 209
    11f4:	91 e0       	ldi	r25, 0x01	; 1
    11f6:	9f 93       	push	r25
    11f8:	8f 93       	push	r24
    11fa:	8e 01       	movw	r16, r28
    11fc:	0f 5f       	subi	r16, 0xFF	; 255
    11fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1200:	1f 93       	push	r17
    1202:	0f 93       	push	r16
    1204:	38 d2       	rcall	.+1136   	; 0x1676 <sprintf>
	oled_printf(high_score_char);
    1206:	c8 01       	movw	r24, r16
    1208:	e0 de       	rcall	.-576    	; 0xfca <oled_printf>
	
	oled_page_select(3);
    120a:	83 e0       	ldi	r24, 0x03	; 3
    120c:	29 de       	rcall	.-942    	; 0xe60 <oled_page_select>
	oled_printf_inverted("Reset");
    120e:	84 ed       	ldi	r24, 0xD4	; 212
    1210:	91 e0       	ldi	r25, 0x01	; 1
    1212:	fe de       	rcall	.-516    	; 0x1010 <oled_printf_inverted>
    1214:	0f 90       	pop	r0
    1216:	0f 90       	pop	r0
    1218:	0f 90       	pop	r0
    121a:	0f 90       	pop	r0
    121c:	0f 90       	pop	r0
    121e:	0f 90       	pop	r0
}
    1220:	0f 90       	pop	r0
    1222:	0f 90       	pop	r0
    1224:	0f 90       	pop	r0
    1226:	0f 90       	pop	r0
    1228:	df 91       	pop	r29
    122a:	cf 91       	pop	r28
    122c:	1f 91       	pop	r17
    122e:	0f 91       	pop	r16
    1230:	08 95       	ret

00001232 <oled_navigate_gain_menu>:

void oled_navigate_gain_menu(){
    1232:	cf 93       	push	r28
    1234:	df 93       	push	r29
	oled_clear_screen();
    1236:	33 de       	rcall	.-922    	; 0xe9e <oled_clear_screen>
	int joy_pos = oled_get_joy_pos();
    1238:	0e df       	rcall	.-484    	; 0x1056 <oled_get_joy_pos>
    123a:	ec 01       	movw	r28, r24
	
	oled_page_select(1);
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	10 de       	rcall	.-992    	; 0xe60 <oled_page_select>
	if(joy_pos == 0)
    1240:	20 97       	sbiw	r28, 0x00	; 0
    1242:	59 f4       	brne	.+22     	; 0x125a <oled_navigate_gain_menu+0x28>
	oled_printf_inverted("Easy \n");
    1244:	8a ed       	ldi	r24, 0xDA	; 218
    1246:	91 e0       	ldi	r25, 0x01	; 1
    1248:	e3 de       	rcall	.-570    	; 0x1010 <oled_printf_inverted>
	else
	oled_printf("Easy \n");
	
	oled_page_select(2);
    124a:	82 e0       	ldi	r24, 0x02	; 2
    124c:	09 de       	rcall	.-1006   	; 0xe60 <oled_page_select>
	if(joy_pos == 1)
	oled_printf_inverted("Medium \n");
	else
	oled_printf("Medium \n");
    124e:	81 ee       	ldi	r24, 0xE1	; 225
    1250:	91 e0       	ldi	r25, 0x01	; 1
    1252:	bb de       	rcall	.-650    	; 0xfca <oled_printf>
	
	oled_page_select(3);
    1254:	83 e0       	ldi	r24, 0x03	; 3
    1256:	04 de       	rcall	.-1016   	; 0xe60 <oled_page_select>
    1258:	19 c0       	rjmp	.+50     	; 0x128c <oled_navigate_gain_menu+0x5a>
	
	oled_page_select(1);
	if(joy_pos == 0)
	oled_printf_inverted("Easy \n");
	else
	oled_printf("Easy \n");
    125a:	8a ed       	ldi	r24, 0xDA	; 218
    125c:	91 e0       	ldi	r25, 0x01	; 1
    125e:	b5 de       	rcall	.-662    	; 0xfca <oled_printf>
	
	oled_page_select(2);
    1260:	82 e0       	ldi	r24, 0x02	; 2
    1262:	fe dd       	rcall	.-1028   	; 0xe60 <oled_page_select>
	if(joy_pos == 1)
    1264:	c1 30       	cpi	r28, 0x01	; 1
    1266:	d1 05       	cpc	r29, r1
    1268:	31 f4       	brne	.+12     	; 0x1276 <oled_navigate_gain_menu+0x44>
	oled_printf_inverted("Medium \n");
    126a:	81 ee       	ldi	r24, 0xE1	; 225
    126c:	91 e0       	ldi	r25, 0x01	; 1
    126e:	d0 de       	rcall	.-608    	; 0x1010 <oled_printf_inverted>
	else
	oled_printf("Medium \n");
	
	oled_page_select(3);
    1270:	83 e0       	ldi	r24, 0x03	; 3
    1272:	f6 dd       	rcall	.-1044   	; 0xe60 <oled_page_select>
    1274:	0b c0       	rjmp	.+22     	; 0x128c <oled_navigate_gain_menu+0x5a>
	
	oled_page_select(2);
	if(joy_pos == 1)
	oled_printf_inverted("Medium \n");
	else
	oled_printf("Medium \n");
    1276:	81 ee       	ldi	r24, 0xE1	; 225
    1278:	91 e0       	ldi	r25, 0x01	; 1
    127a:	a7 de       	rcall	.-690    	; 0xfca <oled_printf>
	
	oled_page_select(3);
    127c:	83 e0       	ldi	r24, 0x03	; 3
    127e:	f0 dd       	rcall	.-1056   	; 0xe60 <oled_page_select>
	if(joy_pos == 2)
    1280:	22 97       	sbiw	r28, 0x02	; 2
    1282:	21 f4       	brne	.+8      	; 0x128c <oled_navigate_gain_menu+0x5a>
	oled_printf_inverted("Hard \n");
    1284:	8a ee       	ldi	r24, 0xEA	; 234
    1286:	91 e0       	ldi	r25, 0x01	; 1
    1288:	c3 de       	rcall	.-634    	; 0x1010 <oled_printf_inverted>
    128a:	03 c0       	rjmp	.+6      	; 0x1292 <oled_navigate_gain_menu+0x60>
	else
	oled_printf("Hard \n");
    128c:	8a ee       	ldi	r24, 0xEA	; 234
    128e:	91 e0       	ldi	r25, 0x01	; 1
    1290:	9c de       	rcall	.-712    	; 0xfca <oled_printf>
}
    1292:	df 91       	pop	r29
    1294:	cf 91       	pop	r28
    1296:	08 95       	ret

00001298 <oled_in_game_mode>:

void oled_in_game_mode(){
    1298:	ef 92       	push	r14
    129a:	ff 92       	push	r15
    129c:	0f 93       	push	r16
    129e:	1f 93       	push	r17
    12a0:	cf 93       	push	r28
    12a2:	df 93       	push	r29
    12a4:	cd b7       	in	r28, 0x3d	; 61
    12a6:	de b7       	in	r29, 0x3e	; 62
    12a8:	29 97       	sbiw	r28, 0x09	; 9
    12aa:	0f b6       	in	r0, 0x3f	; 63
    12ac:	f8 94       	cli
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	0f be       	out	0x3f, r0	; 63
    12b2:	cd bf       	out	0x3d, r28	; 61
	oled_clear_screen();
    12b4:	f4 dd       	rcall	.-1048   	; 0xe9e <oled_clear_screen>
	oled_page_select(1);
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	d3 dd       	rcall	.-1114   	; 0xe60 <oled_page_select>
	oled_printf("GAME ACTIVE \n");
    12ba:	81 ef       	ldi	r24, 0xF1	; 241
    12bc:	91 e0       	ldi	r25, 0x01	; 1
    12be:	85 de       	rcall	.-758    	; 0xfca <oled_printf>
	oled_page_select(2);
    12c0:	82 e0       	ldi	r24, 0x02	; 2
    12c2:	ce dd       	rcall	.-1124   	; 0xe60 <oled_page_select>
	oled_printf("lives left: ");
    12c4:	8f ef       	ldi	r24, 0xFF	; 255
    12c6:	91 e0       	ldi	r25, 0x01	; 1
    12c8:	80 de       	rcall	.-768    	; 0xfca <oled_printf>
	char lives_left [1];
	sprintf(lives_left, "%d", lives);
    12ca:	80 91 09 01 	lds	r24, 0x0109
    12ce:	8f 93       	push	r24
    12d0:	80 91 08 01 	lds	r24, 0x0108
    12d4:	8f 93       	push	r24
    12d6:	01 ed       	ldi	r16, 0xD1	; 209
    12d8:	11 e0       	ldi	r17, 0x01	; 1
    12da:	1f 93       	push	r17
    12dc:	0f 93       	push	r16
    12de:	ce 01       	movw	r24, r28
    12e0:	01 96       	adiw	r24, 0x01	; 1
    12e2:	7c 01       	movw	r14, r24
    12e4:	ff 92       	push	r15
    12e6:	8f 93       	push	r24
    12e8:	c6 d1       	rcall	.+908    	; 0x1676 <sprintf>
	oled_printf(lives_left);
    12ea:	c7 01       	movw	r24, r14
    12ec:	6e de       	rcall	.-804    	; 0xfca <oled_printf>
	oled_printf("\n");
    12ee:	86 e2       	ldi	r24, 0x26	; 38
    12f0:	92 e0       	ldi	r25, 0x02	; 2
    12f2:	6b de       	rcall	.-810    	; 0xfca <oled_printf>
	oled_page_select(3);
    12f4:	83 e0       	ldi	r24, 0x03	; 3
    12f6:	b4 dd       	rcall	.-1176   	; 0xe60 <oled_page_select>
	oled_printf("score: ");
    12f8:	81 e1       	ldi	r24, 0x11	; 17
    12fa:	92 e0       	ldi	r25, 0x02	; 2
    12fc:	66 de       	rcall	.-820    	; 0xfca <oled_printf>
	char scr [4];
	sprintf(scr, "%d", com_get_score());
    12fe:	0d dd       	rcall	.-1510   	; 0xd1a <com_get_score>
    1300:	9f 93       	push	r25
    1302:	8f 93       	push	r24
    1304:	1f 93       	push	r17
    1306:	0f 93       	push	r16
    1308:	7e 01       	movw	r14, r28
    130a:	92 e0       	ldi	r25, 0x02	; 2
    130c:	e9 0e       	add	r14, r25
    130e:	f1 1c       	adc	r15, r1
    1310:	ff 92       	push	r15
    1312:	ef 92       	push	r14
    1314:	b0 d1       	rcall	.+864    	; 0x1676 <sprintf>
	oled_printf(scr);
    1316:	c7 01       	movw	r24, r14
    1318:	58 de       	rcall	.-848    	; 0xfca <oled_printf>
	oled_printf("\n");
    131a:	86 e2       	ldi	r24, 0x26	; 38
    131c:	92 e0       	ldi	r25, 0x02	; 2
    131e:	55 de       	rcall	.-854    	; 0xfca <oled_printf>
	oled_page_select(4);
    1320:	84 e0       	ldi	r24, 0x04	; 4
    1322:	9e dd       	rcall	.-1220   	; 0xe60 <oled_page_select>
	oled_printf("high score: ");
    1324:	8c e0       	ldi	r24, 0x0C	; 12
    1326:	92 e0       	ldi	r25, 0x02	; 2
    1328:	50 de       	rcall	.-864    	; 0xfca <oled_printf>
	char hs [4];
	sprintf(hs, "%d", high_score);
    132a:	80 91 33 02 	lds	r24, 0x0233
    132e:	8f 93       	push	r24
    1330:	80 91 32 02 	lds	r24, 0x0232
    1334:	8f 93       	push	r24
    1336:	1f 93       	push	r17
    1338:	0f 93       	push	r16
    133a:	8e 01       	movw	r16, r28
    133c:	0a 5f       	subi	r16, 0xFA	; 250
    133e:	1f 4f       	sbci	r17, 0xFF	; 255
    1340:	1f 93       	push	r17
    1342:	0f 93       	push	r16
    1344:	98 d1       	rcall	.+816    	; 0x1676 <sprintf>
	oled_printf(hs);
    1346:	c8 01       	movw	r24, r16
    1348:	40 de       	rcall	.-896    	; 0xfca <oled_printf>
	oled_printf("\n");
    134a:	86 e2       	ldi	r24, 0x26	; 38
    134c:	92 e0       	ldi	r25, 0x02	; 2
    134e:	3d de       	rcall	.-902    	; 0xfca <oled_printf>
    1350:	0f b6       	in	r0, 0x3f	; 63
    1352:	f8 94       	cli
    1354:	de bf       	out	0x3e, r29	; 62
    1356:	0f be       	out	0x3f, r0	; 63
    1358:	cd bf       	out	0x3d, r28	; 61
}
    135a:	29 96       	adiw	r28, 0x09	; 9
    135c:	0f b6       	in	r0, 0x3f	; 63
    135e:	f8 94       	cli
    1360:	de bf       	out	0x3e, r29	; 62
    1362:	0f be       	out	0x3f, r0	; 63
    1364:	cd bf       	out	0x3d, r28	; 61
    1366:	df 91       	pop	r29
    1368:	cf 91       	pop	r28
    136a:	1f 91       	pop	r17
    136c:	0f 91       	pop	r16
    136e:	ff 90       	pop	r15
    1370:	ef 90       	pop	r14
    1372:	08 95       	ret

00001374 <oled_get_lives>:

int oled_get_lives(){
	return lives;
}
    1374:	80 91 08 01 	lds	r24, 0x0108
    1378:	90 91 09 01 	lds	r25, 0x0109
    137c:	08 95       	ret

0000137e <oled_reduce_lives>:

void oled_reduce_lives(){
	lives--;
    137e:	80 91 08 01 	lds	r24, 0x0108
    1382:	90 91 09 01 	lds	r25, 0x0109
    1386:	01 97       	sbiw	r24, 0x01	; 1
    1388:	90 93 09 01 	sts	0x0109, r25
    138c:	80 93 08 01 	sts	0x0108, r24
    1390:	08 95       	ret

00001392 <oled_reset_lives>:
}

void oled_reset_lives(){
	lives = 3;
    1392:	83 e0       	ldi	r24, 0x03	; 3
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	90 93 09 01 	sts	0x0109, r25
    139a:	80 93 08 01 	sts	0x0108, r24
    139e:	08 95       	ret

000013a0 <oled_actualise_high_score>:
}

void oled_actualise_high_score(){
	int score = com_get_score();
    13a0:	bc dc       	rcall	.-1672   	; 0xd1a <com_get_score>
	if(score > high_score){
    13a2:	20 91 32 02 	lds	r18, 0x0232
    13a6:	30 91 33 02 	lds	r19, 0x0233
    13aa:	28 17       	cp	r18, r24
    13ac:	39 07       	cpc	r19, r25
    13ae:	24 f4       	brge	.+8      	; 0x13b8 <oled_actualise_high_score+0x18>
		high_score = score;
    13b0:	90 93 33 02 	sts	0x0233, r25
    13b4:	80 93 32 02 	sts	0x0232, r24
	}
	xmem_write(high_score, HS_POS_ADDRESS);
    13b8:	64 e0       	ldi	r22, 0x04	; 4
    13ba:	78 e1       	ldi	r23, 0x18	; 24
    13bc:	80 91 32 02 	lds	r24, 0x0232
    13c0:	6a c0       	rjmp	.+212    	; 0x1496 <xmem_write>
    13c2:	08 95       	ret

000013c4 <oled_reset_hs>:
}

void oled_reset_hs(){
	high_score = 0;
    13c4:	10 92 33 02 	sts	0x0233, r1
    13c8:	10 92 32 02 	sts	0x0232, r1
	xmem_write(high_score, HS_POS_ADDRESS);
    13cc:	64 e0       	ldi	r22, 0x04	; 4
    13ce:	78 e1       	ldi	r23, 0x18	; 24
    13d0:	80 e0       	ldi	r24, 0x00	; 0
    13d2:	61 c0       	rjmp	.+194    	; 0x1496 <xmem_write>
    13d4:	08 95       	ret

000013d6 <oled_game_over>:
}

void oled_game_over(){
	oled_clear_screen();
    13d6:	63 dd       	rcall	.-1338   	; 0xe9e <oled_clear_screen>
	oled_page_select(1);
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	42 dd       	rcall	.-1404   	; 0xe60 <oled_page_select>
	oled_printf("GAME OVER... \n");
    13dc:	89 e1       	ldi	r24, 0x19	; 25
    13de:	92 e0       	ldi	r25, 0x02	; 2
    13e0:	f4 cd       	rjmp	.-1048   	; 0xfca <oled_printf>
    13e2:	08 95       	ret

000013e4 <spi_init>:
#include "spi.h"

void spi_init() 
{
	/* Set MOSI and SCK and CS output, all others input */
	DDRB = (1 << PB5) | (1 << PB7) | (1 << PB4);
    13e4:	80 eb       	ldi	r24, 0xB0	; 176
    13e6:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1 << PB4);
    13e8:	c4 9a       	sbi	0x18, 4	; 24
	/* Enable interrupt */

	// SPCR = 1<<SPIE;

	/* Enable SPI, Master, set clock rate fck/16 , SPI mode 0 by default*/
	SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);// | (1<<SPIE)
    13ea:	81 e5       	ldi	r24, 0x51	; 81
    13ec:	8d b9       	out	0x0d, r24	; 13
    13ee:	08 95       	ret

000013f0 <spi_read>:
}

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
    13f0:	cf 93       	push	r28
    13f2:	df 93       	push	r29
    13f4:	cd b7       	in	r28, 0x3d	; 61
    13f6:	de b7       	in	r29, 0x3e	; 62
    13f8:	2a 97       	sbiw	r28, 0x0a	; 10
    13fa:	0f b6       	in	r0, 0x3f	; 63
    13fc:	f8 94       	cli
    13fe:	de bf       	out	0x3e, r29	; 62
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	cd bf       	out	0x3d, r28	; 61
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
    1404:	66 23       	and	r22, r22
    1406:	81 f0       	breq	.+32     	; 0x1428 <spi_read+0x38>
    1408:	fe 01       	movw	r30, r28
    140a:	31 96       	adiw	r30, 0x01	; 1
    140c:	a8 2f       	mov	r26, r24
    140e:	b9 2f       	mov	r27, r25
    1410:	cf 01       	movw	r24, r30
    1412:	86 0f       	add	r24, r22
    1414:	91 1d       	adc	r25, r1
	{
		SPDR = dummy_data[i];
    1416:	21 91       	ld	r18, Z+
    1418:	2f b9       	out	0x0f, r18	; 15
		while (!(SPSR & (1 << SPIF)));
    141a:	77 9b       	sbis	0x0e, 7	; 14
    141c:	fe cf       	rjmp	.-4      	; 0x141a <spi_read+0x2a>
		receive_data[i] = SPDR;
    141e:	2f b1       	in	r18, 0x0f	; 15
    1420:	2d 93       	st	X+, r18

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
    1422:	e8 17       	cp	r30, r24
    1424:	f9 07       	cpc	r31, r25
    1426:	b9 f7       	brne	.-18     	; 0x1416 <spi_read+0x26>
		SPDR = dummy_data[i];
		while (!(SPSR & (1 << SPIF)));
		receive_data[i] = SPDR;
	}
	
}
    1428:	2a 96       	adiw	r28, 0x0a	; 10
    142a:	0f b6       	in	r0, 0x3f	; 63
    142c:	f8 94       	cli
    142e:	de bf       	out	0x3e, r29	; 62
    1430:	0f be       	out	0x3f, r0	; 63
    1432:	cd bf       	out	0x3d, r28	; 61
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	08 95       	ret

0000143a <spi_write>:

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
    143a:	26 2f       	mov	r18, r22
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	12 16       	cp	r1, r18
    1440:	13 06       	cpc	r1, r19
    1442:	6c f4       	brge	.+26     	; 0x145e <spi_write+0x24>
    1444:	e8 2f       	mov	r30, r24
    1446:	f9 2f       	mov	r31, r25
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	90 e0       	ldi	r25, 0x00	; 0
	{
		SPDR = send_data[i];
    144c:	41 91       	ld	r20, Z+
    144e:	4f b9       	out	0x0f, r20	; 15
		while (!(SPSR & (1 << SPIF)));
    1450:	77 9b       	sbis	0x0e, 7	; 14
    1452:	fe cf       	rjmp	.-4      	; 0x1450 <spi_write+0x16>
		dummy_data[i] = SPDR;
    1454:	4f b1       	in	r20, 0x0f	; 15
}

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
    1456:	01 96       	adiw	r24, 0x01	; 1
    1458:	82 17       	cp	r24, r18
    145a:	93 07       	cpc	r25, r19
    145c:	bc f3       	brlt	.-18     	; 0x144c <spi_write+0x12>
    145e:	08 95       	ret

00001460 <USART_Transmit>:

//for 5 to 8 Data bits
void USART_Transmit(unsigned char data)
{
	//wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));//or UDRE1
    1460:	5d 9b       	sbis	0x0b, 5	; 11
    1462:	fe cf       	rjmp	.-4      	; 0x1460 <USART_Transmit>
	
	//Put data into buffer, sends the data
	UDR0 = data;//or UDR1
    1464:	8c b9       	out	0x0c, r24	; 12
    1466:	08 95       	ret

00001468 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	//Wait for data to be received
	while((UCSR0A & (1<<RXC0)));
    1468:	5f 99       	sbic	0x0b, 7	; 11
    146a:	fe cf       	rjmp	.-4      	; 0x1468 <USART_Receive>
	
	//Get and return data from buffer
	return UDR0;//or UDR1
    146c:	8c b1       	in	r24, 0x0c	; 12
}
    146e:	08 95       	ret

00001470 <USART_Init>:

void USART_Init(unsigned int ubrr)
{
	// Set baud rate
	UBRR0H = (unsigned char) (ubrr>>8);
    1470:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;
    1472:	89 b9       	out	0x09, r24	; 9
	
	
	// Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)  | (1<<TXEN0) | (1<<RXCIE0);
    1474:	88 e9       	ldi	r24, 0x98	; 152
    1476:	8a b9       	out	0x0a, r24	; 10
	
	//Set frame format: 8 data, 2 stop bit
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00); // or USBS1 or other one
    1478:	8e e8       	ldi	r24, 0x8E	; 142
    147a:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
    147c:	64 e3       	ldi	r22, 0x34	; 52
    147e:	7a e0       	ldi	r23, 0x0A	; 10
    1480:	80 e3       	ldi	r24, 0x30	; 48
    1482:	9a e0       	ldi	r25, 0x0A	; 10
    1484:	9d c0       	rjmp	.+314    	; 0x15c0 <fdevopen>
    1486:	08 95       	ret

00001488 <xmem_init>:

#include "xmem.h"
#include "usart.h"

void xmem_init(void){
	MCUCR |= (1<<SRE);
    1488:	85 b7       	in	r24, 0x35	; 53
    148a:	80 68       	ori	r24, 0x80	; 128
    148c:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);
    148e:	80 b7       	in	r24, 0x30	; 48
    1490:	80 62       	ori	r24, 0x20	; 32
    1492:	80 bf       	out	0x30, r24	; 48
    1494:	08 95       	ret

00001496 <xmem_write>:
}

void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	ext_mem[addr] = data;
    1496:	fb 01       	movw	r30, r22
    1498:	f0 5f       	subi	r31, 0xF0	; 240
    149a:	80 83       	st	Z, r24
    149c:	08 95       	ret

0000149e <xmem_read>:
}

uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char*) BASE_ADDRESS;
	uint8_t ret_val = ext_mem[addr];
    149e:	90 5f       	subi	r25, 0xF0	; 240
    14a0:	fc 01       	movw	r30, r24
    14a2:	80 81       	ld	r24, Z
	return ret_val;
}
    14a4:	08 95       	ret

000014a6 <global_init>:
#include "communication.h"


void global_init(){
	
	USART_Init(MYUBRR);
    14a6:	8f e1       	ldi	r24, 0x1F	; 31
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	e2 df       	rcall	.-60     	; 0x1470 <USART_Init>
	xmem_init();
    14ac:	ed df       	rcall	.-38     	; 0x1488 <xmem_init>
	oled_init();
    14ae:	0b de       	rcall	.-1002   	; 0x10c6 <oled_init>
	adc_init();
    14b0:	96 d9       	rcall	.-3284   	; 0x7de <adc_init>
	can_init();
    14b2:	ac d9       	rcall	.-3240   	; 0x80c <can_init>
	//SRAM_test();
	
	DDRB &= ~(0b0111);	
    14b4:	87 b3       	in	r24, 0x17	; 23
    14b6:	88 7f       	andi	r24, 0xF8	; 248
    14b8:	87 bb       	out	0x17, r24	; 23
    14ba:	08 95       	ret

000014bc <main>:
}


int main(void){
    14bc:	cf 93       	push	r28
    14be:	df 93       	push	r29
    14c0:	cd b7       	in	r28, 0x3d	; 61
    14c2:	de b7       	in	r29, 0x3e	; 62
    14c4:	2d 97       	sbiw	r28, 0x0d	; 13
    14c6:	0f b6       	in	r0, 0x3f	; 63
    14c8:	f8 94       	cli
    14ca:	de bf       	out	0x3e, r29	; 62
    14cc:	0f be       	out	0x3f, r0	; 63
    14ce:	cd bf       	out	0x3d, r28	; 61
	enum mode{IDLE, GAME};
	int new_game = 1;
	
	
	global_init();
    14d0:	ea df       	rcall	.-44     	; 0x14a6 <global_init>
	
	struct can_message message;
	message.id = 3;
    14d2:	83 e0       	ldi	r24, 0x03	; 3
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	9a 83       	std	Y+2, r25	; 0x02
    14d8:	89 83       	std	Y+1, r24	; 0x01
	message.length = 1;
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	8b 83       	std	Y+3, r24	; 0x03
	message.data[0] = 124;
    14de:	8c e7       	ldi	r24, 0x7C	; 124
    14e0:	8c 83       	std	Y+4, r24	; 0x04
	
	int current_mode = IDLE;
    14e2:	00 e0       	ldi	r16, 0x00	; 0
    14e4:	10 e0       	ldi	r17, 0x00	; 0
}


int main(void){
	enum mode{IDLE, GAME};
	int new_game = 1;
    14e6:	ee 24       	eor	r14, r14
    14e8:	e3 94       	inc	r14
    14ea:	f1 2c       	mov	r15, r1
		switch(current_mode){
			case IDLE:
				com_navigate_display();
				//com_actualise_system();
				if (com_get_start_game()){
					current_mode = GAME;
    14ec:	aa 24       	eor	r10, r10
    14ee:	a3 94       	inc	r10
    14f0:	b1 2c       	mov	r11, r1
    14f2:	c1 2c       	mov	r12, r1
    14f4:	d1 2c       	mov	r13, r1
	message.length = 1;
	message.data[0] = 124;
	
	int current_mode = IDLE;
	while(1){
		switch(current_mode){
    14f6:	01 15       	cp	r16, r1
    14f8:	11 05       	cpc	r17, r1
    14fa:	21 f0       	breq	.+8      	; 0x1504 <main+0x48>
    14fc:	01 30       	cpi	r16, 0x01	; 1
    14fe:	11 05       	cpc	r17, r1
    1500:	49 f0       	breq	.+18     	; 0x1514 <main+0x58>
    1502:	15 c0       	rjmp	.+42     	; 0x152e <main+0x72>
			case IDLE:
				com_navigate_display();
    1504:	98 da       	rcall	.-2768   	; 0xa36 <com_navigate_display>
				//com_actualise_system();
				if (com_get_start_game()){
    1506:	1d dc       	rcall	.-1990   	; 0xd42 <com_get_start_game>
    1508:	89 2b       	or	r24, r25
    150a:	a9 f0       	breq	.+42     	; 0x1536 <main+0x7a>
					current_mode = GAME;
					com_set_start_game();
    150c:	1f dc       	rcall	.-1986   	; 0xd4c <com_set_start_game>
		switch(current_mode){
			case IDLE:
				com_navigate_display();
				//com_actualise_system();
				if (com_get_start_game()){
					current_mode = GAME;
    150e:	0a 2d       	mov	r16, r10
    1510:	1b 2d       	mov	r17, r11
    1512:	11 c0       	rjmp	.+34     	; 0x1536 <main+0x7a>
					com_set_start_game();
				}
				break;
			case GAME:
				if (new_game){
    1514:	ef 28       	or	r14, r15
    1516:	09 f0       	breq	.+2      	; 0x151a <main+0x5e>
					com_reset_score();
    1518:	fb db       	rcall	.-2058   	; 0xd10 <com_reset_score>
					new_game = 0;
				}
				com_play_game();
    151a:	76 db       	rcall	.-2324   	; 0xc08 <com_play_game>
				if (com_get_back()){
    151c:	08 dc       	rcall	.-2032   	; 0xd2e <com_get_back>
    151e:	89 2b       	or	r24, r25
    1520:	41 f0       	breq	.+16     	; 0x1532 <main+0x76>
					current_mode = IDLE;
					com_set_back();
    1522:	0a dc       	rcall	.-2028   	; 0xd38 <com_set_back>
					com_reset_score();
					new_game = 0;
				}
				com_play_game();
				if (com_get_back()){
					current_mode = IDLE;
    1524:	0c 2d       	mov	r16, r12
    1526:	1d 2d       	mov	r17, r13
					com_set_back();
    1528:	ec 2c       	mov	r14, r12
    152a:	fd 2c       	mov	r15, r13
    152c:	04 c0       	rjmp	.+8      	; 0x1536 <main+0x7a>
				}
				break;
			default:
				com_navigate_display();
    152e:	83 da       	rcall	.-2810   	; 0xa36 <com_navigate_display>
				break;
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <main+0x7a>
    1532:	ec 2c       	mov	r14, r12
    1534:	fd 2c       	mov	r15, r13
    1536:	2f ef       	ldi	r18, 0xFF	; 255
    1538:	8f e7       	ldi	r24, 0x7F	; 127
    153a:	91 e0       	ldi	r25, 0x01	; 1
    153c:	21 50       	subi	r18, 0x01	; 1
    153e:	80 40       	sbci	r24, 0x00	; 0
    1540:	90 40       	sbci	r25, 0x00	; 0
    1542:	e1 f7       	brne	.-8      	; 0x153c <main+0x80>
    1544:	00 c0       	rjmp	.+0      	; 0x1546 <main+0x8a>
    1546:	00 c0       	rjmp	.+0      	; 0x1548 <main+0x8c>
		}
		_delay_ms(100);
		
		
		if (can_get_message(&message))
    1548:	ce 01       	movw	r24, r28
    154a:	01 96       	adiw	r24, 0x01	; 1
    154c:	39 da       	rcall	.-2958   	; 0x9c0 <can_get_message>
    154e:	89 2b       	or	r24, r25
    1550:	91 f2       	breq	.-92     	; 0x14f6 <main+0x3a>
		{
			if(message.id == 1){
    1552:	89 81       	ldd	r24, Y+1	; 0x01
    1554:	9a 81       	ldd	r25, Y+2	; 0x02
    1556:	81 30       	cpi	r24, 0x01	; 1
    1558:	91 05       	cpc	r25, r1
    155a:	21 f4       	brne	.+8      	; 0x1564 <main+0xa8>
				com_set_score(message.data[0]);
    155c:	8c 81       	ldd	r24, Y+4	; 0x04
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	e1 db       	rcall	.-2110   	; 0xd24 <com_set_score>
    1562:	c9 cf       	rjmp	.-110    	; 0x14f6 <main+0x3a>
			}
			else if(message.id == 2){
    1564:	02 97       	sbiw	r24, 0x02	; 2
    1566:	09 f0       	breq	.+2      	; 0x156a <main+0xae>
    1568:	c6 cf       	rjmp	.-116    	; 0x14f6 <main+0x3a>
				oled_reduce_lives();
    156a:	09 df       	rcall	.-494    	; 0x137e <oled_reduce_lives>
				oled_actualise_high_score();
    156c:	19 df       	rcall	.-462    	; 0x13a0 <oled_actualise_high_score>
				com_reset_score();
    156e:	d0 db       	rcall	.-2144   	; 0xd10 <com_reset_score>
    1570:	c2 cf       	rjmp	.-124    	; 0x14f6 <main+0x3a>

00001572 <__divmodhi4>:
    1572:	97 fb       	bst	r25, 7
    1574:	07 2e       	mov	r0, r23
    1576:	16 f4       	brtc	.+4      	; 0x157c <__divmodhi4+0xa>
    1578:	00 94       	com	r0
    157a:	06 d0       	rcall	.+12     	; 0x1588 <__divmodhi4_neg1>
    157c:	77 fd       	sbrc	r23, 7
    157e:	08 d0       	rcall	.+16     	; 0x1590 <__divmodhi4_neg2>
    1580:	0b d0       	rcall	.+22     	; 0x1598 <__udivmodhi4>
    1582:	07 fc       	sbrc	r0, 7
    1584:	05 d0       	rcall	.+10     	; 0x1590 <__divmodhi4_neg2>
    1586:	3e f4       	brtc	.+14     	; 0x1596 <__divmodhi4_exit>

00001588 <__divmodhi4_neg1>:
    1588:	90 95       	com	r25
    158a:	81 95       	neg	r24
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	08 95       	ret

00001590 <__divmodhi4_neg2>:
    1590:	70 95       	com	r23
    1592:	61 95       	neg	r22
    1594:	7f 4f       	sbci	r23, 0xFF	; 255

00001596 <__divmodhi4_exit>:
    1596:	08 95       	ret

00001598 <__udivmodhi4>:
    1598:	aa 1b       	sub	r26, r26
    159a:	bb 1b       	sub	r27, r27
    159c:	51 e1       	ldi	r21, 0x11	; 17
    159e:	07 c0       	rjmp	.+14     	; 0x15ae <__udivmodhi4_ep>

000015a0 <__udivmodhi4_loop>:
    15a0:	aa 1f       	adc	r26, r26
    15a2:	bb 1f       	adc	r27, r27
    15a4:	a6 17       	cp	r26, r22
    15a6:	b7 07       	cpc	r27, r23
    15a8:	10 f0       	brcs	.+4      	; 0x15ae <__udivmodhi4_ep>
    15aa:	a6 1b       	sub	r26, r22
    15ac:	b7 0b       	sbc	r27, r23

000015ae <__udivmodhi4_ep>:
    15ae:	88 1f       	adc	r24, r24
    15b0:	99 1f       	adc	r25, r25
    15b2:	5a 95       	dec	r21
    15b4:	a9 f7       	brne	.-22     	; 0x15a0 <__udivmodhi4_loop>
    15b6:	80 95       	com	r24
    15b8:	90 95       	com	r25
    15ba:	bc 01       	movw	r22, r24
    15bc:	cd 01       	movw	r24, r26
    15be:	08 95       	ret

000015c0 <fdevopen>:
    15c0:	0f 93       	push	r16
    15c2:	1f 93       	push	r17
    15c4:	cf 93       	push	r28
    15c6:	df 93       	push	r29
    15c8:	ec 01       	movw	r28, r24
    15ca:	8b 01       	movw	r16, r22
    15cc:	00 97       	sbiw	r24, 0x00	; 0
    15ce:	31 f4       	brne	.+12     	; 0x15dc <fdevopen+0x1c>
    15d0:	61 15       	cp	r22, r1
    15d2:	71 05       	cpc	r23, r1
    15d4:	19 f4       	brne	.+6      	; 0x15dc <fdevopen+0x1c>
    15d6:	80 e0       	ldi	r24, 0x00	; 0
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	37 c0       	rjmp	.+110    	; 0x164a <fdevopen+0x8a>
    15dc:	6e e0       	ldi	r22, 0x0E	; 14
    15de:	70 e0       	ldi	r23, 0x00	; 0
    15e0:	81 e0       	ldi	r24, 0x01	; 1
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	2a d2       	rcall	.+1108   	; 0x1a3a <calloc>
    15e6:	fc 01       	movw	r30, r24
    15e8:	00 97       	sbiw	r24, 0x00	; 0
    15ea:	a9 f3       	breq	.-22     	; 0x15d6 <fdevopen+0x16>
    15ec:	80 e8       	ldi	r24, 0x80	; 128
    15ee:	83 83       	std	Z+3, r24	; 0x03
    15f0:	01 15       	cp	r16, r1
    15f2:	11 05       	cpc	r17, r1
    15f4:	71 f0       	breq	.+28     	; 0x1612 <fdevopen+0x52>
    15f6:	13 87       	std	Z+11, r17	; 0x0b
    15f8:	02 87       	std	Z+10, r16	; 0x0a
    15fa:	81 e8       	ldi	r24, 0x81	; 129
    15fc:	83 83       	std	Z+3, r24	; 0x03
    15fe:	80 91 36 02 	lds	r24, 0x0236
    1602:	90 91 37 02 	lds	r25, 0x0237
    1606:	89 2b       	or	r24, r25
    1608:	21 f4       	brne	.+8      	; 0x1612 <fdevopen+0x52>
    160a:	f0 93 37 02 	sts	0x0237, r31
    160e:	e0 93 36 02 	sts	0x0236, r30
    1612:	20 97       	sbiw	r28, 0x00	; 0
    1614:	c9 f0       	breq	.+50     	; 0x1648 <fdevopen+0x88>
    1616:	d1 87       	std	Z+9, r29	; 0x09
    1618:	c0 87       	std	Z+8, r28	; 0x08
    161a:	83 81       	ldd	r24, Z+3	; 0x03
    161c:	82 60       	ori	r24, 0x02	; 2
    161e:	83 83       	std	Z+3, r24	; 0x03
    1620:	80 91 38 02 	lds	r24, 0x0238
    1624:	90 91 39 02 	lds	r25, 0x0239
    1628:	89 2b       	or	r24, r25
    162a:	71 f4       	brne	.+28     	; 0x1648 <fdevopen+0x88>
    162c:	f0 93 39 02 	sts	0x0239, r31
    1630:	e0 93 38 02 	sts	0x0238, r30
    1634:	80 91 3a 02 	lds	r24, 0x023A
    1638:	90 91 3b 02 	lds	r25, 0x023B
    163c:	89 2b       	or	r24, r25
    163e:	21 f4       	brne	.+8      	; 0x1648 <fdevopen+0x88>
    1640:	f0 93 3b 02 	sts	0x023B, r31
    1644:	e0 93 3a 02 	sts	0x023A, r30
    1648:	cf 01       	movw	r24, r30
    164a:	df 91       	pop	r29
    164c:	cf 91       	pop	r28
    164e:	1f 91       	pop	r17
    1650:	0f 91       	pop	r16
    1652:	08 95       	ret

00001654 <printf>:
    1654:	a0 e0       	ldi	r26, 0x00	; 0
    1656:	b0 e0       	ldi	r27, 0x00	; 0
    1658:	ef e2       	ldi	r30, 0x2F	; 47
    165a:	fb e0       	ldi	r31, 0x0B	; 11
    165c:	ec c3       	rjmp	.+2008   	; 0x1e36 <__prologue_saves__+0x20>
    165e:	fe 01       	movw	r30, r28
    1660:	35 96       	adiw	r30, 0x05	; 5
    1662:	61 91       	ld	r22, Z+
    1664:	71 91       	ld	r23, Z+
    1666:	af 01       	movw	r20, r30
    1668:	80 91 38 02 	lds	r24, 0x0238
    166c:	90 91 39 02 	lds	r25, 0x0239
    1670:	21 d0       	rcall	.+66     	; 0x16b4 <vfprintf>
    1672:	e2 e0       	ldi	r30, 0x02	; 2
    1674:	fc c3       	rjmp	.+2040   	; 0x1e6e <__epilogue_restores__+0x20>

00001676 <sprintf>:
    1676:	ae e0       	ldi	r26, 0x0E	; 14
    1678:	b0 e0       	ldi	r27, 0x00	; 0
    167a:	e0 e4       	ldi	r30, 0x40	; 64
    167c:	fb e0       	ldi	r31, 0x0B	; 11
    167e:	d9 c3       	rjmp	.+1970   	; 0x1e32 <__prologue_saves__+0x1c>
    1680:	0d 89       	ldd	r16, Y+21	; 0x15
    1682:	1e 89       	ldd	r17, Y+22	; 0x16
    1684:	86 e0       	ldi	r24, 0x06	; 6
    1686:	8c 83       	std	Y+4, r24	; 0x04
    1688:	1a 83       	std	Y+2, r17	; 0x02
    168a:	09 83       	std	Y+1, r16	; 0x01
    168c:	8f ef       	ldi	r24, 0xFF	; 255
    168e:	9f e7       	ldi	r25, 0x7F	; 127
    1690:	9e 83       	std	Y+6, r25	; 0x06
    1692:	8d 83       	std	Y+5, r24	; 0x05
    1694:	ae 01       	movw	r20, r28
    1696:	47 5e       	subi	r20, 0xE7	; 231
    1698:	5f 4f       	sbci	r21, 0xFF	; 255
    169a:	6f 89       	ldd	r22, Y+23	; 0x17
    169c:	78 8d       	ldd	r23, Y+24	; 0x18
    169e:	ce 01       	movw	r24, r28
    16a0:	01 96       	adiw	r24, 0x01	; 1
    16a2:	08 d0       	rcall	.+16     	; 0x16b4 <vfprintf>
    16a4:	ef 81       	ldd	r30, Y+7	; 0x07
    16a6:	f8 85       	ldd	r31, Y+8	; 0x08
    16a8:	e0 0f       	add	r30, r16
    16aa:	f1 1f       	adc	r31, r17
    16ac:	10 82       	st	Z, r1
    16ae:	2e 96       	adiw	r28, 0x0e	; 14
    16b0:	e4 e0       	ldi	r30, 0x04	; 4
    16b2:	db c3       	rjmp	.+1974   	; 0x1e6a <__epilogue_restores__+0x1c>

000016b4 <vfprintf>:
    16b4:	ac e0       	ldi	r26, 0x0C	; 12
    16b6:	b0 e0       	ldi	r27, 0x00	; 0
    16b8:	ef e5       	ldi	r30, 0x5F	; 95
    16ba:	fb e0       	ldi	r31, 0x0B	; 11
    16bc:	ac c3       	rjmp	.+1880   	; 0x1e16 <__prologue_saves__>
    16be:	7c 01       	movw	r14, r24
    16c0:	6b 01       	movw	r12, r22
    16c2:	8a 01       	movw	r16, r20
    16c4:	fc 01       	movw	r30, r24
    16c6:	17 82       	std	Z+7, r1	; 0x07
    16c8:	16 82       	std	Z+6, r1	; 0x06
    16ca:	83 81       	ldd	r24, Z+3	; 0x03
    16cc:	81 ff       	sbrs	r24, 1
    16ce:	b0 c1       	rjmp	.+864    	; 0x1a30 <vfprintf+0x37c>
    16d0:	ce 01       	movw	r24, r28
    16d2:	01 96       	adiw	r24, 0x01	; 1
    16d4:	4c 01       	movw	r8, r24
    16d6:	f7 01       	movw	r30, r14
    16d8:	93 81       	ldd	r25, Z+3	; 0x03
    16da:	f6 01       	movw	r30, r12
    16dc:	93 fd       	sbrc	r25, 3
    16de:	85 91       	lpm	r24, Z+
    16e0:	93 ff       	sbrs	r25, 3
    16e2:	81 91       	ld	r24, Z+
    16e4:	6f 01       	movw	r12, r30
    16e6:	88 23       	and	r24, r24
    16e8:	09 f4       	brne	.+2      	; 0x16ec <vfprintf+0x38>
    16ea:	9e c1       	rjmp	.+828    	; 0x1a28 <vfprintf+0x374>
    16ec:	85 32       	cpi	r24, 0x25	; 37
    16ee:	39 f4       	brne	.+14     	; 0x16fe <vfprintf+0x4a>
    16f0:	93 fd       	sbrc	r25, 3
    16f2:	85 91       	lpm	r24, Z+
    16f4:	93 ff       	sbrs	r25, 3
    16f6:	81 91       	ld	r24, Z+
    16f8:	6f 01       	movw	r12, r30
    16fa:	85 32       	cpi	r24, 0x25	; 37
    16fc:	21 f4       	brne	.+8      	; 0x1706 <vfprintf+0x52>
    16fe:	b7 01       	movw	r22, r14
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	f9 d2       	rcall	.+1522   	; 0x1cf6 <fputc>
    1704:	e8 cf       	rjmp	.-48     	; 0x16d6 <vfprintf+0x22>
    1706:	51 2c       	mov	r5, r1
    1708:	31 2c       	mov	r3, r1
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	20 32       	cpi	r18, 0x20	; 32
    170e:	a0 f4       	brcc	.+40     	; 0x1738 <vfprintf+0x84>
    1710:	8b 32       	cpi	r24, 0x2B	; 43
    1712:	69 f0       	breq	.+26     	; 0x172e <vfprintf+0x7a>
    1714:	30 f4       	brcc	.+12     	; 0x1722 <vfprintf+0x6e>
    1716:	80 32       	cpi	r24, 0x20	; 32
    1718:	59 f0       	breq	.+22     	; 0x1730 <vfprintf+0x7c>
    171a:	83 32       	cpi	r24, 0x23	; 35
    171c:	69 f4       	brne	.+26     	; 0x1738 <vfprintf+0x84>
    171e:	20 61       	ori	r18, 0x10	; 16
    1720:	2c c0       	rjmp	.+88     	; 0x177a <vfprintf+0xc6>
    1722:	8d 32       	cpi	r24, 0x2D	; 45
    1724:	39 f0       	breq	.+14     	; 0x1734 <vfprintf+0x80>
    1726:	80 33       	cpi	r24, 0x30	; 48
    1728:	39 f4       	brne	.+14     	; 0x1738 <vfprintf+0x84>
    172a:	21 60       	ori	r18, 0x01	; 1
    172c:	26 c0       	rjmp	.+76     	; 0x177a <vfprintf+0xc6>
    172e:	22 60       	ori	r18, 0x02	; 2
    1730:	24 60       	ori	r18, 0x04	; 4
    1732:	23 c0       	rjmp	.+70     	; 0x177a <vfprintf+0xc6>
    1734:	28 60       	ori	r18, 0x08	; 8
    1736:	21 c0       	rjmp	.+66     	; 0x177a <vfprintf+0xc6>
    1738:	27 fd       	sbrc	r18, 7
    173a:	27 c0       	rjmp	.+78     	; 0x178a <vfprintf+0xd6>
    173c:	30 ed       	ldi	r19, 0xD0	; 208
    173e:	38 0f       	add	r19, r24
    1740:	3a 30       	cpi	r19, 0x0A	; 10
    1742:	78 f4       	brcc	.+30     	; 0x1762 <vfprintf+0xae>
    1744:	26 ff       	sbrs	r18, 6
    1746:	06 c0       	rjmp	.+12     	; 0x1754 <vfprintf+0xa0>
    1748:	fa e0       	ldi	r31, 0x0A	; 10
    174a:	5f 9e       	mul	r5, r31
    174c:	30 0d       	add	r19, r0
    174e:	11 24       	eor	r1, r1
    1750:	53 2e       	mov	r5, r19
    1752:	13 c0       	rjmp	.+38     	; 0x177a <vfprintf+0xc6>
    1754:	8a e0       	ldi	r24, 0x0A	; 10
    1756:	38 9e       	mul	r3, r24
    1758:	30 0d       	add	r19, r0
    175a:	11 24       	eor	r1, r1
    175c:	33 2e       	mov	r3, r19
    175e:	20 62       	ori	r18, 0x20	; 32
    1760:	0c c0       	rjmp	.+24     	; 0x177a <vfprintf+0xc6>
    1762:	8e 32       	cpi	r24, 0x2E	; 46
    1764:	21 f4       	brne	.+8      	; 0x176e <vfprintf+0xba>
    1766:	26 fd       	sbrc	r18, 6
    1768:	5f c1       	rjmp	.+702    	; 0x1a28 <vfprintf+0x374>
    176a:	20 64       	ori	r18, 0x40	; 64
    176c:	06 c0       	rjmp	.+12     	; 0x177a <vfprintf+0xc6>
    176e:	8c 36       	cpi	r24, 0x6C	; 108
    1770:	11 f4       	brne	.+4      	; 0x1776 <vfprintf+0xc2>
    1772:	20 68       	ori	r18, 0x80	; 128
    1774:	02 c0       	rjmp	.+4      	; 0x177a <vfprintf+0xc6>
    1776:	88 36       	cpi	r24, 0x68	; 104
    1778:	41 f4       	brne	.+16     	; 0x178a <vfprintf+0xd6>
    177a:	f6 01       	movw	r30, r12
    177c:	93 fd       	sbrc	r25, 3
    177e:	85 91       	lpm	r24, Z+
    1780:	93 ff       	sbrs	r25, 3
    1782:	81 91       	ld	r24, Z+
    1784:	6f 01       	movw	r12, r30
    1786:	81 11       	cpse	r24, r1
    1788:	c1 cf       	rjmp	.-126    	; 0x170c <vfprintf+0x58>
    178a:	98 2f       	mov	r25, r24
    178c:	9f 7d       	andi	r25, 0xDF	; 223
    178e:	95 54       	subi	r25, 0x45	; 69
    1790:	93 30       	cpi	r25, 0x03	; 3
    1792:	28 f4       	brcc	.+10     	; 0x179e <vfprintf+0xea>
    1794:	0c 5f       	subi	r16, 0xFC	; 252
    1796:	1f 4f       	sbci	r17, 0xFF	; 255
    1798:	ff e3       	ldi	r31, 0x3F	; 63
    179a:	f9 83       	std	Y+1, r31	; 0x01
    179c:	0d c0       	rjmp	.+26     	; 0x17b8 <vfprintf+0x104>
    179e:	83 36       	cpi	r24, 0x63	; 99
    17a0:	31 f0       	breq	.+12     	; 0x17ae <vfprintf+0xfa>
    17a2:	83 37       	cpi	r24, 0x73	; 115
    17a4:	71 f0       	breq	.+28     	; 0x17c2 <vfprintf+0x10e>
    17a6:	83 35       	cpi	r24, 0x53	; 83
    17a8:	09 f0       	breq	.+2      	; 0x17ac <vfprintf+0xf8>
    17aa:	57 c0       	rjmp	.+174    	; 0x185a <vfprintf+0x1a6>
    17ac:	21 c0       	rjmp	.+66     	; 0x17f0 <vfprintf+0x13c>
    17ae:	f8 01       	movw	r30, r16
    17b0:	80 81       	ld	r24, Z
    17b2:	89 83       	std	Y+1, r24	; 0x01
    17b4:	0e 5f       	subi	r16, 0xFE	; 254
    17b6:	1f 4f       	sbci	r17, 0xFF	; 255
    17b8:	44 24       	eor	r4, r4
    17ba:	43 94       	inc	r4
    17bc:	51 2c       	mov	r5, r1
    17be:	54 01       	movw	r10, r8
    17c0:	14 c0       	rjmp	.+40     	; 0x17ea <vfprintf+0x136>
    17c2:	38 01       	movw	r6, r16
    17c4:	f2 e0       	ldi	r31, 0x02	; 2
    17c6:	6f 0e       	add	r6, r31
    17c8:	71 1c       	adc	r7, r1
    17ca:	f8 01       	movw	r30, r16
    17cc:	a0 80       	ld	r10, Z
    17ce:	b1 80       	ldd	r11, Z+1	; 0x01
    17d0:	26 ff       	sbrs	r18, 6
    17d2:	03 c0       	rjmp	.+6      	; 0x17da <vfprintf+0x126>
    17d4:	65 2d       	mov	r22, r5
    17d6:	70 e0       	ldi	r23, 0x00	; 0
    17d8:	02 c0       	rjmp	.+4      	; 0x17de <vfprintf+0x12a>
    17da:	6f ef       	ldi	r22, 0xFF	; 255
    17dc:	7f ef       	ldi	r23, 0xFF	; 255
    17de:	c5 01       	movw	r24, r10
    17e0:	2c 87       	std	Y+12, r18	; 0x0c
    17e2:	7e d2       	rcall	.+1276   	; 0x1ce0 <strnlen>
    17e4:	2c 01       	movw	r4, r24
    17e6:	83 01       	movw	r16, r6
    17e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    17ea:	2f 77       	andi	r18, 0x7F	; 127
    17ec:	22 2e       	mov	r2, r18
    17ee:	16 c0       	rjmp	.+44     	; 0x181c <vfprintf+0x168>
    17f0:	38 01       	movw	r6, r16
    17f2:	f2 e0       	ldi	r31, 0x02	; 2
    17f4:	6f 0e       	add	r6, r31
    17f6:	71 1c       	adc	r7, r1
    17f8:	f8 01       	movw	r30, r16
    17fa:	a0 80       	ld	r10, Z
    17fc:	b1 80       	ldd	r11, Z+1	; 0x01
    17fe:	26 ff       	sbrs	r18, 6
    1800:	03 c0       	rjmp	.+6      	; 0x1808 <vfprintf+0x154>
    1802:	65 2d       	mov	r22, r5
    1804:	70 e0       	ldi	r23, 0x00	; 0
    1806:	02 c0       	rjmp	.+4      	; 0x180c <vfprintf+0x158>
    1808:	6f ef       	ldi	r22, 0xFF	; 255
    180a:	7f ef       	ldi	r23, 0xFF	; 255
    180c:	c5 01       	movw	r24, r10
    180e:	2c 87       	std	Y+12, r18	; 0x0c
    1810:	55 d2       	rcall	.+1194   	; 0x1cbc <strnlen_P>
    1812:	2c 01       	movw	r4, r24
    1814:	2c 85       	ldd	r18, Y+12	; 0x0c
    1816:	20 68       	ori	r18, 0x80	; 128
    1818:	22 2e       	mov	r2, r18
    181a:	83 01       	movw	r16, r6
    181c:	23 fc       	sbrc	r2, 3
    181e:	19 c0       	rjmp	.+50     	; 0x1852 <vfprintf+0x19e>
    1820:	83 2d       	mov	r24, r3
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	48 16       	cp	r4, r24
    1826:	59 06       	cpc	r5, r25
    1828:	a0 f4       	brcc	.+40     	; 0x1852 <vfprintf+0x19e>
    182a:	b7 01       	movw	r22, r14
    182c:	80 e2       	ldi	r24, 0x20	; 32
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	62 d2       	rcall	.+1220   	; 0x1cf6 <fputc>
    1832:	3a 94       	dec	r3
    1834:	f5 cf       	rjmp	.-22     	; 0x1820 <vfprintf+0x16c>
    1836:	f5 01       	movw	r30, r10
    1838:	27 fc       	sbrc	r2, 7
    183a:	85 91       	lpm	r24, Z+
    183c:	27 fe       	sbrs	r2, 7
    183e:	81 91       	ld	r24, Z+
    1840:	5f 01       	movw	r10, r30
    1842:	b7 01       	movw	r22, r14
    1844:	90 e0       	ldi	r25, 0x00	; 0
    1846:	57 d2       	rcall	.+1198   	; 0x1cf6 <fputc>
    1848:	31 10       	cpse	r3, r1
    184a:	3a 94       	dec	r3
    184c:	f1 e0       	ldi	r31, 0x01	; 1
    184e:	4f 1a       	sub	r4, r31
    1850:	51 08       	sbc	r5, r1
    1852:	41 14       	cp	r4, r1
    1854:	51 04       	cpc	r5, r1
    1856:	79 f7       	brne	.-34     	; 0x1836 <vfprintf+0x182>
    1858:	de c0       	rjmp	.+444    	; 0x1a16 <vfprintf+0x362>
    185a:	84 36       	cpi	r24, 0x64	; 100
    185c:	11 f0       	breq	.+4      	; 0x1862 <vfprintf+0x1ae>
    185e:	89 36       	cpi	r24, 0x69	; 105
    1860:	31 f5       	brne	.+76     	; 0x18ae <vfprintf+0x1fa>
    1862:	f8 01       	movw	r30, r16
    1864:	27 ff       	sbrs	r18, 7
    1866:	07 c0       	rjmp	.+14     	; 0x1876 <vfprintf+0x1c2>
    1868:	60 81       	ld	r22, Z
    186a:	71 81       	ldd	r23, Z+1	; 0x01
    186c:	82 81       	ldd	r24, Z+2	; 0x02
    186e:	93 81       	ldd	r25, Z+3	; 0x03
    1870:	0c 5f       	subi	r16, 0xFC	; 252
    1872:	1f 4f       	sbci	r17, 0xFF	; 255
    1874:	08 c0       	rjmp	.+16     	; 0x1886 <vfprintf+0x1d2>
    1876:	60 81       	ld	r22, Z
    1878:	71 81       	ldd	r23, Z+1	; 0x01
    187a:	88 27       	eor	r24, r24
    187c:	77 fd       	sbrc	r23, 7
    187e:	80 95       	com	r24
    1880:	98 2f       	mov	r25, r24
    1882:	0e 5f       	subi	r16, 0xFE	; 254
    1884:	1f 4f       	sbci	r17, 0xFF	; 255
    1886:	2f 76       	andi	r18, 0x6F	; 111
    1888:	b2 2e       	mov	r11, r18
    188a:	97 ff       	sbrs	r25, 7
    188c:	09 c0       	rjmp	.+18     	; 0x18a0 <vfprintf+0x1ec>
    188e:	90 95       	com	r25
    1890:	80 95       	com	r24
    1892:	70 95       	com	r23
    1894:	61 95       	neg	r22
    1896:	7f 4f       	sbci	r23, 0xFF	; 255
    1898:	8f 4f       	sbci	r24, 0xFF	; 255
    189a:	9f 4f       	sbci	r25, 0xFF	; 255
    189c:	20 68       	ori	r18, 0x80	; 128
    189e:	b2 2e       	mov	r11, r18
    18a0:	2a e0       	ldi	r18, 0x0A	; 10
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	a4 01       	movw	r20, r8
    18a6:	59 d2       	rcall	.+1202   	; 0x1d5a <__ultoa_invert>
    18a8:	a8 2e       	mov	r10, r24
    18aa:	a8 18       	sub	r10, r8
    18ac:	43 c0       	rjmp	.+134    	; 0x1934 <vfprintf+0x280>
    18ae:	85 37       	cpi	r24, 0x75	; 117
    18b0:	29 f4       	brne	.+10     	; 0x18bc <vfprintf+0x208>
    18b2:	2f 7e       	andi	r18, 0xEF	; 239
    18b4:	b2 2e       	mov	r11, r18
    18b6:	2a e0       	ldi	r18, 0x0A	; 10
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	25 c0       	rjmp	.+74     	; 0x1906 <vfprintf+0x252>
    18bc:	f2 2f       	mov	r31, r18
    18be:	f9 7f       	andi	r31, 0xF9	; 249
    18c0:	bf 2e       	mov	r11, r31
    18c2:	8f 36       	cpi	r24, 0x6F	; 111
    18c4:	c1 f0       	breq	.+48     	; 0x18f6 <vfprintf+0x242>
    18c6:	18 f4       	brcc	.+6      	; 0x18ce <vfprintf+0x21a>
    18c8:	88 35       	cpi	r24, 0x58	; 88
    18ca:	79 f0       	breq	.+30     	; 0x18ea <vfprintf+0x236>
    18cc:	ad c0       	rjmp	.+346    	; 0x1a28 <vfprintf+0x374>
    18ce:	80 37       	cpi	r24, 0x70	; 112
    18d0:	19 f0       	breq	.+6      	; 0x18d8 <vfprintf+0x224>
    18d2:	88 37       	cpi	r24, 0x78	; 120
    18d4:	21 f0       	breq	.+8      	; 0x18de <vfprintf+0x22a>
    18d6:	a8 c0       	rjmp	.+336    	; 0x1a28 <vfprintf+0x374>
    18d8:	2f 2f       	mov	r18, r31
    18da:	20 61       	ori	r18, 0x10	; 16
    18dc:	b2 2e       	mov	r11, r18
    18de:	b4 fe       	sbrs	r11, 4
    18e0:	0d c0       	rjmp	.+26     	; 0x18fc <vfprintf+0x248>
    18e2:	8b 2d       	mov	r24, r11
    18e4:	84 60       	ori	r24, 0x04	; 4
    18e6:	b8 2e       	mov	r11, r24
    18e8:	09 c0       	rjmp	.+18     	; 0x18fc <vfprintf+0x248>
    18ea:	24 ff       	sbrs	r18, 4
    18ec:	0a c0       	rjmp	.+20     	; 0x1902 <vfprintf+0x24e>
    18ee:	9f 2f       	mov	r25, r31
    18f0:	96 60       	ori	r25, 0x06	; 6
    18f2:	b9 2e       	mov	r11, r25
    18f4:	06 c0       	rjmp	.+12     	; 0x1902 <vfprintf+0x24e>
    18f6:	28 e0       	ldi	r18, 0x08	; 8
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	05 c0       	rjmp	.+10     	; 0x1906 <vfprintf+0x252>
    18fc:	20 e1       	ldi	r18, 0x10	; 16
    18fe:	30 e0       	ldi	r19, 0x00	; 0
    1900:	02 c0       	rjmp	.+4      	; 0x1906 <vfprintf+0x252>
    1902:	20 e1       	ldi	r18, 0x10	; 16
    1904:	32 e0       	ldi	r19, 0x02	; 2
    1906:	f8 01       	movw	r30, r16
    1908:	b7 fe       	sbrs	r11, 7
    190a:	07 c0       	rjmp	.+14     	; 0x191a <vfprintf+0x266>
    190c:	60 81       	ld	r22, Z
    190e:	71 81       	ldd	r23, Z+1	; 0x01
    1910:	82 81       	ldd	r24, Z+2	; 0x02
    1912:	93 81       	ldd	r25, Z+3	; 0x03
    1914:	0c 5f       	subi	r16, 0xFC	; 252
    1916:	1f 4f       	sbci	r17, 0xFF	; 255
    1918:	06 c0       	rjmp	.+12     	; 0x1926 <vfprintf+0x272>
    191a:	60 81       	ld	r22, Z
    191c:	71 81       	ldd	r23, Z+1	; 0x01
    191e:	80 e0       	ldi	r24, 0x00	; 0
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	0e 5f       	subi	r16, 0xFE	; 254
    1924:	1f 4f       	sbci	r17, 0xFF	; 255
    1926:	a4 01       	movw	r20, r8
    1928:	18 d2       	rcall	.+1072   	; 0x1d5a <__ultoa_invert>
    192a:	a8 2e       	mov	r10, r24
    192c:	a8 18       	sub	r10, r8
    192e:	fb 2d       	mov	r31, r11
    1930:	ff 77       	andi	r31, 0x7F	; 127
    1932:	bf 2e       	mov	r11, r31
    1934:	b6 fe       	sbrs	r11, 6
    1936:	0b c0       	rjmp	.+22     	; 0x194e <vfprintf+0x29a>
    1938:	2b 2d       	mov	r18, r11
    193a:	2e 7f       	andi	r18, 0xFE	; 254
    193c:	a5 14       	cp	r10, r5
    193e:	50 f4       	brcc	.+20     	; 0x1954 <vfprintf+0x2a0>
    1940:	b4 fe       	sbrs	r11, 4
    1942:	0a c0       	rjmp	.+20     	; 0x1958 <vfprintf+0x2a4>
    1944:	b2 fc       	sbrc	r11, 2
    1946:	08 c0       	rjmp	.+16     	; 0x1958 <vfprintf+0x2a4>
    1948:	2b 2d       	mov	r18, r11
    194a:	2e 7e       	andi	r18, 0xEE	; 238
    194c:	05 c0       	rjmp	.+10     	; 0x1958 <vfprintf+0x2a4>
    194e:	7a 2c       	mov	r7, r10
    1950:	2b 2d       	mov	r18, r11
    1952:	03 c0       	rjmp	.+6      	; 0x195a <vfprintf+0x2a6>
    1954:	7a 2c       	mov	r7, r10
    1956:	01 c0       	rjmp	.+2      	; 0x195a <vfprintf+0x2a6>
    1958:	75 2c       	mov	r7, r5
    195a:	24 ff       	sbrs	r18, 4
    195c:	0d c0       	rjmp	.+26     	; 0x1978 <vfprintf+0x2c4>
    195e:	fe 01       	movw	r30, r28
    1960:	ea 0d       	add	r30, r10
    1962:	f1 1d       	adc	r31, r1
    1964:	80 81       	ld	r24, Z
    1966:	80 33       	cpi	r24, 0x30	; 48
    1968:	11 f4       	brne	.+4      	; 0x196e <vfprintf+0x2ba>
    196a:	29 7e       	andi	r18, 0xE9	; 233
    196c:	09 c0       	rjmp	.+18     	; 0x1980 <vfprintf+0x2cc>
    196e:	22 ff       	sbrs	r18, 2
    1970:	06 c0       	rjmp	.+12     	; 0x197e <vfprintf+0x2ca>
    1972:	73 94       	inc	r7
    1974:	73 94       	inc	r7
    1976:	04 c0       	rjmp	.+8      	; 0x1980 <vfprintf+0x2cc>
    1978:	82 2f       	mov	r24, r18
    197a:	86 78       	andi	r24, 0x86	; 134
    197c:	09 f0       	breq	.+2      	; 0x1980 <vfprintf+0x2cc>
    197e:	73 94       	inc	r7
    1980:	23 fd       	sbrc	r18, 3
    1982:	12 c0       	rjmp	.+36     	; 0x19a8 <vfprintf+0x2f4>
    1984:	20 ff       	sbrs	r18, 0
    1986:	06 c0       	rjmp	.+12     	; 0x1994 <vfprintf+0x2e0>
    1988:	5a 2c       	mov	r5, r10
    198a:	73 14       	cp	r7, r3
    198c:	18 f4       	brcc	.+6      	; 0x1994 <vfprintf+0x2e0>
    198e:	53 0c       	add	r5, r3
    1990:	57 18       	sub	r5, r7
    1992:	73 2c       	mov	r7, r3
    1994:	73 14       	cp	r7, r3
    1996:	60 f4       	brcc	.+24     	; 0x19b0 <vfprintf+0x2fc>
    1998:	b7 01       	movw	r22, r14
    199a:	80 e2       	ldi	r24, 0x20	; 32
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	2c 87       	std	Y+12, r18	; 0x0c
    19a0:	aa d1       	rcall	.+852    	; 0x1cf6 <fputc>
    19a2:	73 94       	inc	r7
    19a4:	2c 85       	ldd	r18, Y+12	; 0x0c
    19a6:	f6 cf       	rjmp	.-20     	; 0x1994 <vfprintf+0x2e0>
    19a8:	73 14       	cp	r7, r3
    19aa:	10 f4       	brcc	.+4      	; 0x19b0 <vfprintf+0x2fc>
    19ac:	37 18       	sub	r3, r7
    19ae:	01 c0       	rjmp	.+2      	; 0x19b2 <vfprintf+0x2fe>
    19b0:	31 2c       	mov	r3, r1
    19b2:	24 ff       	sbrs	r18, 4
    19b4:	11 c0       	rjmp	.+34     	; 0x19d8 <vfprintf+0x324>
    19b6:	b7 01       	movw	r22, r14
    19b8:	80 e3       	ldi	r24, 0x30	; 48
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	2c 87       	std	Y+12, r18	; 0x0c
    19be:	9b d1       	rcall	.+822    	; 0x1cf6 <fputc>
    19c0:	2c 85       	ldd	r18, Y+12	; 0x0c
    19c2:	22 ff       	sbrs	r18, 2
    19c4:	16 c0       	rjmp	.+44     	; 0x19f2 <vfprintf+0x33e>
    19c6:	21 ff       	sbrs	r18, 1
    19c8:	03 c0       	rjmp	.+6      	; 0x19d0 <vfprintf+0x31c>
    19ca:	88 e5       	ldi	r24, 0x58	; 88
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	02 c0       	rjmp	.+4      	; 0x19d4 <vfprintf+0x320>
    19d0:	88 e7       	ldi	r24, 0x78	; 120
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	b7 01       	movw	r22, r14
    19d6:	0c c0       	rjmp	.+24     	; 0x19f0 <vfprintf+0x33c>
    19d8:	82 2f       	mov	r24, r18
    19da:	86 78       	andi	r24, 0x86	; 134
    19dc:	51 f0       	breq	.+20     	; 0x19f2 <vfprintf+0x33e>
    19de:	21 fd       	sbrc	r18, 1
    19e0:	02 c0       	rjmp	.+4      	; 0x19e6 <vfprintf+0x332>
    19e2:	80 e2       	ldi	r24, 0x20	; 32
    19e4:	01 c0       	rjmp	.+2      	; 0x19e8 <vfprintf+0x334>
    19e6:	8b e2       	ldi	r24, 0x2B	; 43
    19e8:	27 fd       	sbrc	r18, 7
    19ea:	8d e2       	ldi	r24, 0x2D	; 45
    19ec:	b7 01       	movw	r22, r14
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	82 d1       	rcall	.+772    	; 0x1cf6 <fputc>
    19f2:	a5 14       	cp	r10, r5
    19f4:	30 f4       	brcc	.+12     	; 0x1a02 <vfprintf+0x34e>
    19f6:	b7 01       	movw	r22, r14
    19f8:	80 e3       	ldi	r24, 0x30	; 48
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	7c d1       	rcall	.+760    	; 0x1cf6 <fputc>
    19fe:	5a 94       	dec	r5
    1a00:	f8 cf       	rjmp	.-16     	; 0x19f2 <vfprintf+0x33e>
    1a02:	aa 94       	dec	r10
    1a04:	f4 01       	movw	r30, r8
    1a06:	ea 0d       	add	r30, r10
    1a08:	f1 1d       	adc	r31, r1
    1a0a:	80 81       	ld	r24, Z
    1a0c:	b7 01       	movw	r22, r14
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	72 d1       	rcall	.+740    	; 0x1cf6 <fputc>
    1a12:	a1 10       	cpse	r10, r1
    1a14:	f6 cf       	rjmp	.-20     	; 0x1a02 <vfprintf+0x34e>
    1a16:	33 20       	and	r3, r3
    1a18:	09 f4       	brne	.+2      	; 0x1a1c <vfprintf+0x368>
    1a1a:	5d ce       	rjmp	.-838    	; 0x16d6 <vfprintf+0x22>
    1a1c:	b7 01       	movw	r22, r14
    1a1e:	80 e2       	ldi	r24, 0x20	; 32
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	69 d1       	rcall	.+722    	; 0x1cf6 <fputc>
    1a24:	3a 94       	dec	r3
    1a26:	f7 cf       	rjmp	.-18     	; 0x1a16 <vfprintf+0x362>
    1a28:	f7 01       	movw	r30, r14
    1a2a:	86 81       	ldd	r24, Z+6	; 0x06
    1a2c:	97 81       	ldd	r25, Z+7	; 0x07
    1a2e:	02 c0       	rjmp	.+4      	; 0x1a34 <vfprintf+0x380>
    1a30:	8f ef       	ldi	r24, 0xFF	; 255
    1a32:	9f ef       	ldi	r25, 0xFF	; 255
    1a34:	2c 96       	adiw	r28, 0x0c	; 12
    1a36:	e2 e1       	ldi	r30, 0x12	; 18
    1a38:	0a c2       	rjmp	.+1044   	; 0x1e4e <__epilogue_restores__>

00001a3a <calloc>:
    1a3a:	0f 93       	push	r16
    1a3c:	1f 93       	push	r17
    1a3e:	cf 93       	push	r28
    1a40:	df 93       	push	r29
    1a42:	86 9f       	mul	r24, r22
    1a44:	80 01       	movw	r16, r0
    1a46:	87 9f       	mul	r24, r23
    1a48:	10 0d       	add	r17, r0
    1a4a:	96 9f       	mul	r25, r22
    1a4c:	10 0d       	add	r17, r0
    1a4e:	11 24       	eor	r1, r1
    1a50:	c8 01       	movw	r24, r16
    1a52:	0d d0       	rcall	.+26     	; 0x1a6e <malloc>
    1a54:	ec 01       	movw	r28, r24
    1a56:	00 97       	sbiw	r24, 0x00	; 0
    1a58:	21 f0       	breq	.+8      	; 0x1a62 <calloc+0x28>
    1a5a:	a8 01       	movw	r20, r16
    1a5c:	60 e0       	ldi	r22, 0x00	; 0
    1a5e:	70 e0       	ldi	r23, 0x00	; 0
    1a60:	38 d1       	rcall	.+624    	; 0x1cd2 <memset>
    1a62:	ce 01       	movw	r24, r28
    1a64:	df 91       	pop	r29
    1a66:	cf 91       	pop	r28
    1a68:	1f 91       	pop	r17
    1a6a:	0f 91       	pop	r16
    1a6c:	08 95       	ret

00001a6e <malloc>:
    1a6e:	cf 93       	push	r28
    1a70:	df 93       	push	r29
    1a72:	82 30       	cpi	r24, 0x02	; 2
    1a74:	91 05       	cpc	r25, r1
    1a76:	10 f4       	brcc	.+4      	; 0x1a7c <malloc+0xe>
    1a78:	82 e0       	ldi	r24, 0x02	; 2
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	e0 91 3e 02 	lds	r30, 0x023E
    1a80:	f0 91 3f 02 	lds	r31, 0x023F
    1a84:	20 e0       	ldi	r18, 0x00	; 0
    1a86:	30 e0       	ldi	r19, 0x00	; 0
    1a88:	a0 e0       	ldi	r26, 0x00	; 0
    1a8a:	b0 e0       	ldi	r27, 0x00	; 0
    1a8c:	30 97       	sbiw	r30, 0x00	; 0
    1a8e:	39 f1       	breq	.+78     	; 0x1ade <malloc+0x70>
    1a90:	40 81       	ld	r20, Z
    1a92:	51 81       	ldd	r21, Z+1	; 0x01
    1a94:	48 17       	cp	r20, r24
    1a96:	59 07       	cpc	r21, r25
    1a98:	b8 f0       	brcs	.+46     	; 0x1ac8 <malloc+0x5a>
    1a9a:	48 17       	cp	r20, r24
    1a9c:	59 07       	cpc	r21, r25
    1a9e:	71 f4       	brne	.+28     	; 0x1abc <malloc+0x4e>
    1aa0:	82 81       	ldd	r24, Z+2	; 0x02
    1aa2:	93 81       	ldd	r25, Z+3	; 0x03
    1aa4:	10 97       	sbiw	r26, 0x00	; 0
    1aa6:	29 f0       	breq	.+10     	; 0x1ab2 <malloc+0x44>
    1aa8:	13 96       	adiw	r26, 0x03	; 3
    1aaa:	9c 93       	st	X, r25
    1aac:	8e 93       	st	-X, r24
    1aae:	12 97       	sbiw	r26, 0x02	; 2
    1ab0:	2c c0       	rjmp	.+88     	; 0x1b0a <malloc+0x9c>
    1ab2:	90 93 3f 02 	sts	0x023F, r25
    1ab6:	80 93 3e 02 	sts	0x023E, r24
    1aba:	27 c0       	rjmp	.+78     	; 0x1b0a <malloc+0x9c>
    1abc:	21 15       	cp	r18, r1
    1abe:	31 05       	cpc	r19, r1
    1ac0:	31 f0       	breq	.+12     	; 0x1ace <malloc+0x60>
    1ac2:	42 17       	cp	r20, r18
    1ac4:	53 07       	cpc	r21, r19
    1ac6:	18 f0       	brcs	.+6      	; 0x1ace <malloc+0x60>
    1ac8:	a9 01       	movw	r20, r18
    1aca:	db 01       	movw	r26, r22
    1acc:	01 c0       	rjmp	.+2      	; 0x1ad0 <malloc+0x62>
    1ace:	ef 01       	movw	r28, r30
    1ad0:	9a 01       	movw	r18, r20
    1ad2:	bd 01       	movw	r22, r26
    1ad4:	df 01       	movw	r26, r30
    1ad6:	02 80       	ldd	r0, Z+2	; 0x02
    1ad8:	f3 81       	ldd	r31, Z+3	; 0x03
    1ada:	e0 2d       	mov	r30, r0
    1adc:	d7 cf       	rjmp	.-82     	; 0x1a8c <malloc+0x1e>
    1ade:	21 15       	cp	r18, r1
    1ae0:	31 05       	cpc	r19, r1
    1ae2:	f9 f0       	breq	.+62     	; 0x1b22 <malloc+0xb4>
    1ae4:	28 1b       	sub	r18, r24
    1ae6:	39 0b       	sbc	r19, r25
    1ae8:	24 30       	cpi	r18, 0x04	; 4
    1aea:	31 05       	cpc	r19, r1
    1aec:	80 f4       	brcc	.+32     	; 0x1b0e <malloc+0xa0>
    1aee:	8a 81       	ldd	r24, Y+2	; 0x02
    1af0:	9b 81       	ldd	r25, Y+3	; 0x03
    1af2:	61 15       	cp	r22, r1
    1af4:	71 05       	cpc	r23, r1
    1af6:	21 f0       	breq	.+8      	; 0x1b00 <malloc+0x92>
    1af8:	fb 01       	movw	r30, r22
    1afa:	93 83       	std	Z+3, r25	; 0x03
    1afc:	82 83       	std	Z+2, r24	; 0x02
    1afe:	04 c0       	rjmp	.+8      	; 0x1b08 <malloc+0x9a>
    1b00:	90 93 3f 02 	sts	0x023F, r25
    1b04:	80 93 3e 02 	sts	0x023E, r24
    1b08:	fe 01       	movw	r30, r28
    1b0a:	32 96       	adiw	r30, 0x02	; 2
    1b0c:	44 c0       	rjmp	.+136    	; 0x1b96 <malloc+0x128>
    1b0e:	fe 01       	movw	r30, r28
    1b10:	e2 0f       	add	r30, r18
    1b12:	f3 1f       	adc	r31, r19
    1b14:	81 93       	st	Z+, r24
    1b16:	91 93       	st	Z+, r25
    1b18:	22 50       	subi	r18, 0x02	; 2
    1b1a:	31 09       	sbc	r19, r1
    1b1c:	39 83       	std	Y+1, r19	; 0x01
    1b1e:	28 83       	st	Y, r18
    1b20:	3a c0       	rjmp	.+116    	; 0x1b96 <malloc+0x128>
    1b22:	20 91 3c 02 	lds	r18, 0x023C
    1b26:	30 91 3d 02 	lds	r19, 0x023D
    1b2a:	23 2b       	or	r18, r19
    1b2c:	41 f4       	brne	.+16     	; 0x1b3e <malloc+0xd0>
    1b2e:	20 91 02 01 	lds	r18, 0x0102
    1b32:	30 91 03 01 	lds	r19, 0x0103
    1b36:	30 93 3d 02 	sts	0x023D, r19
    1b3a:	20 93 3c 02 	sts	0x023C, r18
    1b3e:	20 91 00 01 	lds	r18, 0x0100
    1b42:	30 91 01 01 	lds	r19, 0x0101
    1b46:	21 15       	cp	r18, r1
    1b48:	31 05       	cpc	r19, r1
    1b4a:	41 f4       	brne	.+16     	; 0x1b5c <malloc+0xee>
    1b4c:	2d b7       	in	r18, 0x3d	; 61
    1b4e:	3e b7       	in	r19, 0x3e	; 62
    1b50:	40 91 04 01 	lds	r20, 0x0104
    1b54:	50 91 05 01 	lds	r21, 0x0105
    1b58:	24 1b       	sub	r18, r20
    1b5a:	35 0b       	sbc	r19, r21
    1b5c:	e0 91 3c 02 	lds	r30, 0x023C
    1b60:	f0 91 3d 02 	lds	r31, 0x023D
    1b64:	e2 17       	cp	r30, r18
    1b66:	f3 07       	cpc	r31, r19
    1b68:	a0 f4       	brcc	.+40     	; 0x1b92 <malloc+0x124>
    1b6a:	2e 1b       	sub	r18, r30
    1b6c:	3f 0b       	sbc	r19, r31
    1b6e:	28 17       	cp	r18, r24
    1b70:	39 07       	cpc	r19, r25
    1b72:	78 f0       	brcs	.+30     	; 0x1b92 <malloc+0x124>
    1b74:	ac 01       	movw	r20, r24
    1b76:	4e 5f       	subi	r20, 0xFE	; 254
    1b78:	5f 4f       	sbci	r21, 0xFF	; 255
    1b7a:	24 17       	cp	r18, r20
    1b7c:	35 07       	cpc	r19, r21
    1b7e:	48 f0       	brcs	.+18     	; 0x1b92 <malloc+0x124>
    1b80:	4e 0f       	add	r20, r30
    1b82:	5f 1f       	adc	r21, r31
    1b84:	50 93 3d 02 	sts	0x023D, r21
    1b88:	40 93 3c 02 	sts	0x023C, r20
    1b8c:	81 93       	st	Z+, r24
    1b8e:	91 93       	st	Z+, r25
    1b90:	02 c0       	rjmp	.+4      	; 0x1b96 <malloc+0x128>
    1b92:	e0 e0       	ldi	r30, 0x00	; 0
    1b94:	f0 e0       	ldi	r31, 0x00	; 0
    1b96:	cf 01       	movw	r24, r30
    1b98:	df 91       	pop	r29
    1b9a:	cf 91       	pop	r28
    1b9c:	08 95       	ret

00001b9e <free>:
    1b9e:	cf 93       	push	r28
    1ba0:	df 93       	push	r29
    1ba2:	00 97       	sbiw	r24, 0x00	; 0
    1ba4:	09 f4       	brne	.+2      	; 0x1ba8 <free+0xa>
    1ba6:	87 c0       	rjmp	.+270    	; 0x1cb6 <free+0x118>
    1ba8:	fc 01       	movw	r30, r24
    1baa:	32 97       	sbiw	r30, 0x02	; 2
    1bac:	13 82       	std	Z+3, r1	; 0x03
    1bae:	12 82       	std	Z+2, r1	; 0x02
    1bb0:	c0 91 3e 02 	lds	r28, 0x023E
    1bb4:	d0 91 3f 02 	lds	r29, 0x023F
    1bb8:	20 97       	sbiw	r28, 0x00	; 0
    1bba:	81 f4       	brne	.+32     	; 0x1bdc <free+0x3e>
    1bbc:	20 81       	ld	r18, Z
    1bbe:	31 81       	ldd	r19, Z+1	; 0x01
    1bc0:	28 0f       	add	r18, r24
    1bc2:	39 1f       	adc	r19, r25
    1bc4:	80 91 3c 02 	lds	r24, 0x023C
    1bc8:	90 91 3d 02 	lds	r25, 0x023D
    1bcc:	82 17       	cp	r24, r18
    1bce:	93 07       	cpc	r25, r19
    1bd0:	79 f5       	brne	.+94     	; 0x1c30 <free+0x92>
    1bd2:	f0 93 3d 02 	sts	0x023D, r31
    1bd6:	e0 93 3c 02 	sts	0x023C, r30
    1bda:	6d c0       	rjmp	.+218    	; 0x1cb6 <free+0x118>
    1bdc:	de 01       	movw	r26, r28
    1bde:	20 e0       	ldi	r18, 0x00	; 0
    1be0:	30 e0       	ldi	r19, 0x00	; 0
    1be2:	ae 17       	cp	r26, r30
    1be4:	bf 07       	cpc	r27, r31
    1be6:	50 f4       	brcc	.+20     	; 0x1bfc <free+0x5e>
    1be8:	12 96       	adiw	r26, 0x02	; 2
    1bea:	4d 91       	ld	r20, X+
    1bec:	5c 91       	ld	r21, X
    1bee:	13 97       	sbiw	r26, 0x03	; 3
    1bf0:	9d 01       	movw	r18, r26
    1bf2:	41 15       	cp	r20, r1
    1bf4:	51 05       	cpc	r21, r1
    1bf6:	09 f1       	breq	.+66     	; 0x1c3a <free+0x9c>
    1bf8:	da 01       	movw	r26, r20
    1bfa:	f3 cf       	rjmp	.-26     	; 0x1be2 <free+0x44>
    1bfc:	b3 83       	std	Z+3, r27	; 0x03
    1bfe:	a2 83       	std	Z+2, r26	; 0x02
    1c00:	40 81       	ld	r20, Z
    1c02:	51 81       	ldd	r21, Z+1	; 0x01
    1c04:	84 0f       	add	r24, r20
    1c06:	95 1f       	adc	r25, r21
    1c08:	8a 17       	cp	r24, r26
    1c0a:	9b 07       	cpc	r25, r27
    1c0c:	71 f4       	brne	.+28     	; 0x1c2a <free+0x8c>
    1c0e:	8d 91       	ld	r24, X+
    1c10:	9c 91       	ld	r25, X
    1c12:	11 97       	sbiw	r26, 0x01	; 1
    1c14:	84 0f       	add	r24, r20
    1c16:	95 1f       	adc	r25, r21
    1c18:	02 96       	adiw	r24, 0x02	; 2
    1c1a:	91 83       	std	Z+1, r25	; 0x01
    1c1c:	80 83       	st	Z, r24
    1c1e:	12 96       	adiw	r26, 0x02	; 2
    1c20:	8d 91       	ld	r24, X+
    1c22:	9c 91       	ld	r25, X
    1c24:	13 97       	sbiw	r26, 0x03	; 3
    1c26:	93 83       	std	Z+3, r25	; 0x03
    1c28:	82 83       	std	Z+2, r24	; 0x02
    1c2a:	21 15       	cp	r18, r1
    1c2c:	31 05       	cpc	r19, r1
    1c2e:	29 f4       	brne	.+10     	; 0x1c3a <free+0x9c>
    1c30:	f0 93 3f 02 	sts	0x023F, r31
    1c34:	e0 93 3e 02 	sts	0x023E, r30
    1c38:	3e c0       	rjmp	.+124    	; 0x1cb6 <free+0x118>
    1c3a:	d9 01       	movw	r26, r18
    1c3c:	13 96       	adiw	r26, 0x03	; 3
    1c3e:	fc 93       	st	X, r31
    1c40:	ee 93       	st	-X, r30
    1c42:	12 97       	sbiw	r26, 0x02	; 2
    1c44:	4d 91       	ld	r20, X+
    1c46:	5d 91       	ld	r21, X+
    1c48:	a4 0f       	add	r26, r20
    1c4a:	b5 1f       	adc	r27, r21
    1c4c:	ea 17       	cp	r30, r26
    1c4e:	fb 07       	cpc	r31, r27
    1c50:	79 f4       	brne	.+30     	; 0x1c70 <free+0xd2>
    1c52:	80 81       	ld	r24, Z
    1c54:	91 81       	ldd	r25, Z+1	; 0x01
    1c56:	84 0f       	add	r24, r20
    1c58:	95 1f       	adc	r25, r21
    1c5a:	02 96       	adiw	r24, 0x02	; 2
    1c5c:	d9 01       	movw	r26, r18
    1c5e:	11 96       	adiw	r26, 0x01	; 1
    1c60:	9c 93       	st	X, r25
    1c62:	8e 93       	st	-X, r24
    1c64:	82 81       	ldd	r24, Z+2	; 0x02
    1c66:	93 81       	ldd	r25, Z+3	; 0x03
    1c68:	13 96       	adiw	r26, 0x03	; 3
    1c6a:	9c 93       	st	X, r25
    1c6c:	8e 93       	st	-X, r24
    1c6e:	12 97       	sbiw	r26, 0x02	; 2
    1c70:	e0 e0       	ldi	r30, 0x00	; 0
    1c72:	f0 e0       	ldi	r31, 0x00	; 0
    1c74:	8a 81       	ldd	r24, Y+2	; 0x02
    1c76:	9b 81       	ldd	r25, Y+3	; 0x03
    1c78:	00 97       	sbiw	r24, 0x00	; 0
    1c7a:	19 f0       	breq	.+6      	; 0x1c82 <free+0xe4>
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	ec 01       	movw	r28, r24
    1c80:	f9 cf       	rjmp	.-14     	; 0x1c74 <free+0xd6>
    1c82:	ce 01       	movw	r24, r28
    1c84:	02 96       	adiw	r24, 0x02	; 2
    1c86:	28 81       	ld	r18, Y
    1c88:	39 81       	ldd	r19, Y+1	; 0x01
    1c8a:	82 0f       	add	r24, r18
    1c8c:	93 1f       	adc	r25, r19
    1c8e:	20 91 3c 02 	lds	r18, 0x023C
    1c92:	30 91 3d 02 	lds	r19, 0x023D
    1c96:	28 17       	cp	r18, r24
    1c98:	39 07       	cpc	r19, r25
    1c9a:	69 f4       	brne	.+26     	; 0x1cb6 <free+0x118>
    1c9c:	30 97       	sbiw	r30, 0x00	; 0
    1c9e:	29 f4       	brne	.+10     	; 0x1caa <free+0x10c>
    1ca0:	10 92 3f 02 	sts	0x023F, r1
    1ca4:	10 92 3e 02 	sts	0x023E, r1
    1ca8:	02 c0       	rjmp	.+4      	; 0x1cae <free+0x110>
    1caa:	13 82       	std	Z+3, r1	; 0x03
    1cac:	12 82       	std	Z+2, r1	; 0x02
    1cae:	d0 93 3d 02 	sts	0x023D, r29
    1cb2:	c0 93 3c 02 	sts	0x023C, r28
    1cb6:	df 91       	pop	r29
    1cb8:	cf 91       	pop	r28
    1cba:	08 95       	ret

00001cbc <strnlen_P>:
    1cbc:	fc 01       	movw	r30, r24
    1cbe:	05 90       	lpm	r0, Z+
    1cc0:	61 50       	subi	r22, 0x01	; 1
    1cc2:	70 40       	sbci	r23, 0x00	; 0
    1cc4:	01 10       	cpse	r0, r1
    1cc6:	d8 f7       	brcc	.-10     	; 0x1cbe <strnlen_P+0x2>
    1cc8:	80 95       	com	r24
    1cca:	90 95       	com	r25
    1ccc:	8e 0f       	add	r24, r30
    1cce:	9f 1f       	adc	r25, r31
    1cd0:	08 95       	ret

00001cd2 <memset>:
    1cd2:	dc 01       	movw	r26, r24
    1cd4:	01 c0       	rjmp	.+2      	; 0x1cd8 <memset+0x6>
    1cd6:	6d 93       	st	X+, r22
    1cd8:	41 50       	subi	r20, 0x01	; 1
    1cda:	50 40       	sbci	r21, 0x00	; 0
    1cdc:	e0 f7       	brcc	.-8      	; 0x1cd6 <memset+0x4>
    1cde:	08 95       	ret

00001ce0 <strnlen>:
    1ce0:	fc 01       	movw	r30, r24
    1ce2:	61 50       	subi	r22, 0x01	; 1
    1ce4:	70 40       	sbci	r23, 0x00	; 0
    1ce6:	01 90       	ld	r0, Z+
    1ce8:	01 10       	cpse	r0, r1
    1cea:	d8 f7       	brcc	.-10     	; 0x1ce2 <strnlen+0x2>
    1cec:	80 95       	com	r24
    1cee:	90 95       	com	r25
    1cf0:	8e 0f       	add	r24, r30
    1cf2:	9f 1f       	adc	r25, r31
    1cf4:	08 95       	ret

00001cf6 <fputc>:
    1cf6:	0f 93       	push	r16
    1cf8:	1f 93       	push	r17
    1cfa:	cf 93       	push	r28
    1cfc:	df 93       	push	r29
    1cfe:	18 2f       	mov	r17, r24
    1d00:	09 2f       	mov	r16, r25
    1d02:	eb 01       	movw	r28, r22
    1d04:	8b 81       	ldd	r24, Y+3	; 0x03
    1d06:	81 fd       	sbrc	r24, 1
    1d08:	03 c0       	rjmp	.+6      	; 0x1d10 <fputc+0x1a>
    1d0a:	8f ef       	ldi	r24, 0xFF	; 255
    1d0c:	9f ef       	ldi	r25, 0xFF	; 255
    1d0e:	20 c0       	rjmp	.+64     	; 0x1d50 <fputc+0x5a>
    1d10:	82 ff       	sbrs	r24, 2
    1d12:	10 c0       	rjmp	.+32     	; 0x1d34 <fputc+0x3e>
    1d14:	4e 81       	ldd	r20, Y+6	; 0x06
    1d16:	5f 81       	ldd	r21, Y+7	; 0x07
    1d18:	2c 81       	ldd	r18, Y+4	; 0x04
    1d1a:	3d 81       	ldd	r19, Y+5	; 0x05
    1d1c:	42 17       	cp	r20, r18
    1d1e:	53 07       	cpc	r21, r19
    1d20:	7c f4       	brge	.+30     	; 0x1d40 <fputc+0x4a>
    1d22:	e8 81       	ld	r30, Y
    1d24:	f9 81       	ldd	r31, Y+1	; 0x01
    1d26:	9f 01       	movw	r18, r30
    1d28:	2f 5f       	subi	r18, 0xFF	; 255
    1d2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d2c:	39 83       	std	Y+1, r19	; 0x01
    1d2e:	28 83       	st	Y, r18
    1d30:	10 83       	st	Z, r17
    1d32:	06 c0       	rjmp	.+12     	; 0x1d40 <fputc+0x4a>
    1d34:	e8 85       	ldd	r30, Y+8	; 0x08
    1d36:	f9 85       	ldd	r31, Y+9	; 0x09
    1d38:	81 2f       	mov	r24, r17
    1d3a:	09 95       	icall
    1d3c:	89 2b       	or	r24, r25
    1d3e:	29 f7       	brne	.-54     	; 0x1d0a <fputc+0x14>
    1d40:	2e 81       	ldd	r18, Y+6	; 0x06
    1d42:	3f 81       	ldd	r19, Y+7	; 0x07
    1d44:	2f 5f       	subi	r18, 0xFF	; 255
    1d46:	3f 4f       	sbci	r19, 0xFF	; 255
    1d48:	3f 83       	std	Y+7, r19	; 0x07
    1d4a:	2e 83       	std	Y+6, r18	; 0x06
    1d4c:	81 2f       	mov	r24, r17
    1d4e:	90 2f       	mov	r25, r16
    1d50:	df 91       	pop	r29
    1d52:	cf 91       	pop	r28
    1d54:	1f 91       	pop	r17
    1d56:	0f 91       	pop	r16
    1d58:	08 95       	ret

00001d5a <__ultoa_invert>:
    1d5a:	fa 01       	movw	r30, r20
    1d5c:	aa 27       	eor	r26, r26
    1d5e:	28 30       	cpi	r18, 0x08	; 8
    1d60:	51 f1       	breq	.+84     	; 0x1db6 <__ultoa_invert+0x5c>
    1d62:	20 31       	cpi	r18, 0x10	; 16
    1d64:	81 f1       	breq	.+96     	; 0x1dc6 <__ultoa_invert+0x6c>
    1d66:	e8 94       	clt
    1d68:	6f 93       	push	r22
    1d6a:	6e 7f       	andi	r22, 0xFE	; 254
    1d6c:	6e 5f       	subi	r22, 0xFE	; 254
    1d6e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d70:	8f 4f       	sbci	r24, 0xFF	; 255
    1d72:	9f 4f       	sbci	r25, 0xFF	; 255
    1d74:	af 4f       	sbci	r26, 0xFF	; 255
    1d76:	b1 e0       	ldi	r27, 0x01	; 1
    1d78:	3e d0       	rcall	.+124    	; 0x1df6 <__ultoa_invert+0x9c>
    1d7a:	b4 e0       	ldi	r27, 0x04	; 4
    1d7c:	3c d0       	rcall	.+120    	; 0x1df6 <__ultoa_invert+0x9c>
    1d7e:	67 0f       	add	r22, r23
    1d80:	78 1f       	adc	r23, r24
    1d82:	89 1f       	adc	r24, r25
    1d84:	9a 1f       	adc	r25, r26
    1d86:	a1 1d       	adc	r26, r1
    1d88:	68 0f       	add	r22, r24
    1d8a:	79 1f       	adc	r23, r25
    1d8c:	8a 1f       	adc	r24, r26
    1d8e:	91 1d       	adc	r25, r1
    1d90:	a1 1d       	adc	r26, r1
    1d92:	6a 0f       	add	r22, r26
    1d94:	71 1d       	adc	r23, r1
    1d96:	81 1d       	adc	r24, r1
    1d98:	91 1d       	adc	r25, r1
    1d9a:	a1 1d       	adc	r26, r1
    1d9c:	20 d0       	rcall	.+64     	; 0x1dde <__ultoa_invert+0x84>
    1d9e:	09 f4       	brne	.+2      	; 0x1da2 <__ultoa_invert+0x48>
    1da0:	68 94       	set
    1da2:	3f 91       	pop	r19
    1da4:	2a e0       	ldi	r18, 0x0A	; 10
    1da6:	26 9f       	mul	r18, r22
    1da8:	11 24       	eor	r1, r1
    1daa:	30 19       	sub	r19, r0
    1dac:	30 5d       	subi	r19, 0xD0	; 208
    1dae:	31 93       	st	Z+, r19
    1db0:	de f6       	brtc	.-74     	; 0x1d68 <__ultoa_invert+0xe>
    1db2:	cf 01       	movw	r24, r30
    1db4:	08 95       	ret
    1db6:	46 2f       	mov	r20, r22
    1db8:	47 70       	andi	r20, 0x07	; 7
    1dba:	40 5d       	subi	r20, 0xD0	; 208
    1dbc:	41 93       	st	Z+, r20
    1dbe:	b3 e0       	ldi	r27, 0x03	; 3
    1dc0:	0f d0       	rcall	.+30     	; 0x1de0 <__ultoa_invert+0x86>
    1dc2:	c9 f7       	brne	.-14     	; 0x1db6 <__ultoa_invert+0x5c>
    1dc4:	f6 cf       	rjmp	.-20     	; 0x1db2 <__ultoa_invert+0x58>
    1dc6:	46 2f       	mov	r20, r22
    1dc8:	4f 70       	andi	r20, 0x0F	; 15
    1dca:	40 5d       	subi	r20, 0xD0	; 208
    1dcc:	4a 33       	cpi	r20, 0x3A	; 58
    1dce:	18 f0       	brcs	.+6      	; 0x1dd6 <__ultoa_invert+0x7c>
    1dd0:	49 5d       	subi	r20, 0xD9	; 217
    1dd2:	31 fd       	sbrc	r19, 1
    1dd4:	40 52       	subi	r20, 0x20	; 32
    1dd6:	41 93       	st	Z+, r20
    1dd8:	02 d0       	rcall	.+4      	; 0x1dde <__ultoa_invert+0x84>
    1dda:	a9 f7       	brne	.-22     	; 0x1dc6 <__ultoa_invert+0x6c>
    1ddc:	ea cf       	rjmp	.-44     	; 0x1db2 <__ultoa_invert+0x58>
    1dde:	b4 e0       	ldi	r27, 0x04	; 4
    1de0:	a6 95       	lsr	r26
    1de2:	97 95       	ror	r25
    1de4:	87 95       	ror	r24
    1de6:	77 95       	ror	r23
    1de8:	67 95       	ror	r22
    1dea:	ba 95       	dec	r27
    1dec:	c9 f7       	brne	.-14     	; 0x1de0 <__ultoa_invert+0x86>
    1dee:	00 97       	sbiw	r24, 0x00	; 0
    1df0:	61 05       	cpc	r22, r1
    1df2:	71 05       	cpc	r23, r1
    1df4:	08 95       	ret
    1df6:	9b 01       	movw	r18, r22
    1df8:	ac 01       	movw	r20, r24
    1dfa:	0a 2e       	mov	r0, r26
    1dfc:	06 94       	lsr	r0
    1dfe:	57 95       	ror	r21
    1e00:	47 95       	ror	r20
    1e02:	37 95       	ror	r19
    1e04:	27 95       	ror	r18
    1e06:	ba 95       	dec	r27
    1e08:	c9 f7       	brne	.-14     	; 0x1dfc <__ultoa_invert+0xa2>
    1e0a:	62 0f       	add	r22, r18
    1e0c:	73 1f       	adc	r23, r19
    1e0e:	84 1f       	adc	r24, r20
    1e10:	95 1f       	adc	r25, r21
    1e12:	a0 1d       	adc	r26, r0
    1e14:	08 95       	ret

00001e16 <__prologue_saves__>:
    1e16:	2f 92       	push	r2
    1e18:	3f 92       	push	r3
    1e1a:	4f 92       	push	r4
    1e1c:	5f 92       	push	r5
    1e1e:	6f 92       	push	r6
    1e20:	7f 92       	push	r7
    1e22:	8f 92       	push	r8
    1e24:	9f 92       	push	r9
    1e26:	af 92       	push	r10
    1e28:	bf 92       	push	r11
    1e2a:	cf 92       	push	r12
    1e2c:	df 92       	push	r13
    1e2e:	ef 92       	push	r14
    1e30:	ff 92       	push	r15
    1e32:	0f 93       	push	r16
    1e34:	1f 93       	push	r17
    1e36:	cf 93       	push	r28
    1e38:	df 93       	push	r29
    1e3a:	cd b7       	in	r28, 0x3d	; 61
    1e3c:	de b7       	in	r29, 0x3e	; 62
    1e3e:	ca 1b       	sub	r28, r26
    1e40:	db 0b       	sbc	r29, r27
    1e42:	0f b6       	in	r0, 0x3f	; 63
    1e44:	f8 94       	cli
    1e46:	de bf       	out	0x3e, r29	; 62
    1e48:	0f be       	out	0x3f, r0	; 63
    1e4a:	cd bf       	out	0x3d, r28	; 61
    1e4c:	09 94       	ijmp

00001e4e <__epilogue_restores__>:
    1e4e:	2a 88       	ldd	r2, Y+18	; 0x12
    1e50:	39 88       	ldd	r3, Y+17	; 0x11
    1e52:	48 88       	ldd	r4, Y+16	; 0x10
    1e54:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e56:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e58:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e5a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e5c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e5e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e60:	b9 84       	ldd	r11, Y+9	; 0x09
    1e62:	c8 84       	ldd	r12, Y+8	; 0x08
    1e64:	df 80       	ldd	r13, Y+7	; 0x07
    1e66:	ee 80       	ldd	r14, Y+6	; 0x06
    1e68:	fd 80       	ldd	r15, Y+5	; 0x05
    1e6a:	0c 81       	ldd	r16, Y+4	; 0x04
    1e6c:	1b 81       	ldd	r17, Y+3	; 0x03
    1e6e:	aa 81       	ldd	r26, Y+2	; 0x02
    1e70:	b9 81       	ldd	r27, Y+1	; 0x01
    1e72:	ce 0f       	add	r28, r30
    1e74:	d1 1d       	adc	r29, r1
    1e76:	0f b6       	in	r0, 0x3f	; 63
    1e78:	f8 94       	cli
    1e7a:	de bf       	out	0x3e, r29	; 62
    1e7c:	0f be       	out	0x3f, r0	; 63
    1e7e:	cd bf       	out	0x3d, r28	; 61
    1e80:	ed 01       	movw	r28, r26
    1e82:	08 95       	ret

00001e84 <_exit>:
    1e84:	f8 94       	cli

00001e86 <__stop_program>:
    1e86:	ff cf       	rjmp	.-2      	; 0x1e86 <__stop_program>
