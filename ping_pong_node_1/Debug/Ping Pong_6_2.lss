
Ping Pong_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000120  00800100  00001f58  00001fec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800220  00800220  0000210c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000210c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000310  00000000  00000000  00002168  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003afe  00000000  00000000  00002478  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000012ab  00000000  00000000  00005f76  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002c00  00000000  00000000  00007221  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000007c8  00000000  00000000  00009e24  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000096ae  00000000  00000000  0000a5ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001b25  00000000  00000000  00013c9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002e0  00000000  00000000  000157bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00001628  00000000  00000000  00015a9f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5f c3       	rjmp	.+1726   	; 0x6c0 <__ctors_end>
       2:	00 00       	nop
       4:	79 c3       	rjmp	.+1778   	; 0x6f8 <__bad_interrupt>
       6:	00 00       	nop
       8:	77 c3       	rjmp	.+1774   	; 0x6f8 <__bad_interrupt>
       a:	00 00       	nop
       c:	75 c3       	rjmp	.+1770   	; 0x6f8 <__bad_interrupt>
       e:	00 00       	nop
      10:	73 c3       	rjmp	.+1766   	; 0x6f8 <__bad_interrupt>
      12:	00 00       	nop
      14:	71 c3       	rjmp	.+1762   	; 0x6f8 <__bad_interrupt>
      16:	00 00       	nop
      18:	6f c3       	rjmp	.+1758   	; 0x6f8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6d c3       	rjmp	.+1754   	; 0x6f8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6b c3       	rjmp	.+1750   	; 0x6f8 <__bad_interrupt>
      22:	00 00       	nop
      24:	69 c3       	rjmp	.+1746   	; 0x6f8 <__bad_interrupt>
      26:	00 00       	nop
      28:	67 c3       	rjmp	.+1742   	; 0x6f8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	65 c3       	rjmp	.+1738   	; 0x6f8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	63 c3       	rjmp	.+1734   	; 0x6f8 <__bad_interrupt>
      32:	00 00       	nop
      34:	61 c3       	rjmp	.+1730   	; 0x6f8 <__bad_interrupt>
      36:	00 00       	nop
      38:	5f c3       	rjmp	.+1726   	; 0x6f8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5d c3       	rjmp	.+1722   	; 0x6f8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5b c3       	rjmp	.+1718   	; 0x6f8 <__bad_interrupt>
      42:	00 00       	nop
      44:	59 c3       	rjmp	.+1714   	; 0x6f8 <__bad_interrupt>
      46:	00 00       	nop
      48:	57 c3       	rjmp	.+1710   	; 0x6f8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	55 c3       	rjmp	.+1706   	; 0x6f8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	53 c3       	rjmp	.+1702   	; 0x6f8 <__bad_interrupt>
      52:	00 00       	nop
      54:	51 c3       	rjmp	.+1698   	; 0x6f8 <__bad_interrupt>
      56:	00 00       	nop
      58:	4f c3       	rjmp	.+1694   	; 0x6f8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4d c3       	rjmp	.+1690   	; 0x6f8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4b c3       	rjmp	.+1686   	; 0x6f8 <__bad_interrupt>
      62:	00 00       	nop
      64:	49 c3       	rjmp	.+1682   	; 0x6f8 <__bad_interrupt>
      66:	00 00       	nop
      68:	47 c3       	rjmp	.+1678   	; 0x6f8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	45 c3       	rjmp	.+1674   	; 0x6f8 <__bad_interrupt>
	...

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <font5>:
     1ec:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     1fc:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     20c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     21c:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     22c:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     23c:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     24c:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     25c:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     26c:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     27c:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     28c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     29c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     2ac:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     2bc:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     2cc:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     2dc:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     2ec:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     2fc:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     30c:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     31c:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     32c:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     33c:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     34c:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     35c:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     36c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     37c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     38c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     39c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     3ac:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     3bc:	00 00 41 36 08 00 02 01 03 02 01                    ..A6.......

000003c7 <font8>:
	...
     3cf:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     3df:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     3ef:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     3ff:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     40f:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     41f:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     42f:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     43f:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     44f:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     45f:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     46f:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     47f:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     48f:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     49f:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     4af:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     4bf:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     4cf:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     4df:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     4ef:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     4ff:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     50f:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     51f:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     52f:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     53f:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     54f:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     55f:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     56f:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     57f:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     58f:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     59f:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     5af:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     5bf:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     5cf:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     5df:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     5ef:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     5ff:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     60f:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     61f:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     62f:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     63f:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     64f:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     65f:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     66f:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     67f:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     68f:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     69f:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     6af:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
	...

000006c0 <__ctors_end>:
     6c0:	11 24       	eor	r1, r1
     6c2:	1f be       	out	0x3f, r1	; 63
     6c4:	cf ef       	ldi	r28, 0xFF	; 255
     6c6:	d4 e0       	ldi	r29, 0x04	; 4
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	cd bf       	out	0x3d, r28	; 61

000006cc <__do_copy_data>:
     6cc:	12 e0       	ldi	r17, 0x02	; 2
     6ce:	a0 e0       	ldi	r26, 0x00	; 0
     6d0:	b1 e0       	ldi	r27, 0x01	; 1
     6d2:	e8 e5       	ldi	r30, 0x58	; 88
     6d4:	ff e1       	ldi	r31, 0x1F	; 31
     6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__do_copy_data+0x10>
     6d8:	05 90       	lpm	r0, Z+
     6da:	0d 92       	st	X+, r0
     6dc:	a0 32       	cpi	r26, 0x20	; 32
     6de:	b1 07       	cpc	r27, r17
     6e0:	d9 f7       	brne	.-10     	; 0x6d8 <__do_copy_data+0xc>

000006e2 <__do_clear_bss>:
     6e2:	22 e0       	ldi	r18, 0x02	; 2
     6e4:	a0 e2       	ldi	r26, 0x20	; 32
     6e6:	b2 e0       	ldi	r27, 0x02	; 2
     6e8:	01 c0       	rjmp	.+2      	; 0x6ec <.do_clear_bss_start>

000006ea <.do_clear_bss_loop>:
     6ea:	1d 92       	st	X+, r1

000006ec <.do_clear_bss_start>:
     6ec:	a8 33       	cpi	r26, 0x38	; 56
     6ee:	b2 07       	cpc	r27, r18
     6f0:	e1 f7       	brne	.-8      	; 0x6ea <.do_clear_bss_loop>
     6f2:	48 d7       	rcall	.+3728   	; 0x1584 <main>
     6f4:	0c 94 aa 0f 	jmp	0x1f54	; 0x1f54 <_exit>

000006f8 <__bad_interrupt>:
     6f8:	83 cc       	rjmp	.-1786   	; 0x0 <__vectors>

000006fa <adc_read>:
	else{
		ans = joy_adc_direction;
	}
	//printf("answer % d \n \r \n \r", ans);
	return ans;*/
}
     6fa:	9f ef       	ldi	r25, 0xFF	; 255
     6fc:	98 0f       	add	r25, r24
     6fe:	94 30       	cpi	r25, 0x04	; 4
     700:	58 f4       	brcc	.+22     	; 0x718 <adc_read+0x1e>
     702:	8d 5f       	subi	r24, 0xFD	; 253
     704:	80 93 00 14 	sts	0x1400, r24
     708:	85 e3       	ldi	r24, 0x35	; 53
     70a:	8a 95       	dec	r24
     70c:	f1 f7       	brne	.-4      	; 0x70a <adc_read+0x10>
     70e:	00 00       	nop
     710:	80 91 00 14 	lds	r24, 0x1400
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	08 95       	ret
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	08 95       	ret

0000071e <adc_joystick_direction>:
     71e:	84 e0       	ldi	r24, 0x04	; 4
     720:	80 93 00 14 	sts	0x1400, r24
     724:	85 e3       	ldi	r24, 0x35	; 53
     726:	8a 95       	dec	r24
     728:	f1 f7       	brne	.-4      	; 0x726 <adc_joystick_direction+0x8>
     72a:	00 00       	nop
     72c:	e0 e0       	ldi	r30, 0x00	; 0
     72e:	f4 e1       	ldi	r31, 0x14	; 20
     730:	40 81       	ld	r20, Z
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	4c 58       	subi	r20, 0x8C	; 140
     736:	51 09       	sbc	r21, r1
     738:	85 e0       	ldi	r24, 0x05	; 5
     73a:	80 83       	st	Z, r24
     73c:	85 e3       	ldi	r24, 0x35	; 53
     73e:	8a 95       	dec	r24
     740:	f1 f7       	brne	.-4      	; 0x73e <adc_joystick_direction+0x20>
     742:	00 00       	nop
     744:	20 91 00 14 	lds	r18, 0x1400
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	2c 58       	subi	r18, 0x8C	; 140
     74c:	31 09       	sbc	r19, r1
     74e:	ba 01       	movw	r22, r20
     750:	55 23       	and	r21, r21
     752:	24 f4       	brge	.+8      	; 0x75c <adc_joystick_direction+0x3e>
     754:	66 27       	eor	r22, r22
     756:	77 27       	eor	r23, r23
     758:	64 1b       	sub	r22, r20
     75a:	75 0b       	sbc	r23, r21
     75c:	c9 01       	movw	r24, r18
     75e:	33 23       	and	r19, r19
     760:	24 f4       	brge	.+8      	; 0x76a <adc_joystick_direction+0x4c>
     762:	88 27       	eor	r24, r24
     764:	99 27       	eor	r25, r25
     766:	82 1b       	sub	r24, r18
     768:	93 0b       	sbc	r25, r19
     76a:	68 17       	cp	r22, r24
     76c:	79 07       	cpc	r23, r25
     76e:	44 f4       	brge	.+16     	; 0x780 <adc_joystick_direction+0x62>
     770:	33 23       	and	r19, r19
     772:	8c f0       	brlt	.+34     	; 0x796 <adc_joystick_direction+0x78>
     774:	12 16       	cp	r1, r18
     776:	13 06       	cpc	r1, r19
     778:	8c f0       	brlt	.+34     	; 0x79c <adc_joystick_direction+0x7e>
     77a:	84 e0       	ldi	r24, 0x04	; 4
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	19 c0       	rjmp	.+50     	; 0x7b2 <adc_joystick_direction+0x94>
     780:	86 17       	cp	r24, r22
     782:	97 07       	cpc	r25, r23
     784:	74 f4       	brge	.+28     	; 0x7a2 <adc_joystick_direction+0x84>
     786:	55 23       	and	r21, r21
     788:	7c f0       	brlt	.+30     	; 0x7a8 <adc_joystick_direction+0x8a>
     78a:	14 16       	cp	r1, r20
     78c:	15 06       	cpc	r1, r21
     78e:	7c f0       	brlt	.+30     	; 0x7ae <adc_joystick_direction+0x90>
     790:	84 e0       	ldi	r24, 0x04	; 4
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e c0       	rjmp	.+28     	; 0x7b2 <adc_joystick_direction+0x94>
     796:	83 e0       	ldi	r24, 0x03	; 3
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	0b c0       	rjmp	.+22     	; 0x7b2 <adc_joystick_direction+0x94>
     79c:	82 e0       	ldi	r24, 0x02	; 2
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	08 c0       	rjmp	.+16     	; 0x7b2 <adc_joystick_direction+0x94>
     7a2:	84 e0       	ldi	r24, 0x04	; 4
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	05 c0       	rjmp	.+10     	; 0x7b2 <adc_joystick_direction+0x94>
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <adc_joystick_direction+0x94>
     7ae:	81 e0       	ldi	r24, 0x01	; 1
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	43 5e       	subi	r20, 0xE3	; 227
     7b4:	5f 4f       	sbci	r21, 0xFF	; 255
     7b6:	4b 33       	cpi	r20, 0x3B	; 59
     7b8:	51 05       	cpc	r21, r1
     7ba:	38 f4       	brcc	.+14     	; 0x7ca <adc_joystick_direction+0xac>
     7bc:	23 5e       	subi	r18, 0xE3	; 227
     7be:	3f 4f       	sbci	r19, 0xFF	; 255
     7c0:	2b 33       	cpi	r18, 0x3B	; 59
     7c2:	31 05       	cpc	r19, r1
     7c4:	10 f4       	brcc	.+4      	; 0x7ca <adc_joystick_direction+0xac>
     7c6:	84 e0       	ldi	r24, 0x04	; 4
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	08 95       	ret

000007cc <get_joy_adc_direction>:

int get_joy_adc_direction(){
	return xmem_read(JOY_DIR_ADDRESS);
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	98 e1       	ldi	r25, 0x18	; 24
     7d0:	ca d6       	rcall	.+3476   	; 0x1566 <xmem_read>
}
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	08 95       	ret

000007d6 <set_joy_adc_direction>:

void set_joy_adc_direction(int joy_adc_direction){
	xmem_write(joy_adc_direction, JOY_DIR_ADDRESS);
     7d6:	60 e0       	ldi	r22, 0x00	; 0
     7d8:	78 e1       	ldi	r23, 0x18	; 24
     7da:	c1 c6       	rjmp	.+3458   	; 0x155e <xmem_write>
     7dc:	08 95       	ret

000007de <adc_init>:




void adc_init(){
	set_joy_adc_direction(NEUTRAL);
     7de:	84 e0       	ldi	r24, 0x04	; 4
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	f9 cf       	rjmp	.-14     	; 0x7d6 <set_joy_adc_direction>
     7e4:	08 95       	ret

000007e6 <adc_joy_pos_changed>:
		ans = NEUTRAL;
	}
	return ans;
}

int adc_joy_pos_changed(){
     7e6:	cf 93       	push	r28
     7e8:	df 93       	push	r29
	int ans = 0;
	int joy_adc_direction = get_joy_adc_direction();
     7ea:	f0 df       	rcall	.-32     	; 0x7cc <get_joy_adc_direction>
     7ec:	ec 01       	movw	r28, r24
	int previous_joy_adc_direction = joy_adc_direction;
	joy_adc_direction = adc_joystick_direction();
     7ee:	97 df       	rcall	.-210    	; 0x71e <adc_joystick_direction>

	
	if(previous_joy_adc_direction == joy_adc_direction){
     7f0:	c8 17       	cp	r28, r24
     7f2:	d9 07       	cpc	r29, r25
     7f4:	19 f4       	brne	.+6      	; 0x7fc <adc_joy_pos_changed+0x16>
		ans = 5;
     7f6:	d5 e0       	ldi	r29, 0x05	; 5
     7f8:	c0 e0       	ldi	r28, 0x00	; 0
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <adc_joy_pos_changed+0x1a>
	}
	else{
		ans = joy_adc_direction;
     7fc:	d8 2f       	mov	r29, r24
     7fe:	c9 2f       	mov	r28, r25
	}
	set_joy_adc_direction(joy_adc_direction);
     800:	ea df       	rcall	.-44     	; 0x7d6 <set_joy_adc_direction>
	return ans;
}
     802:	8d 2f       	mov	r24, r29
     804:	9c 2f       	mov	r25, r28
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	08 95       	ret

0000080c <can_init>:


// "Main" for using can:

void can_init()
{
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
     810:	cd b7       	in	r28, 0x3d	; 61
     812:	de b7       	in	r29, 0x3e	; 62
     814:	2a 97       	sbiw	r28, 0x0a	; 10
     816:	0f b6       	in	r0, 0x3f	; 63
     818:	f8 94       	cli
     81a:	de bf       	out	0x3e, r29	; 62
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	cd bf       	out	0x3d, r28	; 61
	mcp2515_init(); //Init
     820:	0f d3       	rcall	.+1566   	; 0xe40 <mcp2515_init>
	
	
	mcp2515_write(MCP_RXB0CTRL, MCP_RXBnCTRL_NOFILTER_bm, 1); // Set to no filter
     822:	41 e0       	ldi	r20, 0x01	; 1
     824:	60 e6       	ldi	r22, 0x60	; 96
     826:	80 e6       	ldi	r24, 0x60	; 96
     828:	2c d3       	rcall	.+1624   	; 0xe82 <mcp2515_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     82a:	8f ef       	ldi	r24, 0xFF	; 255
     82c:	9f e8       	ldi	r25, 0x8F	; 143
     82e:	01 97       	sbiw	r24, 0x01	; 1
     830:	f1 f7       	brne	.-4      	; 0x82e <can_init+0x22>
     832:	00 c0       	rjmp	.+0      	; 0x834 <can_init+0x28>
     834:	00 00       	nop
	_delay_ms(30);
	
	mcp2515_bit_modify(MCP_CANINTE, 0b00000001, 1); // Enable Interrupt when message is received
     836:	41 e0       	ldi	r20, 0x01	; 1
     838:	61 e0       	ldi	r22, 0x01	; 1
     83a:	8b e2       	ldi	r24, 0x2B	; 43
     83c:	49 d3       	rcall	.+1682   	; 0xed0 <mcp2515_bit_modify>
     83e:	8f ef       	ldi	r24, 0xFF	; 255
     840:	9f e8       	ldi	r25, 0x8F	; 143
     842:	01 97       	sbiw	r24, 0x01	; 1
     844:	f1 f7       	brne	.-4      	; 0x842 <can_init+0x36>
     846:	00 c0       	rjmp	.+0      	; 0x848 <can_init+0x3c>
     848:	00 00       	nop
	_delay_ms(30);

	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, MODE_NORMAL);//0b11100000 instead of MODE_MASK
     84a:	40 e0       	ldi	r20, 0x00	; 0
     84c:	60 ee       	ldi	r22, 0xE0	; 224
     84e:	8f e0       	ldi	r24, 0x0F	; 15
     850:	3f d3       	rcall	.+1662   	; 0xed0 <mcp2515_bit_modify>
     852:	8f ef       	ldi	r24, 0xFF	; 255
     854:	9f e8       	ldi	r25, 0x8F	; 143
     856:	01 97       	sbiw	r24, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <can_init+0x4a>
     85a:	00 c0       	rjmp	.+0      	; 0x85c <can_init+0x50>
     85c:	00 00       	nop
	_delay_ms(30);
	
	uint8_t mode_bits;
	uint8_t data[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANSTAT, data, MAX_CAN_LENGTH);
     85e:	4a e0       	ldi	r20, 0x0A	; 10
     860:	be 01       	movw	r22, r28
     862:	6f 5f       	subi	r22, 0xFF	; 255
     864:	7f 4f       	sbci	r23, 0xFF	; 255
     866:	8e e0       	ldi	r24, 0x0E	; 14
     868:	ee d2       	rcall	.+1500   	; 0xe46 <mcp2515_read>
	uint8_t val = data[0];
	
	mode_bits = (val & MODE_MASK);
     86a:	89 81       	ldd	r24, Y+1	; 0x01
     86c:	80 7e       	andi	r24, 0xE0	; 224
	if(mode_bits != MODE_NORMAL){
     86e:	99 f0       	breq	.+38     	; 0x896 <can_init+0x8a>
		
		printf("MCP2515 is NOT in correct mode after reset! Its config bits are %x\n", mode_bits);
     870:	1f 92       	push	r1
     872:	8f 93       	push	r24
     874:	8a e0       	ldi	r24, 0x0A	; 10
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	9f 93       	push	r25
     87a:	8f 93       	push	r24
     87c:	53 d7       	rcall	.+3750   	; 0x1724 <printf>
		printf("\n\r");
     87e:	8f e6       	ldi	r24, 0x6F	; 111
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	9f 93       	push	r25
     884:	8f 93       	push	r24
     886:	4e d7       	rcall	.+3740   	; 0x1724 <printf>
     888:	0f 90       	pop	r0
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
     88e:	0f 90       	pop	r0
     890:	0f 90       	pop	r0
     892:	0f 90       	pop	r0
     894:	07 c0       	rjmp	.+14     	; 0x8a4 <can_init+0x98>
	}
	else
	printf("in mode normal \n\r");
     896:	8e e4       	ldi	r24, 0x4E	; 78
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	9f 93       	push	r25
     89c:	8f 93       	push	r24
     89e:	42 d7       	rcall	.+3716   	; 0x1724 <printf>
     8a0:	0f 90       	pop	r0
     8a2:	0f 90       	pop	r0
	
}
     8a4:	2a 96       	adiw	r28, 0x0a	; 10
     8a6:	0f b6       	in	r0, 0x3f	; 63
     8a8:	f8 94       	cli
     8aa:	de bf       	out	0x3e, r29	; 62
     8ac:	0f be       	out	0x3f, r0	; 63
     8ae:	cd bf       	out	0x3d, r28	; 61
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	08 95       	ret

000008b6 <can_message_send>:

void can_message_send(struct can_message* msg)
{
     8b6:	1f 93       	push	r17
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	ec 01       	movw	r28, r24

	mcp2515_write(MCP_TXB0DLC, msg->length, 1);
     8be:	41 e0       	ldi	r20, 0x01	; 1
     8c0:	6a 81       	ldd	r22, Y+2	; 0x02
     8c2:	85 e3       	ldi	r24, 0x35	; 53
     8c4:	de d2       	rcall	.+1468   	; 0xe82 <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDH, msg->id, 1);
     8c6:	41 e0       	ldi	r20, 0x01	; 1
     8c8:	68 81       	ld	r22, Y
     8ca:	81 e3       	ldi	r24, 0x31	; 49
     8cc:	da d2       	rcall	.+1460   	; 0xe82 <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, msg->id, 1);
     8ce:	41 e0       	ldi	r20, 0x01	; 1
     8d0:	68 81       	ld	r22, Y
     8d2:	82 e3       	ldi	r24, 0x32	; 50
     8d4:	d6 d2       	rcall	.+1452   	; 0xe82 <mcp2515_write>
	
	uint8_t i;
	for (i = 0; i < msg->length; i++)
     8d6:	8a 81       	ldd	r24, Y+2	; 0x02
     8d8:	88 23       	and	r24, r24
     8da:	61 f0       	breq	.+24     	; 0x8f4 <can_message_send+0x3e>
     8dc:	10 e0       	ldi	r17, 0x00	; 0
	{
		mcp2515_write(MCP_TXB0D(0), msg->data[i], 1);
     8de:	fe 01       	movw	r30, r28
     8e0:	e1 0f       	add	r30, r17
     8e2:	f1 1d       	adc	r31, r1
     8e4:	41 e0       	ldi	r20, 0x01	; 1
     8e6:	63 81       	ldd	r22, Z+3	; 0x03
     8e8:	86 e3       	ldi	r24, 0x36	; 54
     8ea:	cb d2       	rcall	.+1430   	; 0xe82 <mcp2515_write>
	mcp2515_write(MCP_TXB0DLC, msg->length, 1);
	mcp2515_write(MCP_TXB0SIDH, msg->id, 1);
	mcp2515_write(MCP_TXB0SIDL, msg->id, 1);
	
	uint8_t i;
	for (i = 0; i < msg->length; i++)
     8ec:	1f 5f       	subi	r17, 0xFF	; 255
     8ee:	8a 81       	ldd	r24, Y+2	; 0x02
     8f0:	18 17       	cp	r17, r24
     8f2:	a8 f3       	brcs	.-22     	; 0x8de <can_message_send+0x28>
	{
		mcp2515_write(MCP_TXB0D(0), msg->data[i], 1);
	}
	mcp2515_request(MCP_RTS_TX0);
     8f4:	81 e8       	ldi	r24, 0x81	; 129
     8f6:	dc d2       	rcall	.+1464   	; 0xeb0 <mcp2515_request>
	//Do something...
}
     8f8:	df 91       	pop	r29
     8fa:	cf 91       	pop	r28
     8fc:	1f 91       	pop	r17
     8fe:	08 95       	ret

00000900 <can_data_receive>:
{
	
}
*/
void can_data_receive(struct can_message* msg, int buffer)
{
     900:	ff 92       	push	r15
     902:	0f 93       	push	r16
     904:	1f 93       	push	r17
     906:	cf 93       	push	r28
     908:	df 93       	push	r29
     90a:	cd b7       	in	r28, 0x3d	; 61
     90c:	de b7       	in	r29, 0x3e	; 62
     90e:	2a 97       	sbiw	r28, 0x0a	; 10
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	f8 94       	cli
     914:	de bf       	out	0x3e, r29	; 62
     916:	0f be       	out	0x3f, r0	; 63
     918:	cd bf       	out	0x3d, r28	; 61
     91a:	8c 01       	movw	r16, r24
     91c:	f6 2e       	mov	r15, r22
	uint8_t result[MAX_CAN_LENGTH];
	
	
	mcp2515_read(MCP_CANINTF, result, 1);
     91e:	41 e0       	ldi	r20, 0x01	; 1
     920:	be 01       	movw	r22, r28
     922:	6f 5f       	subi	r22, 0xFF	; 255
     924:	7f 4f       	sbci	r23, 0xFF	; 255
     926:	8c e2       	ldi	r24, 0x2C	; 44
     928:	8e d2       	rcall	.+1308   	; 0xe46 <mcp2515_read>

	if (!result[0]){
     92a:	89 81       	ldd	r24, Y+1	; 0x01
     92c:	81 11       	cpse	r24, r1
     92e:	0b c0       	rjmp	.+22     	; 0x946 <can_data_receive+0x46>
		printf("CANINTF out %d \n\r", result[0] & 0b1);
     930:	1f 92       	push	r1
     932:	1f 92       	push	r1
     934:	20 e6       	ldi	r18, 0x60	; 96
     936:	31 e0       	ldi	r19, 0x01	; 1
     938:	3f 93       	push	r19
     93a:	2f 93       	push	r18
     93c:	f3 d6       	rcall	.+3558   	; 0x1724 <printf>
     93e:	0f 90       	pop	r0
     940:	0f 90       	pop	r0
     942:	0f 90       	pop	r0
     944:	0f 90       	pop	r0
	}
	
	uint8_t i;
	
	mcp2515_read(MCP_RXB0DLC + buffer, result, 1);
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	be 01       	movw	r22, r28
     94a:	6f 5f       	subi	r22, 0xFF	; 255
     94c:	7f 4f       	sbci	r23, 0xFF	; 255
     94e:	85 e6       	ldi	r24, 0x65	; 101
     950:	8f 0d       	add	r24, r15
     952:	79 d2       	rcall	.+1266   	; 0xe46 <mcp2515_read>
	msg->length = result[0];
     954:	89 81       	ldd	r24, Y+1	; 0x01
     956:	f8 01       	movw	r30, r16
     958:	82 83       	std	Z+2, r24	; 0x02
	
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
     95a:	41 e0       	ldi	r20, 0x01	; 1
     95c:	be 01       	movw	r22, r28
     95e:	6f 5f       	subi	r22, 0xFF	; 255
     960:	7f 4f       	sbci	r23, 0xFF	; 255
     962:	81 e6       	ldi	r24, 0x61	; 97
     964:	8f 0d       	add	r24, r15
     966:	6f d2       	rcall	.+1246   	; 0xe46 <mcp2515_read>
	msg->id = result[0];
     968:	29 81       	ldd	r18, Y+1	; 0x01
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	f8 01       	movw	r30, r16
     96e:	31 83       	std	Z+1, r19	; 0x01
     970:	20 83       	st	Z, r18
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
     972:	42 81       	ldd	r20, Z+2	; 0x02
     974:	be 01       	movw	r22, r28
     976:	6f 5f       	subi	r22, 0xFF	; 255
     978:	7f 4f       	sbci	r23, 0xFF	; 255
     97a:	86 e6       	ldi	r24, 0x66	; 102
     97c:	8f 0d       	add	r24, r15
     97e:	63 d2       	rcall	.+1222   	; 0xe46 <mcp2515_read>
	
	for (i = 0; i < msg->length; i++)
     980:	f8 01       	movw	r30, r16
     982:	92 81       	ldd	r25, Z+2	; 0x02
     984:	99 23       	and	r25, r25
     986:	61 f0       	breq	.+24     	; 0x9a0 <can_data_receive+0xa0>
     988:	9e 01       	movw	r18, r28
     98a:	2f 5f       	subi	r18, 0xFF	; 255
     98c:	3f 4f       	sbci	r19, 0xFF	; 255
     98e:	d8 01       	movw	r26, r16
     990:	13 96       	adiw	r26, 0x03	; 3
     992:	f9 01       	movw	r30, r18
	{
		msg->data[i] = result[i];
     994:	81 91       	ld	r24, Z+
     996:	8d 93       	st	X+, r24
     998:	8e 2f       	mov	r24, r30
     99a:	82 1b       	sub	r24, r18
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
	msg->id = result[0];
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
	
	for (i = 0; i < msg->length; i++)
     99c:	89 17       	cp	r24, r25
     99e:	d0 f3       	brcs	.-12     	; 0x994 <can_data_receive+0x94>
	{
		msg->data[i] = result[i];
	}

	
	mcp2515_bit_modify(MCP_CANINTF, 0x01, 0x00);
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	61 e0       	ldi	r22, 0x01	; 1
     9a4:	8c e2       	ldi	r24, 0x2C	; 44
     9a6:	94 d2       	rcall	.+1320   	; 0xed0 <mcp2515_bit_modify>
}
     9a8:	2a 96       	adiw	r28, 0x0a	; 10
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	de bf       	out	0x3e, r29	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	cd bf       	out	0x3d, r28	; 61
     9b4:	df 91       	pop	r29
     9b6:	cf 91       	pop	r28
     9b8:	1f 91       	pop	r17
     9ba:	0f 91       	pop	r16
     9bc:	ff 90       	pop	r15
     9be:	08 95       	ret

000009c0 <can_get_message>:



int can_get_message(struct can_message* message)
{
     9c0:	0f 93       	push	r16
     9c2:	1f 93       	push	r17
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	cd b7       	in	r28, 0x3d	; 61
     9ca:	de b7       	in	r29, 0x3e	; 62
     9cc:	2a 97       	sbiw	r28, 0x0a	; 10
     9ce:	0f b6       	in	r0, 0x3f	; 63
     9d0:	f8 94       	cli
     9d2:	de bf       	out	0x3e, r29	; 62
     9d4:	0f be       	out	0x3f, r0	; 63
     9d6:	cd bf       	out	0x3d, r28	; 61
     9d8:	8c 01       	movw	r16, r24
	uint8_t result[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANINTF, result, 1);
     9da:	41 e0       	ldi	r20, 0x01	; 1
     9dc:	be 01       	movw	r22, r28
     9de:	6f 5f       	subi	r22, 0xFF	; 255
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	8c e2       	ldi	r24, 0x2C	; 44
     9e4:	30 d2       	rcall	.+1120   	; 0xe46 <mcp2515_read>
	
	if ((result[0] & 0x01) == 0x01)
     9e6:	89 81       	ldd	r24, Y+1	; 0x01
     9e8:	80 ff       	sbrs	r24, 0
     9ea:	0b c0       	rjmp	.+22     	; 0xa02 <can_get_message+0x42>
	{
		can_data_receive(message,0);
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	c8 01       	movw	r24, r16
     9f2:	86 df       	rcall	.-244    	; 0x900 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     9f4:	40 e0       	ldi	r20, 0x00	; 0
     9f6:	61 e0       	ldi	r22, 0x01	; 1
     9f8:	8c e2       	ldi	r24, 0x2C	; 44
     9fa:	6a d2       	rcall	.+1236   	; 0xed0 <mcp2515_bit_modify>
		return 1;
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0f c0       	rjmp	.+30     	; 0xa20 <can_get_message+0x60>
	}
	else if ((result[0] & 0x02) == 0x02)
     a02:	81 ff       	sbrs	r24, 1
     a04:	0b c0       	rjmp	.+22     	; 0xa1c <can_get_message+0x5c>
	{
		can_data_receive(message,1);
     a06:	61 e0       	ldi	r22, 0x01	; 1
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	c8 01       	movw	r24, r16
     a0c:	79 df       	rcall	.-270    	; 0x900 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	62 e0       	ldi	r22, 0x02	; 2
     a12:	8c e2       	ldi	r24, 0x2C	; 44
     a14:	5d d2       	rcall	.+1210   	; 0xed0 <mcp2515_bit_modify>
		return 1;
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	02 c0       	rjmp	.+4      	; 0xa20 <can_get_message+0x60>
	}
	else
	{
		return 0;
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     a20:	2a 96       	adiw	r28, 0x0a	; 10
     a22:	0f b6       	in	r0, 0x3f	; 63
     a24:	f8 94       	cli
     a26:	de bf       	out	0x3e, r29	; 62
     a28:	0f be       	out	0x3f, r0	; 63
     a2a:	cd bf       	out	0x3d, r28	; 61
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	1f 91       	pop	r17
     a32:	0f 91       	pop	r16
     a34:	08 95       	ret

00000a36 <com_navigate_display>:
		oled_reset_lives();
		com_reset_score();
	}
}

void com_gain_menu(){
     a36:	0f 93       	push	r16
     a38:	1f 93       	push	r17
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	cd b7       	in	r28, 0x3d	; 61
     a40:	de b7       	in	r29, 0x3e	; 62
     a42:	2d 97       	sbiw	r28, 0x0d	; 13
     a44:	0f b6       	in	r0, 0x3f	; 63
     a46:	f8 94       	cli
     a48:	de bf       	out	0x3e, r29	; 62
     a4a:	0f be       	out	0x3f, r0	; 63
     a4c:	cd bf       	out	0x3d, r28	; 61
     a4e:	86 b3       	in	r24, 0x16	; 22
     a50:	ca de       	rcall	.-620    	; 0x7e6 <adc_joy_pos_changed>
     a52:	9c 01       	movw	r18, r24
     a54:	22 50       	subi	r18, 0x02	; 2
     a56:	31 09       	sbc	r19, r1
     a58:	22 30       	cpi	r18, 0x02	; 2
     a5a:	31 05       	cpc	r19, r1
     a5c:	f8 f4       	brcc	.+62     	; 0xa9c <com_navigate_display+0x66>
     a5e:	60 91 26 02 	lds	r22, 0x0226
     a62:	70 91 27 02 	lds	r23, 0x0227
     a66:	d3 d3       	rcall	.+1958   	; 0x120e <oled_actualise_joy_pos>
     a68:	80 91 26 02 	lds	r24, 0x0226
     a6c:	90 91 27 02 	lds	r25, 0x0227
     a70:	81 30       	cpi	r24, 0x01	; 1
     a72:	91 05       	cpc	r25, r1
     a74:	39 f0       	breq	.+14     	; 0xa84 <com_navigate_display+0x4e>
     a76:	82 30       	cpi	r24, 0x02	; 2
     a78:	91 05       	cpc	r25, r1
     a7a:	31 f0       	breq	.+12     	; 0xa88 <com_navigate_display+0x52>
     a7c:	89 2b       	or	r24, r25
     a7e:	29 f4       	brne	.+10     	; 0xa8a <com_navigate_display+0x54>
     a80:	53 d3       	rcall	.+1702   	; 0x1128 <oled_display_activity>
     a82:	03 c0       	rjmp	.+6      	; 0xa8a <com_navigate_display+0x54>
     a84:	3a d4       	rcall	.+2164   	; 0x12fa <oled_navigate_gain_menu>
     a86:	01 c0       	rjmp	.+2      	; 0xa8a <com_navigate_display+0x54>
     a88:	02 d4       	rcall	.+2052   	; 0x128e <oled_print_high_score>
     a8a:	2f e7       	ldi	r18, 0x7F	; 127
     a8c:	88 e3       	ldi	r24, 0x38	; 56
     a8e:	91 e0       	ldi	r25, 0x01	; 1
     a90:	21 50       	subi	r18, 0x01	; 1
     a92:	80 40       	sbci	r24, 0x00	; 0
     a94:	90 40       	sbci	r25, 0x00	; 0
     a96:	e1 f7       	brne	.-8      	; 0xa90 <com_navigate_display+0x5a>
     a98:	00 c0       	rjmp	.+0      	; 0xa9a <com_navigate_display+0x64>
     a9a:	00 00       	nop
     a9c:	86 b3       	in	r24, 0x16	; 22
     a9e:	82 fb       	bst	r24, 2
     aa0:	00 27       	eor	r16, r16
     aa2:	00 f9       	bld	r16, 0
     aa4:	10 e0       	ldi	r17, 0x00	; 0
     aa6:	80 91 06 01 	lds	r24, 0x0106
     aaa:	90 91 07 01 	lds	r25, 0x0107
     aae:	00 97       	sbiw	r24, 0x00	; 0
     ab0:	89 f4       	brne	.+34     	; 0xad4 <com_navigate_display+0x9e>
     ab2:	01 30       	cpi	r16, 0x01	; 1
     ab4:	11 05       	cpc	r17, r1
     ab6:	09 f0       	breq	.+2      	; 0xaba <com_navigate_display+0x84>
     ab8:	8a c0       	rjmp	.+276    	; 0xbce <com_navigate_display+0x198>
     aba:	81 e0       	ldi	r24, 0x01	; 1
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	90 93 07 01 	sts	0x0107, r25
     ac2:	80 93 06 01 	sts	0x0106, r24
     ac6:	83 ed       	ldi	r24, 0xD3	; 211
     ac8:	90 e3       	ldi	r25, 0x30	; 48
     aca:	01 97       	sbiw	r24, 0x01	; 1
     acc:	f1 f7       	brne	.-4      	; 0xaca <com_navigate_display+0x94>
     ace:	00 c0       	rjmp	.+0      	; 0xad0 <com_navigate_display+0x9a>
     ad0:	00 00       	nop
     ad2:	7d c0       	rjmp	.+250    	; 0xbce <com_navigate_display+0x198>
     ad4:	01 97       	sbiw	r24, 0x01	; 1
     ad6:	09 f0       	breq	.+2      	; 0xada <com_navigate_display+0xa4>
     ad8:	7a c0       	rjmp	.+244    	; 0xbce <com_navigate_display+0x198>
     ada:	01 2b       	or	r16, r17
     adc:	09 f0       	breq	.+2      	; 0xae0 <com_navigate_display+0xaa>
     ade:	77 c0       	rjmp	.+238    	; 0xbce <com_navigate_display+0x198>
     ae0:	10 92 07 01 	sts	0x0107, r1
     ae4:	10 92 06 01 	sts	0x0106, r1
     ae8:	83 ed       	ldi	r24, 0xD3	; 211
     aea:	90 e3       	ldi	r25, 0x30	; 48
     aec:	01 97       	sbiw	r24, 0x01	; 1
     aee:	f1 f7       	brne	.-4      	; 0xaec <com_navigate_display+0xb6>
     af0:	00 c0       	rjmp	.+0      	; 0xaf2 <com_navigate_display+0xbc>
     af2:	00 00       	nop
     af4:	80 91 26 02 	lds	r24, 0x0226
     af8:	90 91 27 02 	lds	r25, 0x0227
     afc:	89 2b       	or	r24, r25
     afe:	61 f5       	brne	.+88     	; 0xb58 <com_navigate_display+0x122>
     b00:	0e d3       	rcall	.+1564   	; 0x111e <oled_get_joy_pos>
     b02:	89 2b       	or	r24, r25
     b04:	39 f4       	brne	.+14     	; 0xb14 <com_navigate_display+0xde>
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	90 93 21 02 	sts	0x0221, r25
     b0e:	80 93 20 02 	sts	0x0220, r24
     b12:	5d c0       	rjmp	.+186    	; 0xbce <com_navigate_display+0x198>
     b14:	80 91 26 02 	lds	r24, 0x0226
     b18:	90 91 27 02 	lds	r25, 0x0227
     b1c:	89 2b       	or	r24, r25
     b1e:	e1 f4       	brne	.+56     	; 0xb58 <com_navigate_display+0x122>
     b20:	fe d2       	rcall	.+1532   	; 0x111e <oled_get_joy_pos>
     b22:	01 97       	sbiw	r24, 0x01	; 1
     b24:	41 f4       	brne	.+16     	; 0xb36 <com_navigate_display+0x100>
     b26:	81 e0       	ldi	r24, 0x01	; 1
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	90 93 27 02 	sts	0x0227, r25
     b2e:	80 93 26 02 	sts	0x0226, r24
     b32:	e3 d3       	rcall	.+1990   	; 0x12fa <oled_navigate_gain_menu>
     b34:	4c c0       	rjmp	.+152    	; 0xbce <com_navigate_display+0x198>
     b36:	80 91 26 02 	lds	r24, 0x0226
     b3a:	90 91 27 02 	lds	r25, 0x0227
     b3e:	89 2b       	or	r24, r25
     b40:	59 f4       	brne	.+22     	; 0xb58 <com_navigate_display+0x122>
     b42:	ed d2       	rcall	.+1498   	; 0x111e <oled_get_joy_pos>
     b44:	02 97       	sbiw	r24, 0x02	; 2
     b46:	41 f4       	brne	.+16     	; 0xb58 <com_navigate_display+0x122>
     b48:	82 e0       	ldi	r24, 0x02	; 2
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	90 93 27 02 	sts	0x0227, r25
     b50:	80 93 26 02 	sts	0x0226, r24
     b54:	9c d3       	rcall	.+1848   	; 0x128e <oled_print_high_score>
     b56:	3b c0       	rjmp	.+118    	; 0xbce <com_navigate_display+0x198>
     b58:	80 91 26 02 	lds	r24, 0x0226
     b5c:	90 91 27 02 	lds	r25, 0x0227
     b60:	82 30       	cpi	r24, 0x02	; 2
     b62:	91 05       	cpc	r25, r1
     b64:	19 f4       	brne	.+6      	; 0xb6c <com_navigate_display+0x136>
     b66:	92 d4       	rcall	.+2340   	; 0x148c <oled_reset_hs>
     b68:	92 d3       	rcall	.+1828   	; 0x128e <oled_print_high_score>
     b6a:	31 c0       	rjmp	.+98     	; 0xbce <com_navigate_display+0x198>
     b6c:	01 97       	sbiw	r24, 0x01	; 1
     b6e:	79 f5       	brne	.+94     	; 0xbce <com_navigate_display+0x198>
     b70:	d6 d2       	rcall	.+1452   	; 0x111e <oled_get_joy_pos>
     b72:	24 e0       	ldi	r18, 0x04	; 4
     b74:	30 e0       	ldi	r19, 0x00	; 0
     b76:	3a 83       	std	Y+2, r19	; 0x02
     b78:	29 83       	std	Y+1, r18	; 0x01
     b7a:	21 e0       	ldi	r18, 0x01	; 1
     b7c:	2b 83       	std	Y+3, r18	; 0x03
     b7e:	1c 82       	std	Y+4, r1	; 0x04
     b80:	81 30       	cpi	r24, 0x01	; 1
     b82:	91 05       	cpc	r25, r1
     b84:	71 f0       	breq	.+28     	; 0xba2 <com_navigate_display+0x16c>
     b86:	82 30       	cpi	r24, 0x02	; 2
     b88:	91 05       	cpc	r25, r1
     b8a:	a9 f0       	breq	.+42     	; 0xbb6 <com_navigate_display+0x180>
     b8c:	89 2b       	or	r24, r25
     b8e:	e1 f4       	brne	.+56     	; 0xbc8 <com_navigate_display+0x192>
     b90:	82 e7       	ldi	r24, 0x72	; 114
     b92:	91 e0       	ldi	r25, 0x01	; 1
     b94:	9f 93       	push	r25
     b96:	8f 93       	push	r24
     b98:	c5 d5       	rcall	.+2954   	; 0x1724 <printf>
     b9a:	1c 82       	std	Y+4, r1	; 0x04
     b9c:	0f 90       	pop	r0
     b9e:	0f 90       	pop	r0
     ba0:	13 c0       	rjmp	.+38     	; 0xbc8 <com_navigate_display+0x192>
     ba2:	8a e7       	ldi	r24, 0x7A	; 122
     ba4:	91 e0       	ldi	r25, 0x01	; 1
     ba6:	9f 93       	push	r25
     ba8:	8f 93       	push	r24
     baa:	bc d5       	rcall	.+2936   	; 0x1724 <printf>
     bac:	81 e0       	ldi	r24, 0x01	; 1
     bae:	8c 83       	std	Y+4, r24	; 0x04
     bb0:	0f 90       	pop	r0
     bb2:	0f 90       	pop	r0
     bb4:	09 c0       	rjmp	.+18     	; 0xbc8 <com_navigate_display+0x192>
     bb6:	84 e8       	ldi	r24, 0x84	; 132
     bb8:	91 e0       	ldi	r25, 0x01	; 1
     bba:	9f 93       	push	r25
     bbc:	8f 93       	push	r24
     bbe:	b2 d5       	rcall	.+2916   	; 0x1724 <printf>
     bc0:	82 e0       	ldi	r24, 0x02	; 2
     bc2:	8c 83       	std	Y+4, r24	; 0x04
     bc4:	0f 90       	pop	r0
     bc6:	0f 90       	pop	r0
     bc8:	ce 01       	movw	r24, r28
     bca:	01 96       	adiw	r24, 0x01	; 1
     bcc:	74 de       	rcall	.-792    	; 0x8b6 <can_message_send>
     bce:	b1 9b       	sbis	0x16, 1	; 22
     bd0:	6d c0       	rjmp	.+218    	; 0xcac <com_navigate_display+0x276>
     bd2:	80 91 26 02 	lds	r24, 0x0226
     bd6:	90 91 27 02 	lds	r25, 0x0227
     bda:	89 2b       	or	r24, r25
     bdc:	61 f5       	brne	.+88     	; 0xc36 <com_navigate_display+0x200>
     bde:	9f d2       	rcall	.+1342   	; 0x111e <oled_get_joy_pos>
     be0:	89 2b       	or	r24, r25
     be2:	39 f4       	brne	.+14     	; 0xbf2 <com_navigate_display+0x1bc>
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	90 93 21 02 	sts	0x0221, r25
     bec:	80 93 20 02 	sts	0x0220, r24
     bf0:	5d c0       	rjmp	.+186    	; 0xcac <com_navigate_display+0x276>
     bf2:	80 91 26 02 	lds	r24, 0x0226
     bf6:	90 91 27 02 	lds	r25, 0x0227
     bfa:	89 2b       	or	r24, r25
     bfc:	e1 f4       	brne	.+56     	; 0xc36 <com_navigate_display+0x200>
     bfe:	8f d2       	rcall	.+1310   	; 0x111e <oled_get_joy_pos>
     c00:	01 97       	sbiw	r24, 0x01	; 1
     c02:	41 f4       	brne	.+16     	; 0xc14 <com_navigate_display+0x1de>
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	90 93 27 02 	sts	0x0227, r25
     c0c:	80 93 26 02 	sts	0x0226, r24
     c10:	74 d3       	rcall	.+1768   	; 0x12fa <oled_navigate_gain_menu>
     c12:	4c c0       	rjmp	.+152    	; 0xcac <com_navigate_display+0x276>
     c14:	80 91 26 02 	lds	r24, 0x0226
     c18:	90 91 27 02 	lds	r25, 0x0227
     c1c:	89 2b       	or	r24, r25
     c1e:	59 f4       	brne	.+22     	; 0xc36 <com_navigate_display+0x200>
     c20:	7e d2       	rcall	.+1276   	; 0x111e <oled_get_joy_pos>
     c22:	02 97       	sbiw	r24, 0x02	; 2
     c24:	41 f4       	brne	.+16     	; 0xc36 <com_navigate_display+0x200>
     c26:	82 e0       	ldi	r24, 0x02	; 2
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	90 93 27 02 	sts	0x0227, r25
     c2e:	80 93 26 02 	sts	0x0226, r24
     c32:	2d d3       	rcall	.+1626   	; 0x128e <oled_print_high_score>
     c34:	3b c0       	rjmp	.+118    	; 0xcac <com_navigate_display+0x276>
     c36:	80 91 26 02 	lds	r24, 0x0226
     c3a:	90 91 27 02 	lds	r25, 0x0227
     c3e:	82 30       	cpi	r24, 0x02	; 2
     c40:	91 05       	cpc	r25, r1
     c42:	19 f4       	brne	.+6      	; 0xc4a <com_navigate_display+0x214>
     c44:	23 d4       	rcall	.+2118   	; 0x148c <oled_reset_hs>
     c46:	23 d3       	rcall	.+1606   	; 0x128e <oled_print_high_score>
     c48:	31 c0       	rjmp	.+98     	; 0xcac <com_navigate_display+0x276>
     c4a:	01 97       	sbiw	r24, 0x01	; 1
     c4c:	79 f5       	brne	.+94     	; 0xcac <com_navigate_display+0x276>
     c4e:	67 d2       	rcall	.+1230   	; 0x111e <oled_get_joy_pos>
     c50:	24 e0       	ldi	r18, 0x04	; 4
     c52:	30 e0       	ldi	r19, 0x00	; 0
     c54:	3a 83       	std	Y+2, r19	; 0x02
     c56:	29 83       	std	Y+1, r18	; 0x01
     c58:	21 e0       	ldi	r18, 0x01	; 1
     c5a:	2b 83       	std	Y+3, r18	; 0x03
     c5c:	1c 82       	std	Y+4, r1	; 0x04
     c5e:	81 30       	cpi	r24, 0x01	; 1
     c60:	91 05       	cpc	r25, r1
     c62:	71 f0       	breq	.+28     	; 0xc80 <com_navigate_display+0x24a>
     c64:	82 30       	cpi	r24, 0x02	; 2
     c66:	91 05       	cpc	r25, r1
     c68:	a9 f0       	breq	.+42     	; 0xc94 <com_navigate_display+0x25e>
     c6a:	89 2b       	or	r24, r25
     c6c:	e1 f4       	brne	.+56     	; 0xca6 <com_navigate_display+0x270>
     c6e:	82 e7       	ldi	r24, 0x72	; 114
     c70:	91 e0       	ldi	r25, 0x01	; 1
     c72:	9f 93       	push	r25
     c74:	8f 93       	push	r24
     c76:	56 d5       	rcall	.+2732   	; 0x1724 <printf>
     c78:	1c 82       	std	Y+4, r1	; 0x04
     c7a:	0f 90       	pop	r0
     c7c:	0f 90       	pop	r0
     c7e:	13 c0       	rjmp	.+38     	; 0xca6 <com_navigate_display+0x270>
     c80:	8a e7       	ldi	r24, 0x7A	; 122
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	9f 93       	push	r25
     c86:	8f 93       	push	r24
     c88:	4d d5       	rcall	.+2714   	; 0x1724 <printf>
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	8c 83       	std	Y+4, r24	; 0x04
     c8e:	0f 90       	pop	r0
     c90:	0f 90       	pop	r0
     c92:	09 c0       	rjmp	.+18     	; 0xca6 <com_navigate_display+0x270>
     c94:	84 e8       	ldi	r24, 0x84	; 132
     c96:	91 e0       	ldi	r25, 0x01	; 1
     c98:	9f 93       	push	r25
     c9a:	8f 93       	push	r24
     c9c:	43 d5       	rcall	.+2694   	; 0x1724 <printf>
     c9e:	82 e0       	ldi	r24, 0x02	; 2
     ca0:	8c 83       	std	Y+4, r24	; 0x04
     ca2:	0f 90       	pop	r0
     ca4:	0f 90       	pop	r0
     ca6:	ce 01       	movw	r24, r28
     ca8:	01 96       	adiw	r24, 0x01	; 1
     caa:	05 de       	rcall	.-1014   	; 0x8b6 <can_message_send>
     cac:	b0 9b       	sbis	0x16, 0	; 22
     cae:	0c c0       	rjmp	.+24     	; 0xcc8 <com_navigate_display+0x292>
     cb0:	80 91 26 02 	lds	r24, 0x0226
     cb4:	90 91 27 02 	lds	r25, 0x0227
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	02 97       	sbiw	r24, 0x02	; 2
     cbc:	28 f4       	brcc	.+10     	; 0xcc8 <com_navigate_display+0x292>
     cbe:	10 92 27 02 	sts	0x0227, r1
     cc2:	10 92 26 02 	sts	0x0226, r1
     cc6:	30 d2       	rcall	.+1120   	; 0x1128 <oled_display_activity>
     cc8:	2d 96       	adiw	r28, 0x0d	; 13
     cca:	0f b6       	in	r0, 0x3f	; 63
     ccc:	f8 94       	cli
     cce:	de bf       	out	0x3e, r29	; 62
     cd0:	0f be       	out	0x3f, r0	; 63
     cd2:	cd bf       	out	0x3d, r28	; 61
     cd4:	df 91       	pop	r29
     cd6:	cf 91       	pop	r28
     cd8:	1f 91       	pop	r17
     cda:	0f 91       	pop	r16
     cdc:	08 95       	ret

00000cde <com_play_game>:
     cde:	0f 93       	push	r16
     ce0:	1f 93       	push	r17
     ce2:	cf 93       	push	r28
     ce4:	df 93       	push	r29
     ce6:	cd b7       	in	r28, 0x3d	; 61
     ce8:	de b7       	in	r29, 0x3e	; 62
     cea:	a7 97       	sbiw	r28, 0x27	; 39
     cec:	0f b6       	in	r0, 0x3f	; 63
     cee:	f8 94       	cli
     cf0:	de bf       	out	0x3e, r29	; 62
     cf2:	0f be       	out	0x3f, r0	; 63
     cf4:	cd bf       	out	0x3d, r28	; 61
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	9a 83       	std	Y+2, r25	; 0x02
     cfc:	89 83       	std	Y+1, r24	; 0x01
     cfe:	21 e0       	ldi	r18, 0x01	; 1
     d00:	2b 83       	std	Y+3, r18	; 0x03
     d02:	82 e0       	ldi	r24, 0x02	; 2
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	9f 87       	std	Y+15, r25	; 0x0f
     d08:	8e 87       	std	Y+14, r24	; 0x0e
     d0a:	28 8b       	std	Y+16, r18	; 0x10
     d0c:	83 e0       	ldi	r24, 0x03	; 3
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	9c 8f       	std	Y+28, r25	; 0x1c
     d12:	8b 8f       	std	Y+27, r24	; 0x1b
     d14:	2d 8f       	std	Y+29, r18	; 0x1d
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	f0 dc       	rcall	.-1568   	; 0x6fa <adc_read>
     d1a:	8c 83       	std	Y+4, r24	; 0x04
     d1c:	ce 01       	movw	r24, r28
     d1e:	01 96       	adiw	r24, 0x01	; 1
     d20:	ca dd       	rcall	.-1132   	; 0x8b6 <can_message_send>
     d22:	84 e0       	ldi	r24, 0x04	; 4
     d24:	ea dc       	rcall	.-1580   	; 0x6fa <adc_read>
     d26:	89 8b       	std	Y+17, r24	; 0x11
     d28:	ce 01       	movw	r24, r28
     d2a:	0e 96       	adiw	r24, 0x0e	; 14
     d2c:	c4 dd       	rcall	.-1144   	; 0x8b6 <can_message_send>
     d2e:	86 b3       	in	r24, 0x16	; 22
     d30:	82 fb       	bst	r24, 2
     d32:	00 27       	eor	r16, r16
     d34:	00 f9       	bld	r16, 0
     d36:	10 e0       	ldi	r17, 0x00	; 0
     d38:	80 91 06 01 	lds	r24, 0x0106
     d3c:	90 91 07 01 	lds	r25, 0x0107
     d40:	00 97       	sbiw	r24, 0x00	; 0
     d42:	81 f4       	brne	.+32     	; 0xd64 <com_play_game+0x86>
     d44:	01 30       	cpi	r16, 0x01	; 1
     d46:	11 05       	cpc	r17, r1
     d48:	01 f5       	brne	.+64     	; 0xd8a <com_play_game+0xac>
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	90 93 07 01 	sts	0x0107, r25
     d52:	80 93 06 01 	sts	0x0106, r24
     d56:	83 ed       	ldi	r24, 0xD3	; 211
     d58:	90 e3       	ldi	r25, 0x30	; 48
     d5a:	01 97       	sbiw	r24, 0x01	; 1
     d5c:	f1 f7       	brne	.-4      	; 0xd5a <com_play_game+0x7c>
     d5e:	00 c0       	rjmp	.+0      	; 0xd60 <com_play_game+0x82>
     d60:	00 00       	nop
     d62:	13 c0       	rjmp	.+38     	; 0xd8a <com_play_game+0xac>
     d64:	01 97       	sbiw	r24, 0x01	; 1
     d66:	89 f4       	brne	.+34     	; 0xd8a <com_play_game+0xac>
     d68:	01 2b       	or	r16, r17
     d6a:	79 f4       	brne	.+30     	; 0xd8a <com_play_game+0xac>
     d6c:	81 e0       	ldi	r24, 0x01	; 1
     d6e:	8e 8f       	std	Y+30, r24	; 0x1e
     d70:	ce 01       	movw	r24, r28
     d72:	4b 96       	adiw	r24, 0x1b	; 27
     d74:	a0 dd       	rcall	.-1216   	; 0x8b6 <can_message_send>
     d76:	10 92 07 01 	sts	0x0107, r1
     d7a:	10 92 06 01 	sts	0x0106, r1
     d7e:	83 ed       	ldi	r24, 0xD3	; 211
     d80:	90 e3       	ldi	r25, 0x30	; 48
     d82:	01 97       	sbiw	r24, 0x01	; 1
     d84:	f1 f7       	brne	.-4      	; 0xd82 <com_play_game+0xa4>
     d86:	00 c0       	rjmp	.+0      	; 0xd88 <com_play_game+0xaa>
     d88:	00 00       	nop
     d8a:	ea d2       	rcall	.+1492   	; 0x1360 <oled_in_game_mode>
     d8c:	57 d3       	rcall	.+1710   	; 0x143c <oled_get_lives>
     d8e:	89 2b       	or	r24, r25
     d90:	11 f0       	breq	.+4      	; 0xd96 <com_play_game+0xb8>
     d92:	b0 9b       	sbis	0x16, 0	; 22
     d94:	16 c0       	rjmp	.+44     	; 0xdc2 <com_play_game+0xe4>
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	90 93 23 02 	sts	0x0223, r25
     d9e:	80 93 22 02 	sts	0x0222, r24
     da2:	7d d3       	rcall	.+1786   	; 0x149e <oled_game_over>
     da4:	9f eb       	ldi	r25, 0xBF	; 191
     da6:	27 e2       	ldi	r18, 0x27	; 39
     da8:	89 e0       	ldi	r24, 0x09	; 9
     daa:	91 50       	subi	r25, 0x01	; 1
     dac:	20 40       	sbci	r18, 0x00	; 0
     dae:	80 40       	sbci	r24, 0x00	; 0
     db0:	e1 f7       	brne	.-8      	; 0xdaa <com_play_game+0xcc>
     db2:	00 c0       	rjmp	.+0      	; 0xdb4 <com_play_game+0xd6>
     db4:	00 00       	nop
     db6:	b8 d1       	rcall	.+880    	; 0x1128 <oled_display_activity>
     db8:	50 d3       	rcall	.+1696   	; 0x145a <oled_reset_lives>
     dba:	10 92 25 02 	sts	0x0225, r1
     dbe:	10 92 24 02 	sts	0x0224, r1
     dc2:	a7 96       	adiw	r28, 0x27	; 39
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	f8 94       	cli
     dc8:	de bf       	out	0x3e, r29	; 62
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	cd bf       	out	0x3d, r28	; 61
     dce:	df 91       	pop	r29
     dd0:	cf 91       	pop	r28
     dd2:	1f 91       	pop	r17
     dd4:	0f 91       	pop	r16
     dd6:	08 95       	ret

00000dd8 <com_reset_score>:
	
}

void com_reset_score(){
	score = 0;
     dd8:	10 92 25 02 	sts	0x0225, r1
     ddc:	10 92 24 02 	sts	0x0224, r1
     de0:	08 95       	ret

00000de2 <com_get_score>:
}

int com_get_score(){
	return score;
}
     de2:	80 91 24 02 	lds	r24, 0x0224
     de6:	90 91 25 02 	lds	r25, 0x0225
     dea:	08 95       	ret

00000dec <com_set_score>:

void com_set_score(int score_node2){
	score = score_node2;
     dec:	90 93 25 02 	sts	0x0225, r25
     df0:	80 93 24 02 	sts	0x0224, r24
     df4:	08 95       	ret

00000df6 <com_get_back>:
}

int com_get_back(){
	return back;
}
     df6:	80 91 22 02 	lds	r24, 0x0222
     dfa:	90 91 23 02 	lds	r25, 0x0223
     dfe:	08 95       	ret

00000e00 <com_set_back>:

void com_set_back(){
	back = 0;
     e00:	10 92 23 02 	sts	0x0223, r1
     e04:	10 92 22 02 	sts	0x0222, r1
     e08:	08 95       	ret

00000e0a <com_get_start_game>:
}

int com_get_start_game(){
	return start_game;
}
     e0a:	80 91 20 02 	lds	r24, 0x0220
     e0e:	90 91 21 02 	lds	r25, 0x0221
     e12:	08 95       	ret

00000e14 <com_set_start_game>:

void com_set_start_game(){
	start_game = 0;
     e14:	10 92 21 02 	sts	0x0221, r1
     e18:	10 92 20 02 	sts	0x0220, r1
     e1c:	08 95       	ret

00000e1e <mcp2515_reset>:
	 spi_init();
	 mcp2515_reset();
}

void mcp2515_reset()
{
     e1e:	cf 93       	push	r28
     e20:	df 93       	push	r29
     e22:	1f 92       	push	r1
     e24:	cd b7       	in	r28, 0x3d	; 61
     e26:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     e28:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);	
	
	uint8_t reset[] = {MCP_RESET};
     e2a:	80 ec       	ldi	r24, 0xC0	; 192
     e2c:	89 83       	std	Y+1, r24	; 0x01
	spi_write(reset, 1);
     e2e:	61 e0       	ldi	r22, 0x01	; 1
     e30:	ce 01       	movw	r24, r28
     e32:	01 96       	adiw	r24, 0x01	; 1
     e34:	66 d3       	rcall	.+1740   	; 0x1502 <spi_write>
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
     e36:	c4 9a       	sbi	0x18, 4	; 24
}
     e38:	0f 90       	pop	r0
     e3a:	df 91       	pop	r29
     e3c:	cf 91       	pop	r28
     e3e:	08 95       	ret

00000e40 <mcp2515_init>:
#include "MCP2515_driver.h"


void mcp2515_init() 
{
	 spi_init();
     e40:	35 d3       	rcall	.+1642   	; 0x14ac <spi_init>
	 mcp2515_reset();
     e42:	ed cf       	rjmp	.-38     	; 0xe1e <mcp2515_reset>
     e44:	08 95       	ret

00000e46 <mcp2515_read>:
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
}

void mcp2515_read(uint8_t address, uint8_t result[MAX_CAN_LENGTH], uint8_t data_size)
{	
     e46:	ff 92       	push	r15
     e48:	0f 93       	push	r16
     e4a:	1f 93       	push	r17
     e4c:	cf 93       	push	r28
     e4e:	df 93       	push	r29
     e50:	00 d0       	rcall	.+0      	; 0xe52 <mcp2515_read+0xc>
     e52:	cd b7       	in	r28, 0x3d	; 61
     e54:	de b7       	in	r29, 0x3e	; 62
     e56:	8b 01       	movw	r16, r22
     e58:	f4 2e       	mov	r15, r20
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     e5a:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);
	
	uint8_t write[] = {MCP_READ, address};
     e5c:	93 e0       	ldi	r25, 0x03	; 3
     e5e:	99 83       	std	Y+1, r25	; 0x01
     e60:	8a 83       	std	Y+2, r24	; 0x02
	spi_write(write, 2); // Send read instruction
     e62:	62 e0       	ldi	r22, 0x02	; 2
     e64:	ce 01       	movw	r24, r28
     e66:	01 96       	adiw	r24, 0x01	; 1
     e68:	4c d3       	rcall	.+1688   	; 0x1502 <spi_write>
	
	spi_read(result, data_size); // Readresult
     e6a:	6f 2d       	mov	r22, r15
     e6c:	c8 01       	movw	r24, r16
     e6e:	24 d3       	rcall	.+1608   	; 0x14b8 <spi_read>
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
     e70:	c4 9a       	sbi	0x18, 4	; 24
	
	
}
     e72:	0f 90       	pop	r0
     e74:	0f 90       	pop	r0
     e76:	df 91       	pop	r29
     e78:	cf 91       	pop	r28
     e7a:	1f 91       	pop	r17
     e7c:	0f 91       	pop	r16
     e7e:	ff 90       	pop	r15
     e80:	08 95       	ret

00000e82 <mcp2515_write>:

void mcp2515_write(uint8_t address, uint8_t data, uint8_t data_size)
{
     e82:	cf 93       	push	r28
     e84:	df 93       	push	r29
     e86:	00 d0       	rcall	.+0      	; 0xe88 <mcp2515_write+0x6>
     e88:	1f 92       	push	r1
     e8a:	cd b7       	in	r28, 0x3d	; 61
     e8c:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     e8e:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);
	
	uint8_t write[] = {MCP_WRITE, address, data};
     e90:	92 e0       	ldi	r25, 0x02	; 2
     e92:	99 83       	std	Y+1, r25	; 0x01
     e94:	8a 83       	std	Y+2, r24	; 0x02
     e96:	6b 83       	std	Y+3, r22	; 0x03
	spi_write(write, data_size + 2); // Send read instruction
     e98:	62 e0       	ldi	r22, 0x02	; 2
     e9a:	64 0f       	add	r22, r20
     e9c:	ce 01       	movw	r24, r28
     e9e:	01 96       	adiw	r24, 0x01	; 1
     ea0:	30 d3       	rcall	.+1632   	; 0x1502 <spi_write>
	
	PORTB |= (1<<PINB4); // DeselectCAN-controller
     ea2:	c4 9a       	sbi	0x18, 4	; 24
		
}
     ea4:	0f 90       	pop	r0
     ea6:	0f 90       	pop	r0
     ea8:	0f 90       	pop	r0
     eaa:	df 91       	pop	r29
     eac:	cf 91       	pop	r28
     eae:	08 95       	ret

00000eb0 <mcp2515_request>:

void mcp2515_request(uint8_t rqs)
{
     eb0:	cf 93       	push	r28
     eb2:	df 93       	push	r29
     eb4:	1f 92       	push	r1
     eb6:	cd b7       	in	r28, 0x3d	; 61
     eb8:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     eba:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);		
		
	uint8_t cmd[] = {rqs};
     ebc:	89 83       	std	Y+1, r24	; 0x01
	spi_write(cmd, 1);		
     ebe:	61 e0       	ldi	r22, 0x01	; 1
     ec0:	ce 01       	movw	r24, r28
     ec2:	01 96       	adiw	r24, 0x01	; 1
     ec4:	1e d3       	rcall	.+1596   	; 0x1502 <spi_write>
	
	PORTB |= (1<<PINB4); // Deselect CAN-controller
     ec6:	c4 9a       	sbi	0x18, 4	; 24
}
     ec8:	0f 90       	pop	r0
     eca:	df 91       	pop	r29
     ecc:	cf 91       	pop	r28
     ece:	08 95       	ret

00000ed0 <mcp2515_bit_modify>:

// Modify bits in the register / See datasheet 12.10
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data) 
{
     ed0:	cf 93       	push	r28
     ed2:	df 93       	push	r29
     ed4:	00 d0       	rcall	.+0      	; 0xed6 <mcp2515_bit_modify+0x6>
     ed6:	00 d0       	rcall	.+0      	; 0xed8 <mcp2515_bit_modify+0x8>
     ed8:	cd b7       	in	r28, 0x3d	; 61
     eda:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PINB4); // Select CAN-controller
     edc:	c4 98       	cbi	0x18, 4	; 24
	//SPSR &= ~(1 << SPIF);	
	
	uint8_t bit_list[] = {MCP_BITMOD, address, mask, data};
     ede:	95 e0       	ldi	r25, 0x05	; 5
     ee0:	99 83       	std	Y+1, r25	; 0x01
     ee2:	8a 83       	std	Y+2, r24	; 0x02
     ee4:	6b 83       	std	Y+3, r22	; 0x03
     ee6:	4c 83       	std	Y+4, r20	; 0x04
	spi_write(bit_list, 4);	
     ee8:	64 e0       	ldi	r22, 0x04	; 4
     eea:	ce 01       	movw	r24, r28
     eec:	01 96       	adiw	r24, 0x01	; 1
     eee:	09 d3       	rcall	.+1554   	; 0x1502 <spi_write>
	
	PORTB |= (1<<PINB4); //Deselect CAN-controller
     ef0:	c4 9a       	sbi	0x18, 4	; 24

}
     ef2:	0f 90       	pop	r0
     ef4:	0f 90       	pop	r0
     ef6:	0f 90       	pop	r0
     ef8:	0f 90       	pop	r0
     efa:	df 91       	pop	r29
     efc:	cf 91       	pop	r28
     efe:	08 95       	ret

00000f00 <oled_columb_range_select>:
void oled_set_joy_pos(int joy_pos){
	xmem_write(joy_pos, JOY_POS_ADDRESS);
}

void oled_set_high_score(int score){
	high_score = score;
     f00:	91 e2       	ldi	r25, 0x21	; 33
     f02:	90 93 00 10 	sts	0x1000, r25
     f06:	88 23       	and	r24, r24
     f08:	1c f0       	brlt	.+6      	; 0xf10 <oled_columb_range_select+0x10>
     f0a:	80 93 00 10 	sts	0x1000, r24
     f0e:	03 c0       	rjmp	.+6      	; 0xf16 <oled_columb_range_select+0x16>
     f10:	8f e7       	ldi	r24, 0x7F	; 127
     f12:	80 93 00 10 	sts	0x1000, r24
     f16:	66 23       	and	r22, r22
     f18:	1c f0       	brlt	.+6      	; 0xf20 <oled_columb_range_select+0x20>
     f1a:	60 93 00 10 	sts	0x1000, r22
     f1e:	08 95       	ret
     f20:	8f e7       	ldi	r24, 0x7F	; 127
     f22:	80 93 00 10 	sts	0x1000, r24
     f26:	08 95       	ret

00000f28 <oled_page_select>:
     f28:	92 e2       	ldi	r25, 0x22	; 34
     f2a:	90 93 00 10 	sts	0x1000, r25
     f2e:	88 30       	cpi	r24, 0x08	; 8
     f30:	28 f4       	brcc	.+10     	; 0xf3c <oled_page_select+0x14>
     f32:	e0 e0       	ldi	r30, 0x00	; 0
     f34:	f0 e1       	ldi	r31, 0x10	; 16
     f36:	80 83       	st	Z, r24
     f38:	80 83       	st	Z, r24
     f3a:	08 95       	ret
     f3c:	e0 e0       	ldi	r30, 0x00	; 0
     f3e:	f0 e1       	ldi	r31, 0x10	; 16
     f40:	87 e0       	ldi	r24, 0x07	; 7
     f42:	80 83       	st	Z, r24
     f44:	80 83       	st	Z, r24
     f46:	08 95       	ret

00000f48 <oled_clear_page>:
     f48:	88 30       	cpi	r24, 0x08	; 8
     f4a:	60 f4       	brcc	.+24     	; 0xf64 <oled_clear_page+0x1c>
     f4c:	ed df       	rcall	.-38     	; 0xf28 <oled_page_select>
     f4e:	6f e7       	ldi	r22, 0x7F	; 127
     f50:	80 e0       	ldi	r24, 0x00	; 0
     f52:	d6 df       	rcall	.-84     	; 0xf00 <oled_columb_range_select>
     f54:	80 e8       	ldi	r24, 0x80	; 128
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	e0 e0       	ldi	r30, 0x00	; 0
     f5a:	f2 e1       	ldi	r31, 0x12	; 18
     f5c:	10 82       	st	Z, r1
     f5e:	01 97       	sbiw	r24, 0x01	; 1
     f60:	00 97       	sbiw	r24, 0x00	; 0
     f62:	e1 f7       	brne	.-8      	; 0xf5c <oled_clear_page+0x14>
     f64:	08 95       	ret

00000f66 <oled_clear_screen>:
     f66:	cf 93       	push	r28
     f68:	c0 e0       	ldi	r28, 0x00	; 0
     f6a:	8c 2f       	mov	r24, r28
     f6c:	ed df       	rcall	.-38     	; 0xf48 <oled_clear_page>
     f6e:	cf 5f       	subi	r28, 0xFF	; 255
     f70:	c8 30       	cpi	r28, 0x08	; 8
     f72:	d9 f7       	brne	.-10     	; 0xf6a <oled_clear_screen+0x4>
     f74:	cf 91       	pop	r28
     f76:	08 95       	ret

00000f78 <oled_print_char_of_size>:
     f78:	62 30       	cpi	r22, 0x02	; 2
     f7a:	41 f4       	brne	.+16     	; 0xf8c <oled_print_char_of_size+0x14>
     f7c:	94 e0       	ldi	r25, 0x04	; 4
     f7e:	89 02       	muls	r24, r25
     f80:	a0 01       	movw	r20, r0
     f82:	11 24       	eor	r1, r1
     f84:	40 51       	subi	r20, 0x10	; 16
     f86:	50 40       	sbci	r21, 0x00	; 0
     f88:	24 e0       	ldi	r18, 0x04	; 4
     f8a:	25 c0       	rjmp	.+74     	; 0xfd6 <oled_print_char_of_size+0x5e>
     f8c:	61 30       	cpi	r22, 0x01	; 1
     f8e:	89 f4       	brne	.+34     	; 0xfb2 <oled_print_char_of_size+0x3a>
     f90:	48 2f       	mov	r20, r24
     f92:	55 27       	eor	r21, r21
     f94:	47 fd       	sbrc	r20, 7
     f96:	50 95       	com	r21
     f98:	40 52       	subi	r20, 0x20	; 32
     f9a:	51 09       	sbc	r21, r1
     f9c:	ca 01       	movw	r24, r20
     f9e:	88 0f       	add	r24, r24
     fa0:	99 1f       	adc	r25, r25
     fa2:	88 0f       	add	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	48 0f       	add	r20, r24
     fa8:	59 1f       	adc	r21, r25
     faa:	44 51       	subi	r20, 0x14	; 20
     fac:	5e 4f       	sbci	r21, 0xFE	; 254
     fae:	25 e0       	ldi	r18, 0x05	; 5
     fb0:	12 c0       	rjmp	.+36     	; 0xfd6 <oled_print_char_of_size+0x5e>
     fb2:	98 e0       	ldi	r25, 0x08	; 8
     fb4:	89 02       	muls	r24, r25
     fb6:	a0 01       	movw	r20, r0
     fb8:	11 24       	eor	r1, r1
     fba:	49 53       	subi	r20, 0x39	; 57
     fbc:	5d 4f       	sbci	r21, 0xFD	; 253
     fbe:	28 e0       	ldi	r18, 0x08	; 8
     fc0:	0a c0       	rjmp	.+20     	; 0xfd6 <oled_print_char_of_size+0x5e>
     fc2:	fa 01       	movw	r30, r20
     fc4:	e8 0f       	add	r30, r24
     fc6:	f9 1f       	adc	r31, r25
     fc8:	e4 91       	lpm	r30, Z
     fca:	ec 93       	st	X, r30
     fcc:	01 96       	adiw	r24, 0x01	; 1
     fce:	82 17       	cp	r24, r18
     fd0:	93 07       	cpc	r25, r19
     fd2:	bc f3       	brlt	.-18     	; 0xfc2 <oled_print_char_of_size+0x4a>
     fd4:	08 95       	ret
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	80 e0       	ldi	r24, 0x00	; 0
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	a0 e0       	ldi	r26, 0x00	; 0
     fde:	b2 e1       	ldi	r27, 0x12	; 18
     fe0:	f0 cf       	rjmp	.-32     	; 0xfc2 <oled_print_char_of_size+0x4a>

00000fe2 <oled_print_char_of_size_inverted>:
     fe2:	62 30       	cpi	r22, 0x02	; 2
     fe4:	41 f4       	brne	.+16     	; 0xff6 <oled_print_char_of_size_inverted+0x14>
     fe6:	94 e0       	ldi	r25, 0x04	; 4
     fe8:	89 02       	muls	r24, r25
     fea:	a0 01       	movw	r20, r0
     fec:	11 24       	eor	r1, r1
     fee:	40 51       	subi	r20, 0x10	; 16
     ff0:	50 40       	sbci	r21, 0x00	; 0
     ff2:	24 e0       	ldi	r18, 0x04	; 4
     ff4:	26 c0       	rjmp	.+76     	; 0x1042 <oled_print_char_of_size_inverted+0x60>
     ff6:	61 30       	cpi	r22, 0x01	; 1
     ff8:	89 f4       	brne	.+34     	; 0x101c <oled_print_char_of_size_inverted+0x3a>
     ffa:	48 2f       	mov	r20, r24
     ffc:	55 27       	eor	r21, r21
     ffe:	47 fd       	sbrc	r20, 7
    1000:	50 95       	com	r21
    1002:	40 52       	subi	r20, 0x20	; 32
    1004:	51 09       	sbc	r21, r1
    1006:	ca 01       	movw	r24, r20
    1008:	88 0f       	add	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	88 0f       	add	r24, r24
    100e:	99 1f       	adc	r25, r25
    1010:	48 0f       	add	r20, r24
    1012:	59 1f       	adc	r21, r25
    1014:	44 51       	subi	r20, 0x14	; 20
    1016:	5e 4f       	sbci	r21, 0xFE	; 254
    1018:	25 e0       	ldi	r18, 0x05	; 5
    101a:	13 c0       	rjmp	.+38     	; 0x1042 <oled_print_char_of_size_inverted+0x60>
    101c:	98 e0       	ldi	r25, 0x08	; 8
    101e:	89 02       	muls	r24, r25
    1020:	a0 01       	movw	r20, r0
    1022:	11 24       	eor	r1, r1
    1024:	49 53       	subi	r20, 0x39	; 57
    1026:	5d 4f       	sbci	r21, 0xFD	; 253
    1028:	28 e0       	ldi	r18, 0x08	; 8
    102a:	0b c0       	rjmp	.+22     	; 0x1042 <oled_print_char_of_size_inverted+0x60>
    102c:	fa 01       	movw	r30, r20
    102e:	e8 0f       	add	r30, r24
    1030:	f9 1f       	adc	r31, r25
    1032:	e4 91       	lpm	r30, Z
    1034:	e0 95       	com	r30
    1036:	ec 93       	st	X, r30
    1038:	01 96       	adiw	r24, 0x01	; 1
    103a:	82 17       	cp	r24, r18
    103c:	93 07       	cpc	r25, r19
    103e:	b4 f3       	brlt	.-20     	; 0x102c <oled_print_char_of_size_inverted+0x4a>
    1040:	08 95       	ret
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	80 e0       	ldi	r24, 0x00	; 0
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	a0 e0       	ldi	r26, 0x00	; 0
    104a:	b2 e1       	ldi	r27, 0x12	; 18
    104c:	ef cf       	rjmp	.-34     	; 0x102c <oled_print_char_of_size_inverted+0x4a>

0000104e <oled_print_char>:
    104e:	8a 30       	cpi	r24, 0x0A	; 10
    1050:	51 f4       	brne	.+20     	; 0x1066 <oled_print_char+0x18>
    1052:	80 91 29 02 	lds	r24, 0x0229
    1056:	8f 5f       	subi	r24, 0xFF	; 255
    1058:	80 93 29 02 	sts	0x0229, r24
    105c:	65 df       	rcall	.-310    	; 0xf28 <oled_page_select>
    105e:	60 e8       	ldi	r22, 0x80	; 128
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	4e df       	rcall	.-356    	; 0xf00 <oled_columb_range_select>
    1064:	03 c0       	rjmp	.+6      	; 0x106c <oled_print_char+0x1e>
    1066:	60 91 28 02 	lds	r22, 0x0228
    106a:	86 df       	rcall	.-244    	; 0xf78 <oled_print_char_of_size>
    106c:	80 e0       	ldi	r24, 0x00	; 0
    106e:	08 95       	ret

00001070 <oled_print_char_inverted>:
    1070:	8a 30       	cpi	r24, 0x0A	; 10
    1072:	51 f4       	brne	.+20     	; 0x1088 <oled_print_char_inverted+0x18>
    1074:	80 91 29 02 	lds	r24, 0x0229
    1078:	8f 5f       	subi	r24, 0xFF	; 255
    107a:	80 93 29 02 	sts	0x0229, r24
    107e:	54 df       	rcall	.-344    	; 0xf28 <oled_page_select>
    1080:	60 e8       	ldi	r22, 0x80	; 128
    1082:	80 e0       	ldi	r24, 0x00	; 0
    1084:	3d df       	rcall	.-390    	; 0xf00 <oled_columb_range_select>
    1086:	03 c0       	rjmp	.+6      	; 0x108e <oled_print_char_inverted+0x1e>
    1088:	60 91 28 02 	lds	r22, 0x0228
    108c:	aa df       	rcall	.-172    	; 0xfe2 <oled_print_char_of_size_inverted>
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	08 95       	ret

00001092 <oled_printf>:
    1092:	ef 92       	push	r14
    1094:	ff 92       	push	r15
    1096:	0f 93       	push	r16
    1098:	1f 93       	push	r17
    109a:	cf 93       	push	r28
    109c:	df 93       	push	r29
    109e:	fc 01       	movw	r30, r24
    10a0:	01 90       	ld	r0, Z+
    10a2:	00 20       	and	r0, r0
    10a4:	e9 f7       	brne	.-6      	; 0x10a0 <oled_printf+0xe>
    10a6:	31 97       	sbiw	r30, 0x01	; 1
    10a8:	7f 01       	movw	r14, r30
    10aa:	e8 1a       	sub	r14, r24
    10ac:	f9 0a       	sbc	r15, r25
    10ae:	1e 14       	cp	r1, r14
    10b0:	1f 04       	cpc	r1, r15
    10b2:	5c f4       	brge	.+22     	; 0x10ca <oled_printf+0x38>
    10b4:	8c 01       	movw	r16, r24
    10b6:	c0 e0       	ldi	r28, 0x00	; 0
    10b8:	d0 e0       	ldi	r29, 0x00	; 0
    10ba:	f8 01       	movw	r30, r16
    10bc:	81 91       	ld	r24, Z+
    10be:	8f 01       	movw	r16, r30
    10c0:	c6 df       	rcall	.-116    	; 0x104e <oled_print_char>
    10c2:	21 96       	adiw	r28, 0x01	; 1
    10c4:	ec 16       	cp	r14, r28
    10c6:	fd 06       	cpc	r15, r29
    10c8:	c1 f7       	brne	.-16     	; 0x10ba <oled_printf+0x28>
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	1f 91       	pop	r17
    10d0:	0f 91       	pop	r16
    10d2:	ff 90       	pop	r15
    10d4:	ef 90       	pop	r14
    10d6:	08 95       	ret

000010d8 <oled_printf_inverted>:
    10d8:	ef 92       	push	r14
    10da:	ff 92       	push	r15
    10dc:	0f 93       	push	r16
    10de:	1f 93       	push	r17
    10e0:	cf 93       	push	r28
    10e2:	df 93       	push	r29
    10e4:	fc 01       	movw	r30, r24
    10e6:	01 90       	ld	r0, Z+
    10e8:	00 20       	and	r0, r0
    10ea:	e9 f7       	brne	.-6      	; 0x10e6 <oled_printf_inverted+0xe>
    10ec:	31 97       	sbiw	r30, 0x01	; 1
    10ee:	7f 01       	movw	r14, r30
    10f0:	e8 1a       	sub	r14, r24
    10f2:	f9 0a       	sbc	r15, r25
    10f4:	1e 14       	cp	r1, r14
    10f6:	1f 04       	cpc	r1, r15
    10f8:	5c f4       	brge	.+22     	; 0x1110 <oled_printf_inverted+0x38>
    10fa:	8c 01       	movw	r16, r24
    10fc:	c0 e0       	ldi	r28, 0x00	; 0
    10fe:	d0 e0       	ldi	r29, 0x00	; 0
    1100:	f8 01       	movw	r30, r16
    1102:	81 91       	ld	r24, Z+
    1104:	8f 01       	movw	r16, r30
    1106:	b4 df       	rcall	.-152    	; 0x1070 <oled_print_char_inverted>
    1108:	21 96       	adiw	r28, 0x01	; 1
    110a:	ec 16       	cp	r14, r28
    110c:	fd 06       	cpc	r15, r29
    110e:	c1 f7       	brne	.-16     	; 0x1100 <oled_printf_inverted+0x28>
    1110:	df 91       	pop	r29
    1112:	cf 91       	pop	r28
    1114:	1f 91       	pop	r17
    1116:	0f 91       	pop	r16
    1118:	ff 90       	pop	r15
    111a:	ef 90       	pop	r14
    111c:	08 95       	ret

0000111e <oled_get_joy_pos>:
    111e:	82 e0       	ldi	r24, 0x02	; 2
    1120:	98 e1       	ldi	r25, 0x18	; 24
    1122:	21 d2       	rcall	.+1090   	; 0x1566 <xmem_read>
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	08 95       	ret

00001128 <oled_display_activity>:
    1128:	cf 93       	push	r28
    112a:	df 93       	push	r29
    112c:	1c df       	rcall	.-456    	; 0xf66 <oled_clear_screen>
    112e:	f7 df       	rcall	.-18     	; 0x111e <oled_get_joy_pos>
    1130:	ec 01       	movw	r28, r24
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	f9 de       	rcall	.-526    	; 0xf28 <oled_page_select>
    1136:	20 97       	sbiw	r28, 0x00	; 0
    1138:	59 f4       	brne	.+22     	; 0x1150 <oled_display_activity+0x28>
    113a:	8c e8       	ldi	r24, 0x8C	; 140
    113c:	91 e0       	ldi	r25, 0x01	; 1
    113e:	cc df       	rcall	.-104    	; 0x10d8 <oled_printf_inverted>
    1140:	82 e0       	ldi	r24, 0x02	; 2
    1142:	f2 de       	rcall	.-540    	; 0xf28 <oled_page_select>
    1144:	88 e9       	ldi	r24, 0x98	; 152
    1146:	91 e0       	ldi	r25, 0x01	; 1
    1148:	a4 df       	rcall	.-184    	; 0x1092 <oled_printf>
    114a:	83 e0       	ldi	r24, 0x03	; 3
    114c:	ed de       	rcall	.-550    	; 0xf28 <oled_page_select>
    114e:	19 c0       	rjmp	.+50     	; 0x1182 <oled_display_activity+0x5a>
    1150:	8c e8       	ldi	r24, 0x8C	; 140
    1152:	91 e0       	ldi	r25, 0x01	; 1
    1154:	9e df       	rcall	.-196    	; 0x1092 <oled_printf>
    1156:	82 e0       	ldi	r24, 0x02	; 2
    1158:	e7 de       	rcall	.-562    	; 0xf28 <oled_page_select>
    115a:	c1 30       	cpi	r28, 0x01	; 1
    115c:	d1 05       	cpc	r29, r1
    115e:	31 f4       	brne	.+12     	; 0x116c <oled_display_activity+0x44>
    1160:	88 e9       	ldi	r24, 0x98	; 152
    1162:	91 e0       	ldi	r25, 0x01	; 1
    1164:	b9 df       	rcall	.-142    	; 0x10d8 <oled_printf_inverted>
    1166:	83 e0       	ldi	r24, 0x03	; 3
    1168:	df de       	rcall	.-578    	; 0xf28 <oled_page_select>
    116a:	0b c0       	rjmp	.+22     	; 0x1182 <oled_display_activity+0x5a>
    116c:	88 e9       	ldi	r24, 0x98	; 152
    116e:	91 e0       	ldi	r25, 0x01	; 1
    1170:	90 df       	rcall	.-224    	; 0x1092 <oled_printf>
    1172:	83 e0       	ldi	r24, 0x03	; 3
    1174:	d9 de       	rcall	.-590    	; 0xf28 <oled_page_select>
    1176:	22 97       	sbiw	r28, 0x02	; 2
    1178:	21 f4       	brne	.+8      	; 0x1182 <oled_display_activity+0x5a>
    117a:	83 ea       	ldi	r24, 0xA3	; 163
    117c:	91 e0       	ldi	r25, 0x01	; 1
    117e:	ac df       	rcall	.-168    	; 0x10d8 <oled_printf_inverted>
    1180:	03 c0       	rjmp	.+6      	; 0x1188 <oled_display_activity+0x60>
    1182:	83 ea       	ldi	r24, 0xA3	; 163
    1184:	91 e0       	ldi	r25, 0x01	; 1
    1186:	85 df       	rcall	.-246    	; 0x1092 <oled_printf>
    1188:	df 91       	pop	r29
    118a:	cf 91       	pop	r28
    118c:	08 95       	ret

0000118e <oled_init>:
    118e:	e0 e0       	ldi	r30, 0x00	; 0
    1190:	f0 e1       	ldi	r31, 0x10	; 16
    1192:	8e ea       	ldi	r24, 0xAE	; 174
    1194:	80 83       	st	Z, r24
    1196:	81 ea       	ldi	r24, 0xA1	; 161
    1198:	80 83       	st	Z, r24
    119a:	8a ed       	ldi	r24, 0xDA	; 218
    119c:	80 83       	st	Z, r24
    119e:	82 e1       	ldi	r24, 0x12	; 18
    11a0:	80 83       	st	Z, r24
    11a2:	88 ec       	ldi	r24, 0xC8	; 200
    11a4:	80 83       	st	Z, r24
    11a6:	88 ea       	ldi	r24, 0xA8	; 168
    11a8:	80 83       	st	Z, r24
    11aa:	8f e3       	ldi	r24, 0x3F	; 63
    11ac:	80 83       	st	Z, r24
    11ae:	85 ed       	ldi	r24, 0xD5	; 213
    11b0:	80 83       	st	Z, r24
    11b2:	80 e8       	ldi	r24, 0x80	; 128
    11b4:	80 83       	st	Z, r24
    11b6:	81 e8       	ldi	r24, 0x81	; 129
    11b8:	80 83       	st	Z, r24
    11ba:	80 e5       	ldi	r24, 0x50	; 80
    11bc:	80 83       	st	Z, r24
    11be:	89 ed       	ldi	r24, 0xD9	; 217
    11c0:	80 83       	st	Z, r24
    11c2:	81 e2       	ldi	r24, 0x21	; 33
    11c4:	80 83       	st	Z, r24
    11c6:	80 e2       	ldi	r24, 0x20	; 32
    11c8:	80 83       	st	Z, r24
    11ca:	82 e0       	ldi	r24, 0x02	; 2
    11cc:	80 83       	st	Z, r24
    11ce:	8b ed       	ldi	r24, 0xDB	; 219
    11d0:	80 83       	st	Z, r24
    11d2:	80 e3       	ldi	r24, 0x30	; 48
    11d4:	80 83       	st	Z, r24
    11d6:	8d ea       	ldi	r24, 0xAD	; 173
    11d8:	80 83       	st	Z, r24
    11da:	10 82       	st	Z, r1
    11dc:	84 ea       	ldi	r24, 0xA4	; 164
    11de:	80 83       	st	Z, r24
    11e0:	86 ea       	ldi	r24, 0xA6	; 166
    11e2:	80 83       	st	Z, r24
    11e4:	8f ea       	ldi	r24, 0xAF	; 175
    11e6:	80 83       	st	Z, r24
    11e8:	be de       	rcall	.-644    	; 0xf66 <oled_clear_screen>
    11ea:	10 92 2d 02 	sts	0x022D, r1
    11ee:	10 92 2c 02 	sts	0x022C, r1
    11f2:	84 e0       	ldi	r24, 0x04	; 4
    11f4:	98 e1       	ldi	r25, 0x18	; 24
    11f6:	b7 d1       	rcall	.+878    	; 0x1566 <xmem_read>
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	90 93 2b 02 	sts	0x022B, r25
    11fe:	80 93 2a 02 	sts	0x022A, r24
    1202:	92 cf       	rjmp	.-220    	; 0x1128 <oled_display_activity>
    1204:	08 95       	ret

00001206 <oled_set_joy_pos>:
    1206:	62 e0       	ldi	r22, 0x02	; 2
    1208:	78 e1       	ldi	r23, 0x18	; 24
    120a:	a9 c1       	rjmp	.+850    	; 0x155e <xmem_write>
    120c:	08 95       	ret

0000120e <oled_actualise_joy_pos>:
    120e:	ef 92       	push	r14
    1210:	ff 92       	push	r15
    1212:	0f 93       	push	r16
    1214:	1f 93       	push	r17
    1216:	cf 93       	push	r28
    1218:	df 93       	push	r29
    121a:	8c 01       	movw	r16, r24
    121c:	62 30       	cpi	r22, 0x02	; 2
    121e:	71 05       	cpc	r23, r1
    1220:	29 f0       	breq	.+10     	; 0x122c <oled_actualise_joy_pos+0x1e>
    1222:	68 94       	set
    1224:	ee 24       	eor	r14, r14
    1226:	e1 f8       	bld	r14, 1
    1228:	f1 2c       	mov	r15, r1
    122a:	03 c0       	rjmp	.+6      	; 0x1232 <oled_actualise_joy_pos+0x24>
    122c:	ee 24       	eor	r14, r14
    122e:	e3 94       	inc	r14
    1230:	f1 2c       	mov	r15, r1
    1232:	75 df       	rcall	.-278    	; 0x111e <oled_get_joy_pos>
    1234:	ec 01       	movw	r28, r24
    1236:	02 30       	cpi	r16, 0x02	; 2
    1238:	11 05       	cpc	r17, r1
    123a:	21 f4       	brne	.+8      	; 0x1244 <oled_actualise_joy_pos+0x36>
    123c:	00 97       	sbiw	r24, 0x00	; 0
    123e:	79 f0       	breq	.+30     	; 0x125e <oled_actualise_joy_pos+0x50>
    1240:	21 97       	sbiw	r28, 0x01	; 1
    1242:	11 c0       	rjmp	.+34     	; 0x1266 <oled_actualise_joy_pos+0x58>
    1244:	03 30       	cpi	r16, 0x03	; 3
    1246:	11 05       	cpc	r17, r1
    1248:	71 f4       	brne	.+28     	; 0x1266 <oled_actualise_joy_pos+0x58>
    124a:	8e 15       	cp	r24, r14
    124c:	9f 05       	cpc	r25, r15
    124e:	49 f0       	breq	.+18     	; 0x1262 <oled_actualise_joy_pos+0x54>
    1250:	01 96       	adiw	r24, 0x01	; 1
    1252:	b7 01       	movw	r22, r14
    1254:	6f 5f       	subi	r22, 0xFF	; 255
    1256:	7f 4f       	sbci	r23, 0xFF	; 255
    1258:	f4 d1       	rcall	.+1000   	; 0x1642 <__divmodhi4>
    125a:	ec 01       	movw	r28, r24
    125c:	04 c0       	rjmp	.+8      	; 0x1266 <oled_actualise_joy_pos+0x58>
    125e:	e7 01       	movw	r28, r14
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <oled_actualise_joy_pos+0x58>
    1262:	c0 e0       	ldi	r28, 0x00	; 0
    1264:	d0 e0       	ldi	r29, 0x00	; 0
    1266:	ce 01       	movw	r24, r28
    1268:	ce df       	rcall	.-100    	; 0x1206 <oled_set_joy_pos>
    126a:	df 93       	push	r29
    126c:	cf 93       	push	r28
    126e:	80 eb       	ldi	r24, 0xB0	; 176
    1270:	91 e0       	ldi	r25, 0x01	; 1
    1272:	9f 93       	push	r25
    1274:	8f 93       	push	r24
    1276:	56 d2       	rcall	.+1196   	; 0x1724 <printf>
    1278:	0f 90       	pop	r0
    127a:	0f 90       	pop	r0
    127c:	0f 90       	pop	r0
    127e:	0f 90       	pop	r0
    1280:	df 91       	pop	r29
    1282:	cf 91       	pop	r28
    1284:	1f 91       	pop	r17
    1286:	0f 91       	pop	r16
    1288:	ff 90       	pop	r15
    128a:	ef 90       	pop	r14
    128c:	08 95       	ret

0000128e <oled_print_high_score>:
}

void oled_print_high_score(){
    128e:	0f 93       	push	r16
    1290:	1f 93       	push	r17
    1292:	cf 93       	push	r28
    1294:	df 93       	push	r29
    1296:	00 d0       	rcall	.+0      	; 0x1298 <oled_print_high_score+0xa>
    1298:	00 d0       	rcall	.+0      	; 0x129a <oled_print_high_score+0xc>
    129a:	cd b7       	in	r28, 0x3d	; 61
    129c:	de b7       	in	r29, 0x3e	; 62
	oled_clear_screen();
    129e:	63 de       	rcall	.-826    	; 0xf66 <oled_clear_screen>
	oled_page_select(1);
    12a0:	81 e0       	ldi	r24, 0x01	; 1
    12a2:	42 de       	rcall	.-892    	; 0xf28 <oled_page_select>
	oled_printf("High score :\n");
    12a4:	8a eb       	ldi	r24, 0xBA	; 186
    12a6:	91 e0       	ldi	r25, 0x01	; 1
    12a8:	f4 de       	rcall	.-536    	; 0x1092 <oled_printf>
	
	oled_page_select(2);
    12aa:	82 e0       	ldi	r24, 0x02	; 2
    12ac:	3d de       	rcall	.-902    	; 0xf28 <oled_page_select>
	char high_score_char [4];
	sprintf(high_score_char, "%d", high_score);
    12ae:	80 91 2b 02 	lds	r24, 0x022B
    12b2:	8f 93       	push	r24
    12b4:	80 91 2a 02 	lds	r24, 0x022A
    12b8:	8f 93       	push	r24
    12ba:	88 ec       	ldi	r24, 0xC8	; 200
    12bc:	91 e0       	ldi	r25, 0x01	; 1
    12be:	9f 93       	push	r25
    12c0:	8f 93       	push	r24
    12c2:	8e 01       	movw	r16, r28
    12c4:	0f 5f       	subi	r16, 0xFF	; 255
    12c6:	1f 4f       	sbci	r17, 0xFF	; 255
    12c8:	1f 93       	push	r17
    12ca:	0f 93       	push	r16
    12cc:	3c d2       	rcall	.+1144   	; 0x1746 <sprintf>
	oled_printf(high_score_char);
    12ce:	c8 01       	movw	r24, r16
    12d0:	e0 de       	rcall	.-576    	; 0x1092 <oled_printf>
	
	oled_page_select(3);
    12d2:	83 e0       	ldi	r24, 0x03	; 3
    12d4:	29 de       	rcall	.-942    	; 0xf28 <oled_page_select>
	oled_printf_inverted("Reset");
    12d6:	8b ec       	ldi	r24, 0xCB	; 203
    12d8:	91 e0       	ldi	r25, 0x01	; 1
    12da:	fe de       	rcall	.-516    	; 0x10d8 <oled_printf_inverted>
    12dc:	0f 90       	pop	r0
    12de:	0f 90       	pop	r0
    12e0:	0f 90       	pop	r0
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	0f 90       	pop	r0
}
    12e8:	0f 90       	pop	r0
    12ea:	0f 90       	pop	r0
    12ec:	0f 90       	pop	r0
    12ee:	0f 90       	pop	r0
    12f0:	df 91       	pop	r29
    12f2:	cf 91       	pop	r28
    12f4:	1f 91       	pop	r17
    12f6:	0f 91       	pop	r16
    12f8:	08 95       	ret

000012fa <oled_navigate_gain_menu>:

void oled_navigate_gain_menu(){
    12fa:	cf 93       	push	r28
    12fc:	df 93       	push	r29
	oled_clear_screen();
    12fe:	33 de       	rcall	.-922    	; 0xf66 <oled_clear_screen>
	int joy_pos = oled_get_joy_pos();
    1300:	0e df       	rcall	.-484    	; 0x111e <oled_get_joy_pos>
    1302:	ec 01       	movw	r28, r24
	
	oled_page_select(1);
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	10 de       	rcall	.-992    	; 0xf28 <oled_page_select>
	if(joy_pos == 0)
    1308:	20 97       	sbiw	r28, 0x00	; 0
    130a:	59 f4       	brne	.+22     	; 0x1322 <oled_navigate_gain_menu+0x28>
	oled_printf_inverted("Easy \n");
    130c:	81 ed       	ldi	r24, 0xD1	; 209
    130e:	91 e0       	ldi	r25, 0x01	; 1
    1310:	e3 de       	rcall	.-570    	; 0x10d8 <oled_printf_inverted>
	else
	oled_printf("Easy \n");
	
	oled_page_select(2);
    1312:	82 e0       	ldi	r24, 0x02	; 2
    1314:	09 de       	rcall	.-1006   	; 0xf28 <oled_page_select>
	if(joy_pos == 1)
	oled_printf_inverted("Medium \n");
	else
	oled_printf("Medium \n");
    1316:	88 ed       	ldi	r24, 0xD8	; 216
    1318:	91 e0       	ldi	r25, 0x01	; 1
    131a:	bb de       	rcall	.-650    	; 0x1092 <oled_printf>
	
	oled_page_select(3);
    131c:	83 e0       	ldi	r24, 0x03	; 3
    131e:	04 de       	rcall	.-1016   	; 0xf28 <oled_page_select>
    1320:	19 c0       	rjmp	.+50     	; 0x1354 <oled_navigate_gain_menu+0x5a>
	
	oled_page_select(1);
	if(joy_pos == 0)
	oled_printf_inverted("Easy \n");
	else
	oled_printf("Easy \n");
    1322:	81 ed       	ldi	r24, 0xD1	; 209
    1324:	91 e0       	ldi	r25, 0x01	; 1
    1326:	b5 de       	rcall	.-662    	; 0x1092 <oled_printf>
	
	oled_page_select(2);
    1328:	82 e0       	ldi	r24, 0x02	; 2
    132a:	fe dd       	rcall	.-1028   	; 0xf28 <oled_page_select>
	if(joy_pos == 1)
    132c:	c1 30       	cpi	r28, 0x01	; 1
    132e:	d1 05       	cpc	r29, r1
    1330:	31 f4       	brne	.+12     	; 0x133e <oled_navigate_gain_menu+0x44>
	oled_printf_inverted("Medium \n");
    1332:	88 ed       	ldi	r24, 0xD8	; 216
    1334:	91 e0       	ldi	r25, 0x01	; 1
    1336:	d0 de       	rcall	.-608    	; 0x10d8 <oled_printf_inverted>
	else
	oled_printf("Medium \n");
	
	oled_page_select(3);
    1338:	83 e0       	ldi	r24, 0x03	; 3
    133a:	f6 dd       	rcall	.-1044   	; 0xf28 <oled_page_select>
    133c:	0b c0       	rjmp	.+22     	; 0x1354 <oled_navigate_gain_menu+0x5a>
	
	oled_page_select(2);
	if(joy_pos == 1)
	oled_printf_inverted("Medium \n");
	else
	oled_printf("Medium \n");
    133e:	88 ed       	ldi	r24, 0xD8	; 216
    1340:	91 e0       	ldi	r25, 0x01	; 1
    1342:	a7 de       	rcall	.-690    	; 0x1092 <oled_printf>
	
	oled_page_select(3);
    1344:	83 e0       	ldi	r24, 0x03	; 3
    1346:	f0 dd       	rcall	.-1056   	; 0xf28 <oled_page_select>
	if(joy_pos == 2)
    1348:	22 97       	sbiw	r28, 0x02	; 2
    134a:	21 f4       	brne	.+8      	; 0x1354 <oled_navigate_gain_menu+0x5a>
	oled_printf_inverted("Hard \n");
    134c:	81 ee       	ldi	r24, 0xE1	; 225
    134e:	91 e0       	ldi	r25, 0x01	; 1
    1350:	c3 de       	rcall	.-634    	; 0x10d8 <oled_printf_inverted>
    1352:	03 c0       	rjmp	.+6      	; 0x135a <oled_navigate_gain_menu+0x60>
	else
	oled_printf("Hard \n");
    1354:	81 ee       	ldi	r24, 0xE1	; 225
    1356:	91 e0       	ldi	r25, 0x01	; 1
    1358:	9c de       	rcall	.-712    	; 0x1092 <oled_printf>
}
    135a:	df 91       	pop	r29
    135c:	cf 91       	pop	r28
    135e:	08 95       	ret

00001360 <oled_in_game_mode>:

void oled_in_game_mode(){
    1360:	ef 92       	push	r14
    1362:	ff 92       	push	r15
    1364:	0f 93       	push	r16
    1366:	1f 93       	push	r17
    1368:	cf 93       	push	r28
    136a:	df 93       	push	r29
    136c:	cd b7       	in	r28, 0x3d	; 61
    136e:	de b7       	in	r29, 0x3e	; 62
    1370:	29 97       	sbiw	r28, 0x09	; 9
    1372:	0f b6       	in	r0, 0x3f	; 63
    1374:	f8 94       	cli
    1376:	de bf       	out	0x3e, r29	; 62
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	cd bf       	out	0x3d, r28	; 61
	oled_clear_screen();
    137c:	f4 dd       	rcall	.-1048   	; 0xf66 <oled_clear_screen>
	oled_page_select(1);
    137e:	81 e0       	ldi	r24, 0x01	; 1
    1380:	d3 dd       	rcall	.-1114   	; 0xf28 <oled_page_select>
	oled_printf("GAME ACTIVE \n");
    1382:	88 ee       	ldi	r24, 0xE8	; 232
    1384:	91 e0       	ldi	r25, 0x01	; 1
    1386:	85 de       	rcall	.-758    	; 0x1092 <oled_printf>
	oled_page_select(2);
    1388:	82 e0       	ldi	r24, 0x02	; 2
    138a:	ce dd       	rcall	.-1124   	; 0xf28 <oled_page_select>
	oled_printf("lives left: ");
    138c:	86 ef       	ldi	r24, 0xF6	; 246
    138e:	91 e0       	ldi	r25, 0x01	; 1
    1390:	80 de       	rcall	.-768    	; 0x1092 <oled_printf>
	char lives_left [1];
	sprintf(lives_left, "%d", lives);
    1392:	80 91 09 01 	lds	r24, 0x0109
    1396:	8f 93       	push	r24
    1398:	80 91 08 01 	lds	r24, 0x0108
    139c:	8f 93       	push	r24
    139e:	08 ec       	ldi	r16, 0xC8	; 200
    13a0:	11 e0       	ldi	r17, 0x01	; 1
    13a2:	1f 93       	push	r17
    13a4:	0f 93       	push	r16
    13a6:	ce 01       	movw	r24, r28
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	7c 01       	movw	r14, r24
    13ac:	ff 92       	push	r15
    13ae:	8f 93       	push	r24
    13b0:	ca d1       	rcall	.+916    	; 0x1746 <sprintf>
	oled_printf(lives_left);
    13b2:	c7 01       	movw	r24, r14
    13b4:	6e de       	rcall	.-804    	; 0x1092 <oled_printf>
	oled_printf("\n");
    13b6:	8d e1       	ldi	r24, 0x1D	; 29
    13b8:	92 e0       	ldi	r25, 0x02	; 2
    13ba:	6b de       	rcall	.-810    	; 0x1092 <oled_printf>
	oled_page_select(3);
    13bc:	83 e0       	ldi	r24, 0x03	; 3
    13be:	b4 dd       	rcall	.-1176   	; 0xf28 <oled_page_select>
	oled_printf("score: ");
    13c0:	88 e0       	ldi	r24, 0x08	; 8
    13c2:	92 e0       	ldi	r25, 0x02	; 2
    13c4:	66 de       	rcall	.-820    	; 0x1092 <oled_printf>
	char scr [4];
	sprintf(scr, "%d", com_get_score());
    13c6:	0d dd       	rcall	.-1510   	; 0xde2 <com_get_score>
    13c8:	9f 93       	push	r25
    13ca:	8f 93       	push	r24
    13cc:	1f 93       	push	r17
    13ce:	0f 93       	push	r16
    13d0:	7e 01       	movw	r14, r28
    13d2:	92 e0       	ldi	r25, 0x02	; 2
    13d4:	e9 0e       	add	r14, r25
    13d6:	f1 1c       	adc	r15, r1
    13d8:	ff 92       	push	r15
    13da:	ef 92       	push	r14
    13dc:	b4 d1       	rcall	.+872    	; 0x1746 <sprintf>
	oled_printf(scr);
    13de:	c7 01       	movw	r24, r14
    13e0:	58 de       	rcall	.-848    	; 0x1092 <oled_printf>
	oled_printf("\n");
    13e2:	8d e1       	ldi	r24, 0x1D	; 29
    13e4:	92 e0       	ldi	r25, 0x02	; 2
    13e6:	55 de       	rcall	.-854    	; 0x1092 <oled_printf>
	oled_page_select(4);
    13e8:	84 e0       	ldi	r24, 0x04	; 4
    13ea:	9e dd       	rcall	.-1220   	; 0xf28 <oled_page_select>
	oled_printf("high score: ");
    13ec:	83 e0       	ldi	r24, 0x03	; 3
    13ee:	92 e0       	ldi	r25, 0x02	; 2
    13f0:	50 de       	rcall	.-864    	; 0x1092 <oled_printf>
	char hs [4];
	sprintf(hs, "%d", high_score);
    13f2:	80 91 2b 02 	lds	r24, 0x022B
    13f6:	8f 93       	push	r24
    13f8:	80 91 2a 02 	lds	r24, 0x022A
    13fc:	8f 93       	push	r24
    13fe:	1f 93       	push	r17
    1400:	0f 93       	push	r16
    1402:	8e 01       	movw	r16, r28
    1404:	0a 5f       	subi	r16, 0xFA	; 250
    1406:	1f 4f       	sbci	r17, 0xFF	; 255
    1408:	1f 93       	push	r17
    140a:	0f 93       	push	r16
    140c:	9c d1       	rcall	.+824    	; 0x1746 <sprintf>
	oled_printf(hs);
    140e:	c8 01       	movw	r24, r16
    1410:	40 de       	rcall	.-896    	; 0x1092 <oled_printf>
	oled_printf("\n");
    1412:	8d e1       	ldi	r24, 0x1D	; 29
    1414:	92 e0       	ldi	r25, 0x02	; 2
    1416:	3d de       	rcall	.-902    	; 0x1092 <oled_printf>
    1418:	0f b6       	in	r0, 0x3f	; 63
    141a:	f8 94       	cli
    141c:	de bf       	out	0x3e, r29	; 62
    141e:	0f be       	out	0x3f, r0	; 63
    1420:	cd bf       	out	0x3d, r28	; 61
}
    1422:	29 96       	adiw	r28, 0x09	; 9
    1424:	0f b6       	in	r0, 0x3f	; 63
    1426:	f8 94       	cli
    1428:	de bf       	out	0x3e, r29	; 62
    142a:	0f be       	out	0x3f, r0	; 63
    142c:	cd bf       	out	0x3d, r28	; 61
    142e:	df 91       	pop	r29
    1430:	cf 91       	pop	r28
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	ff 90       	pop	r15
    1438:	ef 90       	pop	r14
    143a:	08 95       	ret

0000143c <oled_get_lives>:

int oled_get_lives(){
	return lives;
}
    143c:	80 91 08 01 	lds	r24, 0x0108
    1440:	90 91 09 01 	lds	r25, 0x0109
    1444:	08 95       	ret

00001446 <oled_reduce_lives>:

void oled_reduce_lives(){
	lives--;
    1446:	80 91 08 01 	lds	r24, 0x0108
    144a:	90 91 09 01 	lds	r25, 0x0109
    144e:	01 97       	sbiw	r24, 0x01	; 1
    1450:	90 93 09 01 	sts	0x0109, r25
    1454:	80 93 08 01 	sts	0x0108, r24
    1458:	08 95       	ret

0000145a <oled_reset_lives>:
}

void oled_reset_lives(){
	lives = 3;
    145a:	83 e0       	ldi	r24, 0x03	; 3
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	90 93 09 01 	sts	0x0109, r25
    1462:	80 93 08 01 	sts	0x0108, r24
    1466:	08 95       	ret

00001468 <oled_actualise_high_score>:
}

void oled_actualise_high_score(){
	int score = com_get_score();
    1468:	bc dc       	rcall	.-1672   	; 0xde2 <com_get_score>
	if(score > high_score){
    146a:	20 91 2a 02 	lds	r18, 0x022A
    146e:	30 91 2b 02 	lds	r19, 0x022B
    1472:	28 17       	cp	r18, r24
    1474:	39 07       	cpc	r19, r25
    1476:	24 f4       	brge	.+8      	; 0x1480 <oled_actualise_high_score+0x18>
		high_score = score;
    1478:	90 93 2b 02 	sts	0x022B, r25
    147c:	80 93 2a 02 	sts	0x022A, r24
	}
	xmem_write(high_score, HS_POS_ADDRESS);
    1480:	64 e0       	ldi	r22, 0x04	; 4
    1482:	78 e1       	ldi	r23, 0x18	; 24
    1484:	80 91 2a 02 	lds	r24, 0x022A
    1488:	6a c0       	rjmp	.+212    	; 0x155e <xmem_write>
    148a:	08 95       	ret

0000148c <oled_reset_hs>:
}

void oled_reset_hs(){
	high_score = 0;
    148c:	10 92 2b 02 	sts	0x022B, r1
    1490:	10 92 2a 02 	sts	0x022A, r1
	xmem_write(high_score, HS_POS_ADDRESS);
    1494:	64 e0       	ldi	r22, 0x04	; 4
    1496:	78 e1       	ldi	r23, 0x18	; 24
    1498:	80 e0       	ldi	r24, 0x00	; 0
    149a:	61 c0       	rjmp	.+194    	; 0x155e <xmem_write>
    149c:	08 95       	ret

0000149e <oled_game_over>:
}

void oled_game_over(){
	oled_clear_screen();
    149e:	63 dd       	rcall	.-1338   	; 0xf66 <oled_clear_screen>
	oled_page_select(1);
    14a0:	81 e0       	ldi	r24, 0x01	; 1
    14a2:	42 dd       	rcall	.-1404   	; 0xf28 <oled_page_select>
	oled_printf("GAME OVER... \n");
    14a4:	80 e1       	ldi	r24, 0x10	; 16
    14a6:	92 e0       	ldi	r25, 0x02	; 2
    14a8:	f4 cd       	rjmp	.-1048   	; 0x1092 <oled_printf>
    14aa:	08 95       	ret

000014ac <spi_init>:
#include "spi.h"

void spi_init() 
{
	/* Set MOSI and SCK and CS output, all others input */
	DDRB = (1 << PB5) | (1 << PB7) | (1 << PB4);
    14ac:	80 eb       	ldi	r24, 0xB0	; 176
    14ae:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1 << PB4);
    14b0:	c4 9a       	sbi	0x18, 4	; 24
	/* Enable interrupt */

	// SPCR = 1<<SPIE;

	/* Enable SPI, Master, set clock rate fck/16 , SPI mode 0 by default*/
	SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);// | (1<<SPIE)
    14b2:	81 e5       	ldi	r24, 0x51	; 81
    14b4:	8d b9       	out	0x0d, r24	; 13
    14b6:	08 95       	ret

000014b8 <spi_read>:
}

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
    14b8:	cf 93       	push	r28
    14ba:	df 93       	push	r29
    14bc:	cd b7       	in	r28, 0x3d	; 61
    14be:	de b7       	in	r29, 0x3e	; 62
    14c0:	2a 97       	sbiw	r28, 0x0a	; 10
    14c2:	0f b6       	in	r0, 0x3f	; 63
    14c4:	f8 94       	cli
    14c6:	de bf       	out	0x3e, r29	; 62
    14c8:	0f be       	out	0x3f, r0	; 63
    14ca:	cd bf       	out	0x3d, r28	; 61
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
    14cc:	66 23       	and	r22, r22
    14ce:	81 f0       	breq	.+32     	; 0x14f0 <spi_read+0x38>
    14d0:	fe 01       	movw	r30, r28
    14d2:	31 96       	adiw	r30, 0x01	; 1
    14d4:	a8 2f       	mov	r26, r24
    14d6:	b9 2f       	mov	r27, r25
    14d8:	cf 01       	movw	r24, r30
    14da:	86 0f       	add	r24, r22
    14dc:	91 1d       	adc	r25, r1
	{
		SPDR = dummy_data[i];
    14de:	21 91       	ld	r18, Z+
    14e0:	2f b9       	out	0x0f, r18	; 15
		while (!(SPSR & (1 << SPIF)));
    14e2:	77 9b       	sbis	0x0e, 7	; 14
    14e4:	fe cf       	rjmp	.-4      	; 0x14e2 <spi_read+0x2a>
		receive_data[i] = SPDR;
    14e6:	2f b1       	in	r18, 0x0f	; 15
    14e8:	2d 93       	st	X+, r18

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
    14ea:	e8 17       	cp	r30, r24
    14ec:	f9 07       	cpc	r31, r25
    14ee:	b9 f7       	brne	.-18     	; 0x14de <spi_read+0x26>
		SPDR = dummy_data[i];
		while (!(SPSR & (1 << SPIF)));
		receive_data[i] = SPDR;
	}
	
}
    14f0:	2a 96       	adiw	r28, 0x0a	; 10
    14f2:	0f b6       	in	r0, 0x3f	; 63
    14f4:	f8 94       	cli
    14f6:	de bf       	out	0x3e, r29	; 62
    14f8:	0f be       	out	0x3f, r0	; 63
    14fa:	cd bf       	out	0x3d, r28	; 61
    14fc:	df 91       	pop	r29
    14fe:	cf 91       	pop	r28
    1500:	08 95       	ret

00001502 <spi_write>:

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
    1502:	26 2f       	mov	r18, r22
    1504:	30 e0       	ldi	r19, 0x00	; 0
    1506:	12 16       	cp	r1, r18
    1508:	13 06       	cpc	r1, r19
    150a:	6c f4       	brge	.+26     	; 0x1526 <spi_write+0x24>
    150c:	e8 2f       	mov	r30, r24
    150e:	f9 2f       	mov	r31, r25
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	90 e0       	ldi	r25, 0x00	; 0
	{
		SPDR = send_data[i];
    1514:	41 91       	ld	r20, Z+
    1516:	4f b9       	out	0x0f, r20	; 15
		while (!(SPSR & (1 << SPIF)));
    1518:	77 9b       	sbis	0x0e, 7	; 14
    151a:	fe cf       	rjmp	.-4      	; 0x1518 <spi_write+0x16>
		dummy_data[i] = SPDR;
    151c:	4f b1       	in	r20, 0x0f	; 15
}

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
    151e:	01 96       	adiw	r24, 0x01	; 1
    1520:	82 17       	cp	r24, r18
    1522:	93 07       	cpc	r25, r19
    1524:	bc f3       	brlt	.-18     	; 0x1514 <spi_write+0x12>
    1526:	08 95       	ret

00001528 <USART_Transmit>:

//for 5 to 8 Data bits
void USART_Transmit(unsigned char data)
{
	//wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));//or UDRE1
    1528:	5d 9b       	sbis	0x0b, 5	; 11
    152a:	fe cf       	rjmp	.-4      	; 0x1528 <USART_Transmit>
	
	//Put data into buffer, sends the data
	UDR0 = data;//or UDR1
    152c:	8c b9       	out	0x0c, r24	; 12
    152e:	08 95       	ret

00001530 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	//Wait for data to be received
	while((UCSR0A & (1<<RXC0)));
    1530:	5f 99       	sbic	0x0b, 7	; 11
    1532:	fe cf       	rjmp	.-4      	; 0x1530 <USART_Receive>
	
	//Get and return data from buffer
	return UDR0;//or UDR1
    1534:	8c b1       	in	r24, 0x0c	; 12
}
    1536:	08 95       	ret

00001538 <USART_Init>:

void USART_Init(unsigned int ubrr)
{
	// Set baud rate
	UBRR0H = (unsigned char) (ubrr>>8);
    1538:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;
    153a:	89 b9       	out	0x09, r24	; 9
	
	
	// Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)  | (1<<TXEN0) | (1<<RXCIE0);
    153c:	88 e9       	ldi	r24, 0x98	; 152
    153e:	8a b9       	out	0x0a, r24	; 10
	
	//Set frame format: 8 data, 2 stop bit
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00); // or USBS1 or other one
    1540:	8e e8       	ldi	r24, 0x8E	; 142
    1542:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
    1544:	68 e9       	ldi	r22, 0x98	; 152
    1546:	7a e0       	ldi	r23, 0x0A	; 10
    1548:	84 e9       	ldi	r24, 0x94	; 148
    154a:	9a e0       	ldi	r25, 0x0A	; 10
    154c:	a1 c0       	rjmp	.+322    	; 0x1690 <fdevopen>
    154e:	08 95       	ret

00001550 <xmem_init>:

#include "xmem.h"
#include "usart.h"

void xmem_init(void){
	MCUCR |= (1<<SRE);
    1550:	85 b7       	in	r24, 0x35	; 53
    1552:	80 68       	ori	r24, 0x80	; 128
    1554:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);
    1556:	80 b7       	in	r24, 0x30	; 48
    1558:	80 62       	ori	r24, 0x20	; 32
    155a:	80 bf       	out	0x30, r24	; 48
    155c:	08 95       	ret

0000155e <xmem_write>:
}

void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	ext_mem[addr] = data;
    155e:	fb 01       	movw	r30, r22
    1560:	f0 5f       	subi	r31, 0xF0	; 240
    1562:	80 83       	st	Z, r24
    1564:	08 95       	ret

00001566 <xmem_read>:
}

uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char*) BASE_ADDRESS;
	uint8_t ret_val = ext_mem[addr];
    1566:	90 5f       	subi	r25, 0xF0	; 240
    1568:	fc 01       	movw	r30, r24
    156a:	80 81       	ld	r24, Z
	return ret_val;
}
    156c:	08 95       	ret

0000156e <global_init>:
#include "communication.h"


void global_init(){
	
	USART_Init(MYUBRR);
    156e:	8f e1       	ldi	r24, 0x1F	; 31
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	e2 df       	rcall	.-60     	; 0x1538 <USART_Init>
	xmem_init();
    1574:	ed df       	rcall	.-38     	; 0x1550 <xmem_init>
	oled_init();
    1576:	0b de       	rcall	.-1002   	; 0x118e <oled_init>
	adc_init();
    1578:	32 d9       	rcall	.-3484   	; 0x7de <adc_init>
	can_init();
    157a:	48 d9       	rcall	.-3440   	; 0x80c <can_init>
	//SRAM_test();
	
	DDRB &= ~(0b0111);	
    157c:	87 b3       	in	r24, 0x17	; 23
    157e:	88 7f       	andi	r24, 0xF8	; 248
    1580:	87 bb       	out	0x17, r24	; 23
    1582:	08 95       	ret

00001584 <main>:
}


int main(void){
    1584:	cf 93       	push	r28
    1586:	df 93       	push	r29
    1588:	cd b7       	in	r28, 0x3d	; 61
    158a:	de b7       	in	r29, 0x3e	; 62
    158c:	2d 97       	sbiw	r28, 0x0d	; 13
    158e:	0f b6       	in	r0, 0x3f	; 63
    1590:	f8 94       	cli
    1592:	de bf       	out	0x3e, r29	; 62
    1594:	0f be       	out	0x3f, r0	; 63
    1596:	cd bf       	out	0x3d, r28	; 61
	enum mode{IDLE, GAME};
	int new_game = 1;
	
	
	global_init();
    1598:	ea df       	rcall	.-44     	; 0x156e <global_init>
	
	struct can_message message;
	message.id = 3;
    159a:	83 e0       	ldi	r24, 0x03	; 3
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	9a 83       	std	Y+2, r25	; 0x02
    15a0:	89 83       	std	Y+1, r24	; 0x01
	message.length = 1;
    15a2:	81 e0       	ldi	r24, 0x01	; 1
    15a4:	8b 83       	std	Y+3, r24	; 0x03
	message.data[0] = 124;
    15a6:	8c e7       	ldi	r24, 0x7C	; 124
    15a8:	8c 83       	std	Y+4, r24	; 0x04
	
	int current_mode = IDLE;
    15aa:	00 e0       	ldi	r16, 0x00	; 0
    15ac:	10 e0       	ldi	r17, 0x00	; 0
}


int main(void){
	enum mode{IDLE, GAME};
	int new_game = 1;
    15ae:	ee 24       	eor	r14, r14
    15b0:	e3 94       	inc	r14
    15b2:	f1 2c       	mov	r15, r1
		switch(current_mode){
			case IDLE:
				com_navigate_display();
				//com_actualise_system();
				if (com_get_start_game()){
					current_mode = GAME;
    15b4:	aa 24       	eor	r10, r10
    15b6:	a3 94       	inc	r10
    15b8:	b1 2c       	mov	r11, r1
    15ba:	c1 2c       	mov	r12, r1
    15bc:	d1 2c       	mov	r13, r1
	message.length = 1;
	message.data[0] = 124;
	
	int current_mode = IDLE;
	while(1){
		switch(current_mode){
    15be:	01 15       	cp	r16, r1
    15c0:	11 05       	cpc	r17, r1
    15c2:	21 f0       	breq	.+8      	; 0x15cc <main+0x48>
    15c4:	01 30       	cpi	r16, 0x01	; 1
    15c6:	11 05       	cpc	r17, r1
    15c8:	49 f0       	breq	.+18     	; 0x15dc <main+0x58>
    15ca:	2a c0       	rjmp	.+84     	; 0x1620 <main+0x9c>
			case IDLE:
				com_navigate_display();
    15cc:	34 da       	rcall	.-2968   	; 0xa36 <com_navigate_display>
				//com_actualise_system();
				if (com_get_start_game()){
    15ce:	1d dc       	rcall	.-1990   	; 0xe0a <com_get_start_game>
    15d0:	89 2b       	or	r24, r25
    15d2:	69 f1       	breq	.+90     	; 0x162e <main+0xaa>
					current_mode = GAME;
					com_set_start_game();
    15d4:	1f dc       	rcall	.-1986   	; 0xe14 <com_set_start_game>
		switch(current_mode){
			case IDLE:
				com_navigate_display();
				//com_actualise_system();
				if (com_get_start_game()){
					current_mode = GAME;
    15d6:	0a 2d       	mov	r16, r10
    15d8:	1b 2d       	mov	r17, r11
    15da:	29 c0       	rjmp	.+82     	; 0x162e <main+0xaa>
					com_set_start_game();
				}
				break;
			case GAME:
				if (new_game){
    15dc:	ef 28       	or	r14, r15
    15de:	09 f0       	breq	.+2      	; 0x15e2 <main+0x5e>
					com_reset_score();
    15e0:	fb db       	rcall	.-2058   	; 0xdd8 <com_reset_score>
					new_game = 0;
				}
				com_play_game();
    15e2:	7d db       	rcall	.-2310   	; 0xcde <com_play_game>
				if (com_get_back()){
    15e4:	08 dc       	rcall	.-2032   	; 0xdf6 <com_get_back>
    15e6:	89 2b       	or	r24, r25
    15e8:	19 f0       	breq	.+6      	; 0x15f0 <main+0x6c>
					current_mode = IDLE;
					com_set_back();
    15ea:	0a dc       	rcall	.-2028   	; 0xe00 <com_set_back>
					com_reset_score();
					new_game = 0;
				}
				com_play_game();
				if (com_get_back()){
					current_mode = IDLE;
    15ec:	0c 2d       	mov	r16, r12
    15ee:	1d 2d       	mov	r17, r13
					com_set_back();
				}
				if (can_get_message(&message))
    15f0:	ce 01       	movw	r24, r28
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	e5 d9       	rcall	.-3126   	; 0x9c0 <can_get_message>
    15f6:	89 2b       	or	r24, r25
    15f8:	a9 f0       	breq	.+42     	; 0x1624 <main+0xa0>
				{
					if(message.id == 1){
    15fa:	89 81       	ldd	r24, Y+1	; 0x01
    15fc:	9a 81       	ldd	r25, Y+2	; 0x02
    15fe:	81 30       	cpi	r24, 0x01	; 1
    1600:	91 05       	cpc	r25, r1
    1602:	31 f4       	brne	.+12     	; 0x1610 <main+0x8c>
						com_set_score(message.data[0]);
    1604:	8c 81       	ldd	r24, Y+4	; 0x04
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	f1 db       	rcall	.-2078   	; 0xdec <com_set_score>
    160a:	ec 2c       	mov	r14, r12
    160c:	fd 2c       	mov	r15, r13
    160e:	0f c0       	rjmp	.+30     	; 0x162e <main+0xaa>
					}
					else if(message.id == 2){
    1610:	02 97       	sbiw	r24, 0x02	; 2
    1612:	59 f4       	brne	.+22     	; 0x162a <main+0xa6>
						oled_reduce_lives();
    1614:	18 df       	rcall	.-464    	; 0x1446 <oled_reduce_lives>
						oled_actualise_high_score();
    1616:	28 df       	rcall	.-432    	; 0x1468 <oled_actualise_high_score>
						com_reset_score();
    1618:	df db       	rcall	.-2114   	; 0xdd8 <com_reset_score>
    161a:	ec 2c       	mov	r14, r12
    161c:	fd 2c       	mov	r15, r13
    161e:	07 c0       	rjmp	.+14     	; 0x162e <main+0xaa>
					}
					
				}
				break;
			default:
				com_navigate_display();
    1620:	0a da       	rcall	.-3052   	; 0xa36 <com_navigate_display>
				break;
    1622:	05 c0       	rjmp	.+10     	; 0x162e <main+0xaa>
    1624:	ec 2c       	mov	r14, r12
    1626:	fd 2c       	mov	r15, r13
    1628:	02 c0       	rjmp	.+4      	; 0x162e <main+0xaa>
    162a:	ec 2c       	mov	r14, r12
    162c:	fd 2c       	mov	r15, r13
    162e:	2f ef       	ldi	r18, 0xFF	; 255
    1630:	8f e7       	ldi	r24, 0x7F	; 127
    1632:	91 e0       	ldi	r25, 0x01	; 1
    1634:	21 50       	subi	r18, 0x01	; 1
    1636:	80 40       	sbci	r24, 0x00	; 0
    1638:	90 40       	sbci	r25, 0x00	; 0
    163a:	e1 f7       	brne	.-8      	; 0x1634 <main+0xb0>
    163c:	00 c0       	rjmp	.+0      	; 0x163e <main+0xba>
    163e:	00 c0       	rjmp	.+0      	; 0x1640 <main+0xbc>
    1640:	be cf       	rjmp	.-132    	; 0x15be <main+0x3a>

00001642 <__divmodhi4>:
    1642:	97 fb       	bst	r25, 7
    1644:	07 2e       	mov	r0, r23
    1646:	16 f4       	brtc	.+4      	; 0x164c <__divmodhi4+0xa>
    1648:	00 94       	com	r0
    164a:	06 d0       	rcall	.+12     	; 0x1658 <__divmodhi4_neg1>
    164c:	77 fd       	sbrc	r23, 7
    164e:	08 d0       	rcall	.+16     	; 0x1660 <__divmodhi4_neg2>
    1650:	0b d0       	rcall	.+22     	; 0x1668 <__udivmodhi4>
    1652:	07 fc       	sbrc	r0, 7
    1654:	05 d0       	rcall	.+10     	; 0x1660 <__divmodhi4_neg2>
    1656:	3e f4       	brtc	.+14     	; 0x1666 <__divmodhi4_exit>

00001658 <__divmodhi4_neg1>:
    1658:	90 95       	com	r25
    165a:	81 95       	neg	r24
    165c:	9f 4f       	sbci	r25, 0xFF	; 255
    165e:	08 95       	ret

00001660 <__divmodhi4_neg2>:
    1660:	70 95       	com	r23
    1662:	61 95       	neg	r22
    1664:	7f 4f       	sbci	r23, 0xFF	; 255

00001666 <__divmodhi4_exit>:
    1666:	08 95       	ret

00001668 <__udivmodhi4>:
    1668:	aa 1b       	sub	r26, r26
    166a:	bb 1b       	sub	r27, r27
    166c:	51 e1       	ldi	r21, 0x11	; 17
    166e:	07 c0       	rjmp	.+14     	; 0x167e <__udivmodhi4_ep>

00001670 <__udivmodhi4_loop>:
    1670:	aa 1f       	adc	r26, r26
    1672:	bb 1f       	adc	r27, r27
    1674:	a6 17       	cp	r26, r22
    1676:	b7 07       	cpc	r27, r23
    1678:	10 f0       	brcs	.+4      	; 0x167e <__udivmodhi4_ep>
    167a:	a6 1b       	sub	r26, r22
    167c:	b7 0b       	sbc	r27, r23

0000167e <__udivmodhi4_ep>:
    167e:	88 1f       	adc	r24, r24
    1680:	99 1f       	adc	r25, r25
    1682:	5a 95       	dec	r21
    1684:	a9 f7       	brne	.-22     	; 0x1670 <__udivmodhi4_loop>
    1686:	80 95       	com	r24
    1688:	90 95       	com	r25
    168a:	bc 01       	movw	r22, r24
    168c:	cd 01       	movw	r24, r26
    168e:	08 95       	ret

00001690 <fdevopen>:
    1690:	0f 93       	push	r16
    1692:	1f 93       	push	r17
    1694:	cf 93       	push	r28
    1696:	df 93       	push	r29
    1698:	ec 01       	movw	r28, r24
    169a:	8b 01       	movw	r16, r22
    169c:	00 97       	sbiw	r24, 0x00	; 0
    169e:	31 f4       	brne	.+12     	; 0x16ac <fdevopen+0x1c>
    16a0:	61 15       	cp	r22, r1
    16a2:	71 05       	cpc	r23, r1
    16a4:	19 f4       	brne	.+6      	; 0x16ac <fdevopen+0x1c>
    16a6:	80 e0       	ldi	r24, 0x00	; 0
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	37 c0       	rjmp	.+110    	; 0x171a <fdevopen+0x8a>
    16ac:	6e e0       	ldi	r22, 0x0E	; 14
    16ae:	70 e0       	ldi	r23, 0x00	; 0
    16b0:	81 e0       	ldi	r24, 0x01	; 1
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	2a d2       	rcall	.+1108   	; 0x1b0a <calloc>
    16b6:	fc 01       	movw	r30, r24
    16b8:	00 97       	sbiw	r24, 0x00	; 0
    16ba:	a9 f3       	breq	.-22     	; 0x16a6 <fdevopen+0x16>
    16bc:	80 e8       	ldi	r24, 0x80	; 128
    16be:	83 83       	std	Z+3, r24	; 0x03
    16c0:	01 15       	cp	r16, r1
    16c2:	11 05       	cpc	r17, r1
    16c4:	71 f0       	breq	.+28     	; 0x16e2 <fdevopen+0x52>
    16c6:	13 87       	std	Z+11, r17	; 0x0b
    16c8:	02 87       	std	Z+10, r16	; 0x0a
    16ca:	81 e8       	ldi	r24, 0x81	; 129
    16cc:	83 83       	std	Z+3, r24	; 0x03
    16ce:	80 91 2e 02 	lds	r24, 0x022E
    16d2:	90 91 2f 02 	lds	r25, 0x022F
    16d6:	89 2b       	or	r24, r25
    16d8:	21 f4       	brne	.+8      	; 0x16e2 <fdevopen+0x52>
    16da:	f0 93 2f 02 	sts	0x022F, r31
    16de:	e0 93 2e 02 	sts	0x022E, r30
    16e2:	20 97       	sbiw	r28, 0x00	; 0
    16e4:	c9 f0       	breq	.+50     	; 0x1718 <fdevopen+0x88>
    16e6:	d1 87       	std	Z+9, r29	; 0x09
    16e8:	c0 87       	std	Z+8, r28	; 0x08
    16ea:	83 81       	ldd	r24, Z+3	; 0x03
    16ec:	82 60       	ori	r24, 0x02	; 2
    16ee:	83 83       	std	Z+3, r24	; 0x03
    16f0:	80 91 30 02 	lds	r24, 0x0230
    16f4:	90 91 31 02 	lds	r25, 0x0231
    16f8:	89 2b       	or	r24, r25
    16fa:	71 f4       	brne	.+28     	; 0x1718 <fdevopen+0x88>
    16fc:	f0 93 31 02 	sts	0x0231, r31
    1700:	e0 93 30 02 	sts	0x0230, r30
    1704:	80 91 32 02 	lds	r24, 0x0232
    1708:	90 91 33 02 	lds	r25, 0x0233
    170c:	89 2b       	or	r24, r25
    170e:	21 f4       	brne	.+8      	; 0x1718 <fdevopen+0x88>
    1710:	f0 93 33 02 	sts	0x0233, r31
    1714:	e0 93 32 02 	sts	0x0232, r30
    1718:	cf 01       	movw	r24, r30
    171a:	df 91       	pop	r29
    171c:	cf 91       	pop	r28
    171e:	1f 91       	pop	r17
    1720:	0f 91       	pop	r16
    1722:	08 95       	ret

00001724 <printf>:
    1724:	a0 e0       	ldi	r26, 0x00	; 0
    1726:	b0 e0       	ldi	r27, 0x00	; 0
    1728:	e7 e9       	ldi	r30, 0x97	; 151
    172a:	fb e0       	ldi	r31, 0x0B	; 11
    172c:	ec c3       	rjmp	.+2008   	; 0x1f06 <__prologue_saves__+0x20>
    172e:	fe 01       	movw	r30, r28
    1730:	35 96       	adiw	r30, 0x05	; 5
    1732:	61 91       	ld	r22, Z+
    1734:	71 91       	ld	r23, Z+
    1736:	af 01       	movw	r20, r30
    1738:	80 91 30 02 	lds	r24, 0x0230
    173c:	90 91 31 02 	lds	r25, 0x0231
    1740:	21 d0       	rcall	.+66     	; 0x1784 <vfprintf>
    1742:	e2 e0       	ldi	r30, 0x02	; 2
    1744:	fc c3       	rjmp	.+2040   	; 0x1f3e <__epilogue_restores__+0x20>

00001746 <sprintf>:
    1746:	ae e0       	ldi	r26, 0x0E	; 14
    1748:	b0 e0       	ldi	r27, 0x00	; 0
    174a:	e8 ea       	ldi	r30, 0xA8	; 168
    174c:	fb e0       	ldi	r31, 0x0B	; 11
    174e:	d9 c3       	rjmp	.+1970   	; 0x1f02 <__prologue_saves__+0x1c>
    1750:	0d 89       	ldd	r16, Y+21	; 0x15
    1752:	1e 89       	ldd	r17, Y+22	; 0x16
    1754:	86 e0       	ldi	r24, 0x06	; 6
    1756:	8c 83       	std	Y+4, r24	; 0x04
    1758:	1a 83       	std	Y+2, r17	; 0x02
    175a:	09 83       	std	Y+1, r16	; 0x01
    175c:	8f ef       	ldi	r24, 0xFF	; 255
    175e:	9f e7       	ldi	r25, 0x7F	; 127
    1760:	9e 83       	std	Y+6, r25	; 0x06
    1762:	8d 83       	std	Y+5, r24	; 0x05
    1764:	ae 01       	movw	r20, r28
    1766:	47 5e       	subi	r20, 0xE7	; 231
    1768:	5f 4f       	sbci	r21, 0xFF	; 255
    176a:	6f 89       	ldd	r22, Y+23	; 0x17
    176c:	78 8d       	ldd	r23, Y+24	; 0x18
    176e:	ce 01       	movw	r24, r28
    1770:	01 96       	adiw	r24, 0x01	; 1
    1772:	08 d0       	rcall	.+16     	; 0x1784 <vfprintf>
    1774:	ef 81       	ldd	r30, Y+7	; 0x07
    1776:	f8 85       	ldd	r31, Y+8	; 0x08
    1778:	e0 0f       	add	r30, r16
    177a:	f1 1f       	adc	r31, r17
    177c:	10 82       	st	Z, r1
    177e:	2e 96       	adiw	r28, 0x0e	; 14
    1780:	e4 e0       	ldi	r30, 0x04	; 4
    1782:	db c3       	rjmp	.+1974   	; 0x1f3a <__epilogue_restores__+0x1c>

00001784 <vfprintf>:
    1784:	ac e0       	ldi	r26, 0x0C	; 12
    1786:	b0 e0       	ldi	r27, 0x00	; 0
    1788:	e7 ec       	ldi	r30, 0xC7	; 199
    178a:	fb e0       	ldi	r31, 0x0B	; 11
    178c:	ac c3       	rjmp	.+1880   	; 0x1ee6 <__prologue_saves__>
    178e:	7c 01       	movw	r14, r24
    1790:	6b 01       	movw	r12, r22
    1792:	8a 01       	movw	r16, r20
    1794:	fc 01       	movw	r30, r24
    1796:	17 82       	std	Z+7, r1	; 0x07
    1798:	16 82       	std	Z+6, r1	; 0x06
    179a:	83 81       	ldd	r24, Z+3	; 0x03
    179c:	81 ff       	sbrs	r24, 1
    179e:	b0 c1       	rjmp	.+864    	; 0x1b00 <vfprintf+0x37c>
    17a0:	ce 01       	movw	r24, r28
    17a2:	01 96       	adiw	r24, 0x01	; 1
    17a4:	4c 01       	movw	r8, r24
    17a6:	f7 01       	movw	r30, r14
    17a8:	93 81       	ldd	r25, Z+3	; 0x03
    17aa:	f6 01       	movw	r30, r12
    17ac:	93 fd       	sbrc	r25, 3
    17ae:	85 91       	lpm	r24, Z+
    17b0:	93 ff       	sbrs	r25, 3
    17b2:	81 91       	ld	r24, Z+
    17b4:	6f 01       	movw	r12, r30
    17b6:	88 23       	and	r24, r24
    17b8:	09 f4       	brne	.+2      	; 0x17bc <vfprintf+0x38>
    17ba:	9e c1       	rjmp	.+828    	; 0x1af8 <vfprintf+0x374>
    17bc:	85 32       	cpi	r24, 0x25	; 37
    17be:	39 f4       	brne	.+14     	; 0x17ce <vfprintf+0x4a>
    17c0:	93 fd       	sbrc	r25, 3
    17c2:	85 91       	lpm	r24, Z+
    17c4:	93 ff       	sbrs	r25, 3
    17c6:	81 91       	ld	r24, Z+
    17c8:	6f 01       	movw	r12, r30
    17ca:	85 32       	cpi	r24, 0x25	; 37
    17cc:	21 f4       	brne	.+8      	; 0x17d6 <vfprintf+0x52>
    17ce:	b7 01       	movw	r22, r14
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	f9 d2       	rcall	.+1522   	; 0x1dc6 <fputc>
    17d4:	e8 cf       	rjmp	.-48     	; 0x17a6 <vfprintf+0x22>
    17d6:	51 2c       	mov	r5, r1
    17d8:	31 2c       	mov	r3, r1
    17da:	20 e0       	ldi	r18, 0x00	; 0
    17dc:	20 32       	cpi	r18, 0x20	; 32
    17de:	a0 f4       	brcc	.+40     	; 0x1808 <vfprintf+0x84>
    17e0:	8b 32       	cpi	r24, 0x2B	; 43
    17e2:	69 f0       	breq	.+26     	; 0x17fe <vfprintf+0x7a>
    17e4:	30 f4       	brcc	.+12     	; 0x17f2 <vfprintf+0x6e>
    17e6:	80 32       	cpi	r24, 0x20	; 32
    17e8:	59 f0       	breq	.+22     	; 0x1800 <vfprintf+0x7c>
    17ea:	83 32       	cpi	r24, 0x23	; 35
    17ec:	69 f4       	brne	.+26     	; 0x1808 <vfprintf+0x84>
    17ee:	20 61       	ori	r18, 0x10	; 16
    17f0:	2c c0       	rjmp	.+88     	; 0x184a <vfprintf+0xc6>
    17f2:	8d 32       	cpi	r24, 0x2D	; 45
    17f4:	39 f0       	breq	.+14     	; 0x1804 <vfprintf+0x80>
    17f6:	80 33       	cpi	r24, 0x30	; 48
    17f8:	39 f4       	brne	.+14     	; 0x1808 <vfprintf+0x84>
    17fa:	21 60       	ori	r18, 0x01	; 1
    17fc:	26 c0       	rjmp	.+76     	; 0x184a <vfprintf+0xc6>
    17fe:	22 60       	ori	r18, 0x02	; 2
    1800:	24 60       	ori	r18, 0x04	; 4
    1802:	23 c0       	rjmp	.+70     	; 0x184a <vfprintf+0xc6>
    1804:	28 60       	ori	r18, 0x08	; 8
    1806:	21 c0       	rjmp	.+66     	; 0x184a <vfprintf+0xc6>
    1808:	27 fd       	sbrc	r18, 7
    180a:	27 c0       	rjmp	.+78     	; 0x185a <vfprintf+0xd6>
    180c:	30 ed       	ldi	r19, 0xD0	; 208
    180e:	38 0f       	add	r19, r24
    1810:	3a 30       	cpi	r19, 0x0A	; 10
    1812:	78 f4       	brcc	.+30     	; 0x1832 <vfprintf+0xae>
    1814:	26 ff       	sbrs	r18, 6
    1816:	06 c0       	rjmp	.+12     	; 0x1824 <vfprintf+0xa0>
    1818:	fa e0       	ldi	r31, 0x0A	; 10
    181a:	5f 9e       	mul	r5, r31
    181c:	30 0d       	add	r19, r0
    181e:	11 24       	eor	r1, r1
    1820:	53 2e       	mov	r5, r19
    1822:	13 c0       	rjmp	.+38     	; 0x184a <vfprintf+0xc6>
    1824:	8a e0       	ldi	r24, 0x0A	; 10
    1826:	38 9e       	mul	r3, r24
    1828:	30 0d       	add	r19, r0
    182a:	11 24       	eor	r1, r1
    182c:	33 2e       	mov	r3, r19
    182e:	20 62       	ori	r18, 0x20	; 32
    1830:	0c c0       	rjmp	.+24     	; 0x184a <vfprintf+0xc6>
    1832:	8e 32       	cpi	r24, 0x2E	; 46
    1834:	21 f4       	brne	.+8      	; 0x183e <vfprintf+0xba>
    1836:	26 fd       	sbrc	r18, 6
    1838:	5f c1       	rjmp	.+702    	; 0x1af8 <vfprintf+0x374>
    183a:	20 64       	ori	r18, 0x40	; 64
    183c:	06 c0       	rjmp	.+12     	; 0x184a <vfprintf+0xc6>
    183e:	8c 36       	cpi	r24, 0x6C	; 108
    1840:	11 f4       	brne	.+4      	; 0x1846 <vfprintf+0xc2>
    1842:	20 68       	ori	r18, 0x80	; 128
    1844:	02 c0       	rjmp	.+4      	; 0x184a <vfprintf+0xc6>
    1846:	88 36       	cpi	r24, 0x68	; 104
    1848:	41 f4       	brne	.+16     	; 0x185a <vfprintf+0xd6>
    184a:	f6 01       	movw	r30, r12
    184c:	93 fd       	sbrc	r25, 3
    184e:	85 91       	lpm	r24, Z+
    1850:	93 ff       	sbrs	r25, 3
    1852:	81 91       	ld	r24, Z+
    1854:	6f 01       	movw	r12, r30
    1856:	81 11       	cpse	r24, r1
    1858:	c1 cf       	rjmp	.-126    	; 0x17dc <vfprintf+0x58>
    185a:	98 2f       	mov	r25, r24
    185c:	9f 7d       	andi	r25, 0xDF	; 223
    185e:	95 54       	subi	r25, 0x45	; 69
    1860:	93 30       	cpi	r25, 0x03	; 3
    1862:	28 f4       	brcc	.+10     	; 0x186e <vfprintf+0xea>
    1864:	0c 5f       	subi	r16, 0xFC	; 252
    1866:	1f 4f       	sbci	r17, 0xFF	; 255
    1868:	ff e3       	ldi	r31, 0x3F	; 63
    186a:	f9 83       	std	Y+1, r31	; 0x01
    186c:	0d c0       	rjmp	.+26     	; 0x1888 <vfprintf+0x104>
    186e:	83 36       	cpi	r24, 0x63	; 99
    1870:	31 f0       	breq	.+12     	; 0x187e <vfprintf+0xfa>
    1872:	83 37       	cpi	r24, 0x73	; 115
    1874:	71 f0       	breq	.+28     	; 0x1892 <vfprintf+0x10e>
    1876:	83 35       	cpi	r24, 0x53	; 83
    1878:	09 f0       	breq	.+2      	; 0x187c <vfprintf+0xf8>
    187a:	57 c0       	rjmp	.+174    	; 0x192a <vfprintf+0x1a6>
    187c:	21 c0       	rjmp	.+66     	; 0x18c0 <vfprintf+0x13c>
    187e:	f8 01       	movw	r30, r16
    1880:	80 81       	ld	r24, Z
    1882:	89 83       	std	Y+1, r24	; 0x01
    1884:	0e 5f       	subi	r16, 0xFE	; 254
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	44 24       	eor	r4, r4
    188a:	43 94       	inc	r4
    188c:	51 2c       	mov	r5, r1
    188e:	54 01       	movw	r10, r8
    1890:	14 c0       	rjmp	.+40     	; 0x18ba <vfprintf+0x136>
    1892:	38 01       	movw	r6, r16
    1894:	f2 e0       	ldi	r31, 0x02	; 2
    1896:	6f 0e       	add	r6, r31
    1898:	71 1c       	adc	r7, r1
    189a:	f8 01       	movw	r30, r16
    189c:	a0 80       	ld	r10, Z
    189e:	b1 80       	ldd	r11, Z+1	; 0x01
    18a0:	26 ff       	sbrs	r18, 6
    18a2:	03 c0       	rjmp	.+6      	; 0x18aa <vfprintf+0x126>
    18a4:	65 2d       	mov	r22, r5
    18a6:	70 e0       	ldi	r23, 0x00	; 0
    18a8:	02 c0       	rjmp	.+4      	; 0x18ae <vfprintf+0x12a>
    18aa:	6f ef       	ldi	r22, 0xFF	; 255
    18ac:	7f ef       	ldi	r23, 0xFF	; 255
    18ae:	c5 01       	movw	r24, r10
    18b0:	2c 87       	std	Y+12, r18	; 0x0c
    18b2:	7e d2       	rcall	.+1276   	; 0x1db0 <strnlen>
    18b4:	2c 01       	movw	r4, r24
    18b6:	83 01       	movw	r16, r6
    18b8:	2c 85       	ldd	r18, Y+12	; 0x0c
    18ba:	2f 77       	andi	r18, 0x7F	; 127
    18bc:	22 2e       	mov	r2, r18
    18be:	16 c0       	rjmp	.+44     	; 0x18ec <vfprintf+0x168>
    18c0:	38 01       	movw	r6, r16
    18c2:	f2 e0       	ldi	r31, 0x02	; 2
    18c4:	6f 0e       	add	r6, r31
    18c6:	71 1c       	adc	r7, r1
    18c8:	f8 01       	movw	r30, r16
    18ca:	a0 80       	ld	r10, Z
    18cc:	b1 80       	ldd	r11, Z+1	; 0x01
    18ce:	26 ff       	sbrs	r18, 6
    18d0:	03 c0       	rjmp	.+6      	; 0x18d8 <vfprintf+0x154>
    18d2:	65 2d       	mov	r22, r5
    18d4:	70 e0       	ldi	r23, 0x00	; 0
    18d6:	02 c0       	rjmp	.+4      	; 0x18dc <vfprintf+0x158>
    18d8:	6f ef       	ldi	r22, 0xFF	; 255
    18da:	7f ef       	ldi	r23, 0xFF	; 255
    18dc:	c5 01       	movw	r24, r10
    18de:	2c 87       	std	Y+12, r18	; 0x0c
    18e0:	55 d2       	rcall	.+1194   	; 0x1d8c <strnlen_P>
    18e2:	2c 01       	movw	r4, r24
    18e4:	2c 85       	ldd	r18, Y+12	; 0x0c
    18e6:	20 68       	ori	r18, 0x80	; 128
    18e8:	22 2e       	mov	r2, r18
    18ea:	83 01       	movw	r16, r6
    18ec:	23 fc       	sbrc	r2, 3
    18ee:	19 c0       	rjmp	.+50     	; 0x1922 <vfprintf+0x19e>
    18f0:	83 2d       	mov	r24, r3
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	48 16       	cp	r4, r24
    18f6:	59 06       	cpc	r5, r25
    18f8:	a0 f4       	brcc	.+40     	; 0x1922 <vfprintf+0x19e>
    18fa:	b7 01       	movw	r22, r14
    18fc:	80 e2       	ldi	r24, 0x20	; 32
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	62 d2       	rcall	.+1220   	; 0x1dc6 <fputc>
    1902:	3a 94       	dec	r3
    1904:	f5 cf       	rjmp	.-22     	; 0x18f0 <vfprintf+0x16c>
    1906:	f5 01       	movw	r30, r10
    1908:	27 fc       	sbrc	r2, 7
    190a:	85 91       	lpm	r24, Z+
    190c:	27 fe       	sbrs	r2, 7
    190e:	81 91       	ld	r24, Z+
    1910:	5f 01       	movw	r10, r30
    1912:	b7 01       	movw	r22, r14
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	57 d2       	rcall	.+1198   	; 0x1dc6 <fputc>
    1918:	31 10       	cpse	r3, r1
    191a:	3a 94       	dec	r3
    191c:	f1 e0       	ldi	r31, 0x01	; 1
    191e:	4f 1a       	sub	r4, r31
    1920:	51 08       	sbc	r5, r1
    1922:	41 14       	cp	r4, r1
    1924:	51 04       	cpc	r5, r1
    1926:	79 f7       	brne	.-34     	; 0x1906 <vfprintf+0x182>
    1928:	de c0       	rjmp	.+444    	; 0x1ae6 <vfprintf+0x362>
    192a:	84 36       	cpi	r24, 0x64	; 100
    192c:	11 f0       	breq	.+4      	; 0x1932 <vfprintf+0x1ae>
    192e:	89 36       	cpi	r24, 0x69	; 105
    1930:	31 f5       	brne	.+76     	; 0x197e <vfprintf+0x1fa>
    1932:	f8 01       	movw	r30, r16
    1934:	27 ff       	sbrs	r18, 7
    1936:	07 c0       	rjmp	.+14     	; 0x1946 <vfprintf+0x1c2>
    1938:	60 81       	ld	r22, Z
    193a:	71 81       	ldd	r23, Z+1	; 0x01
    193c:	82 81       	ldd	r24, Z+2	; 0x02
    193e:	93 81       	ldd	r25, Z+3	; 0x03
    1940:	0c 5f       	subi	r16, 0xFC	; 252
    1942:	1f 4f       	sbci	r17, 0xFF	; 255
    1944:	08 c0       	rjmp	.+16     	; 0x1956 <vfprintf+0x1d2>
    1946:	60 81       	ld	r22, Z
    1948:	71 81       	ldd	r23, Z+1	; 0x01
    194a:	88 27       	eor	r24, r24
    194c:	77 fd       	sbrc	r23, 7
    194e:	80 95       	com	r24
    1950:	98 2f       	mov	r25, r24
    1952:	0e 5f       	subi	r16, 0xFE	; 254
    1954:	1f 4f       	sbci	r17, 0xFF	; 255
    1956:	2f 76       	andi	r18, 0x6F	; 111
    1958:	b2 2e       	mov	r11, r18
    195a:	97 ff       	sbrs	r25, 7
    195c:	09 c0       	rjmp	.+18     	; 0x1970 <vfprintf+0x1ec>
    195e:	90 95       	com	r25
    1960:	80 95       	com	r24
    1962:	70 95       	com	r23
    1964:	61 95       	neg	r22
    1966:	7f 4f       	sbci	r23, 0xFF	; 255
    1968:	8f 4f       	sbci	r24, 0xFF	; 255
    196a:	9f 4f       	sbci	r25, 0xFF	; 255
    196c:	20 68       	ori	r18, 0x80	; 128
    196e:	b2 2e       	mov	r11, r18
    1970:	2a e0       	ldi	r18, 0x0A	; 10
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	a4 01       	movw	r20, r8
    1976:	59 d2       	rcall	.+1202   	; 0x1e2a <__ultoa_invert>
    1978:	a8 2e       	mov	r10, r24
    197a:	a8 18       	sub	r10, r8
    197c:	43 c0       	rjmp	.+134    	; 0x1a04 <vfprintf+0x280>
    197e:	85 37       	cpi	r24, 0x75	; 117
    1980:	29 f4       	brne	.+10     	; 0x198c <vfprintf+0x208>
    1982:	2f 7e       	andi	r18, 0xEF	; 239
    1984:	b2 2e       	mov	r11, r18
    1986:	2a e0       	ldi	r18, 0x0A	; 10
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	25 c0       	rjmp	.+74     	; 0x19d6 <vfprintf+0x252>
    198c:	f2 2f       	mov	r31, r18
    198e:	f9 7f       	andi	r31, 0xF9	; 249
    1990:	bf 2e       	mov	r11, r31
    1992:	8f 36       	cpi	r24, 0x6F	; 111
    1994:	c1 f0       	breq	.+48     	; 0x19c6 <vfprintf+0x242>
    1996:	18 f4       	brcc	.+6      	; 0x199e <vfprintf+0x21a>
    1998:	88 35       	cpi	r24, 0x58	; 88
    199a:	79 f0       	breq	.+30     	; 0x19ba <vfprintf+0x236>
    199c:	ad c0       	rjmp	.+346    	; 0x1af8 <vfprintf+0x374>
    199e:	80 37       	cpi	r24, 0x70	; 112
    19a0:	19 f0       	breq	.+6      	; 0x19a8 <vfprintf+0x224>
    19a2:	88 37       	cpi	r24, 0x78	; 120
    19a4:	21 f0       	breq	.+8      	; 0x19ae <vfprintf+0x22a>
    19a6:	a8 c0       	rjmp	.+336    	; 0x1af8 <vfprintf+0x374>
    19a8:	2f 2f       	mov	r18, r31
    19aa:	20 61       	ori	r18, 0x10	; 16
    19ac:	b2 2e       	mov	r11, r18
    19ae:	b4 fe       	sbrs	r11, 4
    19b0:	0d c0       	rjmp	.+26     	; 0x19cc <vfprintf+0x248>
    19b2:	8b 2d       	mov	r24, r11
    19b4:	84 60       	ori	r24, 0x04	; 4
    19b6:	b8 2e       	mov	r11, r24
    19b8:	09 c0       	rjmp	.+18     	; 0x19cc <vfprintf+0x248>
    19ba:	24 ff       	sbrs	r18, 4
    19bc:	0a c0       	rjmp	.+20     	; 0x19d2 <vfprintf+0x24e>
    19be:	9f 2f       	mov	r25, r31
    19c0:	96 60       	ori	r25, 0x06	; 6
    19c2:	b9 2e       	mov	r11, r25
    19c4:	06 c0       	rjmp	.+12     	; 0x19d2 <vfprintf+0x24e>
    19c6:	28 e0       	ldi	r18, 0x08	; 8
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	05 c0       	rjmp	.+10     	; 0x19d6 <vfprintf+0x252>
    19cc:	20 e1       	ldi	r18, 0x10	; 16
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	02 c0       	rjmp	.+4      	; 0x19d6 <vfprintf+0x252>
    19d2:	20 e1       	ldi	r18, 0x10	; 16
    19d4:	32 e0       	ldi	r19, 0x02	; 2
    19d6:	f8 01       	movw	r30, r16
    19d8:	b7 fe       	sbrs	r11, 7
    19da:	07 c0       	rjmp	.+14     	; 0x19ea <vfprintf+0x266>
    19dc:	60 81       	ld	r22, Z
    19de:	71 81       	ldd	r23, Z+1	; 0x01
    19e0:	82 81       	ldd	r24, Z+2	; 0x02
    19e2:	93 81       	ldd	r25, Z+3	; 0x03
    19e4:	0c 5f       	subi	r16, 0xFC	; 252
    19e6:	1f 4f       	sbci	r17, 0xFF	; 255
    19e8:	06 c0       	rjmp	.+12     	; 0x19f6 <vfprintf+0x272>
    19ea:	60 81       	ld	r22, Z
    19ec:	71 81       	ldd	r23, Z+1	; 0x01
    19ee:	80 e0       	ldi	r24, 0x00	; 0
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	0e 5f       	subi	r16, 0xFE	; 254
    19f4:	1f 4f       	sbci	r17, 0xFF	; 255
    19f6:	a4 01       	movw	r20, r8
    19f8:	18 d2       	rcall	.+1072   	; 0x1e2a <__ultoa_invert>
    19fa:	a8 2e       	mov	r10, r24
    19fc:	a8 18       	sub	r10, r8
    19fe:	fb 2d       	mov	r31, r11
    1a00:	ff 77       	andi	r31, 0x7F	; 127
    1a02:	bf 2e       	mov	r11, r31
    1a04:	b6 fe       	sbrs	r11, 6
    1a06:	0b c0       	rjmp	.+22     	; 0x1a1e <vfprintf+0x29a>
    1a08:	2b 2d       	mov	r18, r11
    1a0a:	2e 7f       	andi	r18, 0xFE	; 254
    1a0c:	a5 14       	cp	r10, r5
    1a0e:	50 f4       	brcc	.+20     	; 0x1a24 <vfprintf+0x2a0>
    1a10:	b4 fe       	sbrs	r11, 4
    1a12:	0a c0       	rjmp	.+20     	; 0x1a28 <vfprintf+0x2a4>
    1a14:	b2 fc       	sbrc	r11, 2
    1a16:	08 c0       	rjmp	.+16     	; 0x1a28 <vfprintf+0x2a4>
    1a18:	2b 2d       	mov	r18, r11
    1a1a:	2e 7e       	andi	r18, 0xEE	; 238
    1a1c:	05 c0       	rjmp	.+10     	; 0x1a28 <vfprintf+0x2a4>
    1a1e:	7a 2c       	mov	r7, r10
    1a20:	2b 2d       	mov	r18, r11
    1a22:	03 c0       	rjmp	.+6      	; 0x1a2a <vfprintf+0x2a6>
    1a24:	7a 2c       	mov	r7, r10
    1a26:	01 c0       	rjmp	.+2      	; 0x1a2a <vfprintf+0x2a6>
    1a28:	75 2c       	mov	r7, r5
    1a2a:	24 ff       	sbrs	r18, 4
    1a2c:	0d c0       	rjmp	.+26     	; 0x1a48 <vfprintf+0x2c4>
    1a2e:	fe 01       	movw	r30, r28
    1a30:	ea 0d       	add	r30, r10
    1a32:	f1 1d       	adc	r31, r1
    1a34:	80 81       	ld	r24, Z
    1a36:	80 33       	cpi	r24, 0x30	; 48
    1a38:	11 f4       	brne	.+4      	; 0x1a3e <vfprintf+0x2ba>
    1a3a:	29 7e       	andi	r18, 0xE9	; 233
    1a3c:	09 c0       	rjmp	.+18     	; 0x1a50 <vfprintf+0x2cc>
    1a3e:	22 ff       	sbrs	r18, 2
    1a40:	06 c0       	rjmp	.+12     	; 0x1a4e <vfprintf+0x2ca>
    1a42:	73 94       	inc	r7
    1a44:	73 94       	inc	r7
    1a46:	04 c0       	rjmp	.+8      	; 0x1a50 <vfprintf+0x2cc>
    1a48:	82 2f       	mov	r24, r18
    1a4a:	86 78       	andi	r24, 0x86	; 134
    1a4c:	09 f0       	breq	.+2      	; 0x1a50 <vfprintf+0x2cc>
    1a4e:	73 94       	inc	r7
    1a50:	23 fd       	sbrc	r18, 3
    1a52:	12 c0       	rjmp	.+36     	; 0x1a78 <vfprintf+0x2f4>
    1a54:	20 ff       	sbrs	r18, 0
    1a56:	06 c0       	rjmp	.+12     	; 0x1a64 <vfprintf+0x2e0>
    1a58:	5a 2c       	mov	r5, r10
    1a5a:	73 14       	cp	r7, r3
    1a5c:	18 f4       	brcc	.+6      	; 0x1a64 <vfprintf+0x2e0>
    1a5e:	53 0c       	add	r5, r3
    1a60:	57 18       	sub	r5, r7
    1a62:	73 2c       	mov	r7, r3
    1a64:	73 14       	cp	r7, r3
    1a66:	60 f4       	brcc	.+24     	; 0x1a80 <vfprintf+0x2fc>
    1a68:	b7 01       	movw	r22, r14
    1a6a:	80 e2       	ldi	r24, 0x20	; 32
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	2c 87       	std	Y+12, r18	; 0x0c
    1a70:	aa d1       	rcall	.+852    	; 0x1dc6 <fputc>
    1a72:	73 94       	inc	r7
    1a74:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a76:	f6 cf       	rjmp	.-20     	; 0x1a64 <vfprintf+0x2e0>
    1a78:	73 14       	cp	r7, r3
    1a7a:	10 f4       	brcc	.+4      	; 0x1a80 <vfprintf+0x2fc>
    1a7c:	37 18       	sub	r3, r7
    1a7e:	01 c0       	rjmp	.+2      	; 0x1a82 <vfprintf+0x2fe>
    1a80:	31 2c       	mov	r3, r1
    1a82:	24 ff       	sbrs	r18, 4
    1a84:	11 c0       	rjmp	.+34     	; 0x1aa8 <vfprintf+0x324>
    1a86:	b7 01       	movw	r22, r14
    1a88:	80 e3       	ldi	r24, 0x30	; 48
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	2c 87       	std	Y+12, r18	; 0x0c
    1a8e:	9b d1       	rcall	.+822    	; 0x1dc6 <fputc>
    1a90:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a92:	22 ff       	sbrs	r18, 2
    1a94:	16 c0       	rjmp	.+44     	; 0x1ac2 <vfprintf+0x33e>
    1a96:	21 ff       	sbrs	r18, 1
    1a98:	03 c0       	rjmp	.+6      	; 0x1aa0 <vfprintf+0x31c>
    1a9a:	88 e5       	ldi	r24, 0x58	; 88
    1a9c:	90 e0       	ldi	r25, 0x00	; 0
    1a9e:	02 c0       	rjmp	.+4      	; 0x1aa4 <vfprintf+0x320>
    1aa0:	88 e7       	ldi	r24, 0x78	; 120
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	b7 01       	movw	r22, r14
    1aa6:	0c c0       	rjmp	.+24     	; 0x1ac0 <vfprintf+0x33c>
    1aa8:	82 2f       	mov	r24, r18
    1aaa:	86 78       	andi	r24, 0x86	; 134
    1aac:	51 f0       	breq	.+20     	; 0x1ac2 <vfprintf+0x33e>
    1aae:	21 fd       	sbrc	r18, 1
    1ab0:	02 c0       	rjmp	.+4      	; 0x1ab6 <vfprintf+0x332>
    1ab2:	80 e2       	ldi	r24, 0x20	; 32
    1ab4:	01 c0       	rjmp	.+2      	; 0x1ab8 <vfprintf+0x334>
    1ab6:	8b e2       	ldi	r24, 0x2B	; 43
    1ab8:	27 fd       	sbrc	r18, 7
    1aba:	8d e2       	ldi	r24, 0x2D	; 45
    1abc:	b7 01       	movw	r22, r14
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	82 d1       	rcall	.+772    	; 0x1dc6 <fputc>
    1ac2:	a5 14       	cp	r10, r5
    1ac4:	30 f4       	brcc	.+12     	; 0x1ad2 <vfprintf+0x34e>
    1ac6:	b7 01       	movw	r22, r14
    1ac8:	80 e3       	ldi	r24, 0x30	; 48
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	7c d1       	rcall	.+760    	; 0x1dc6 <fputc>
    1ace:	5a 94       	dec	r5
    1ad0:	f8 cf       	rjmp	.-16     	; 0x1ac2 <vfprintf+0x33e>
    1ad2:	aa 94       	dec	r10
    1ad4:	f4 01       	movw	r30, r8
    1ad6:	ea 0d       	add	r30, r10
    1ad8:	f1 1d       	adc	r31, r1
    1ada:	80 81       	ld	r24, Z
    1adc:	b7 01       	movw	r22, r14
    1ade:	90 e0       	ldi	r25, 0x00	; 0
    1ae0:	72 d1       	rcall	.+740    	; 0x1dc6 <fputc>
    1ae2:	a1 10       	cpse	r10, r1
    1ae4:	f6 cf       	rjmp	.-20     	; 0x1ad2 <vfprintf+0x34e>
    1ae6:	33 20       	and	r3, r3
    1ae8:	09 f4       	brne	.+2      	; 0x1aec <vfprintf+0x368>
    1aea:	5d ce       	rjmp	.-838    	; 0x17a6 <vfprintf+0x22>
    1aec:	b7 01       	movw	r22, r14
    1aee:	80 e2       	ldi	r24, 0x20	; 32
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	69 d1       	rcall	.+722    	; 0x1dc6 <fputc>
    1af4:	3a 94       	dec	r3
    1af6:	f7 cf       	rjmp	.-18     	; 0x1ae6 <vfprintf+0x362>
    1af8:	f7 01       	movw	r30, r14
    1afa:	86 81       	ldd	r24, Z+6	; 0x06
    1afc:	97 81       	ldd	r25, Z+7	; 0x07
    1afe:	02 c0       	rjmp	.+4      	; 0x1b04 <vfprintf+0x380>
    1b00:	8f ef       	ldi	r24, 0xFF	; 255
    1b02:	9f ef       	ldi	r25, 0xFF	; 255
    1b04:	2c 96       	adiw	r28, 0x0c	; 12
    1b06:	e2 e1       	ldi	r30, 0x12	; 18
    1b08:	0a c2       	rjmp	.+1044   	; 0x1f1e <__epilogue_restores__>

00001b0a <calloc>:
    1b0a:	0f 93       	push	r16
    1b0c:	1f 93       	push	r17
    1b0e:	cf 93       	push	r28
    1b10:	df 93       	push	r29
    1b12:	86 9f       	mul	r24, r22
    1b14:	80 01       	movw	r16, r0
    1b16:	87 9f       	mul	r24, r23
    1b18:	10 0d       	add	r17, r0
    1b1a:	96 9f       	mul	r25, r22
    1b1c:	10 0d       	add	r17, r0
    1b1e:	11 24       	eor	r1, r1
    1b20:	c8 01       	movw	r24, r16
    1b22:	0d d0       	rcall	.+26     	; 0x1b3e <malloc>
    1b24:	ec 01       	movw	r28, r24
    1b26:	00 97       	sbiw	r24, 0x00	; 0
    1b28:	21 f0       	breq	.+8      	; 0x1b32 <calloc+0x28>
    1b2a:	a8 01       	movw	r20, r16
    1b2c:	60 e0       	ldi	r22, 0x00	; 0
    1b2e:	70 e0       	ldi	r23, 0x00	; 0
    1b30:	38 d1       	rcall	.+624    	; 0x1da2 <memset>
    1b32:	ce 01       	movw	r24, r28
    1b34:	df 91       	pop	r29
    1b36:	cf 91       	pop	r28
    1b38:	1f 91       	pop	r17
    1b3a:	0f 91       	pop	r16
    1b3c:	08 95       	ret

00001b3e <malloc>:
    1b3e:	cf 93       	push	r28
    1b40:	df 93       	push	r29
    1b42:	82 30       	cpi	r24, 0x02	; 2
    1b44:	91 05       	cpc	r25, r1
    1b46:	10 f4       	brcc	.+4      	; 0x1b4c <malloc+0xe>
    1b48:	82 e0       	ldi	r24, 0x02	; 2
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	e0 91 36 02 	lds	r30, 0x0236
    1b50:	f0 91 37 02 	lds	r31, 0x0237
    1b54:	20 e0       	ldi	r18, 0x00	; 0
    1b56:	30 e0       	ldi	r19, 0x00	; 0
    1b58:	a0 e0       	ldi	r26, 0x00	; 0
    1b5a:	b0 e0       	ldi	r27, 0x00	; 0
    1b5c:	30 97       	sbiw	r30, 0x00	; 0
    1b5e:	39 f1       	breq	.+78     	; 0x1bae <malloc+0x70>
    1b60:	40 81       	ld	r20, Z
    1b62:	51 81       	ldd	r21, Z+1	; 0x01
    1b64:	48 17       	cp	r20, r24
    1b66:	59 07       	cpc	r21, r25
    1b68:	b8 f0       	brcs	.+46     	; 0x1b98 <malloc+0x5a>
    1b6a:	48 17       	cp	r20, r24
    1b6c:	59 07       	cpc	r21, r25
    1b6e:	71 f4       	brne	.+28     	; 0x1b8c <malloc+0x4e>
    1b70:	82 81       	ldd	r24, Z+2	; 0x02
    1b72:	93 81       	ldd	r25, Z+3	; 0x03
    1b74:	10 97       	sbiw	r26, 0x00	; 0
    1b76:	29 f0       	breq	.+10     	; 0x1b82 <malloc+0x44>
    1b78:	13 96       	adiw	r26, 0x03	; 3
    1b7a:	9c 93       	st	X, r25
    1b7c:	8e 93       	st	-X, r24
    1b7e:	12 97       	sbiw	r26, 0x02	; 2
    1b80:	2c c0       	rjmp	.+88     	; 0x1bda <malloc+0x9c>
    1b82:	90 93 37 02 	sts	0x0237, r25
    1b86:	80 93 36 02 	sts	0x0236, r24
    1b8a:	27 c0       	rjmp	.+78     	; 0x1bda <malloc+0x9c>
    1b8c:	21 15       	cp	r18, r1
    1b8e:	31 05       	cpc	r19, r1
    1b90:	31 f0       	breq	.+12     	; 0x1b9e <malloc+0x60>
    1b92:	42 17       	cp	r20, r18
    1b94:	53 07       	cpc	r21, r19
    1b96:	18 f0       	brcs	.+6      	; 0x1b9e <malloc+0x60>
    1b98:	a9 01       	movw	r20, r18
    1b9a:	db 01       	movw	r26, r22
    1b9c:	01 c0       	rjmp	.+2      	; 0x1ba0 <malloc+0x62>
    1b9e:	ef 01       	movw	r28, r30
    1ba0:	9a 01       	movw	r18, r20
    1ba2:	bd 01       	movw	r22, r26
    1ba4:	df 01       	movw	r26, r30
    1ba6:	02 80       	ldd	r0, Z+2	; 0x02
    1ba8:	f3 81       	ldd	r31, Z+3	; 0x03
    1baa:	e0 2d       	mov	r30, r0
    1bac:	d7 cf       	rjmp	.-82     	; 0x1b5c <malloc+0x1e>
    1bae:	21 15       	cp	r18, r1
    1bb0:	31 05       	cpc	r19, r1
    1bb2:	f9 f0       	breq	.+62     	; 0x1bf2 <malloc+0xb4>
    1bb4:	28 1b       	sub	r18, r24
    1bb6:	39 0b       	sbc	r19, r25
    1bb8:	24 30       	cpi	r18, 0x04	; 4
    1bba:	31 05       	cpc	r19, r1
    1bbc:	80 f4       	brcc	.+32     	; 0x1bde <malloc+0xa0>
    1bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc0:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc2:	61 15       	cp	r22, r1
    1bc4:	71 05       	cpc	r23, r1
    1bc6:	21 f0       	breq	.+8      	; 0x1bd0 <malloc+0x92>
    1bc8:	fb 01       	movw	r30, r22
    1bca:	93 83       	std	Z+3, r25	; 0x03
    1bcc:	82 83       	std	Z+2, r24	; 0x02
    1bce:	04 c0       	rjmp	.+8      	; 0x1bd8 <malloc+0x9a>
    1bd0:	90 93 37 02 	sts	0x0237, r25
    1bd4:	80 93 36 02 	sts	0x0236, r24
    1bd8:	fe 01       	movw	r30, r28
    1bda:	32 96       	adiw	r30, 0x02	; 2
    1bdc:	44 c0       	rjmp	.+136    	; 0x1c66 <malloc+0x128>
    1bde:	fe 01       	movw	r30, r28
    1be0:	e2 0f       	add	r30, r18
    1be2:	f3 1f       	adc	r31, r19
    1be4:	81 93       	st	Z+, r24
    1be6:	91 93       	st	Z+, r25
    1be8:	22 50       	subi	r18, 0x02	; 2
    1bea:	31 09       	sbc	r19, r1
    1bec:	39 83       	std	Y+1, r19	; 0x01
    1bee:	28 83       	st	Y, r18
    1bf0:	3a c0       	rjmp	.+116    	; 0x1c66 <malloc+0x128>
    1bf2:	20 91 34 02 	lds	r18, 0x0234
    1bf6:	30 91 35 02 	lds	r19, 0x0235
    1bfa:	23 2b       	or	r18, r19
    1bfc:	41 f4       	brne	.+16     	; 0x1c0e <malloc+0xd0>
    1bfe:	20 91 02 01 	lds	r18, 0x0102
    1c02:	30 91 03 01 	lds	r19, 0x0103
    1c06:	30 93 35 02 	sts	0x0235, r19
    1c0a:	20 93 34 02 	sts	0x0234, r18
    1c0e:	20 91 00 01 	lds	r18, 0x0100
    1c12:	30 91 01 01 	lds	r19, 0x0101
    1c16:	21 15       	cp	r18, r1
    1c18:	31 05       	cpc	r19, r1
    1c1a:	41 f4       	brne	.+16     	; 0x1c2c <malloc+0xee>
    1c1c:	2d b7       	in	r18, 0x3d	; 61
    1c1e:	3e b7       	in	r19, 0x3e	; 62
    1c20:	40 91 04 01 	lds	r20, 0x0104
    1c24:	50 91 05 01 	lds	r21, 0x0105
    1c28:	24 1b       	sub	r18, r20
    1c2a:	35 0b       	sbc	r19, r21
    1c2c:	e0 91 34 02 	lds	r30, 0x0234
    1c30:	f0 91 35 02 	lds	r31, 0x0235
    1c34:	e2 17       	cp	r30, r18
    1c36:	f3 07       	cpc	r31, r19
    1c38:	a0 f4       	brcc	.+40     	; 0x1c62 <malloc+0x124>
    1c3a:	2e 1b       	sub	r18, r30
    1c3c:	3f 0b       	sbc	r19, r31
    1c3e:	28 17       	cp	r18, r24
    1c40:	39 07       	cpc	r19, r25
    1c42:	78 f0       	brcs	.+30     	; 0x1c62 <malloc+0x124>
    1c44:	ac 01       	movw	r20, r24
    1c46:	4e 5f       	subi	r20, 0xFE	; 254
    1c48:	5f 4f       	sbci	r21, 0xFF	; 255
    1c4a:	24 17       	cp	r18, r20
    1c4c:	35 07       	cpc	r19, r21
    1c4e:	48 f0       	brcs	.+18     	; 0x1c62 <malloc+0x124>
    1c50:	4e 0f       	add	r20, r30
    1c52:	5f 1f       	adc	r21, r31
    1c54:	50 93 35 02 	sts	0x0235, r21
    1c58:	40 93 34 02 	sts	0x0234, r20
    1c5c:	81 93       	st	Z+, r24
    1c5e:	91 93       	st	Z+, r25
    1c60:	02 c0       	rjmp	.+4      	; 0x1c66 <malloc+0x128>
    1c62:	e0 e0       	ldi	r30, 0x00	; 0
    1c64:	f0 e0       	ldi	r31, 0x00	; 0
    1c66:	cf 01       	movw	r24, r30
    1c68:	df 91       	pop	r29
    1c6a:	cf 91       	pop	r28
    1c6c:	08 95       	ret

00001c6e <free>:
    1c6e:	cf 93       	push	r28
    1c70:	df 93       	push	r29
    1c72:	00 97       	sbiw	r24, 0x00	; 0
    1c74:	09 f4       	brne	.+2      	; 0x1c78 <free+0xa>
    1c76:	87 c0       	rjmp	.+270    	; 0x1d86 <free+0x118>
    1c78:	fc 01       	movw	r30, r24
    1c7a:	32 97       	sbiw	r30, 0x02	; 2
    1c7c:	13 82       	std	Z+3, r1	; 0x03
    1c7e:	12 82       	std	Z+2, r1	; 0x02
    1c80:	c0 91 36 02 	lds	r28, 0x0236
    1c84:	d0 91 37 02 	lds	r29, 0x0237
    1c88:	20 97       	sbiw	r28, 0x00	; 0
    1c8a:	81 f4       	brne	.+32     	; 0x1cac <free+0x3e>
    1c8c:	20 81       	ld	r18, Z
    1c8e:	31 81       	ldd	r19, Z+1	; 0x01
    1c90:	28 0f       	add	r18, r24
    1c92:	39 1f       	adc	r19, r25
    1c94:	80 91 34 02 	lds	r24, 0x0234
    1c98:	90 91 35 02 	lds	r25, 0x0235
    1c9c:	82 17       	cp	r24, r18
    1c9e:	93 07       	cpc	r25, r19
    1ca0:	79 f5       	brne	.+94     	; 0x1d00 <free+0x92>
    1ca2:	f0 93 35 02 	sts	0x0235, r31
    1ca6:	e0 93 34 02 	sts	0x0234, r30
    1caa:	6d c0       	rjmp	.+218    	; 0x1d86 <free+0x118>
    1cac:	de 01       	movw	r26, r28
    1cae:	20 e0       	ldi	r18, 0x00	; 0
    1cb0:	30 e0       	ldi	r19, 0x00	; 0
    1cb2:	ae 17       	cp	r26, r30
    1cb4:	bf 07       	cpc	r27, r31
    1cb6:	50 f4       	brcc	.+20     	; 0x1ccc <free+0x5e>
    1cb8:	12 96       	adiw	r26, 0x02	; 2
    1cba:	4d 91       	ld	r20, X+
    1cbc:	5c 91       	ld	r21, X
    1cbe:	13 97       	sbiw	r26, 0x03	; 3
    1cc0:	9d 01       	movw	r18, r26
    1cc2:	41 15       	cp	r20, r1
    1cc4:	51 05       	cpc	r21, r1
    1cc6:	09 f1       	breq	.+66     	; 0x1d0a <free+0x9c>
    1cc8:	da 01       	movw	r26, r20
    1cca:	f3 cf       	rjmp	.-26     	; 0x1cb2 <free+0x44>
    1ccc:	b3 83       	std	Z+3, r27	; 0x03
    1cce:	a2 83       	std	Z+2, r26	; 0x02
    1cd0:	40 81       	ld	r20, Z
    1cd2:	51 81       	ldd	r21, Z+1	; 0x01
    1cd4:	84 0f       	add	r24, r20
    1cd6:	95 1f       	adc	r25, r21
    1cd8:	8a 17       	cp	r24, r26
    1cda:	9b 07       	cpc	r25, r27
    1cdc:	71 f4       	brne	.+28     	; 0x1cfa <free+0x8c>
    1cde:	8d 91       	ld	r24, X+
    1ce0:	9c 91       	ld	r25, X
    1ce2:	11 97       	sbiw	r26, 0x01	; 1
    1ce4:	84 0f       	add	r24, r20
    1ce6:	95 1f       	adc	r25, r21
    1ce8:	02 96       	adiw	r24, 0x02	; 2
    1cea:	91 83       	std	Z+1, r25	; 0x01
    1cec:	80 83       	st	Z, r24
    1cee:	12 96       	adiw	r26, 0x02	; 2
    1cf0:	8d 91       	ld	r24, X+
    1cf2:	9c 91       	ld	r25, X
    1cf4:	13 97       	sbiw	r26, 0x03	; 3
    1cf6:	93 83       	std	Z+3, r25	; 0x03
    1cf8:	82 83       	std	Z+2, r24	; 0x02
    1cfa:	21 15       	cp	r18, r1
    1cfc:	31 05       	cpc	r19, r1
    1cfe:	29 f4       	brne	.+10     	; 0x1d0a <free+0x9c>
    1d00:	f0 93 37 02 	sts	0x0237, r31
    1d04:	e0 93 36 02 	sts	0x0236, r30
    1d08:	3e c0       	rjmp	.+124    	; 0x1d86 <free+0x118>
    1d0a:	d9 01       	movw	r26, r18
    1d0c:	13 96       	adiw	r26, 0x03	; 3
    1d0e:	fc 93       	st	X, r31
    1d10:	ee 93       	st	-X, r30
    1d12:	12 97       	sbiw	r26, 0x02	; 2
    1d14:	4d 91       	ld	r20, X+
    1d16:	5d 91       	ld	r21, X+
    1d18:	a4 0f       	add	r26, r20
    1d1a:	b5 1f       	adc	r27, r21
    1d1c:	ea 17       	cp	r30, r26
    1d1e:	fb 07       	cpc	r31, r27
    1d20:	79 f4       	brne	.+30     	; 0x1d40 <free+0xd2>
    1d22:	80 81       	ld	r24, Z
    1d24:	91 81       	ldd	r25, Z+1	; 0x01
    1d26:	84 0f       	add	r24, r20
    1d28:	95 1f       	adc	r25, r21
    1d2a:	02 96       	adiw	r24, 0x02	; 2
    1d2c:	d9 01       	movw	r26, r18
    1d2e:	11 96       	adiw	r26, 0x01	; 1
    1d30:	9c 93       	st	X, r25
    1d32:	8e 93       	st	-X, r24
    1d34:	82 81       	ldd	r24, Z+2	; 0x02
    1d36:	93 81       	ldd	r25, Z+3	; 0x03
    1d38:	13 96       	adiw	r26, 0x03	; 3
    1d3a:	9c 93       	st	X, r25
    1d3c:	8e 93       	st	-X, r24
    1d3e:	12 97       	sbiw	r26, 0x02	; 2
    1d40:	e0 e0       	ldi	r30, 0x00	; 0
    1d42:	f0 e0       	ldi	r31, 0x00	; 0
    1d44:	8a 81       	ldd	r24, Y+2	; 0x02
    1d46:	9b 81       	ldd	r25, Y+3	; 0x03
    1d48:	00 97       	sbiw	r24, 0x00	; 0
    1d4a:	19 f0       	breq	.+6      	; 0x1d52 <free+0xe4>
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	ec 01       	movw	r28, r24
    1d50:	f9 cf       	rjmp	.-14     	; 0x1d44 <free+0xd6>
    1d52:	ce 01       	movw	r24, r28
    1d54:	02 96       	adiw	r24, 0x02	; 2
    1d56:	28 81       	ld	r18, Y
    1d58:	39 81       	ldd	r19, Y+1	; 0x01
    1d5a:	82 0f       	add	r24, r18
    1d5c:	93 1f       	adc	r25, r19
    1d5e:	20 91 34 02 	lds	r18, 0x0234
    1d62:	30 91 35 02 	lds	r19, 0x0235
    1d66:	28 17       	cp	r18, r24
    1d68:	39 07       	cpc	r19, r25
    1d6a:	69 f4       	brne	.+26     	; 0x1d86 <free+0x118>
    1d6c:	30 97       	sbiw	r30, 0x00	; 0
    1d6e:	29 f4       	brne	.+10     	; 0x1d7a <free+0x10c>
    1d70:	10 92 37 02 	sts	0x0237, r1
    1d74:	10 92 36 02 	sts	0x0236, r1
    1d78:	02 c0       	rjmp	.+4      	; 0x1d7e <free+0x110>
    1d7a:	13 82       	std	Z+3, r1	; 0x03
    1d7c:	12 82       	std	Z+2, r1	; 0x02
    1d7e:	d0 93 35 02 	sts	0x0235, r29
    1d82:	c0 93 34 02 	sts	0x0234, r28
    1d86:	df 91       	pop	r29
    1d88:	cf 91       	pop	r28
    1d8a:	08 95       	ret

00001d8c <strnlen_P>:
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	05 90       	lpm	r0, Z+
    1d90:	61 50       	subi	r22, 0x01	; 1
    1d92:	70 40       	sbci	r23, 0x00	; 0
    1d94:	01 10       	cpse	r0, r1
    1d96:	d8 f7       	brcc	.-10     	; 0x1d8e <strnlen_P+0x2>
    1d98:	80 95       	com	r24
    1d9a:	90 95       	com	r25
    1d9c:	8e 0f       	add	r24, r30
    1d9e:	9f 1f       	adc	r25, r31
    1da0:	08 95       	ret

00001da2 <memset>:
    1da2:	dc 01       	movw	r26, r24
    1da4:	01 c0       	rjmp	.+2      	; 0x1da8 <memset+0x6>
    1da6:	6d 93       	st	X+, r22
    1da8:	41 50       	subi	r20, 0x01	; 1
    1daa:	50 40       	sbci	r21, 0x00	; 0
    1dac:	e0 f7       	brcc	.-8      	; 0x1da6 <memset+0x4>
    1dae:	08 95       	ret

00001db0 <strnlen>:
    1db0:	fc 01       	movw	r30, r24
    1db2:	61 50       	subi	r22, 0x01	; 1
    1db4:	70 40       	sbci	r23, 0x00	; 0
    1db6:	01 90       	ld	r0, Z+
    1db8:	01 10       	cpse	r0, r1
    1dba:	d8 f7       	brcc	.-10     	; 0x1db2 <strnlen+0x2>
    1dbc:	80 95       	com	r24
    1dbe:	90 95       	com	r25
    1dc0:	8e 0f       	add	r24, r30
    1dc2:	9f 1f       	adc	r25, r31
    1dc4:	08 95       	ret

00001dc6 <fputc>:
    1dc6:	0f 93       	push	r16
    1dc8:	1f 93       	push	r17
    1dca:	cf 93       	push	r28
    1dcc:	df 93       	push	r29
    1dce:	18 2f       	mov	r17, r24
    1dd0:	09 2f       	mov	r16, r25
    1dd2:	eb 01       	movw	r28, r22
    1dd4:	8b 81       	ldd	r24, Y+3	; 0x03
    1dd6:	81 fd       	sbrc	r24, 1
    1dd8:	03 c0       	rjmp	.+6      	; 0x1de0 <fputc+0x1a>
    1dda:	8f ef       	ldi	r24, 0xFF	; 255
    1ddc:	9f ef       	ldi	r25, 0xFF	; 255
    1dde:	20 c0       	rjmp	.+64     	; 0x1e20 <fputc+0x5a>
    1de0:	82 ff       	sbrs	r24, 2
    1de2:	10 c0       	rjmp	.+32     	; 0x1e04 <fputc+0x3e>
    1de4:	4e 81       	ldd	r20, Y+6	; 0x06
    1de6:	5f 81       	ldd	r21, Y+7	; 0x07
    1de8:	2c 81       	ldd	r18, Y+4	; 0x04
    1dea:	3d 81       	ldd	r19, Y+5	; 0x05
    1dec:	42 17       	cp	r20, r18
    1dee:	53 07       	cpc	r21, r19
    1df0:	7c f4       	brge	.+30     	; 0x1e10 <fputc+0x4a>
    1df2:	e8 81       	ld	r30, Y
    1df4:	f9 81       	ldd	r31, Y+1	; 0x01
    1df6:	9f 01       	movw	r18, r30
    1df8:	2f 5f       	subi	r18, 0xFF	; 255
    1dfa:	3f 4f       	sbci	r19, 0xFF	; 255
    1dfc:	39 83       	std	Y+1, r19	; 0x01
    1dfe:	28 83       	st	Y, r18
    1e00:	10 83       	st	Z, r17
    1e02:	06 c0       	rjmp	.+12     	; 0x1e10 <fputc+0x4a>
    1e04:	e8 85       	ldd	r30, Y+8	; 0x08
    1e06:	f9 85       	ldd	r31, Y+9	; 0x09
    1e08:	81 2f       	mov	r24, r17
    1e0a:	09 95       	icall
    1e0c:	89 2b       	or	r24, r25
    1e0e:	29 f7       	brne	.-54     	; 0x1dda <fputc+0x14>
    1e10:	2e 81       	ldd	r18, Y+6	; 0x06
    1e12:	3f 81       	ldd	r19, Y+7	; 0x07
    1e14:	2f 5f       	subi	r18, 0xFF	; 255
    1e16:	3f 4f       	sbci	r19, 0xFF	; 255
    1e18:	3f 83       	std	Y+7, r19	; 0x07
    1e1a:	2e 83       	std	Y+6, r18	; 0x06
    1e1c:	81 2f       	mov	r24, r17
    1e1e:	90 2f       	mov	r25, r16
    1e20:	df 91       	pop	r29
    1e22:	cf 91       	pop	r28
    1e24:	1f 91       	pop	r17
    1e26:	0f 91       	pop	r16
    1e28:	08 95       	ret

00001e2a <__ultoa_invert>:
    1e2a:	fa 01       	movw	r30, r20
    1e2c:	aa 27       	eor	r26, r26
    1e2e:	28 30       	cpi	r18, 0x08	; 8
    1e30:	51 f1       	breq	.+84     	; 0x1e86 <__ultoa_invert+0x5c>
    1e32:	20 31       	cpi	r18, 0x10	; 16
    1e34:	81 f1       	breq	.+96     	; 0x1e96 <__ultoa_invert+0x6c>
    1e36:	e8 94       	clt
    1e38:	6f 93       	push	r22
    1e3a:	6e 7f       	andi	r22, 0xFE	; 254
    1e3c:	6e 5f       	subi	r22, 0xFE	; 254
    1e3e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e40:	8f 4f       	sbci	r24, 0xFF	; 255
    1e42:	9f 4f       	sbci	r25, 0xFF	; 255
    1e44:	af 4f       	sbci	r26, 0xFF	; 255
    1e46:	b1 e0       	ldi	r27, 0x01	; 1
    1e48:	3e d0       	rcall	.+124    	; 0x1ec6 <__ultoa_invert+0x9c>
    1e4a:	b4 e0       	ldi	r27, 0x04	; 4
    1e4c:	3c d0       	rcall	.+120    	; 0x1ec6 <__ultoa_invert+0x9c>
    1e4e:	67 0f       	add	r22, r23
    1e50:	78 1f       	adc	r23, r24
    1e52:	89 1f       	adc	r24, r25
    1e54:	9a 1f       	adc	r25, r26
    1e56:	a1 1d       	adc	r26, r1
    1e58:	68 0f       	add	r22, r24
    1e5a:	79 1f       	adc	r23, r25
    1e5c:	8a 1f       	adc	r24, r26
    1e5e:	91 1d       	adc	r25, r1
    1e60:	a1 1d       	adc	r26, r1
    1e62:	6a 0f       	add	r22, r26
    1e64:	71 1d       	adc	r23, r1
    1e66:	81 1d       	adc	r24, r1
    1e68:	91 1d       	adc	r25, r1
    1e6a:	a1 1d       	adc	r26, r1
    1e6c:	20 d0       	rcall	.+64     	; 0x1eae <__ultoa_invert+0x84>
    1e6e:	09 f4       	brne	.+2      	; 0x1e72 <__ultoa_invert+0x48>
    1e70:	68 94       	set
    1e72:	3f 91       	pop	r19
    1e74:	2a e0       	ldi	r18, 0x0A	; 10
    1e76:	26 9f       	mul	r18, r22
    1e78:	11 24       	eor	r1, r1
    1e7a:	30 19       	sub	r19, r0
    1e7c:	30 5d       	subi	r19, 0xD0	; 208
    1e7e:	31 93       	st	Z+, r19
    1e80:	de f6       	brtc	.-74     	; 0x1e38 <__ultoa_invert+0xe>
    1e82:	cf 01       	movw	r24, r30
    1e84:	08 95       	ret
    1e86:	46 2f       	mov	r20, r22
    1e88:	47 70       	andi	r20, 0x07	; 7
    1e8a:	40 5d       	subi	r20, 0xD0	; 208
    1e8c:	41 93       	st	Z+, r20
    1e8e:	b3 e0       	ldi	r27, 0x03	; 3
    1e90:	0f d0       	rcall	.+30     	; 0x1eb0 <__ultoa_invert+0x86>
    1e92:	c9 f7       	brne	.-14     	; 0x1e86 <__ultoa_invert+0x5c>
    1e94:	f6 cf       	rjmp	.-20     	; 0x1e82 <__ultoa_invert+0x58>
    1e96:	46 2f       	mov	r20, r22
    1e98:	4f 70       	andi	r20, 0x0F	; 15
    1e9a:	40 5d       	subi	r20, 0xD0	; 208
    1e9c:	4a 33       	cpi	r20, 0x3A	; 58
    1e9e:	18 f0       	brcs	.+6      	; 0x1ea6 <__ultoa_invert+0x7c>
    1ea0:	49 5d       	subi	r20, 0xD9	; 217
    1ea2:	31 fd       	sbrc	r19, 1
    1ea4:	40 52       	subi	r20, 0x20	; 32
    1ea6:	41 93       	st	Z+, r20
    1ea8:	02 d0       	rcall	.+4      	; 0x1eae <__ultoa_invert+0x84>
    1eaa:	a9 f7       	brne	.-22     	; 0x1e96 <__ultoa_invert+0x6c>
    1eac:	ea cf       	rjmp	.-44     	; 0x1e82 <__ultoa_invert+0x58>
    1eae:	b4 e0       	ldi	r27, 0x04	; 4
    1eb0:	a6 95       	lsr	r26
    1eb2:	97 95       	ror	r25
    1eb4:	87 95       	ror	r24
    1eb6:	77 95       	ror	r23
    1eb8:	67 95       	ror	r22
    1eba:	ba 95       	dec	r27
    1ebc:	c9 f7       	brne	.-14     	; 0x1eb0 <__ultoa_invert+0x86>
    1ebe:	00 97       	sbiw	r24, 0x00	; 0
    1ec0:	61 05       	cpc	r22, r1
    1ec2:	71 05       	cpc	r23, r1
    1ec4:	08 95       	ret
    1ec6:	9b 01       	movw	r18, r22
    1ec8:	ac 01       	movw	r20, r24
    1eca:	0a 2e       	mov	r0, r26
    1ecc:	06 94       	lsr	r0
    1ece:	57 95       	ror	r21
    1ed0:	47 95       	ror	r20
    1ed2:	37 95       	ror	r19
    1ed4:	27 95       	ror	r18
    1ed6:	ba 95       	dec	r27
    1ed8:	c9 f7       	brne	.-14     	; 0x1ecc <__ultoa_invert+0xa2>
    1eda:	62 0f       	add	r22, r18
    1edc:	73 1f       	adc	r23, r19
    1ede:	84 1f       	adc	r24, r20
    1ee0:	95 1f       	adc	r25, r21
    1ee2:	a0 1d       	adc	r26, r0
    1ee4:	08 95       	ret

00001ee6 <__prologue_saves__>:
    1ee6:	2f 92       	push	r2
    1ee8:	3f 92       	push	r3
    1eea:	4f 92       	push	r4
    1eec:	5f 92       	push	r5
    1eee:	6f 92       	push	r6
    1ef0:	7f 92       	push	r7
    1ef2:	8f 92       	push	r8
    1ef4:	9f 92       	push	r9
    1ef6:	af 92       	push	r10
    1ef8:	bf 92       	push	r11
    1efa:	cf 92       	push	r12
    1efc:	df 92       	push	r13
    1efe:	ef 92       	push	r14
    1f00:	ff 92       	push	r15
    1f02:	0f 93       	push	r16
    1f04:	1f 93       	push	r17
    1f06:	cf 93       	push	r28
    1f08:	df 93       	push	r29
    1f0a:	cd b7       	in	r28, 0x3d	; 61
    1f0c:	de b7       	in	r29, 0x3e	; 62
    1f0e:	ca 1b       	sub	r28, r26
    1f10:	db 0b       	sbc	r29, r27
    1f12:	0f b6       	in	r0, 0x3f	; 63
    1f14:	f8 94       	cli
    1f16:	de bf       	out	0x3e, r29	; 62
    1f18:	0f be       	out	0x3f, r0	; 63
    1f1a:	cd bf       	out	0x3d, r28	; 61
    1f1c:	09 94       	ijmp

00001f1e <__epilogue_restores__>:
    1f1e:	2a 88       	ldd	r2, Y+18	; 0x12
    1f20:	39 88       	ldd	r3, Y+17	; 0x11
    1f22:	48 88       	ldd	r4, Y+16	; 0x10
    1f24:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f26:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f28:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f2a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f2c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f2e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f30:	b9 84       	ldd	r11, Y+9	; 0x09
    1f32:	c8 84       	ldd	r12, Y+8	; 0x08
    1f34:	df 80       	ldd	r13, Y+7	; 0x07
    1f36:	ee 80       	ldd	r14, Y+6	; 0x06
    1f38:	fd 80       	ldd	r15, Y+5	; 0x05
    1f3a:	0c 81       	ldd	r16, Y+4	; 0x04
    1f3c:	1b 81       	ldd	r17, Y+3	; 0x03
    1f3e:	aa 81       	ldd	r26, Y+2	; 0x02
    1f40:	b9 81       	ldd	r27, Y+1	; 0x01
    1f42:	ce 0f       	add	r28, r30
    1f44:	d1 1d       	adc	r29, r1
    1f46:	0f b6       	in	r0, 0x3f	; 63
    1f48:	f8 94       	cli
    1f4a:	de bf       	out	0x3e, r29	; 62
    1f4c:	0f be       	out	0x3f, r0	; 63
    1f4e:	cd bf       	out	0x3d, r28	; 61
    1f50:	ed 01       	movw	r28, r26
    1f52:	08 95       	ret

00001f54 <_exit>:
    1f54:	f8 94       	cli

00001f56 <__stop_program>:
    1f56:	ff cf       	rjmp	.-2      	; 0x1f56 <__stop_program>
