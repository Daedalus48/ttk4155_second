
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800200  00001b1c  00001bb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002a2  008002a2  00001c52  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c52  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000220  00000000  00000000  00001cae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001f4d  00000000  00000000  00001ece  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e85  00000000  00000000  00003e1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000130f  00000000  00000000  00004ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000524  00000000  00000000  00005fb0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000785  00000000  00000000  000064d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000012c1  00000000  00000000  00006c59  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000190  00000000  00000000  00007f1a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	15 c6       	rjmp	.+3114   	; 0xcc8 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	7f 06       	cpc	r7, r31
      e6:	d1 06       	cpc	r13, r17
      e8:	d1 06       	cpc	r13, r17
      ea:	d1 06       	cpc	r13, r17
      ec:	d1 06       	cpc	r13, r17
      ee:	d1 06       	cpc	r13, r17
      f0:	d1 06       	cpc	r13, r17
      f2:	d1 06       	cpc	r13, r17
      f4:	7f 06       	cpc	r7, r31
      f6:	d1 06       	cpc	r13, r17
      f8:	d1 06       	cpc	r13, r17
      fa:	d1 06       	cpc	r13, r17
      fc:	d1 06       	cpc	r13, r17
      fe:	d1 06       	cpc	r13, r17
     100:	d1 06       	cpc	r13, r17
     102:	d1 06       	cpc	r13, r17
     104:	81 06       	cpc	r8, r17
     106:	d1 06       	cpc	r13, r17
     108:	d1 06       	cpc	r13, r17
     10a:	d1 06       	cpc	r13, r17
     10c:	d1 06       	cpc	r13, r17
     10e:	d1 06       	cpc	r13, r17
     110:	d1 06       	cpc	r13, r17
     112:	d1 06       	cpc	r13, r17
     114:	d1 06       	cpc	r13, r17
     116:	d1 06       	cpc	r13, r17
     118:	d1 06       	cpc	r13, r17
     11a:	d1 06       	cpc	r13, r17
     11c:	d1 06       	cpc	r13, r17
     11e:	d1 06       	cpc	r13, r17
     120:	d1 06       	cpc	r13, r17
     122:	d1 06       	cpc	r13, r17
     124:	81 06       	cpc	r8, r17
     126:	d1 06       	cpc	r13, r17
     128:	d1 06       	cpc	r13, r17
     12a:	d1 06       	cpc	r13, r17
     12c:	d1 06       	cpc	r13, r17
     12e:	d1 06       	cpc	r13, r17
     130:	d1 06       	cpc	r13, r17
     132:	d1 06       	cpc	r13, r17
     134:	d1 06       	cpc	r13, r17
     136:	d1 06       	cpc	r13, r17
     138:	d1 06       	cpc	r13, r17
     13a:	d1 06       	cpc	r13, r17
     13c:	d1 06       	cpc	r13, r17
     13e:	d1 06       	cpc	r13, r17
     140:	d1 06       	cpc	r13, r17
     142:	d1 06       	cpc	r13, r17
     144:	cd 06       	cpc	r12, r29
     146:	d1 06       	cpc	r13, r17
     148:	d1 06       	cpc	r13, r17
     14a:	d1 06       	cpc	r13, r17
     14c:	d1 06       	cpc	r13, r17
     14e:	d1 06       	cpc	r13, r17
     150:	d1 06       	cpc	r13, r17
     152:	d1 06       	cpc	r13, r17
     154:	aa 06       	cpc	r10, r26
     156:	d1 06       	cpc	r13, r17
     158:	d1 06       	cpc	r13, r17
     15a:	d1 06       	cpc	r13, r17
     15c:	d1 06       	cpc	r13, r17
     15e:	d1 06       	cpc	r13, r17
     160:	d1 06       	cpc	r13, r17
     162:	d1 06       	cpc	r13, r17
     164:	d1 06       	cpc	r13, r17
     166:	d1 06       	cpc	r13, r17
     168:	d1 06       	cpc	r13, r17
     16a:	d1 06       	cpc	r13, r17
     16c:	d1 06       	cpc	r13, r17
     16e:	d1 06       	cpc	r13, r17
     170:	d1 06       	cpc	r13, r17
     172:	d1 06       	cpc	r13, r17
     174:	9e 06       	cpc	r9, r30
     176:	d1 06       	cpc	r13, r17
     178:	d1 06       	cpc	r13, r17
     17a:	d1 06       	cpc	r13, r17
     17c:	d1 06       	cpc	r13, r17
     17e:	d1 06       	cpc	r13, r17
     180:	d1 06       	cpc	r13, r17
     182:	d1 06       	cpc	r13, r17
     184:	bc 06       	cpc	r11, r28

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	ec e1       	ldi	r30, 0x1C	; 28
     19e:	fb e1       	ldi	r31, 0x1B	; 27
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a2 3a       	cpi	r26, 0xA2	; 162
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a2 ea       	ldi	r26, 0xA2	; 162
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	a7 3b       	cpi	r26, 0xB7	; 183
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	44 d1       	rcall	.+648    	; 0x44a <main>
     1c2:	0c 94 8c 0d 	jmp	0x1b18	; 0x1b18 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <adc_init>:
     1c8:	ea e7       	ldi	r30, 0x7A	; 122
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	87 60       	ori	r24, 0x07	; 7
     1d0:	80 83       	st	Z, r24
     1d2:	80 81       	ld	r24, Z
     1d4:	80 68       	ori	r24, 0x80	; 128
     1d6:	80 83       	st	Z, r24
     1d8:	08 95       	ret

000001da <adc_read>:
     1da:	ec e7       	ldi	r30, 0x7C	; 124
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	80 68       	ori	r24, 0x80	; 128
     1e2:	80 83       	st	Z, r24
     1e4:	ea e7       	ldi	r30, 0x7A	; 122
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	80 64       	ori	r24, 0x40	; 64
     1ec:	80 83       	st	Z, r24
     1ee:	80 81       	ld	r24, Z
     1f0:	86 fd       	sbrc	r24, 6
     1f2:	fd cf       	rjmp	.-6      	; 0x1ee <adc_read+0x14>
     1f4:	20 91 78 00 	lds	r18, 0x0078
     1f8:	30 91 79 00 	lds	r19, 0x0079
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	24 36       	cpi	r18, 0x64	; 100
     202:	31 05       	cpc	r19, r1
     204:	10 f4       	brcc	.+4      	; 0x20a <adc_read+0x30>
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	08 95       	ret

0000020c <can_init>:
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	cd b7       	in	r28, 0x3d	; 61
     212:	de b7       	in	r29, 0x3e	; 62
     214:	2a 97       	sbiw	r28, 0x0a	; 10
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 d2       	rcall	.+1024   	; 0x622 <mcp2515_init>
     222:	41 e0       	ldi	r20, 0x01	; 1
     224:	60 e6       	ldi	r22, 0x60	; 96
     226:	80 e6       	ldi	r24, 0x60	; 96
     228:	1e d2       	rcall	.+1084   	; 0x666 <mcp2515_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     22a:	8f ef       	ldi	r24, 0xFF	; 255
     22c:	9f e8       	ldi	r25, 0x8F	; 143
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <can_init+0x22>
     232:	00 c0       	rjmp	.+0      	; 0x234 <can_init+0x28>
     234:	00 00       	nop
     236:	41 e0       	ldi	r20, 0x01	; 1
     238:	61 e0       	ldi	r22, 0x01	; 1
     23a:	8b e2       	ldi	r24, 0x2B	; 43
     23c:	3a d2       	rcall	.+1140   	; 0x6b2 <mcp2515_bit_modify>
     23e:	8f ef       	ldi	r24, 0xFF	; 255
     240:	9f e8       	ldi	r25, 0x8F	; 143
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <can_init+0x36>
     246:	00 c0       	rjmp	.+0      	; 0x248 <can_init+0x3c>
     248:	00 00       	nop
     24a:	40 e0       	ldi	r20, 0x00	; 0
     24c:	60 ee       	ldi	r22, 0xE0	; 224
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	30 d2       	rcall	.+1120   	; 0x6b2 <mcp2515_bit_modify>
     252:	8f ef       	ldi	r24, 0xFF	; 255
     254:	9f e8       	ldi	r25, 0x8F	; 143
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <can_init+0x4a>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <can_init+0x50>
     25c:	00 00       	nop
     25e:	4a e0       	ldi	r20, 0x0A	; 10
     260:	be 01       	movw	r22, r28
     262:	6f 5f       	subi	r22, 0xFF	; 255
     264:	7f 4f       	sbci	r23, 0xFF	; 255
     266:	8e e0       	ldi	r24, 0x0E	; 14
     268:	df d1       	rcall	.+958    	; 0x628 <mcp2515_read>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	80 7e       	andi	r24, 0xE0	; 224
     26e:	a9 f0       	breq	.+42     	; 0x29a <can_init+0x8e>
     270:	1f 92       	push	r1
     272:	8f 93       	push	r24
     274:	87 e1       	ldi	r24, 0x17	; 23
     276:	92 e0       	ldi	r25, 0x02	; 2
     278:	9f 93       	push	r25
     27a:	8f 93       	push	r24
     27c:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printf>
     280:	8c e7       	ldi	r24, 0x7C	; 124
     282:	92 e0       	ldi	r25, 0x02	; 2
     284:	9f 93       	push	r25
     286:	8f 93       	push	r24
     288:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printf>
     28c:	0f 90       	pop	r0
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	0f 90       	pop	r0
     296:	0f 90       	pop	r0
     298:	08 c0       	rjmp	.+16     	; 0x2aa <can_init+0x9e>
     29a:	8b e5       	ldi	r24, 0x5B	; 91
     29c:	92 e0       	ldi	r25, 0x02	; 2
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printf>
     2a6:	0f 90       	pop	r0
     2a8:	0f 90       	pop	r0
     2aa:	2a 96       	adiw	r28, 0x0a	; 10
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <can_message_send>:
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	ec 01       	movw	r28, r24
     2c4:	41 e0       	ldi	r20, 0x01	; 1
     2c6:	6a 81       	ldd	r22, Y+2	; 0x02
     2c8:	85 e3       	ldi	r24, 0x35	; 53
     2ca:	cd d1       	rcall	.+922    	; 0x666 <mcp2515_write>
     2cc:	41 e0       	ldi	r20, 0x01	; 1
     2ce:	68 81       	ld	r22, Y
     2d0:	81 e3       	ldi	r24, 0x31	; 49
     2d2:	c9 d1       	rcall	.+914    	; 0x666 <mcp2515_write>
     2d4:	41 e0       	ldi	r20, 0x01	; 1
     2d6:	68 81       	ld	r22, Y
     2d8:	82 e3       	ldi	r24, 0x32	; 50
     2da:	c5 d1       	rcall	.+906    	; 0x666 <mcp2515_write>
     2dc:	8a 81       	ldd	r24, Y+2	; 0x02
     2de:	88 23       	and	r24, r24
     2e0:	61 f0       	breq	.+24     	; 0x2fa <can_message_send+0x3e>
     2e2:	10 e0       	ldi	r17, 0x00	; 0
     2e4:	fe 01       	movw	r30, r28
     2e6:	e1 0f       	add	r30, r17
     2e8:	f1 1d       	adc	r31, r1
     2ea:	41 e0       	ldi	r20, 0x01	; 1
     2ec:	63 81       	ldd	r22, Z+3	; 0x03
     2ee:	86 e3       	ldi	r24, 0x36	; 54
     2f0:	ba d1       	rcall	.+884    	; 0x666 <mcp2515_write>
     2f2:	1f 5f       	subi	r17, 0xFF	; 255
     2f4:	8a 81       	ldd	r24, Y+2	; 0x02
     2f6:	18 17       	cp	r17, r24
     2f8:	a8 f3       	brcs	.-22     	; 0x2e4 <can_message_send+0x28>
     2fa:	8c e7       	ldi	r24, 0x7C	; 124
     2fc:	92 e0       	ldi	r25, 0x02	; 2
     2fe:	9f 93       	push	r25
     300:	8f 93       	push	r24
     302:	f0 d7       	rcall	.+4064   	; 0x12e4 <printf>
     304:	81 e8       	ldi	r24, 0x81	; 129
     306:	c5 d1       	rcall	.+906    	; 0x692 <mcp2515_request>
     308:	0f 90       	pop	r0
     30a:	0f 90       	pop	r0
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	08 95       	ret

00000314 <can_data_receive>:
     314:	ff 92       	push	r15
     316:	0f 93       	push	r16
     318:	1f 93       	push	r17
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	2a 97       	sbiw	r28, 0x0a	; 10
     324:	0f b6       	in	r0, 0x3f	; 63
     326:	f8 94       	cli
     328:	de bf       	out	0x3e, r29	; 62
     32a:	0f be       	out	0x3f, r0	; 63
     32c:	cd bf       	out	0x3d, r28	; 61
     32e:	8c 01       	movw	r16, r24
     330:	f6 2e       	mov	r15, r22
     332:	41 e0       	ldi	r20, 0x01	; 1
     334:	be 01       	movw	r22, r28
     336:	6f 5f       	subi	r22, 0xFF	; 255
     338:	7f 4f       	sbci	r23, 0xFF	; 255
     33a:	8c e2       	ldi	r24, 0x2C	; 44
     33c:	75 d1       	rcall	.+746    	; 0x628 <mcp2515_read>
     33e:	89 81       	ldd	r24, Y+1	; 0x01
     340:	81 11       	cpse	r24, r1
     342:	0b c0       	rjmp	.+22     	; 0x35a <can_data_receive+0x46>
     344:	1f 92       	push	r1
     346:	1f 92       	push	r1
     348:	2d e6       	ldi	r18, 0x6D	; 109
     34a:	32 e0       	ldi	r19, 0x02	; 2
     34c:	3f 93       	push	r19
     34e:	2f 93       	push	r18
     350:	c9 d7       	rcall	.+3986   	; 0x12e4 <printf>
     352:	0f 90       	pop	r0
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	41 e0       	ldi	r20, 0x01	; 1
     35c:	be 01       	movw	r22, r28
     35e:	6f 5f       	subi	r22, 0xFF	; 255
     360:	7f 4f       	sbci	r23, 0xFF	; 255
     362:	85 e6       	ldi	r24, 0x65	; 101
     364:	8f 0d       	add	r24, r15
     366:	60 d1       	rcall	.+704    	; 0x628 <mcp2515_read>
     368:	89 81       	ldd	r24, Y+1	; 0x01
     36a:	f8 01       	movw	r30, r16
     36c:	82 83       	std	Z+2, r24	; 0x02
     36e:	41 e0       	ldi	r20, 0x01	; 1
     370:	be 01       	movw	r22, r28
     372:	6f 5f       	subi	r22, 0xFF	; 255
     374:	7f 4f       	sbci	r23, 0xFF	; 255
     376:	81 e6       	ldi	r24, 0x61	; 97
     378:	8f 0d       	add	r24, r15
     37a:	56 d1       	rcall	.+684    	; 0x628 <mcp2515_read>
     37c:	29 81       	ldd	r18, Y+1	; 0x01
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	f8 01       	movw	r30, r16
     382:	31 83       	std	Z+1, r19	; 0x01
     384:	20 83       	st	Z, r18
     386:	42 81       	ldd	r20, Z+2	; 0x02
     388:	be 01       	movw	r22, r28
     38a:	6f 5f       	subi	r22, 0xFF	; 255
     38c:	7f 4f       	sbci	r23, 0xFF	; 255
     38e:	86 e6       	ldi	r24, 0x66	; 102
     390:	8f 0d       	add	r24, r15
     392:	4a d1       	rcall	.+660    	; 0x628 <mcp2515_read>
     394:	f8 01       	movw	r30, r16
     396:	92 81       	ldd	r25, Z+2	; 0x02
     398:	99 23       	and	r25, r25
     39a:	61 f0       	breq	.+24     	; 0x3b4 <can_data_receive+0xa0>
     39c:	9e 01       	movw	r18, r28
     39e:	2f 5f       	subi	r18, 0xFF	; 255
     3a0:	3f 4f       	sbci	r19, 0xFF	; 255
     3a2:	d8 01       	movw	r26, r16
     3a4:	13 96       	adiw	r26, 0x03	; 3
     3a6:	f9 01       	movw	r30, r18
     3a8:	81 91       	ld	r24, Z+
     3aa:	8d 93       	st	X+, r24
     3ac:	8e 2f       	mov	r24, r30
     3ae:	82 1b       	sub	r24, r18
     3b0:	89 17       	cp	r24, r25
     3b2:	d0 f3       	brcs	.-12     	; 0x3a8 <can_data_receive+0x94>
     3b4:	40 e0       	ldi	r20, 0x00	; 0
     3b6:	61 e0       	ldi	r22, 0x01	; 1
     3b8:	8c e2       	ldi	r24, 0x2C	; 44
     3ba:	7b d1       	rcall	.+758    	; 0x6b2 <mcp2515_bit_modify>
     3bc:	2a 96       	adiw	r28, 0x0a	; 10
     3be:	0f b6       	in	r0, 0x3f	; 63
     3c0:	f8 94       	cli
     3c2:	de bf       	out	0x3e, r29	; 62
     3c4:	0f be       	out	0x3f, r0	; 63
     3c6:	cd bf       	out	0x3d, r28	; 61
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	1f 91       	pop	r17
     3ce:	0f 91       	pop	r16
     3d0:	ff 90       	pop	r15
     3d2:	08 95       	ret

000003d4 <can_get_message>:
     3d4:	0f 93       	push	r16
     3d6:	1f 93       	push	r17
     3d8:	cf 93       	push	r28
     3da:	df 93       	push	r29
     3dc:	cd b7       	in	r28, 0x3d	; 61
     3de:	de b7       	in	r29, 0x3e	; 62
     3e0:	2a 97       	sbiw	r28, 0x0a	; 10
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	f8 94       	cli
     3e6:	de bf       	out	0x3e, r29	; 62
     3e8:	0f be       	out	0x3f, r0	; 63
     3ea:	cd bf       	out	0x3d, r28	; 61
     3ec:	8c 01       	movw	r16, r24
     3ee:	41 e0       	ldi	r20, 0x01	; 1
     3f0:	be 01       	movw	r22, r28
     3f2:	6f 5f       	subi	r22, 0xFF	; 255
     3f4:	7f 4f       	sbci	r23, 0xFF	; 255
     3f6:	8c e2       	ldi	r24, 0x2C	; 44
     3f8:	17 d1       	rcall	.+558    	; 0x628 <mcp2515_read>
     3fa:	89 81       	ldd	r24, Y+1	; 0x01
     3fc:	80 ff       	sbrs	r24, 0
     3fe:	0b c0       	rjmp	.+22     	; 0x416 <can_get_message+0x42>
     400:	60 e0       	ldi	r22, 0x00	; 0
     402:	70 e0       	ldi	r23, 0x00	; 0
     404:	c8 01       	movw	r24, r16
     406:	86 df       	rcall	.-244    	; 0x314 <can_data_receive>
     408:	40 e0       	ldi	r20, 0x00	; 0
     40a:	61 e0       	ldi	r22, 0x01	; 1
     40c:	8c e2       	ldi	r24, 0x2C	; 44
     40e:	51 d1       	rcall	.+674    	; 0x6b2 <mcp2515_bit_modify>
     410:	81 e0       	ldi	r24, 0x01	; 1
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0f c0       	rjmp	.+30     	; 0x434 <can_get_message+0x60>
     416:	81 ff       	sbrs	r24, 1
     418:	0b c0       	rjmp	.+22     	; 0x430 <can_get_message+0x5c>
     41a:	61 e0       	ldi	r22, 0x01	; 1
     41c:	70 e0       	ldi	r23, 0x00	; 0
     41e:	c8 01       	movw	r24, r16
     420:	79 df       	rcall	.-270    	; 0x314 <can_data_receive>
     422:	40 e0       	ldi	r20, 0x00	; 0
     424:	62 e0       	ldi	r22, 0x02	; 2
     426:	8c e2       	ldi	r24, 0x2C	; 44
     428:	44 d1       	rcall	.+648    	; 0x6b2 <mcp2515_bit_modify>
     42a:	81 e0       	ldi	r24, 0x01	; 1
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	02 c0       	rjmp	.+4      	; 0x434 <can_get_message+0x60>
     430:	80 e0       	ldi	r24, 0x00	; 0
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	2a 96       	adiw	r28, 0x0a	; 10
     436:	0f b6       	in	r0, 0x3f	; 63
     438:	f8 94       	cli
     43a:	de bf       	out	0x3e, r29	; 62
     43c:	0f be       	out	0x3f, r0	; 63
     43e:	cd bf       	out	0x3d, r28	; 61
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	1f 91       	pop	r17
     446:	0f 91       	pop	r16
     448:	08 95       	ret

0000044a <main>:
#include "pwm.h"
#include "adc.h"
#include "motor.h"


int main(void){
     44a:	cf 93       	push	r28
     44c:	df 93       	push	r29
     44e:	cd b7       	in	r28, 0x3d	; 61
     450:	de b7       	in	r29, 0x3e	; 62
     452:	a7 97       	sbiw	r28, 0x27	; 39
     454:	0f b6       	in	r0, 0x3f	; 63
     456:	f8 94       	cli
     458:	de bf       	out	0x3e, r29	; 62
     45a:	0f be       	out	0x3f, r0	; 63
     45c:	cd bf       	out	0x3d, r28	; 61
	
	DDRD |= (1 << PD3);//init solenoid
     45e:	53 9a       	sbi	0x0a, 3	; 10
	PORTD &= (1 << PD3);//init solenoid
     460:	8b b1       	in	r24, 0x0b	; 11
     462:	88 70       	andi	r24, 0x08	; 8
     464:	8b b9       	out	0x0b, r24	; 11
	
	USART_Init(MYUBRR);
     466:	87 e6       	ldi	r24, 0x67	; 103
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	c1 d4       	rcall	.+2434   	; 0xdee <USART_Init>
	printf("start \n\r \n");
     46c:	8f e7       	ldi	r24, 0x7F	; 127
     46e:	92 e0       	ldi	r25, 0x02	; 2
     470:	4a d7       	rcall	.+3732   	; 0x1306 <puts>
	
	can_init();
     472:	cc de       	rcall	.-616    	; 0x20c <can_init>
	
	struct can_message message_input;
	message_input.id = 1;
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	9a 83       	std	Y+2, r25	; 0x02
     47a:	89 83       	std	Y+1, r24	; 0x01
	message_input.length = 1;
     47c:	21 e0       	ldi	r18, 0x01	; 1
     47e:	2b 83       	std	Y+3, r18	; 0x03
	message_input.data[0] = (uint8_t) 0;
     480:	1c 82       	std	Y+4, r1	; 0x04
	
	struct can_message message_score;
	message_score.id = 1;
     482:	9f 87       	std	Y+15, r25	; 0x0f
     484:	8e 87       	std	Y+14, r24	; 0x0e
	message_score.length = 1;
     486:	28 8b       	std	Y+16, r18	; 0x10
	message_score.data[0] = (uint8_t) 0;
     488:	19 8a       	std	Y+17, r1	; 0x11
	
	struct can_message message_game_over;
	message_game_over.id = 2;
     48a:	82 e0       	ldi	r24, 0x02	; 2
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	9c 8f       	std	Y+28, r25	; 0x1c
     490:	8b 8f       	std	Y+27, r24	; 0x1b
	message_game_over.length = 1;
     492:	2d 8f       	std	Y+29, r18	; 0x1d
	message_game_over.data[0] = (uint8_t) 1;
     494:	2e 8f       	std	Y+30, r18	; 0x1e
	

	pwm_init();	
     496:	36 d3       	rcall	.+1644   	; 0xb04 <pwm_init>
	adc_init();
     498:	97 de       	rcall	.-722    	; 0x1c8 <adc_init>
	
	float pw = 1500;
	float x_val = 130;
	
	int old_val = adc_read();
     49a:	9f de       	rcall	.-706    	; 0x1da <adc_read>
     49c:	8c 01       	movw	r16, r24
	int new_val = adc_read();
     49e:	9d de       	rcall	.-710    	; 0x1da <adc_read>
	
	int succesfull_bounce = 0;
	sei();
     4a0:	78 94       	sei
	motor_init();
     4a2:	32 d1       	rcall	.+612    	; 0x708 <motor_init>
	
	motor_reset_encoder();
     4a4:	90 d1       	rcall	.+800    	; 0x7c6 <motor_reset_encoder>
	motor_dac_write(0);
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	1c d1       	rcall	.+568    	; 0x6e2 <motor_dac_write>
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
	
	uint8_t gain_choise = 0;
     4aa:	71 2c       	mov	r7, r1
	
	motor_reset_encoder();
	motor_dac_write(0);
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
     4ac:	e1 2c       	mov	r14, r1
     4ae:	f1 2c       	mov	r15, r1
	float x_val = 130;
	
	int old_val = adc_read();
	int new_val = adc_read();
	
	int succesfull_bounce = 0;
     4b0:	c1 2c       	mov	r12, r1
     4b2:	d1 2c       	mov	r13, r1
			else if (message_input.id == 4){
				gain_choise = message_input.data[0];
				motor_set_gain(gain_choise);
			}else if (message_input.id == 5){
				gain_val = message_input.data[0];
				printf("gc %d\n\r", gain_choise);
     4b4:	0f 2e       	mov	r0, r31
     4b6:	f1 e9       	ldi	r31, 0x91	; 145
     4b8:	8f 2e       	mov	r8, r31
     4ba:	f2 e0       	ldi	r31, 0x02	; 2
     4bc:	9f 2e       	mov	r9, r31
     4be:	f0 2d       	mov	r31, r0
			}
			else if(message_input.id == 2){
				motor_pid_controller(message_input.data[0]);
			}
			else if(message_input.id == 3){	
				printf("shot \n\r");			
     4c0:	0f 2e       	mov	r0, r31
     4c2:	f9 e8       	ldi	r31, 0x89	; 137
     4c4:	af 2e       	mov	r10, r31
     4c6:	f2 e0       	ldi	r31, 0x02	; 2
     4c8:	bf 2e       	mov	r11, r31
     4ca:	f0 2d       	mov	r31, r0
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
				message_score.data[0] = succesfull_bounce;
				can_message_send(&message_score);
				enable_game_fail = 1;				
     4cc:	33 24       	eor	r3, r3
     4ce:	33 94       	inc	r3
     4d0:	41 2c       	mov	r4, r1
     4d2:	51 2c       	mov	r5, r1
     4d4:	61 2c       	mov	r6, r1
	
	uint8_t gain_choise = 0;
	uint8_t gain_val = 0;

    while(1){
		if(can_get_message(&message_input)){
     4d6:	ce 01       	movw	r24, r28
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	7c df       	rcall	.-264    	; 0x3d4 <can_get_message>
     4dc:	89 2b       	or	r24, r25
     4de:	09 f4       	brne	.+2      	; 0x4e2 <main+0x98>
     4e0:	5a c0       	rjmp	.+180    	; 0x596 <main+0x14c>
			if(message_input.id == 1){
     4e2:	89 81       	ldd	r24, Y+1	; 0x01
     4e4:	9a 81       	ldd	r25, Y+2	; 0x02
     4e6:	81 30       	cpi	r24, 0x01	; 1
     4e8:	91 05       	cpc	r25, r1
     4ea:	79 f4       	brne	.+30     	; 0x50a <main+0xc0>
				x_val = 255-(float) message_input.data[0];
     4ec:	6c 81       	ldd	r22, Y+4	; 0x04
     4ee:	70 e0       	ldi	r23, 0x00	; 0
     4f0:	80 e0       	ldi	r24, 0x00	; 0
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	8e d5       	rcall	.+2844   	; 0x1012 <__floatunsisf>
     4f6:	9b 01       	movw	r18, r22
     4f8:	ac 01       	movw	r20, r24
     4fa:	60 e0       	ldi	r22, 0x00	; 0
     4fc:	70 e0       	ldi	r23, 0x00	; 0
     4fe:	8f e7       	ldi	r24, 0x7F	; 127
     500:	93 e4       	ldi	r25, 0x43	; 67
     502:	85 d4       	rcall	.+2314   	; 0xe0e <__subsf3>
				pw = pwm_scale_joystick_val(x_val);
     504:	67 d3       	rcall	.+1742   	; 0xbd4 <pwm_scale_joystick_val>
				pwm_set_pulse_width(pw);
     506:	1d d3       	rcall	.+1594   	; 0xb42 <pwm_set_pulse_width>
     508:	46 c0       	rjmp	.+140    	; 0x596 <main+0x14c>
				
			}
			else if(message_input.id == 2){
     50a:	82 30       	cpi	r24, 0x02	; 2
     50c:	91 05       	cpc	r25, r1
     50e:	19 f4       	brne	.+6      	; 0x516 <main+0xcc>
				motor_pid_controller(message_input.data[0]);
     510:	8c 81       	ldd	r24, Y+4	; 0x04
     512:	66 d1       	rcall	.+716    	; 0x7e0 <motor_pid_controller>
     514:	40 c0       	rjmp	.+128    	; 0x596 <main+0x14c>
			}
			else if(message_input.id == 3){	
     516:	83 30       	cpi	r24, 0x03	; 3
     518:	91 05       	cpc	r25, r1
     51a:	f1 f4       	brne	.+60     	; 0x558 <main+0x10e>
				printf("shot \n\r");			
     51c:	bf 92       	push	r11
     51e:	af 92       	push	r10
     520:	e1 d6       	rcall	.+3522   	; 0x12e4 <printf>
				PORTD |= (1 << PD3);
     522:	5b 9a       	sbi	0x0b, 3	; 11
     524:	2f ef       	ldi	r18, 0xFF	; 255
     526:	81 ee       	ldi	r24, 0xE1	; 225
     528:	94 e0       	ldi	r25, 0x04	; 4
     52a:	21 50       	subi	r18, 0x01	; 1
     52c:	80 40       	sbci	r24, 0x00	; 0
     52e:	90 40       	sbci	r25, 0x00	; 0
     530:	e1 f7       	brne	.-8      	; 0x52a <main+0xe0>
     532:	00 c0       	rjmp	.+0      	; 0x534 <main+0xea>
     534:	00 00       	nop
				_delay_ms(100);
				PORTD &= ~(1 << PD3);
     536:	5b 98       	cbi	0x0b, 3	; 11
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0
     53c:	dd 20       	and	r13, r13
     53e:	14 f4       	brge	.+4      	; 0x544 <main+0xfa>
     540:	c5 2c       	mov	r12, r5
     542:	d6 2c       	mov	r13, r6
				if (succesfull_bounce < 0)
				{
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
     544:	af ef       	ldi	r26, 0xFF	; 255
     546:	ca 1a       	sub	r12, r26
     548:	da 0a       	sbc	r13, r26
				message_score.data[0] = succesfull_bounce;
     54a:	c9 8a       	std	Y+17, r12	; 0x11
				can_message_send(&message_score);
     54c:	ce 01       	movw	r24, r28
     54e:	0e 96       	adiw	r24, 0x0e	; 14
     550:	b5 de       	rcall	.-662    	; 0x2bc <can_message_send>
				enable_game_fail = 1;				
     552:	e3 2c       	mov	r14, r3
     554:	f4 2c       	mov	r15, r4
     556:	1f c0       	rjmp	.+62     	; 0x596 <main+0x14c>
			}
			else if (message_input.id == 4){
     558:	84 30       	cpi	r24, 0x04	; 4
     55a:	91 05       	cpc	r25, r1
     55c:	29 f4       	brne	.+10     	; 0x568 <main+0x11e>
				gain_choise = message_input.data[0];
     55e:	7c 80       	ldd	r7, Y+4	; 0x04
				motor_set_gain(gain_choise);
     560:	87 2d       	mov	r24, r7
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	10 d2       	rcall	.+1056   	; 0x986 <motor_set_gain>
     566:	17 c0       	rjmp	.+46     	; 0x596 <main+0x14c>
			}else if (message_input.id == 5){
     568:	05 97       	sbiw	r24, 0x05	; 5
     56a:	a9 f4       	brne	.+42     	; 0x596 <main+0x14c>
				gain_val = message_input.data[0];
     56c:	2c 80       	ldd	r2, Y+4	; 0x04
				printf("gc %d\n\r", gain_choise);
     56e:	1f 92       	push	r1
     570:	7f 92       	push	r7
     572:	9f 92       	push	r9
     574:	8f 92       	push	r8
     576:	b6 d6       	rcall	.+3436   	; 0x12e4 <printf>
				printf("gv %d\n\r", gain_val);
     578:	1f 92       	push	r1
     57a:	2f 92       	push	r2
     57c:	a9 e9       	ldi	r26, 0x99	; 153
     57e:	b2 e0       	ldi	r27, 0x02	; 2
     580:	bf 93       	push	r27
     582:	af 93       	push	r26
     584:	af d6       	rcall	.+3422   	; 0x12e4 <printf>
				motor_tune_gain(gain_choise, gain_val);
     586:	62 2d       	mov	r22, r2
     588:	87 2d       	mov	r24, r7
     58a:	6e d2       	rcall	.+1244   	; 0xa68 <motor_tune_gain>
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
			}			
		}

		
		
		new_val = adc_read();
     596:	21 de       	rcall	.-958    	; 0x1da <adc_read>

		
		if( (old_val == 0) && (new_val == 1) )
     598:	01 15       	cp	r16, r1
     59a:	11 05       	cpc	r17, r1
     59c:	79 f4       	brne	.+30     	; 0x5bc <main+0x172>
     59e:	01 97       	sbiw	r24, 0x01	; 1
     5a0:	09 f0       	breq	.+2      	; 0x5a4 <main+0x15a>
     5a2:	99 cf       	rjmp	.-206    	; 0x4d6 <main+0x8c>
     5a4:	9f ef       	ldi	r25, 0xFF	; 255
     5a6:	a0 e7       	ldi	r26, 0x70	; 112
     5a8:	b2 e0       	ldi	r27, 0x02	; 2
     5aa:	91 50       	subi	r25, 0x01	; 1
     5ac:	a0 40       	sbci	r26, 0x00	; 0
     5ae:	b0 40       	sbci	r27, 0x00	; 0
     5b0:	e1 f7       	brne	.-8      	; 0x5aa <main+0x160>
     5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <main+0x16a>
     5b4:	00 00       	nop
		{
			old_val = 1;
     5b6:	03 2d       	mov	r16, r3
     5b8:	14 2d       	mov	r17, r4
     5ba:	8d cf       	rjmp	.-230    	; 0x4d6 <main+0x8c>
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
     5bc:	01 30       	cpi	r16, 0x01	; 1
     5be:	11 05       	cpc	r17, r1
     5c0:	09 f0       	breq	.+2      	; 0x5c4 <main+0x17a>
     5c2:	89 cf       	rjmp	.-238    	; 0x4d6 <main+0x8c>
     5c4:	89 2b       	or	r24, r25
     5c6:	09 f0       	breq	.+2      	; 0x5ca <main+0x180>
     5c8:	86 cf       	rjmp	.-244    	; 0x4d6 <main+0x8c>
     5ca:	e1 14       	cp	r14, r1
     5cc:	f1 04       	cpc	r15, r1
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <main+0x188>
     5d0:	82 cf       	rjmp	.-252    	; 0x4d6 <main+0x8c>
     5d2:	2f ef       	ldi	r18, 0xFF	; 255
     5d4:	80 e7       	ldi	r24, 0x70	; 112
     5d6:	92 e0       	ldi	r25, 0x02	; 2
     5d8:	21 50       	subi	r18, 0x01	; 1
     5da:	80 40       	sbci	r24, 0x00	; 0
     5dc:	90 40       	sbci	r25, 0x00	; 0
     5de:	e1 f7       	brne	.-8      	; 0x5d8 <main+0x18e>
     5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <main+0x198>
     5e2:	00 00       	nop
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
			message_score.data[0] = succesfull_bounce;
     5e4:	19 8a       	std	Y+17, r1	; 0x11
			can_message_send(&message_game_over);
     5e6:	ce 01       	movw	r24, r28
     5e8:	4b 96       	adiw	r24, 0x1b	; 27
     5ea:	68 de       	rcall	.-816    	; 0x2bc <can_message_send>
			can_message_send(&message_score);
     5ec:	ce 01       	movw	r24, r28
     5ee:	0e 96       	adiw	r24, 0x0e	; 14
     5f0:	65 de       	rcall	.-822    	; 0x2bc <can_message_send>
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
     5f2:	e5 2c       	mov	r14, r5
     5f4:	f6 2c       	mov	r15, r6
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
     5f6:	c5 2c       	mov	r12, r5
     5f8:	d6 2c       	mov	r13, r6
			old_val = 1;
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
     5fa:	05 2d       	mov	r16, r5
     5fc:	16 2d       	mov	r17, r6
     5fe:	6b cf       	rjmp	.-298    	; 0x4d6 <main+0x8c>

00000600 <mcp2515_reset>:
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	1f 92       	push	r1
     606:	cd b7       	in	r28, 0x3d	; 61
     608:	de b7       	in	r29, 0x3e	; 62
     60a:	2f 98       	cbi	0x05, 7	; 5
     60c:	80 ec       	ldi	r24, 0xC0	; 192
     60e:	89 83       	std	Y+1, r24	; 0x01
     610:	61 e0       	ldi	r22, 0x01	; 1
     612:	ce 01       	movw	r24, r28
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	18 d3       	rcall	.+1584   	; 0xc48 <spi_write>
     618:	2f 9a       	sbi	0x05, 7	; 5
     61a:	0f 90       	pop	r0
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	08 95       	ret

00000622 <mcp2515_init>:
     622:	e3 d2       	rcall	.+1478   	; 0xbea <spi_init>
     624:	ed cf       	rjmp	.-38     	; 0x600 <mcp2515_reset>
     626:	08 95       	ret

00000628 <mcp2515_read>:
     628:	ff 92       	push	r15
     62a:	0f 93       	push	r16
     62c:	1f 93       	push	r17
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
     632:	1f 92       	push	r1
     634:	1f 92       	push	r1
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
     63a:	8b 01       	movw	r16, r22
     63c:	f4 2e       	mov	r15, r20
     63e:	2f 98       	cbi	0x05, 7	; 5
     640:	93 e0       	ldi	r25, 0x03	; 3
     642:	99 83       	std	Y+1, r25	; 0x01
     644:	8a 83       	std	Y+2, r24	; 0x02
     646:	62 e0       	ldi	r22, 0x02	; 2
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	fd d2       	rcall	.+1530   	; 0xc48 <spi_write>
     64e:	6f 2d       	mov	r22, r15
     650:	c8 01       	movw	r24, r16
     652:	d4 d2       	rcall	.+1448   	; 0xbfc <spi_read>
     654:	2f 9a       	sbi	0x05, 7	; 5
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	df 91       	pop	r29
     65c:	cf 91       	pop	r28
     65e:	1f 91       	pop	r17
     660:	0f 91       	pop	r16
     662:	ff 90       	pop	r15
     664:	08 95       	ret

00000666 <mcp2515_write>:
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	00 d0       	rcall	.+0      	; 0x66c <mcp2515_write+0x6>
     66c:	cd b7       	in	r28, 0x3d	; 61
     66e:	de b7       	in	r29, 0x3e	; 62
     670:	2f 98       	cbi	0x05, 7	; 5
     672:	92 e0       	ldi	r25, 0x02	; 2
     674:	99 83       	std	Y+1, r25	; 0x01
     676:	8a 83       	std	Y+2, r24	; 0x02
     678:	6b 83       	std	Y+3, r22	; 0x03
     67a:	62 e0       	ldi	r22, 0x02	; 2
     67c:	64 0f       	add	r22, r20
     67e:	ce 01       	movw	r24, r28
     680:	01 96       	adiw	r24, 0x01	; 1
     682:	e2 d2       	rcall	.+1476   	; 0xc48 <spi_write>
     684:	2f 9a       	sbi	0x05, 7	; 5
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	08 95       	ret

00000692 <mcp2515_request>:
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	1f 92       	push	r1
     698:	cd b7       	in	r28, 0x3d	; 61
     69a:	de b7       	in	r29, 0x3e	; 62
     69c:	2f 98       	cbi	0x05, 7	; 5
     69e:	89 83       	std	Y+1, r24	; 0x01
     6a0:	61 e0       	ldi	r22, 0x01	; 1
     6a2:	ce 01       	movw	r24, r28
     6a4:	01 96       	adiw	r24, 0x01	; 1
     6a6:	d0 d2       	rcall	.+1440   	; 0xc48 <spi_write>
     6a8:	2f 9a       	sbi	0x05, 7	; 5
     6aa:	0f 90       	pop	r0
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret

000006b2 <mcp2515_bit_modify>:
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	00 d0       	rcall	.+0      	; 0x6b8 <mcp2515_bit_modify+0x6>
     6b8:	1f 92       	push	r1
     6ba:	cd b7       	in	r28, 0x3d	; 61
     6bc:	de b7       	in	r29, 0x3e	; 62
     6be:	2f 98       	cbi	0x05, 7	; 5
     6c0:	95 e0       	ldi	r25, 0x05	; 5
     6c2:	99 83       	std	Y+1, r25	; 0x01
     6c4:	8a 83       	std	Y+2, r24	; 0x02
     6c6:	6b 83       	std	Y+3, r22	; 0x03
     6c8:	4c 83       	std	Y+4, r20	; 0x04
     6ca:	64 e0       	ldi	r22, 0x04	; 4
     6cc:	ce 01       	movw	r24, r28
     6ce:	01 96       	adiw	r24, 0x01	; 1
     6d0:	bb d2       	rcall	.+1398   	; 0xc48 <spi_write>
     6d2:	2f 9a       	sbi	0x05, 7	; 5
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	08 95       	ret

000006e2 <motor_dac_write>:
	}
	else {
		motor_set_dir(1);
		motor_dac_write((slider_pos - 127) * 0.5);
	}
}
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	00 d0       	rcall	.+0      	; 0x6e8 <motor_dac_write+0x6>
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
     6ec:	90 e5       	ldi	r25, 0x50	; 80
     6ee:	99 83       	std	Y+1, r25	; 0x01
     6f0:	1a 82       	std	Y+2, r1	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	64 e0       	ldi	r22, 0x04	; 4
     6f6:	ce 01       	movw	r24, r28
     6f8:	01 96       	adiw	r24, 0x01	; 1
     6fa:	c4 d2       	rcall	.+1416   	; 0xc84 <TWI_Start_Transceiver_With_Data>
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	08 95       	ret

00000708 <motor_init>:
     708:	b3 d2       	rcall	.+1382   	; 0xc70 <TWI_Master_Initialise>
     70a:	e1 e0       	ldi	r30, 0x01	; 1
     70c:	f1 e0       	ldi	r31, 0x01	; 1
     70e:	80 81       	ld	r24, Z
     710:	8a 67       	ori	r24, 0x7A	; 122
     712:	80 83       	st	Z, r24
     714:	e2 e0       	ldi	r30, 0x02	; 2
     716:	f1 e0       	ldi	r31, 0x01	; 1
     718:	80 81       	ld	r24, Z
     71a:	82 60       	ori	r24, 0x02	; 2
     71c:	80 83       	st	Z, r24
     71e:	80 81       	ld	r24, Z
     720:	80 61       	ori	r24, 0x10	; 16
     722:	80 83       	st	Z, r24
     724:	10 92 07 01 	sts	0x0107, r1
     728:	80 e5       	ldi	r24, 0x50	; 80
     72a:	db df       	rcall	.-74     	; 0x6e2 <motor_dac_write>
     72c:	2f e7       	ldi	r18, 0x7F	; 127
     72e:	8a e1       	ldi	r24, 0x1A	; 26
     730:	96 e0       	ldi	r25, 0x06	; 6
     732:	21 50       	subi	r18, 0x01	; 1
     734:	80 40       	sbci	r24, 0x00	; 0
     736:	90 40       	sbci	r25, 0x00	; 0
     738:	e1 f7       	brne	.-8      	; 0x732 <motor_init+0x2a>
     73a:	00 c0       	rjmp	.+0      	; 0x73c <motor_init+0x34>
     73c:	00 00       	nop
     73e:	08 95       	ret

00000740 <motor_set_dir>:
     740:	88 23       	and	r24, r24
     742:	31 f0       	breq	.+12     	; 0x750 <motor_set_dir+0x10>
     744:	e2 e0       	ldi	r30, 0x02	; 2
     746:	f1 e0       	ldi	r31, 0x01	; 1
     748:	80 81       	ld	r24, Z
     74a:	82 60       	ori	r24, 0x02	; 2
     74c:	80 83       	st	Z, r24
     74e:	08 95       	ret
     750:	e2 e0       	ldi	r30, 0x02	; 2
     752:	f1 e0       	ldi	r31, 0x01	; 1
     754:	80 81       	ld	r24, Z
     756:	8d 7f       	andi	r24, 0xFD	; 253
     758:	80 83       	st	Z, r24
     75a:	08 95       	ret

0000075c <motor_read_encoder>:

int16_t motor_read_encoder(){
     75c:	cf 93       	push	r28
     75e:	df 93       	push	r29
     760:	00 d0       	rcall	.+0      	; 0x762 <motor_read_encoder+0x6>
     762:	1f 92       	push	r1
     764:	cd b7       	in	r28, 0x3d	; 61
     766:	de b7       	in	r29, 0x3e	; 62
	volatile int16_t encoder_val;
	volatile uint8_t lsb;
	volatile uint8_t msb;
	
	PORTH &= ~(1 << PH5); //set !OE low. enable output
     768:	e2 e0       	ldi	r30, 0x02	; 2
     76a:	f1 e0       	ldi	r31, 0x01	; 1
     76c:	80 81       	ld	r24, Z
     76e:	8f 7d       	andi	r24, 0xDF	; 223
     770:	80 83       	st	Z, r24
	PORTH &= ~(1 << PH3); //set SEL low to get high byte
     772:	80 81       	ld	r24, Z
     774:	87 7f       	andi	r24, 0xF7	; 247
     776:	80 83       	st	Z, r24
     778:	87 e8       	ldi	r24, 0x87	; 135
     77a:	93 e1       	ldi	r25, 0x13	; 19
     77c:	01 97       	sbiw	r24, 0x01	; 1
     77e:	f1 f7       	brne	.-4      	; 0x77c <motor_read_encoder+0x20>
     780:	00 c0       	rjmp	.+0      	; 0x782 <motor_read_encoder+0x26>
     782:	00 00       	nop
	
	_delay_ms(20);
	
	msb = PINK; // read msb
     784:	80 91 06 01 	lds	r24, 0x0106
     788:	8c 83       	std	Y+4, r24	; 0x04
	
	PORTH |= (1 << PH3); // set SEL high to get low byte
     78a:	80 81       	ld	r24, Z
     78c:	88 60       	ori	r24, 0x08	; 8
     78e:	80 83       	st	Z, r24
     790:	87 e8       	ldi	r24, 0x87	; 135
     792:	93 e1       	ldi	r25, 0x13	; 19
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	f1 f7       	brne	.-4      	; 0x794 <motor_read_encoder+0x38>
     798:	00 c0       	rjmp	.+0      	; 0x79a <motor_read_encoder+0x3e>
     79a:	00 00       	nop
	
	_delay_ms(20);
	
	lsb = PINK; // read lsb
     79c:	80 91 06 01 	lds	r24, 0x0106
     7a0:	8b 83       	std	Y+3, r24	; 0x03
	
	PORTH |= (1 << PH5); // Disable encoder read
     7a2:	80 81       	ld	r24, Z
     7a4:	80 62       	ori	r24, 0x20	; 32
     7a6:	80 83       	st	Z, r24
	
	encoder_val = ((msb<<8) | lsb); //process data
     7a8:	2c 81       	ldd	r18, Y+4	; 0x04
     7aa:	8b 81       	ldd	r24, Y+3	; 0x03
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	92 2b       	or	r25, r18
     7b0:	9a 83       	std	Y+2, r25	; 0x02
     7b2:	89 83       	std	Y+1, r24	; 0x01
	return encoder_val;
     7b4:	89 81       	ldd	r24, Y+1	; 0x01
     7b6:	9a 81       	ldd	r25, Y+2	; 0x02
}
     7b8:	0f 90       	pop	r0
     7ba:	0f 90       	pop	r0
     7bc:	0f 90       	pop	r0
     7be:	0f 90       	pop	r0
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	08 95       	ret

000007c6 <motor_reset_encoder>:

void motor_reset_encoder() {
	PORTH &= ~(1<<PH6);
     7c6:	e2 e0       	ldi	r30, 0x02	; 2
     7c8:	f1 e0       	ldi	r31, 0x01	; 1
     7ca:	80 81       	ld	r24, Z
     7cc:	8f 7b       	andi	r24, 0xBF	; 191
     7ce:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7d0:	82 e4       	ldi	r24, 0x42	; 66
     7d2:	8a 95       	dec	r24
     7d4:	f1 f7       	brne	.-4      	; 0x7d2 <motor_reset_encoder+0xc>
     7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <motor_reset_encoder+0x12>
	_delay_us(200);
	PORTH |= (1<<PH6);
     7d8:	80 81       	ld	r24, Z
     7da:	80 64       	ori	r24, 0x40	; 64
     7dc:	80 83       	st	Z, r24
     7de:	08 95       	ret

000007e0 <motor_pid_controller>:
}

void motor_pid_controller(uint8_t reference){
     7e0:	af 92       	push	r10
     7e2:	bf 92       	push	r11
     7e4:	cf 92       	push	r12
     7e6:	df 92       	push	r13
     7e8:	ef 92       	push	r14
     7ea:	ff 92       	push	r15
     7ec:	0f 93       	push	r16
     7ee:	1f 93       	push	r17
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	c8 2f       	mov	r28, r24
	reference = -reference;
	int var = 1;
	
	uint16_t encoder = motor_read_encoder();
     7f6:	b2 df       	rcall	.-156    	; 0x75c <motor_read_encoder>
	_delay_us(200);
	PORTH |= (1<<PH6);
}

void motor_pid_controller(uint8_t reference){
	reference = -reference;
     7f8:	c1 95       	neg	r28
	
	uint16_t encoder = motor_read_encoder();
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
	double measured_val = encoder_diff * scalor;
	int error = reference - (int) measured_val;
     7fa:	d0 e0       	ldi	r29, 0x00	; 0
	reference = -reference;
	int var = 1;
	
	uint16_t encoder = motor_read_encoder();
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
     7fc:	bc 01       	movw	r22, r24
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	07 d4       	rcall	.+2062   	; 0x1012 <__floatunsisf>
     804:	6b 01       	movw	r12, r22
     806:	7c 01       	movw	r14, r24
     808:	60 91 06 02 	lds	r22, 0x0206
     80c:	70 91 07 02 	lds	r23, 0x0207
     810:	80 e0       	ldi	r24, 0x00	; 0
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	fe d3       	rcall	.+2044   	; 0x1012 <__floatunsisf>
     816:	9b 01       	movw	r18, r22
     818:	ac 01       	movw	r20, r24
     81a:	c7 01       	movw	r24, r14
     81c:	b6 01       	movw	r22, r12
     81e:	f7 d2       	rcall	.+1518   	; 0xe0e <__subsf3>
	double measured_val = encoder_diff * scalor;
     820:	24 e8       	ldi	r18, 0x84	; 132
     822:	3b e4       	ldi	r19, 0x4B	; 75
     824:	47 e0       	ldi	r20, 0x07	; 7
     826:	5d e3       	ldi	r21, 0x3D	; 61
     828:	aa d4       	rcall	.+2388   	; 0x117e <__mulsf3>
	int error = reference - (int) measured_val;
     82a:	c2 d3       	rcall	.+1924   	; 0xfb0 <__fixsfsi>
     82c:	c6 1b       	sub	r28, r22
     82e:	d7 0b       	sbc	r29, r23
	//int error = reference - (encoder - encoder_min) * 255 / (encoder_max - encoder_min); 
	sum_error += error;
     830:	00 91 a2 02 	lds	r16, 0x02A2
     834:	10 91 a3 02 	lds	r17, 0x02A3
     838:	0c 0f       	add	r16, r28
     83a:	1d 1f       	adc	r17, r29
     83c:	10 93 a3 02 	sts	0x02A3, r17
     840:	00 93 a2 02 	sts	0x02A2, r16
	int integral_part = ( ki * sum_error / freq );
     844:	60 91 08 02 	lds	r22, 0x0208
     848:	70 91 09 02 	lds	r23, 0x0209
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	e0 d3       	rcall	.+1984   	; 0x1012 <__floatunsisf>
     852:	6b 01       	movw	r12, r22
     854:	7c 01       	movw	r14, r24
     856:	b8 01       	movw	r22, r16
     858:	88 27       	eor	r24, r24
     85a:	77 fd       	sbrc	r23, 7
     85c:	80 95       	com	r24
     85e:	98 2f       	mov	r25, r24
     860:	da d3       	rcall	.+1972   	; 0x1016 <__floatsisf>
     862:	20 91 0a 02 	lds	r18, 0x020A
     866:	30 91 0b 02 	lds	r19, 0x020B
     86a:	40 91 0c 02 	lds	r20, 0x020C
     86e:	50 91 0d 02 	lds	r21, 0x020D
     872:	85 d4       	rcall	.+2314   	; 0x117e <__mulsf3>
     874:	a7 01       	movw	r20, r14
     876:	96 01       	movw	r18, r12
     878:	33 d3       	rcall	.+1638   	; 0xee0 <__divsf3>
     87a:	9a d3       	rcall	.+1844   	; 0xfb0 <__fixsfsi>
     87c:	5b 01       	movw	r10, r22
     87e:	89 e2       	ldi	r24, 0x29	; 41
     880:	a8 16       	cp	r10, r24
     882:	b1 04       	cpc	r11, r1
     884:	2c f0       	brlt	.+10     	; 0x890 <motor_pid_controller+0xb0>
     886:	0f 2e       	mov	r0, r31
     888:	f8 e2       	ldi	r31, 0x28	; 40
     88a:	af 2e       	mov	r10, r31
     88c:	b1 2c       	mov	r11, r1
     88e:	f0 2d       	mov	r31, r0
	if (integral_part < -40){integral_part = -40;}
	else if (integral_part > 40){integral_part = 40;}
	int derivative_part = ( kd * (error - prev_error) * freq);
     890:	80 91 a4 02 	lds	r24, 0x02A4
     894:	90 91 a5 02 	lds	r25, 0x02A5
     898:	be 01       	movw	r22, r28
     89a:	68 1b       	sub	r22, r24
     89c:	79 0b       	sbc	r23, r25
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	b7 d3       	rcall	.+1902   	; 0x1012 <__floatunsisf>
     8a4:	20 91 0e 02 	lds	r18, 0x020E
     8a8:	30 91 0f 02 	lds	r19, 0x020F
     8ac:	40 91 10 02 	lds	r20, 0x0210
     8b0:	50 91 11 02 	lds	r21, 0x0211
     8b4:	64 d4       	rcall	.+2248   	; 0x117e <__mulsf3>
     8b6:	9b 01       	movw	r18, r22
     8b8:	ac 01       	movw	r20, r24
     8ba:	c7 01       	movw	r24, r14
     8bc:	b6 01       	movw	r22, r12
     8be:	5f d4       	rcall	.+2238   	; 0x117e <__mulsf3>
     8c0:	77 d3       	rcall	.+1774   	; 0xfb0 <__fixsfsi>
     8c2:	8b 01       	movw	r16, r22
     8c4:	69 32       	cpi	r22, 0x29	; 41
     8c6:	71 05       	cpc	r23, r1
     8c8:	14 f0       	brlt	.+4      	; 0x8ce <motor_pid_controller+0xee>
     8ca:	08 e2       	ldi	r16, 0x28	; 40
     8cc:	10 e0       	ldi	r17, 0x00	; 0
	if (derivative_part < -40){derivative_part = -40;}
	else if (derivative_part > 40){derivative_part = 40;}
	int u = ( kp * error ) + integral_part + derivative_part;
     8ce:	be 01       	movw	r22, r28
     8d0:	88 27       	eor	r24, r24
     8d2:	77 fd       	sbrc	r23, 7
     8d4:	80 95       	com	r24
     8d6:	98 2f       	mov	r25, r24
     8d8:	9e d3       	rcall	.+1852   	; 0x1016 <__floatsisf>
     8da:	20 91 12 02 	lds	r18, 0x0212
     8de:	30 91 13 02 	lds	r19, 0x0213
     8e2:	40 91 14 02 	lds	r20, 0x0214
     8e6:	50 91 15 02 	lds	r21, 0x0215
     8ea:	49 d4       	rcall	.+2194   	; 0x117e <__mulsf3>
     8ec:	6b 01       	movw	r12, r22
     8ee:	7c 01       	movw	r14, r24
     8f0:	b5 01       	movw	r22, r10
     8f2:	88 ed       	ldi	r24, 0xD8	; 216
     8f4:	a8 16       	cp	r10, r24
     8f6:	8f ef       	ldi	r24, 0xFF	; 255
     8f8:	b8 06       	cpc	r11, r24
     8fa:	14 f4       	brge	.+4      	; 0x900 <motor_pid_controller+0x120>
     8fc:	68 ed       	ldi	r22, 0xD8	; 216
     8fe:	7f ef       	ldi	r23, 0xFF	; 255
     900:	88 27       	eor	r24, r24
     902:	77 fd       	sbrc	r23, 7
     904:	80 95       	com	r24
     906:	98 2f       	mov	r25, r24
     908:	86 d3       	rcall	.+1804   	; 0x1016 <__floatsisf>
     90a:	9b 01       	movw	r18, r22
     90c:	ac 01       	movw	r20, r24
     90e:	c7 01       	movw	r24, r14
     910:	b6 01       	movw	r22, r12
     912:	7e d2       	rcall	.+1276   	; 0xe10 <__addsf3>
     914:	6b 01       	movw	r12, r22
     916:	7c 01       	movw	r14, r24
     918:	b8 01       	movw	r22, r16
     91a:	08 3d       	cpi	r16, 0xD8	; 216
     91c:	8f ef       	ldi	r24, 0xFF	; 255
     91e:	18 07       	cpc	r17, r24
     920:	14 f4       	brge	.+4      	; 0x926 <motor_pid_controller+0x146>
     922:	68 ed       	ldi	r22, 0xD8	; 216
     924:	7f ef       	ldi	r23, 0xFF	; 255
     926:	88 27       	eor	r24, r24
     928:	77 fd       	sbrc	r23, 7
     92a:	80 95       	com	r24
     92c:	98 2f       	mov	r25, r24
     92e:	73 d3       	rcall	.+1766   	; 0x1016 <__floatsisf>
     930:	9b 01       	movw	r18, r22
     932:	ac 01       	movw	r20, r24
     934:	c7 01       	movw	r24, r14
     936:	b6 01       	movw	r22, r12
     938:	6b d2       	rcall	.+1238   	; 0xe10 <__addsf3>
     93a:	3a d3       	rcall	.+1652   	; 0xfb0 <__fixsfsi>
     93c:	6b 01       	movw	r12, r22
     93e:	7c 01       	movw	r14, r24
     940:	8b 01       	movw	r16, r22
	prev_error = error;
     942:	d0 93 a5 02 	sts	0x02A5, r29
     946:	c0 93 a4 02 	sts	0x02A4, r28
	if (u > 0){motor_set_dir(0);}
     94a:	16 16       	cp	r1, r22
     94c:	17 06       	cpc	r1, r23
     94e:	1c f4       	brge	.+6      	; 0x956 <motor_pid_controller+0x176>
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	f6 de       	rcall	.-532    	; 0x740 <motor_set_dir>
     954:	06 c0       	rjmp	.+12     	; 0x962 <motor_pid_controller+0x182>
	else {
		motor_set_dir(1);
     956:	81 e0       	ldi	r24, 0x01	; 1
     958:	f3 de       	rcall	.-538    	; 0x740 <motor_set_dir>
		u = -u;
     95a:	00 27       	eor	r16, r16
     95c:	11 27       	eor	r17, r17
     95e:	0c 19       	sub	r16, r12
     960:	1d 09       	sbc	r17, r13
     962:	c8 01       	movw	r24, r16
     964:	05 36       	cpi	r16, 0x65	; 101
     966:	11 05       	cpc	r17, r1
     968:	14 f0       	brlt	.+4      	; 0x96e <motor_pid_controller+0x18e>
     96a:	84 e6       	ldi	r24, 0x64	; 100
     96c:	90 e0       	ldi	r25, 0x00	; 0
	}
	if ( 100 < u ){ u = 100; };
	motor_dac_write(u);
     96e:	b9 de       	rcall	.-654    	; 0x6e2 <motor_dac_write>
// 	int a = (int) (kp * 100);
//  	printf("kp  %d \n\r", a);
}
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	1f 91       	pop	r17
     976:	0f 91       	pop	r16
     978:	ff 90       	pop	r15
     97a:	ef 90       	pop	r14
     97c:	df 90       	pop	r13
     97e:	cf 90       	pop	r12
     980:	bf 90       	pop	r11
     982:	af 90       	pop	r10
     984:	08 95       	ret

00000986 <motor_set_gain>:

void motor_set_gain(int gain_choise){
	switch (gain_choise){
     986:	81 30       	cpi	r24, 0x01	; 1
     988:	91 05       	cpc	r25, r1
     98a:	61 f1       	breq	.+88     	; 0x9e4 <motor_set_gain+0x5e>
     98c:	82 30       	cpi	r24, 0x02	; 2
     98e:	91 05       	cpc	r25, r1
     990:	09 f4       	brne	.+2      	; 0x994 <motor_set_gain+0xe>
     992:	4d c0       	rjmp	.+154    	; 0xa2e <motor_set_gain+0xa8>
     994:	89 2b       	or	r24, r25
     996:	09 f0       	breq	.+2      	; 0x99a <motor_set_gain+0x14>
     998:	66 c0       	rjmp	.+204    	; 0xa66 <motor_set_gain+0xe0>
		case 0:
			kp = 1.2;
     99a:	8a e9       	ldi	r24, 0x9A	; 154
     99c:	99 e9       	ldi	r25, 0x99	; 153
     99e:	a9 e9       	ldi	r26, 0x99	; 153
     9a0:	bf e3       	ldi	r27, 0x3F	; 63
     9a2:	80 93 12 02 	sts	0x0212, r24
     9a6:	90 93 13 02 	sts	0x0213, r25
     9aa:	a0 93 14 02 	sts	0x0214, r26
     9ae:	b0 93 15 02 	sts	0x0215, r27
			ki = 0.8;
     9b2:	8d ec       	ldi	r24, 0xCD	; 205
     9b4:	9c ec       	ldi	r25, 0xCC	; 204
     9b6:	ac e4       	ldi	r26, 0x4C	; 76
     9b8:	bf e3       	ldi	r27, 0x3F	; 63
     9ba:	80 93 0a 02 	sts	0x020A, r24
     9be:	90 93 0b 02 	sts	0x020B, r25
     9c2:	a0 93 0c 02 	sts	0x020C, r26
     9c6:	b0 93 0d 02 	sts	0x020D, r27
			kd = 0.2;
     9ca:	8d ec       	ldi	r24, 0xCD	; 205
     9cc:	9c ec       	ldi	r25, 0xCC	; 204
     9ce:	ac e4       	ldi	r26, 0x4C	; 76
     9d0:	be e3       	ldi	r27, 0x3E	; 62
     9d2:	80 93 0e 02 	sts	0x020E, r24
     9d6:	90 93 0f 02 	sts	0x020F, r25
     9da:	a0 93 10 02 	sts	0x0210, r26
     9de:	b0 93 11 02 	sts	0x0211, r27
			break;
     9e2:	08 95       	ret
		case 1:
			kp = 0.6;
     9e4:	8a e9       	ldi	r24, 0x9A	; 154
     9e6:	99 e9       	ldi	r25, 0x99	; 153
     9e8:	a9 e1       	ldi	r26, 0x19	; 25
     9ea:	bf e3       	ldi	r27, 0x3F	; 63
     9ec:	80 93 12 02 	sts	0x0212, r24
     9f0:	90 93 13 02 	sts	0x0213, r25
     9f4:	a0 93 14 02 	sts	0x0214, r26
     9f8:	b0 93 15 02 	sts	0x0215, r27
			ki = 0.8;
     9fc:	8d ec       	ldi	r24, 0xCD	; 205
     9fe:	9c ec       	ldi	r25, 0xCC	; 204
     a00:	ac e4       	ldi	r26, 0x4C	; 76
     a02:	bf e3       	ldi	r27, 0x3F	; 63
     a04:	80 93 0a 02 	sts	0x020A, r24
     a08:	90 93 0b 02 	sts	0x020B, r25
     a0c:	a0 93 0c 02 	sts	0x020C, r26
     a10:	b0 93 0d 02 	sts	0x020D, r27
			kd = 0.2;
     a14:	8d ec       	ldi	r24, 0xCD	; 205
     a16:	9c ec       	ldi	r25, 0xCC	; 204
     a18:	ac e4       	ldi	r26, 0x4C	; 76
     a1a:	be e3       	ldi	r27, 0x3E	; 62
     a1c:	80 93 0e 02 	sts	0x020E, r24
     a20:	90 93 0f 02 	sts	0x020F, r25
     a24:	a0 93 10 02 	sts	0x0210, r26
     a28:	b0 93 11 02 	sts	0x0211, r27
			break;
     a2c:	08 95       	ret
		case 2:
			kp = 2.0;
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	a0 e0       	ldi	r26, 0x00	; 0
     a34:	b0 e4       	ldi	r27, 0x40	; 64
     a36:	80 93 12 02 	sts	0x0212, r24
     a3a:	90 93 13 02 	sts	0x0213, r25
     a3e:	a0 93 14 02 	sts	0x0214, r26
     a42:	b0 93 15 02 	sts	0x0215, r27
			ki = 0.0;
     a46:	10 92 0a 02 	sts	0x020A, r1
     a4a:	10 92 0b 02 	sts	0x020B, r1
     a4e:	10 92 0c 02 	sts	0x020C, r1
     a52:	10 92 0d 02 	sts	0x020D, r1
			kd = 0.0;
     a56:	10 92 0e 02 	sts	0x020E, r1
     a5a:	10 92 0f 02 	sts	0x020F, r1
     a5e:	10 92 10 02 	sts	0x0210, r1
     a62:	10 92 11 02 	sts	0x0211, r1
     a66:	08 95       	ret

00000a68 <motor_tune_gain>:
			break;
	}
}
double b = 0;
void motor_tune_gain(uint8_t gain_choise, uint8_t gain_val){
	switch(gain_choise){
     a68:	84 30       	cpi	r24, 0x04	; 4
     a6a:	b1 f0       	breq	.+44     	; 0xa98 <motor_tune_gain+0x30>
     a6c:	85 30       	cpi	r24, 0x05	; 5
     a6e:	31 f1       	breq	.+76     	; 0xabc <motor_tune_gain+0x54>
     a70:	83 30       	cpi	r24, 0x03	; 3
     a72:	a9 f5       	brne	.+106    	; 0xade <motor_tune_gain+0x76>
		case 3:
// 			b = (double)(gain_val / 100.0);
// 			int a = (int) (b * 100);
// 			printf("kp  %d \n\r", a);
// 			printf("printed\n\r");
			kp = (double)(gain_val / 100.0);
     a74:	70 e0       	ldi	r23, 0x00	; 0
     a76:	80 e0       	ldi	r24, 0x00	; 0
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	cd d2       	rcall	.+1434   	; 0x1016 <__floatsisf>
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	48 ec       	ldi	r20, 0xC8	; 200
     a82:	52 e4       	ldi	r21, 0x42	; 66
     a84:	2d d2       	rcall	.+1114   	; 0xee0 <__divsf3>
     a86:	60 93 12 02 	sts	0x0212, r22
     a8a:	70 93 13 02 	sts	0x0213, r23
     a8e:	80 93 14 02 	sts	0x0214, r24
     a92:	90 93 15 02 	sts	0x0215, r25
			break;
     a96:	08 95       	ret
		case 4:
			ki = (double)(gain_val / 100.0);
     a98:	70 e0       	ldi	r23, 0x00	; 0
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	bb d2       	rcall	.+1398   	; 0x1016 <__floatsisf>
     aa0:	20 e0       	ldi	r18, 0x00	; 0
     aa2:	30 e0       	ldi	r19, 0x00	; 0
     aa4:	48 ec       	ldi	r20, 0xC8	; 200
     aa6:	52 e4       	ldi	r21, 0x42	; 66
     aa8:	1b d2       	rcall	.+1078   	; 0xee0 <__divsf3>
     aaa:	60 93 0a 02 	sts	0x020A, r22
     aae:	70 93 0b 02 	sts	0x020B, r23
     ab2:	80 93 0c 02 	sts	0x020C, r24
     ab6:	90 93 0d 02 	sts	0x020D, r25
			break;
     aba:	08 95       	ret
		case 5:
			kd = (double)(gain_val / 100.0);
     abc:	70 e0       	ldi	r23, 0x00	; 0
     abe:	80 e0       	ldi	r24, 0x00	; 0
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a9 d2       	rcall	.+1362   	; 0x1016 <__floatsisf>
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	30 e0       	ldi	r19, 0x00	; 0
     ac8:	48 ec       	ldi	r20, 0xC8	; 200
     aca:	52 e4       	ldi	r21, 0x42	; 66
     acc:	09 d2       	rcall	.+1042   	; 0xee0 <__divsf3>
     ace:	60 93 0e 02 	sts	0x020E, r22
     ad2:	70 93 0f 02 	sts	0x020F, r23
     ad6:	80 93 10 02 	sts	0x0210, r24
     ada:	90 93 11 02 	sts	0x0211, r25
     ade:	08 95       	ret

00000ae0 <pwm_set_signal_period>:
     ae0:	e1 e8       	ldi	r30, 0x81	; 129
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	80 81       	ld	r24, Z
     ae6:	82 60       	ori	r24, 0x02	; 2
     ae8:	80 83       	st	Z, r24
     aea:	80 81       	ld	r24, Z
     aec:	8b 7f       	andi	r24, 0xFB	; 251
     aee:	80 83       	st	Z, r24
     af0:	80 81       	ld	r24, Z
     af2:	8e 7f       	andi	r24, 0xFE	; 254
     af4:	80 83       	st	Z, r24
     af6:	80 e4       	ldi	r24, 0x40	; 64
     af8:	9c e9       	ldi	r25, 0x9C	; 156
     afa:	90 93 87 00 	sts	0x0087, r25
     afe:	80 93 86 00 	sts	0x0086, r24
     b02:	08 95       	ret

00000b04 <pwm_init>:
     b04:	e1 e8       	ldi	r30, 0x81	; 129
     b06:	f0 e0       	ldi	r31, 0x00	; 0
     b08:	80 81       	ld	r24, Z
     b0a:	80 61       	ori	r24, 0x10	; 16
     b0c:	80 83       	st	Z, r24
     b0e:	80 81       	ld	r24, Z
     b10:	88 60       	ori	r24, 0x08	; 8
     b12:	80 83       	st	Z, r24
     b14:	e0 e8       	ldi	r30, 0x80	; 128
     b16:	f0 e0       	ldi	r31, 0x00	; 0
     b18:	80 81       	ld	r24, Z
     b1a:	82 60       	ori	r24, 0x02	; 2
     b1c:	80 83       	st	Z, r24
     b1e:	80 81       	ld	r24, Z
     b20:	8e 7f       	andi	r24, 0xFE	; 254
     b22:	80 83       	st	Z, r24
     b24:	80 81       	ld	r24, Z
     b26:	80 68       	ori	r24, 0x80	; 128
     b28:	80 83       	st	Z, r24
     b2a:	80 81       	ld	r24, Z
     b2c:	8f 7b       	andi	r24, 0xBF	; 191
     b2e:	80 83       	st	Z, r24
     b30:	d7 df       	rcall	.-82     	; 0xae0 <pwm_set_signal_period>
     b32:	25 9a       	sbi	0x04, 5	; 4
     b34:	88 eb       	ldi	r24, 0xB8	; 184
     b36:	9b e0       	ldi	r25, 0x0B	; 11
     b38:	90 93 89 00 	sts	0x0089, r25
     b3c:	80 93 88 00 	sts	0x0088, r24
     b40:	08 95       	ret

00000b42 <pwm_set_pulse_width>:
     b42:	cf 92       	push	r12
     b44:	df 92       	push	r13
     b46:	ef 92       	push	r14
     b48:	ff 92       	push	r15
     b4a:	6b 01       	movw	r12, r22
     b4c:	7c 01       	movw	r14, r24
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	41 e6       	ldi	r20, 0x61	; 97
     b54:	54 e4       	ldi	r21, 0x44	; 68
     b56:	c0 d1       	rcall	.+896    	; 0xed8 <__cmpsf2>
     b58:	88 23       	and	r24, r24
     b5a:	54 f0       	brlt	.+20     	; 0xb70 <pwm_set_pulse_width+0x2e>
     b5c:	20 e0       	ldi	r18, 0x00	; 0
     b5e:	30 e4       	ldi	r19, 0x40	; 64
     b60:	43 e0       	ldi	r20, 0x03	; 3
     b62:	55 e4       	ldi	r21, 0x45	; 69
     b64:	c7 01       	movw	r24, r14
     b66:	b6 01       	movw	r22, r12
     b68:	06 d3       	rcall	.+1548   	; 0x1176 <__gesf2>
     b6a:	18 16       	cp	r1, r24
     b6c:	54 f0       	brlt	.+20     	; 0xb82 <pwm_set_pulse_width+0x40>
     b6e:	12 c0       	rjmp	.+36     	; 0xb94 <pwm_set_pulse_width+0x52>
     b70:	0f 2e       	mov	r0, r31
     b72:	c1 2c       	mov	r12, r1
     b74:	d1 2c       	mov	r13, r1
     b76:	f1 e6       	ldi	r31, 0x61	; 97
     b78:	ef 2e       	mov	r14, r31
     b7a:	f4 e4       	ldi	r31, 0x44	; 68
     b7c:	ff 2e       	mov	r15, r31
     b7e:	f0 2d       	mov	r31, r0
     b80:	09 c0       	rjmp	.+18     	; 0xb94 <pwm_set_pulse_width+0x52>
     b82:	0f 2e       	mov	r0, r31
     b84:	c1 2c       	mov	r12, r1
     b86:	f0 e4       	ldi	r31, 0x40	; 64
     b88:	df 2e       	mov	r13, r31
     b8a:	f3 e0       	ldi	r31, 0x03	; 3
     b8c:	ef 2e       	mov	r14, r31
     b8e:	f5 e4       	ldi	r31, 0x45	; 69
     b90:	ff 2e       	mov	r15, r31
     b92:	f0 2d       	mov	r31, r0
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	30 e4       	ldi	r19, 0x40	; 64
     b98:	4c e9       	ldi	r20, 0x9C	; 156
     b9a:	56 e4       	ldi	r21, 0x46	; 70
     b9c:	c7 01       	movw	r24, r14
     b9e:	b6 01       	movw	r22, r12
     ba0:	9f d1       	rcall	.+830    	; 0xee0 <__divsf3>
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	34 e2       	ldi	r19, 0x24	; 36
     ba6:	44 e7       	ldi	r20, 0x74	; 116
     ba8:	5b e4       	ldi	r21, 0x4B	; 75
     baa:	e9 d2       	rcall	.+1490   	; 0x117e <__mulsf3>
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	40 e0       	ldi	r20, 0x00	; 0
     bb2:	5e e3       	ldi	r21, 0x3E	; 62
     bb4:	e4 d2       	rcall	.+1480   	; 0x117e <__mulsf3>
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	48 e4       	ldi	r20, 0x48	; 72
     bbc:	52 e4       	ldi	r21, 0x42	; 66
     bbe:	90 d1       	rcall	.+800    	; 0xee0 <__divsf3>
     bc0:	f7 d1       	rcall	.+1006   	; 0xfb0 <__fixsfsi>
     bc2:	70 93 89 00 	sts	0x0089, r23
     bc6:	60 93 88 00 	sts	0x0088, r22
     bca:	ff 90       	pop	r15
     bcc:	ef 90       	pop	r14
     bce:	df 90       	pop	r13
     bd0:	cf 90       	pop	r12
     bd2:	08 95       	ret

00000bd4 <pwm_scale_joystick_val>:
     bd4:	2c eb       	ldi	r18, 0xBC	; 188
     bd6:	36 e9       	ldi	r19, 0x96	; 150
     bd8:	46 e9       	ldi	r20, 0x96	; 150
     bda:	50 e4       	ldi	r21, 0x40	; 64
     bdc:	d0 d2       	rcall	.+1440   	; 0x117e <__mulsf3>
     bde:	20 e0       	ldi	r18, 0x00	; 0
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	41 e6       	ldi	r20, 0x61	; 97
     be4:	54 e4       	ldi	r21, 0x44	; 68
     be6:	14 c1       	rjmp	.+552    	; 0xe10 <__addsf3>
     be8:	08 95       	ret

00000bea <spi_init>:
     bea:	84 b1       	in	r24, 0x04	; 4
     bec:	87 68       	ori	r24, 0x87	; 135
     bee:	84 b9       	out	0x04, r24	; 4
     bf0:	85 b1       	in	r24, 0x05	; 5
     bf2:	81 68       	ori	r24, 0x81	; 129
     bf4:	85 b9       	out	0x05, r24	; 5
     bf6:	81 e5       	ldi	r24, 0x51	; 81
     bf8:	8c bd       	out	0x2c, r24	; 44
     bfa:	08 95       	ret

00000bfc <spi_read>:
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	2a 97       	sbiw	r28, 0x0a	; 10
     c06:	0f b6       	in	r0, 0x3f	; 63
     c08:	f8 94       	cli
     c0a:	de bf       	out	0x3e, r29	; 62
     c0c:	0f be       	out	0x3f, r0	; 63
     c0e:	cd bf       	out	0x3d, r28	; 61
     c10:	66 23       	and	r22, r22
     c12:	89 f0       	breq	.+34     	; 0xc36 <spi_read+0x3a>
     c14:	fe 01       	movw	r30, r28
     c16:	31 96       	adiw	r30, 0x01	; 1
     c18:	a8 2f       	mov	r26, r24
     c1a:	b9 2f       	mov	r27, r25
     c1c:	cf 01       	movw	r24, r30
     c1e:	86 0f       	add	r24, r22
     c20:	91 1d       	adc	r25, r1
     c22:	21 91       	ld	r18, Z+
     c24:	2e bd       	out	0x2e, r18	; 46
     c26:	0d b4       	in	r0, 0x2d	; 45
     c28:	07 fe       	sbrs	r0, 7
     c2a:	fd cf       	rjmp	.-6      	; 0xc26 <spi_read+0x2a>
     c2c:	2e b5       	in	r18, 0x2e	; 46
     c2e:	2d 93       	st	X+, r18
     c30:	e8 17       	cp	r30, r24
     c32:	f9 07       	cpc	r31, r25
     c34:	b1 f7       	brne	.-20     	; 0xc22 <spi_read+0x26>
     c36:	2a 96       	adiw	r28, 0x0a	; 10
     c38:	0f b6       	in	r0, 0x3f	; 63
     c3a:	f8 94       	cli
     c3c:	de bf       	out	0x3e, r29	; 62
     c3e:	0f be       	out	0x3f, r0	; 63
     c40:	cd bf       	out	0x3d, r28	; 61
     c42:	df 91       	pop	r29
     c44:	cf 91       	pop	r28
     c46:	08 95       	ret

00000c48 <spi_write>:
     c48:	26 2f       	mov	r18, r22
     c4a:	30 e0       	ldi	r19, 0x00	; 0
     c4c:	12 16       	cp	r1, r18
     c4e:	13 06       	cpc	r1, r19
     c50:	74 f4       	brge	.+28     	; 0xc6e <spi_write+0x26>
     c52:	e8 2f       	mov	r30, r24
     c54:	f9 2f       	mov	r31, r25
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	41 91       	ld	r20, Z+
     c5c:	4e bd       	out	0x2e, r20	; 46
     c5e:	0d b4       	in	r0, 0x2d	; 45
     c60:	07 fe       	sbrs	r0, 7
     c62:	fd cf       	rjmp	.-6      	; 0xc5e <spi_write+0x16>
     c64:	4e b5       	in	r20, 0x2e	; 46
     c66:	01 96       	adiw	r24, 0x01	; 1
     c68:	82 17       	cp	r24, r18
     c6a:	93 07       	cpc	r25, r19
     c6c:	b4 f3       	brlt	.-20     	; 0xc5a <spi_write+0x12>
     c6e:	08 95       	ret

00000c70 <TWI_Master_Initialise>:
     c70:	8c e0       	ldi	r24, 0x0C	; 12
     c72:	80 93 b8 00 	sts	0x00B8, r24
     c76:	8f ef       	ldi	r24, 0xFF	; 255
     c78:	80 93 bb 00 	sts	0x00BB, r24
     c7c:	84 e0       	ldi	r24, 0x04	; 4
     c7e:	80 93 bc 00 	sts	0x00BC, r24
     c82:	08 95       	ret

00000c84 <TWI_Start_Transceiver_With_Data>:
     c84:	ec eb       	ldi	r30, 0xBC	; 188
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	20 81       	ld	r18, Z
     c8a:	20 fd       	sbrc	r18, 0
     c8c:	fd cf       	rjmp	.-6      	; 0xc88 <TWI_Start_Transceiver_With_Data+0x4>
     c8e:	60 93 a8 02 	sts	0x02A8, r22
     c92:	fc 01       	movw	r30, r24
     c94:	20 81       	ld	r18, Z
     c96:	20 93 a9 02 	sts	0x02A9, r18
     c9a:	20 fd       	sbrc	r18, 0
     c9c:	0c c0       	rjmp	.+24     	; 0xcb6 <TWI_Start_Transceiver_With_Data+0x32>
     c9e:	62 30       	cpi	r22, 0x02	; 2
     ca0:	50 f0       	brcs	.+20     	; 0xcb6 <TWI_Start_Transceiver_With_Data+0x32>
     ca2:	dc 01       	movw	r26, r24
     ca4:	11 96       	adiw	r26, 0x01	; 1
     ca6:	ea ea       	ldi	r30, 0xAA	; 170
     ca8:	f2 e0       	ldi	r31, 0x02	; 2
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	9d 91       	ld	r25, X+
     cae:	91 93       	st	Z+, r25
     cb0:	8f 5f       	subi	r24, 0xFF	; 255
     cb2:	86 13       	cpse	r24, r22
     cb4:	fb cf       	rjmp	.-10     	; 0xcac <TWI_Start_Transceiver_With_Data+0x28>
     cb6:	10 92 a7 02 	sts	0x02A7, r1
     cba:	88 ef       	ldi	r24, 0xF8	; 248
     cbc:	80 93 16 02 	sts	0x0216, r24
     cc0:	85 ea       	ldi	r24, 0xA5	; 165
     cc2:	80 93 bc 00 	sts	0x00BC, r24
     cc6:	08 95       	ret

00000cc8 <__vector_39>:
     cc8:	1f 92       	push	r1
     cca:	0f 92       	push	r0
     ccc:	0f b6       	in	r0, 0x3f	; 63
     cce:	0f 92       	push	r0
     cd0:	11 24       	eor	r1, r1
     cd2:	0b b6       	in	r0, 0x3b	; 59
     cd4:	0f 92       	push	r0
     cd6:	2f 93       	push	r18
     cd8:	3f 93       	push	r19
     cda:	8f 93       	push	r24
     cdc:	9f 93       	push	r25
     cde:	af 93       	push	r26
     ce0:	bf 93       	push	r27
     ce2:	ef 93       	push	r30
     ce4:	ff 93       	push	r31
     ce6:	80 91 b9 00 	lds	r24, 0x00B9
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	fc 01       	movw	r30, r24
     cee:	38 97       	sbiw	r30, 0x08	; 8
     cf0:	e1 35       	cpi	r30, 0x51	; 81
     cf2:	f1 05       	cpc	r31, r1
     cf4:	08 f0       	brcs	.+2      	; 0xcf8 <__vector_39+0x30>
     cf6:	55 c0       	rjmp	.+170    	; 0xda2 <__vector_39+0xda>
     cf8:	ee 58       	subi	r30, 0x8E	; 142
     cfa:	ff 4f       	sbci	r31, 0xFF	; 255
     cfc:	a3 c2       	rjmp	.+1350   	; 0x1244 <__tablejump2__>
     cfe:	10 92 a6 02 	sts	0x02A6, r1
     d02:	e0 91 a6 02 	lds	r30, 0x02A6
     d06:	80 91 a8 02 	lds	r24, 0x02A8
     d0a:	e8 17       	cp	r30, r24
     d0c:	70 f4       	brcc	.+28     	; 0xd2a <__vector_39+0x62>
     d0e:	81 e0       	ldi	r24, 0x01	; 1
     d10:	8e 0f       	add	r24, r30
     d12:	80 93 a6 02 	sts	0x02A6, r24
     d16:	f0 e0       	ldi	r31, 0x00	; 0
     d18:	e7 55       	subi	r30, 0x57	; 87
     d1a:	fd 4f       	sbci	r31, 0xFD	; 253
     d1c:	80 81       	ld	r24, Z
     d1e:	80 93 bb 00 	sts	0x00BB, r24
     d22:	85 e8       	ldi	r24, 0x85	; 133
     d24:	80 93 bc 00 	sts	0x00BC, r24
     d28:	43 c0       	rjmp	.+134    	; 0xdb0 <__vector_39+0xe8>
     d2a:	80 91 a7 02 	lds	r24, 0x02A7
     d2e:	81 60       	ori	r24, 0x01	; 1
     d30:	80 93 a7 02 	sts	0x02A7, r24
     d34:	84 e9       	ldi	r24, 0x94	; 148
     d36:	80 93 bc 00 	sts	0x00BC, r24
     d3a:	3a c0       	rjmp	.+116    	; 0xdb0 <__vector_39+0xe8>
     d3c:	e0 91 a6 02 	lds	r30, 0x02A6
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	8e 0f       	add	r24, r30
     d44:	80 93 a6 02 	sts	0x02A6, r24
     d48:	80 91 bb 00 	lds	r24, 0x00BB
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	e7 55       	subi	r30, 0x57	; 87
     d50:	fd 4f       	sbci	r31, 0xFD	; 253
     d52:	80 83       	st	Z, r24
     d54:	20 91 a6 02 	lds	r18, 0x02A6
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	80 91 a8 02 	lds	r24, 0x02A8
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	01 97       	sbiw	r24, 0x01	; 1
     d62:	28 17       	cp	r18, r24
     d64:	39 07       	cpc	r19, r25
     d66:	24 f4       	brge	.+8      	; 0xd70 <__vector_39+0xa8>
     d68:	85 ec       	ldi	r24, 0xC5	; 197
     d6a:	80 93 bc 00 	sts	0x00BC, r24
     d6e:	20 c0       	rjmp	.+64     	; 0xdb0 <__vector_39+0xe8>
     d70:	85 e8       	ldi	r24, 0x85	; 133
     d72:	80 93 bc 00 	sts	0x00BC, r24
     d76:	1c c0       	rjmp	.+56     	; 0xdb0 <__vector_39+0xe8>
     d78:	80 91 bb 00 	lds	r24, 0x00BB
     d7c:	e0 91 a6 02 	lds	r30, 0x02A6
     d80:	f0 e0       	ldi	r31, 0x00	; 0
     d82:	e7 55       	subi	r30, 0x57	; 87
     d84:	fd 4f       	sbci	r31, 0xFD	; 253
     d86:	80 83       	st	Z, r24
     d88:	80 91 a7 02 	lds	r24, 0x02A7
     d8c:	81 60       	ori	r24, 0x01	; 1
     d8e:	80 93 a7 02 	sts	0x02A7, r24
     d92:	84 e9       	ldi	r24, 0x94	; 148
     d94:	80 93 bc 00 	sts	0x00BC, r24
     d98:	0b c0       	rjmp	.+22     	; 0xdb0 <__vector_39+0xe8>
     d9a:	85 ea       	ldi	r24, 0xA5	; 165
     d9c:	80 93 bc 00 	sts	0x00BC, r24
     da0:	07 c0       	rjmp	.+14     	; 0xdb0 <__vector_39+0xe8>
     da2:	80 91 b9 00 	lds	r24, 0x00B9
     da6:	80 93 16 02 	sts	0x0216, r24
     daa:	84 e0       	ldi	r24, 0x04	; 4
     dac:	80 93 bc 00 	sts	0x00BC, r24
     db0:	ff 91       	pop	r31
     db2:	ef 91       	pop	r30
     db4:	bf 91       	pop	r27
     db6:	af 91       	pop	r26
     db8:	9f 91       	pop	r25
     dba:	8f 91       	pop	r24
     dbc:	3f 91       	pop	r19
     dbe:	2f 91       	pop	r18
     dc0:	0f 90       	pop	r0
     dc2:	0b be       	out	0x3b, r0	; 59
     dc4:	0f 90       	pop	r0
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	0f 90       	pop	r0
     dca:	1f 90       	pop	r1
     dcc:	18 95       	reti

00000dce <USART_Transmit>:
     dce:	e0 ec       	ldi	r30, 0xC0	; 192
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	90 81       	ld	r25, Z
     dd4:	95 ff       	sbrs	r25, 5
     dd6:	fd cf       	rjmp	.-6      	; 0xdd2 <USART_Transmit+0x4>
     dd8:	80 93 c6 00 	sts	0x00C6, r24
     ddc:	08 95       	ret

00000dde <USART_Receive>:
     dde:	e0 ec       	ldi	r30, 0xC0	; 192
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	80 81       	ld	r24, Z
     de4:	88 23       	and	r24, r24
     de6:	ec f3       	brlt	.-6      	; 0xde2 <USART_Receive+0x4>
     de8:	80 91 c6 00 	lds	r24, 0x00C6
     dec:	08 95       	ret

00000dee <USART_Init>:
     dee:	90 93 c5 00 	sts	0x00C5, r25
     df2:	80 93 c4 00 	sts	0x00C4, r24
     df6:	88 e1       	ldi	r24, 0x18	; 24
     df8:	80 93 c1 00 	sts	0x00C1, r24
     dfc:	8e e0       	ldi	r24, 0x0E	; 14
     dfe:	80 93 c2 00 	sts	0x00C2, r24
     e02:	6f ee       	ldi	r22, 0xEF	; 239
     e04:	76 e0       	ldi	r23, 0x06	; 6
     e06:	87 ee       	ldi	r24, 0xE7	; 231
     e08:	96 e0       	ldi	r25, 0x06	; 6
     e0a:	22 c2       	rjmp	.+1092   	; 0x1250 <fdevopen>
     e0c:	08 95       	ret

00000e0e <__subsf3>:
     e0e:	50 58       	subi	r21, 0x80	; 128

00000e10 <__addsf3>:
     e10:	bb 27       	eor	r27, r27
     e12:	aa 27       	eor	r26, r26
     e14:	0e d0       	rcall	.+28     	; 0xe32 <__addsf3x>
     e16:	75 c1       	rjmp	.+746    	; 0x1102 <__fp_round>
     e18:	66 d1       	rcall	.+716    	; 0x10e6 <__fp_pscA>
     e1a:	30 f0       	brcs	.+12     	; 0xe28 <__addsf3+0x18>
     e1c:	6b d1       	rcall	.+726    	; 0x10f4 <__fp_pscB>
     e1e:	20 f0       	brcs	.+8      	; 0xe28 <__addsf3+0x18>
     e20:	31 f4       	brne	.+12     	; 0xe2e <__addsf3+0x1e>
     e22:	9f 3f       	cpi	r25, 0xFF	; 255
     e24:	11 f4       	brne	.+4      	; 0xe2a <__addsf3+0x1a>
     e26:	1e f4       	brtc	.+6      	; 0xe2e <__addsf3+0x1e>
     e28:	5b c1       	rjmp	.+694    	; 0x10e0 <__fp_nan>
     e2a:	0e f4       	brtc	.+2      	; 0xe2e <__addsf3+0x1e>
     e2c:	e0 95       	com	r30
     e2e:	e7 fb       	bst	r30, 7
     e30:	51 c1       	rjmp	.+674    	; 0x10d4 <__fp_inf>

00000e32 <__addsf3x>:
     e32:	e9 2f       	mov	r30, r25
     e34:	77 d1       	rcall	.+750    	; 0x1124 <__fp_split3>
     e36:	80 f3       	brcs	.-32     	; 0xe18 <__addsf3+0x8>
     e38:	ba 17       	cp	r27, r26
     e3a:	62 07       	cpc	r22, r18
     e3c:	73 07       	cpc	r23, r19
     e3e:	84 07       	cpc	r24, r20
     e40:	95 07       	cpc	r25, r21
     e42:	18 f0       	brcs	.+6      	; 0xe4a <__addsf3x+0x18>
     e44:	71 f4       	brne	.+28     	; 0xe62 <__addsf3x+0x30>
     e46:	9e f5       	brtc	.+102    	; 0xeae <__addsf3x+0x7c>
     e48:	8f c1       	rjmp	.+798    	; 0x1168 <__fp_zero>
     e4a:	0e f4       	brtc	.+2      	; 0xe4e <__addsf3x+0x1c>
     e4c:	e0 95       	com	r30
     e4e:	0b 2e       	mov	r0, r27
     e50:	ba 2f       	mov	r27, r26
     e52:	a0 2d       	mov	r26, r0
     e54:	0b 01       	movw	r0, r22
     e56:	b9 01       	movw	r22, r18
     e58:	90 01       	movw	r18, r0
     e5a:	0c 01       	movw	r0, r24
     e5c:	ca 01       	movw	r24, r20
     e5e:	a0 01       	movw	r20, r0
     e60:	11 24       	eor	r1, r1
     e62:	ff 27       	eor	r31, r31
     e64:	59 1b       	sub	r21, r25
     e66:	99 f0       	breq	.+38     	; 0xe8e <__addsf3x+0x5c>
     e68:	59 3f       	cpi	r21, 0xF9	; 249
     e6a:	50 f4       	brcc	.+20     	; 0xe80 <__addsf3x+0x4e>
     e6c:	50 3e       	cpi	r21, 0xE0	; 224
     e6e:	68 f1       	brcs	.+90     	; 0xeca <__addsf3x+0x98>
     e70:	1a 16       	cp	r1, r26
     e72:	f0 40       	sbci	r31, 0x00	; 0
     e74:	a2 2f       	mov	r26, r18
     e76:	23 2f       	mov	r18, r19
     e78:	34 2f       	mov	r19, r20
     e7a:	44 27       	eor	r20, r20
     e7c:	58 5f       	subi	r21, 0xF8	; 248
     e7e:	f3 cf       	rjmp	.-26     	; 0xe66 <__addsf3x+0x34>
     e80:	46 95       	lsr	r20
     e82:	37 95       	ror	r19
     e84:	27 95       	ror	r18
     e86:	a7 95       	ror	r26
     e88:	f0 40       	sbci	r31, 0x00	; 0
     e8a:	53 95       	inc	r21
     e8c:	c9 f7       	brne	.-14     	; 0xe80 <__addsf3x+0x4e>
     e8e:	7e f4       	brtc	.+30     	; 0xeae <__addsf3x+0x7c>
     e90:	1f 16       	cp	r1, r31
     e92:	ba 0b       	sbc	r27, r26
     e94:	62 0b       	sbc	r22, r18
     e96:	73 0b       	sbc	r23, r19
     e98:	84 0b       	sbc	r24, r20
     e9a:	ba f0       	brmi	.+46     	; 0xeca <__addsf3x+0x98>
     e9c:	91 50       	subi	r25, 0x01	; 1
     e9e:	a1 f0       	breq	.+40     	; 0xec8 <__addsf3x+0x96>
     ea0:	ff 0f       	add	r31, r31
     ea2:	bb 1f       	adc	r27, r27
     ea4:	66 1f       	adc	r22, r22
     ea6:	77 1f       	adc	r23, r23
     ea8:	88 1f       	adc	r24, r24
     eaa:	c2 f7       	brpl	.-16     	; 0xe9c <__addsf3x+0x6a>
     eac:	0e c0       	rjmp	.+28     	; 0xeca <__addsf3x+0x98>
     eae:	ba 0f       	add	r27, r26
     eb0:	62 1f       	adc	r22, r18
     eb2:	73 1f       	adc	r23, r19
     eb4:	84 1f       	adc	r24, r20
     eb6:	48 f4       	brcc	.+18     	; 0xeca <__addsf3x+0x98>
     eb8:	87 95       	ror	r24
     eba:	77 95       	ror	r23
     ebc:	67 95       	ror	r22
     ebe:	b7 95       	ror	r27
     ec0:	f7 95       	ror	r31
     ec2:	9e 3f       	cpi	r25, 0xFE	; 254
     ec4:	08 f0       	brcs	.+2      	; 0xec8 <__addsf3x+0x96>
     ec6:	b3 cf       	rjmp	.-154    	; 0xe2e <__addsf3+0x1e>
     ec8:	93 95       	inc	r25
     eca:	88 0f       	add	r24, r24
     ecc:	08 f0       	brcs	.+2      	; 0xed0 <__addsf3x+0x9e>
     ece:	99 27       	eor	r25, r25
     ed0:	ee 0f       	add	r30, r30
     ed2:	97 95       	ror	r25
     ed4:	87 95       	ror	r24
     ed6:	08 95       	ret

00000ed8 <__cmpsf2>:
     ed8:	d9 d0       	rcall	.+434    	; 0x108c <__fp_cmp>
     eda:	08 f4       	brcc	.+2      	; 0xede <__cmpsf2+0x6>
     edc:	81 e0       	ldi	r24, 0x01	; 1
     ede:	08 95       	ret

00000ee0 <__divsf3>:
     ee0:	0c d0       	rcall	.+24     	; 0xefa <__divsf3x>
     ee2:	0f c1       	rjmp	.+542    	; 0x1102 <__fp_round>
     ee4:	07 d1       	rcall	.+526    	; 0x10f4 <__fp_pscB>
     ee6:	40 f0       	brcs	.+16     	; 0xef8 <__divsf3+0x18>
     ee8:	fe d0       	rcall	.+508    	; 0x10e6 <__fp_pscA>
     eea:	30 f0       	brcs	.+12     	; 0xef8 <__divsf3+0x18>
     eec:	21 f4       	brne	.+8      	; 0xef6 <__divsf3+0x16>
     eee:	5f 3f       	cpi	r21, 0xFF	; 255
     ef0:	19 f0       	breq	.+6      	; 0xef8 <__divsf3+0x18>
     ef2:	f0 c0       	rjmp	.+480    	; 0x10d4 <__fp_inf>
     ef4:	51 11       	cpse	r21, r1
     ef6:	39 c1       	rjmp	.+626    	; 0x116a <__fp_szero>
     ef8:	f3 c0       	rjmp	.+486    	; 0x10e0 <__fp_nan>

00000efa <__divsf3x>:
     efa:	14 d1       	rcall	.+552    	; 0x1124 <__fp_split3>
     efc:	98 f3       	brcs	.-26     	; 0xee4 <__divsf3+0x4>

00000efe <__divsf3_pse>:
     efe:	99 23       	and	r25, r25
     f00:	c9 f3       	breq	.-14     	; 0xef4 <__divsf3+0x14>
     f02:	55 23       	and	r21, r21
     f04:	b1 f3       	breq	.-20     	; 0xef2 <__divsf3+0x12>
     f06:	95 1b       	sub	r25, r21
     f08:	55 0b       	sbc	r21, r21
     f0a:	bb 27       	eor	r27, r27
     f0c:	aa 27       	eor	r26, r26
     f0e:	62 17       	cp	r22, r18
     f10:	73 07       	cpc	r23, r19
     f12:	84 07       	cpc	r24, r20
     f14:	38 f0       	brcs	.+14     	; 0xf24 <__divsf3_pse+0x26>
     f16:	9f 5f       	subi	r25, 0xFF	; 255
     f18:	5f 4f       	sbci	r21, 0xFF	; 255
     f1a:	22 0f       	add	r18, r18
     f1c:	33 1f       	adc	r19, r19
     f1e:	44 1f       	adc	r20, r20
     f20:	aa 1f       	adc	r26, r26
     f22:	a9 f3       	breq	.-22     	; 0xf0e <__divsf3_pse+0x10>
     f24:	33 d0       	rcall	.+102    	; 0xf8c <__divsf3_pse+0x8e>
     f26:	0e 2e       	mov	r0, r30
     f28:	3a f0       	brmi	.+14     	; 0xf38 <__divsf3_pse+0x3a>
     f2a:	e0 e8       	ldi	r30, 0x80	; 128
     f2c:	30 d0       	rcall	.+96     	; 0xf8e <__divsf3_pse+0x90>
     f2e:	91 50       	subi	r25, 0x01	; 1
     f30:	50 40       	sbci	r21, 0x00	; 0
     f32:	e6 95       	lsr	r30
     f34:	00 1c       	adc	r0, r0
     f36:	ca f7       	brpl	.-14     	; 0xf2a <__divsf3_pse+0x2c>
     f38:	29 d0       	rcall	.+82     	; 0xf8c <__divsf3_pse+0x8e>
     f3a:	fe 2f       	mov	r31, r30
     f3c:	27 d0       	rcall	.+78     	; 0xf8c <__divsf3_pse+0x8e>
     f3e:	66 0f       	add	r22, r22
     f40:	77 1f       	adc	r23, r23
     f42:	88 1f       	adc	r24, r24
     f44:	bb 1f       	adc	r27, r27
     f46:	26 17       	cp	r18, r22
     f48:	37 07       	cpc	r19, r23
     f4a:	48 07       	cpc	r20, r24
     f4c:	ab 07       	cpc	r26, r27
     f4e:	b0 e8       	ldi	r27, 0x80	; 128
     f50:	09 f0       	breq	.+2      	; 0xf54 <__divsf3_pse+0x56>
     f52:	bb 0b       	sbc	r27, r27
     f54:	80 2d       	mov	r24, r0
     f56:	bf 01       	movw	r22, r30
     f58:	ff 27       	eor	r31, r31
     f5a:	93 58       	subi	r25, 0x83	; 131
     f5c:	5f 4f       	sbci	r21, 0xFF	; 255
     f5e:	2a f0       	brmi	.+10     	; 0xf6a <__divsf3_pse+0x6c>
     f60:	9e 3f       	cpi	r25, 0xFE	; 254
     f62:	51 05       	cpc	r21, r1
     f64:	68 f0       	brcs	.+26     	; 0xf80 <__divsf3_pse+0x82>
     f66:	b6 c0       	rjmp	.+364    	; 0x10d4 <__fp_inf>
     f68:	00 c1       	rjmp	.+512    	; 0x116a <__fp_szero>
     f6a:	5f 3f       	cpi	r21, 0xFF	; 255
     f6c:	ec f3       	brlt	.-6      	; 0xf68 <__divsf3_pse+0x6a>
     f6e:	98 3e       	cpi	r25, 0xE8	; 232
     f70:	dc f3       	brlt	.-10     	; 0xf68 <__divsf3_pse+0x6a>
     f72:	86 95       	lsr	r24
     f74:	77 95       	ror	r23
     f76:	67 95       	ror	r22
     f78:	b7 95       	ror	r27
     f7a:	f7 95       	ror	r31
     f7c:	9f 5f       	subi	r25, 0xFF	; 255
     f7e:	c9 f7       	brne	.-14     	; 0xf72 <__divsf3_pse+0x74>
     f80:	88 0f       	add	r24, r24
     f82:	91 1d       	adc	r25, r1
     f84:	96 95       	lsr	r25
     f86:	87 95       	ror	r24
     f88:	97 f9       	bld	r25, 7
     f8a:	08 95       	ret
     f8c:	e1 e0       	ldi	r30, 0x01	; 1
     f8e:	66 0f       	add	r22, r22
     f90:	77 1f       	adc	r23, r23
     f92:	88 1f       	adc	r24, r24
     f94:	bb 1f       	adc	r27, r27
     f96:	62 17       	cp	r22, r18
     f98:	73 07       	cpc	r23, r19
     f9a:	84 07       	cpc	r24, r20
     f9c:	ba 07       	cpc	r27, r26
     f9e:	20 f0       	brcs	.+8      	; 0xfa8 <__divsf3_pse+0xaa>
     fa0:	62 1b       	sub	r22, r18
     fa2:	73 0b       	sbc	r23, r19
     fa4:	84 0b       	sbc	r24, r20
     fa6:	ba 0b       	sbc	r27, r26
     fa8:	ee 1f       	adc	r30, r30
     faa:	88 f7       	brcc	.-30     	; 0xf8e <__divsf3_pse+0x90>
     fac:	e0 95       	com	r30
     fae:	08 95       	ret

00000fb0 <__fixsfsi>:
     fb0:	04 d0       	rcall	.+8      	; 0xfba <__fixunssfsi>
     fb2:	68 94       	set
     fb4:	b1 11       	cpse	r27, r1
     fb6:	d9 c0       	rjmp	.+434    	; 0x116a <__fp_szero>
     fb8:	08 95       	ret

00000fba <__fixunssfsi>:
     fba:	bc d0       	rcall	.+376    	; 0x1134 <__fp_splitA>
     fbc:	88 f0       	brcs	.+34     	; 0xfe0 <__fixunssfsi+0x26>
     fbe:	9f 57       	subi	r25, 0x7F	; 127
     fc0:	90 f0       	brcs	.+36     	; 0xfe6 <__fixunssfsi+0x2c>
     fc2:	b9 2f       	mov	r27, r25
     fc4:	99 27       	eor	r25, r25
     fc6:	b7 51       	subi	r27, 0x17	; 23
     fc8:	a0 f0       	brcs	.+40     	; 0xff2 <__fixunssfsi+0x38>
     fca:	d1 f0       	breq	.+52     	; 0x1000 <__fixunssfsi+0x46>
     fcc:	66 0f       	add	r22, r22
     fce:	77 1f       	adc	r23, r23
     fd0:	88 1f       	adc	r24, r24
     fd2:	99 1f       	adc	r25, r25
     fd4:	1a f0       	brmi	.+6      	; 0xfdc <__fixunssfsi+0x22>
     fd6:	ba 95       	dec	r27
     fd8:	c9 f7       	brne	.-14     	; 0xfcc <__fixunssfsi+0x12>
     fda:	12 c0       	rjmp	.+36     	; 0x1000 <__fixunssfsi+0x46>
     fdc:	b1 30       	cpi	r27, 0x01	; 1
     fde:	81 f0       	breq	.+32     	; 0x1000 <__fixunssfsi+0x46>
     fe0:	c3 d0       	rcall	.+390    	; 0x1168 <__fp_zero>
     fe2:	b1 e0       	ldi	r27, 0x01	; 1
     fe4:	08 95       	ret
     fe6:	c0 c0       	rjmp	.+384    	; 0x1168 <__fp_zero>
     fe8:	67 2f       	mov	r22, r23
     fea:	78 2f       	mov	r23, r24
     fec:	88 27       	eor	r24, r24
     fee:	b8 5f       	subi	r27, 0xF8	; 248
     ff0:	39 f0       	breq	.+14     	; 0x1000 <__fixunssfsi+0x46>
     ff2:	b9 3f       	cpi	r27, 0xF9	; 249
     ff4:	cc f3       	brlt	.-14     	; 0xfe8 <__fixunssfsi+0x2e>
     ff6:	86 95       	lsr	r24
     ff8:	77 95       	ror	r23
     ffa:	67 95       	ror	r22
     ffc:	b3 95       	inc	r27
     ffe:	d9 f7       	brne	.-10     	; 0xff6 <__fixunssfsi+0x3c>
    1000:	3e f4       	brtc	.+14     	; 0x1010 <__fixunssfsi+0x56>
    1002:	90 95       	com	r25
    1004:	80 95       	com	r24
    1006:	70 95       	com	r23
    1008:	61 95       	neg	r22
    100a:	7f 4f       	sbci	r23, 0xFF	; 255
    100c:	8f 4f       	sbci	r24, 0xFF	; 255
    100e:	9f 4f       	sbci	r25, 0xFF	; 255
    1010:	08 95       	ret

00001012 <__floatunsisf>:
    1012:	e8 94       	clt
    1014:	09 c0       	rjmp	.+18     	; 0x1028 <__floatsisf+0x12>

00001016 <__floatsisf>:
    1016:	97 fb       	bst	r25, 7
    1018:	3e f4       	brtc	.+14     	; 0x1028 <__floatsisf+0x12>
    101a:	90 95       	com	r25
    101c:	80 95       	com	r24
    101e:	70 95       	com	r23
    1020:	61 95       	neg	r22
    1022:	7f 4f       	sbci	r23, 0xFF	; 255
    1024:	8f 4f       	sbci	r24, 0xFF	; 255
    1026:	9f 4f       	sbci	r25, 0xFF	; 255
    1028:	99 23       	and	r25, r25
    102a:	a9 f0       	breq	.+42     	; 0x1056 <__floatsisf+0x40>
    102c:	f9 2f       	mov	r31, r25
    102e:	96 e9       	ldi	r25, 0x96	; 150
    1030:	bb 27       	eor	r27, r27
    1032:	93 95       	inc	r25
    1034:	f6 95       	lsr	r31
    1036:	87 95       	ror	r24
    1038:	77 95       	ror	r23
    103a:	67 95       	ror	r22
    103c:	b7 95       	ror	r27
    103e:	f1 11       	cpse	r31, r1
    1040:	f8 cf       	rjmp	.-16     	; 0x1032 <__floatsisf+0x1c>
    1042:	fa f4       	brpl	.+62     	; 0x1082 <__floatsisf+0x6c>
    1044:	bb 0f       	add	r27, r27
    1046:	11 f4       	brne	.+4      	; 0x104c <__floatsisf+0x36>
    1048:	60 ff       	sbrs	r22, 0
    104a:	1b c0       	rjmp	.+54     	; 0x1082 <__floatsisf+0x6c>
    104c:	6f 5f       	subi	r22, 0xFF	; 255
    104e:	7f 4f       	sbci	r23, 0xFF	; 255
    1050:	8f 4f       	sbci	r24, 0xFF	; 255
    1052:	9f 4f       	sbci	r25, 0xFF	; 255
    1054:	16 c0       	rjmp	.+44     	; 0x1082 <__floatsisf+0x6c>
    1056:	88 23       	and	r24, r24
    1058:	11 f0       	breq	.+4      	; 0x105e <__floatsisf+0x48>
    105a:	96 e9       	ldi	r25, 0x96	; 150
    105c:	11 c0       	rjmp	.+34     	; 0x1080 <__floatsisf+0x6a>
    105e:	77 23       	and	r23, r23
    1060:	21 f0       	breq	.+8      	; 0x106a <__floatsisf+0x54>
    1062:	9e e8       	ldi	r25, 0x8E	; 142
    1064:	87 2f       	mov	r24, r23
    1066:	76 2f       	mov	r23, r22
    1068:	05 c0       	rjmp	.+10     	; 0x1074 <__floatsisf+0x5e>
    106a:	66 23       	and	r22, r22
    106c:	71 f0       	breq	.+28     	; 0x108a <__floatsisf+0x74>
    106e:	96 e8       	ldi	r25, 0x86	; 134
    1070:	86 2f       	mov	r24, r22
    1072:	70 e0       	ldi	r23, 0x00	; 0
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	2a f0       	brmi	.+10     	; 0x1082 <__floatsisf+0x6c>
    1078:	9a 95       	dec	r25
    107a:	66 0f       	add	r22, r22
    107c:	77 1f       	adc	r23, r23
    107e:	88 1f       	adc	r24, r24
    1080:	da f7       	brpl	.-10     	; 0x1078 <__floatsisf+0x62>
    1082:	88 0f       	add	r24, r24
    1084:	96 95       	lsr	r25
    1086:	87 95       	ror	r24
    1088:	97 f9       	bld	r25, 7
    108a:	08 95       	ret

0000108c <__fp_cmp>:
    108c:	99 0f       	add	r25, r25
    108e:	00 08       	sbc	r0, r0
    1090:	55 0f       	add	r21, r21
    1092:	aa 0b       	sbc	r26, r26
    1094:	e0 e8       	ldi	r30, 0x80	; 128
    1096:	fe ef       	ldi	r31, 0xFE	; 254
    1098:	16 16       	cp	r1, r22
    109a:	17 06       	cpc	r1, r23
    109c:	e8 07       	cpc	r30, r24
    109e:	f9 07       	cpc	r31, r25
    10a0:	c0 f0       	brcs	.+48     	; 0x10d2 <__fp_cmp+0x46>
    10a2:	12 16       	cp	r1, r18
    10a4:	13 06       	cpc	r1, r19
    10a6:	e4 07       	cpc	r30, r20
    10a8:	f5 07       	cpc	r31, r21
    10aa:	98 f0       	brcs	.+38     	; 0x10d2 <__fp_cmp+0x46>
    10ac:	62 1b       	sub	r22, r18
    10ae:	73 0b       	sbc	r23, r19
    10b0:	84 0b       	sbc	r24, r20
    10b2:	95 0b       	sbc	r25, r21
    10b4:	39 f4       	brne	.+14     	; 0x10c4 <__fp_cmp+0x38>
    10b6:	0a 26       	eor	r0, r26
    10b8:	61 f0       	breq	.+24     	; 0x10d2 <__fp_cmp+0x46>
    10ba:	23 2b       	or	r18, r19
    10bc:	24 2b       	or	r18, r20
    10be:	25 2b       	or	r18, r21
    10c0:	21 f4       	brne	.+8      	; 0x10ca <__fp_cmp+0x3e>
    10c2:	08 95       	ret
    10c4:	0a 26       	eor	r0, r26
    10c6:	09 f4       	brne	.+2      	; 0x10ca <__fp_cmp+0x3e>
    10c8:	a1 40       	sbci	r26, 0x01	; 1
    10ca:	a6 95       	lsr	r26
    10cc:	8f ef       	ldi	r24, 0xFF	; 255
    10ce:	81 1d       	adc	r24, r1
    10d0:	81 1d       	adc	r24, r1
    10d2:	08 95       	ret

000010d4 <__fp_inf>:
    10d4:	97 f9       	bld	r25, 7
    10d6:	9f 67       	ori	r25, 0x7F	; 127
    10d8:	80 e8       	ldi	r24, 0x80	; 128
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	60 e0       	ldi	r22, 0x00	; 0
    10de:	08 95       	ret

000010e0 <__fp_nan>:
    10e0:	9f ef       	ldi	r25, 0xFF	; 255
    10e2:	80 ec       	ldi	r24, 0xC0	; 192
    10e4:	08 95       	ret

000010e6 <__fp_pscA>:
    10e6:	00 24       	eor	r0, r0
    10e8:	0a 94       	dec	r0
    10ea:	16 16       	cp	r1, r22
    10ec:	17 06       	cpc	r1, r23
    10ee:	18 06       	cpc	r1, r24
    10f0:	09 06       	cpc	r0, r25
    10f2:	08 95       	ret

000010f4 <__fp_pscB>:
    10f4:	00 24       	eor	r0, r0
    10f6:	0a 94       	dec	r0
    10f8:	12 16       	cp	r1, r18
    10fa:	13 06       	cpc	r1, r19
    10fc:	14 06       	cpc	r1, r20
    10fe:	05 06       	cpc	r0, r21
    1100:	08 95       	ret

00001102 <__fp_round>:
    1102:	09 2e       	mov	r0, r25
    1104:	03 94       	inc	r0
    1106:	00 0c       	add	r0, r0
    1108:	11 f4       	brne	.+4      	; 0x110e <__fp_round+0xc>
    110a:	88 23       	and	r24, r24
    110c:	52 f0       	brmi	.+20     	; 0x1122 <__fp_round+0x20>
    110e:	bb 0f       	add	r27, r27
    1110:	40 f4       	brcc	.+16     	; 0x1122 <__fp_round+0x20>
    1112:	bf 2b       	or	r27, r31
    1114:	11 f4       	brne	.+4      	; 0x111a <__fp_round+0x18>
    1116:	60 ff       	sbrs	r22, 0
    1118:	04 c0       	rjmp	.+8      	; 0x1122 <__fp_round+0x20>
    111a:	6f 5f       	subi	r22, 0xFF	; 255
    111c:	7f 4f       	sbci	r23, 0xFF	; 255
    111e:	8f 4f       	sbci	r24, 0xFF	; 255
    1120:	9f 4f       	sbci	r25, 0xFF	; 255
    1122:	08 95       	ret

00001124 <__fp_split3>:
    1124:	57 fd       	sbrc	r21, 7
    1126:	90 58       	subi	r25, 0x80	; 128
    1128:	44 0f       	add	r20, r20
    112a:	55 1f       	adc	r21, r21
    112c:	59 f0       	breq	.+22     	; 0x1144 <__fp_splitA+0x10>
    112e:	5f 3f       	cpi	r21, 0xFF	; 255
    1130:	71 f0       	breq	.+28     	; 0x114e <__fp_splitA+0x1a>
    1132:	47 95       	ror	r20

00001134 <__fp_splitA>:
    1134:	88 0f       	add	r24, r24
    1136:	97 fb       	bst	r25, 7
    1138:	99 1f       	adc	r25, r25
    113a:	61 f0       	breq	.+24     	; 0x1154 <__fp_splitA+0x20>
    113c:	9f 3f       	cpi	r25, 0xFF	; 255
    113e:	79 f0       	breq	.+30     	; 0x115e <__fp_splitA+0x2a>
    1140:	87 95       	ror	r24
    1142:	08 95       	ret
    1144:	12 16       	cp	r1, r18
    1146:	13 06       	cpc	r1, r19
    1148:	14 06       	cpc	r1, r20
    114a:	55 1f       	adc	r21, r21
    114c:	f2 cf       	rjmp	.-28     	; 0x1132 <__fp_split3+0xe>
    114e:	46 95       	lsr	r20
    1150:	f1 df       	rcall	.-30     	; 0x1134 <__fp_splitA>
    1152:	08 c0       	rjmp	.+16     	; 0x1164 <__fp_splitA+0x30>
    1154:	16 16       	cp	r1, r22
    1156:	17 06       	cpc	r1, r23
    1158:	18 06       	cpc	r1, r24
    115a:	99 1f       	adc	r25, r25
    115c:	f1 cf       	rjmp	.-30     	; 0x1140 <__fp_splitA+0xc>
    115e:	86 95       	lsr	r24
    1160:	71 05       	cpc	r23, r1
    1162:	61 05       	cpc	r22, r1
    1164:	08 94       	sec
    1166:	08 95       	ret

00001168 <__fp_zero>:
    1168:	e8 94       	clt

0000116a <__fp_szero>:
    116a:	bb 27       	eor	r27, r27
    116c:	66 27       	eor	r22, r22
    116e:	77 27       	eor	r23, r23
    1170:	cb 01       	movw	r24, r22
    1172:	97 f9       	bld	r25, 7
    1174:	08 95       	ret

00001176 <__gesf2>:
    1176:	8a df       	rcall	.-236    	; 0x108c <__fp_cmp>
    1178:	08 f4       	brcc	.+2      	; 0x117c <__gesf2+0x6>
    117a:	8f ef       	ldi	r24, 0xFF	; 255
    117c:	08 95       	ret

0000117e <__mulsf3>:
    117e:	0b d0       	rcall	.+22     	; 0x1196 <__mulsf3x>
    1180:	c0 cf       	rjmp	.-128    	; 0x1102 <__fp_round>
    1182:	b1 df       	rcall	.-158    	; 0x10e6 <__fp_pscA>
    1184:	28 f0       	brcs	.+10     	; 0x1190 <__mulsf3+0x12>
    1186:	b6 df       	rcall	.-148    	; 0x10f4 <__fp_pscB>
    1188:	18 f0       	brcs	.+6      	; 0x1190 <__mulsf3+0x12>
    118a:	95 23       	and	r25, r21
    118c:	09 f0       	breq	.+2      	; 0x1190 <__mulsf3+0x12>
    118e:	a2 cf       	rjmp	.-188    	; 0x10d4 <__fp_inf>
    1190:	a7 cf       	rjmp	.-178    	; 0x10e0 <__fp_nan>
    1192:	11 24       	eor	r1, r1
    1194:	ea cf       	rjmp	.-44     	; 0x116a <__fp_szero>

00001196 <__mulsf3x>:
    1196:	c6 df       	rcall	.-116    	; 0x1124 <__fp_split3>
    1198:	a0 f3       	brcs	.-24     	; 0x1182 <__mulsf3+0x4>

0000119a <__mulsf3_pse>:
    119a:	95 9f       	mul	r25, r21
    119c:	d1 f3       	breq	.-12     	; 0x1192 <__mulsf3+0x14>
    119e:	95 0f       	add	r25, r21
    11a0:	50 e0       	ldi	r21, 0x00	; 0
    11a2:	55 1f       	adc	r21, r21
    11a4:	62 9f       	mul	r22, r18
    11a6:	f0 01       	movw	r30, r0
    11a8:	72 9f       	mul	r23, r18
    11aa:	bb 27       	eor	r27, r27
    11ac:	f0 0d       	add	r31, r0
    11ae:	b1 1d       	adc	r27, r1
    11b0:	63 9f       	mul	r22, r19
    11b2:	aa 27       	eor	r26, r26
    11b4:	f0 0d       	add	r31, r0
    11b6:	b1 1d       	adc	r27, r1
    11b8:	aa 1f       	adc	r26, r26
    11ba:	64 9f       	mul	r22, r20
    11bc:	66 27       	eor	r22, r22
    11be:	b0 0d       	add	r27, r0
    11c0:	a1 1d       	adc	r26, r1
    11c2:	66 1f       	adc	r22, r22
    11c4:	82 9f       	mul	r24, r18
    11c6:	22 27       	eor	r18, r18
    11c8:	b0 0d       	add	r27, r0
    11ca:	a1 1d       	adc	r26, r1
    11cc:	62 1f       	adc	r22, r18
    11ce:	73 9f       	mul	r23, r19
    11d0:	b0 0d       	add	r27, r0
    11d2:	a1 1d       	adc	r26, r1
    11d4:	62 1f       	adc	r22, r18
    11d6:	83 9f       	mul	r24, r19
    11d8:	a0 0d       	add	r26, r0
    11da:	61 1d       	adc	r22, r1
    11dc:	22 1f       	adc	r18, r18
    11de:	74 9f       	mul	r23, r20
    11e0:	33 27       	eor	r19, r19
    11e2:	a0 0d       	add	r26, r0
    11e4:	61 1d       	adc	r22, r1
    11e6:	23 1f       	adc	r18, r19
    11e8:	84 9f       	mul	r24, r20
    11ea:	60 0d       	add	r22, r0
    11ec:	21 1d       	adc	r18, r1
    11ee:	82 2f       	mov	r24, r18
    11f0:	76 2f       	mov	r23, r22
    11f2:	6a 2f       	mov	r22, r26
    11f4:	11 24       	eor	r1, r1
    11f6:	9f 57       	subi	r25, 0x7F	; 127
    11f8:	50 40       	sbci	r21, 0x00	; 0
    11fa:	8a f0       	brmi	.+34     	; 0x121e <__mulsf3_pse+0x84>
    11fc:	e1 f0       	breq	.+56     	; 0x1236 <__mulsf3_pse+0x9c>
    11fe:	88 23       	and	r24, r24
    1200:	4a f0       	brmi	.+18     	; 0x1214 <__mulsf3_pse+0x7a>
    1202:	ee 0f       	add	r30, r30
    1204:	ff 1f       	adc	r31, r31
    1206:	bb 1f       	adc	r27, r27
    1208:	66 1f       	adc	r22, r22
    120a:	77 1f       	adc	r23, r23
    120c:	88 1f       	adc	r24, r24
    120e:	91 50       	subi	r25, 0x01	; 1
    1210:	50 40       	sbci	r21, 0x00	; 0
    1212:	a9 f7       	brne	.-22     	; 0x11fe <__mulsf3_pse+0x64>
    1214:	9e 3f       	cpi	r25, 0xFE	; 254
    1216:	51 05       	cpc	r21, r1
    1218:	70 f0       	brcs	.+28     	; 0x1236 <__mulsf3_pse+0x9c>
    121a:	5c cf       	rjmp	.-328    	; 0x10d4 <__fp_inf>
    121c:	a6 cf       	rjmp	.-180    	; 0x116a <__fp_szero>
    121e:	5f 3f       	cpi	r21, 0xFF	; 255
    1220:	ec f3       	brlt	.-6      	; 0x121c <__mulsf3_pse+0x82>
    1222:	98 3e       	cpi	r25, 0xE8	; 232
    1224:	dc f3       	brlt	.-10     	; 0x121c <__mulsf3_pse+0x82>
    1226:	86 95       	lsr	r24
    1228:	77 95       	ror	r23
    122a:	67 95       	ror	r22
    122c:	b7 95       	ror	r27
    122e:	f7 95       	ror	r31
    1230:	e7 95       	ror	r30
    1232:	9f 5f       	subi	r25, 0xFF	; 255
    1234:	c1 f7       	brne	.-16     	; 0x1226 <__mulsf3_pse+0x8c>
    1236:	fe 2b       	or	r31, r30
    1238:	88 0f       	add	r24, r24
    123a:	91 1d       	adc	r25, r1
    123c:	96 95       	lsr	r25
    123e:	87 95       	ror	r24
    1240:	97 f9       	bld	r25, 7
    1242:	08 95       	ret

00001244 <__tablejump2__>:
    1244:	ee 0f       	add	r30, r30
    1246:	ff 1f       	adc	r31, r31

00001248 <__tablejump__>:
    1248:	05 90       	lpm	r0, Z+
    124a:	f4 91       	lpm	r31, Z
    124c:	e0 2d       	mov	r30, r0
    124e:	19 94       	eijmp

00001250 <fdevopen>:
    1250:	0f 93       	push	r16
    1252:	1f 93       	push	r17
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	ec 01       	movw	r28, r24
    125a:	8b 01       	movw	r16, r22
    125c:	00 97       	sbiw	r24, 0x00	; 0
    125e:	31 f4       	brne	.+12     	; 0x126c <fdevopen+0x1c>
    1260:	61 15       	cp	r22, r1
    1262:	71 05       	cpc	r23, r1
    1264:	19 f4       	brne	.+6      	; 0x126c <fdevopen+0x1c>
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	37 c0       	rjmp	.+110    	; 0x12da <fdevopen+0x8a>
    126c:	6e e0       	ldi	r22, 0x0E	; 14
    126e:	70 e0       	ldi	r23, 0x00	; 0
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	63 d2       	rcall	.+1222   	; 0x173c <calloc>
    1276:	fc 01       	movw	r30, r24
    1278:	00 97       	sbiw	r24, 0x00	; 0
    127a:	a9 f3       	breq	.-22     	; 0x1266 <fdevopen+0x16>
    127c:	80 e8       	ldi	r24, 0x80	; 128
    127e:	83 83       	std	Z+3, r24	; 0x03
    1280:	01 15       	cp	r16, r1
    1282:	11 05       	cpc	r17, r1
    1284:	71 f0       	breq	.+28     	; 0x12a2 <fdevopen+0x52>
    1286:	13 87       	std	Z+11, r17	; 0x0b
    1288:	02 87       	std	Z+10, r16	; 0x0a
    128a:	81 e8       	ldi	r24, 0x81	; 129
    128c:	83 83       	std	Z+3, r24	; 0x03
    128e:	80 91 ad 02 	lds	r24, 0x02AD
    1292:	90 91 ae 02 	lds	r25, 0x02AE
    1296:	89 2b       	or	r24, r25
    1298:	21 f4       	brne	.+8      	; 0x12a2 <fdevopen+0x52>
    129a:	f0 93 ae 02 	sts	0x02AE, r31
    129e:	e0 93 ad 02 	sts	0x02AD, r30
    12a2:	20 97       	sbiw	r28, 0x00	; 0
    12a4:	c9 f0       	breq	.+50     	; 0x12d8 <fdevopen+0x88>
    12a6:	d1 87       	std	Z+9, r29	; 0x09
    12a8:	c0 87       	std	Z+8, r28	; 0x08
    12aa:	83 81       	ldd	r24, Z+3	; 0x03
    12ac:	82 60       	ori	r24, 0x02	; 2
    12ae:	83 83       	std	Z+3, r24	; 0x03
    12b0:	80 91 af 02 	lds	r24, 0x02AF
    12b4:	90 91 b0 02 	lds	r25, 0x02B0
    12b8:	89 2b       	or	r24, r25
    12ba:	71 f4       	brne	.+28     	; 0x12d8 <fdevopen+0x88>
    12bc:	f0 93 b0 02 	sts	0x02B0, r31
    12c0:	e0 93 af 02 	sts	0x02AF, r30
    12c4:	80 91 b1 02 	lds	r24, 0x02B1
    12c8:	90 91 b2 02 	lds	r25, 0x02B2
    12cc:	89 2b       	or	r24, r25
    12ce:	21 f4       	brne	.+8      	; 0x12d8 <fdevopen+0x88>
    12d0:	f0 93 b2 02 	sts	0x02B2, r31
    12d4:	e0 93 b1 02 	sts	0x02B1, r30
    12d8:	cf 01       	movw	r24, r30
    12da:	df 91       	pop	r29
    12dc:	cf 91       	pop	r28
    12de:	1f 91       	pop	r17
    12e0:	0f 91       	pop	r16
    12e2:	08 95       	ret

000012e4 <printf>:
    12e4:	cf 93       	push	r28
    12e6:	df 93       	push	r29
    12e8:	cd b7       	in	r28, 0x3d	; 61
    12ea:	de b7       	in	r29, 0x3e	; 62
    12ec:	fe 01       	movw	r30, r28
    12ee:	36 96       	adiw	r30, 0x06	; 6
    12f0:	61 91       	ld	r22, Z+
    12f2:	71 91       	ld	r23, Z+
    12f4:	af 01       	movw	r20, r30
    12f6:	80 91 af 02 	lds	r24, 0x02AF
    12fa:	90 91 b0 02 	lds	r25, 0x02B0
    12fe:	30 d0       	rcall	.+96     	; 0x1360 <vfprintf>
    1300:	df 91       	pop	r29
    1302:	cf 91       	pop	r28
    1304:	08 95       	ret

00001306 <puts>:
    1306:	0f 93       	push	r16
    1308:	1f 93       	push	r17
    130a:	cf 93       	push	r28
    130c:	df 93       	push	r29
    130e:	e0 91 af 02 	lds	r30, 0x02AF
    1312:	f0 91 b0 02 	lds	r31, 0x02B0
    1316:	23 81       	ldd	r18, Z+3	; 0x03
    1318:	21 ff       	sbrs	r18, 1
    131a:	1b c0       	rjmp	.+54     	; 0x1352 <puts+0x4c>
    131c:	ec 01       	movw	r28, r24
    131e:	00 e0       	ldi	r16, 0x00	; 0
    1320:	10 e0       	ldi	r17, 0x00	; 0
    1322:	89 91       	ld	r24, Y+
    1324:	60 91 af 02 	lds	r22, 0x02AF
    1328:	70 91 b0 02 	lds	r23, 0x02B0
    132c:	db 01       	movw	r26, r22
    132e:	18 96       	adiw	r26, 0x08	; 8
    1330:	ed 91       	ld	r30, X+
    1332:	fc 91       	ld	r31, X
    1334:	19 97       	sbiw	r26, 0x09	; 9
    1336:	88 23       	and	r24, r24
    1338:	31 f0       	breq	.+12     	; 0x1346 <puts+0x40>
    133a:	19 95       	eicall
    133c:	89 2b       	or	r24, r25
    133e:	89 f3       	breq	.-30     	; 0x1322 <puts+0x1c>
    1340:	0f ef       	ldi	r16, 0xFF	; 255
    1342:	1f ef       	ldi	r17, 0xFF	; 255
    1344:	ee cf       	rjmp	.-36     	; 0x1322 <puts+0x1c>
    1346:	8a e0       	ldi	r24, 0x0A	; 10
    1348:	19 95       	eicall
    134a:	89 2b       	or	r24, r25
    134c:	11 f4       	brne	.+4      	; 0x1352 <puts+0x4c>
    134e:	c8 01       	movw	r24, r16
    1350:	02 c0       	rjmp	.+4      	; 0x1356 <puts+0x50>
    1352:	8f ef       	ldi	r24, 0xFF	; 255
    1354:	9f ef       	ldi	r25, 0xFF	; 255
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	1f 91       	pop	r17
    135c:	0f 91       	pop	r16
    135e:	08 95       	ret

00001360 <vfprintf>:
    1360:	2f 92       	push	r2
    1362:	3f 92       	push	r3
    1364:	4f 92       	push	r4
    1366:	5f 92       	push	r5
    1368:	6f 92       	push	r6
    136a:	7f 92       	push	r7
    136c:	8f 92       	push	r8
    136e:	9f 92       	push	r9
    1370:	af 92       	push	r10
    1372:	bf 92       	push	r11
    1374:	cf 92       	push	r12
    1376:	df 92       	push	r13
    1378:	ef 92       	push	r14
    137a:	ff 92       	push	r15
    137c:	0f 93       	push	r16
    137e:	1f 93       	push	r17
    1380:	cf 93       	push	r28
    1382:	df 93       	push	r29
    1384:	cd b7       	in	r28, 0x3d	; 61
    1386:	de b7       	in	r29, 0x3e	; 62
    1388:	2c 97       	sbiw	r28, 0x0c	; 12
    138a:	0f b6       	in	r0, 0x3f	; 63
    138c:	f8 94       	cli
    138e:	de bf       	out	0x3e, r29	; 62
    1390:	0f be       	out	0x3f, r0	; 63
    1392:	cd bf       	out	0x3d, r28	; 61
    1394:	7c 01       	movw	r14, r24
    1396:	6b 01       	movw	r12, r22
    1398:	8a 01       	movw	r16, r20
    139a:	fc 01       	movw	r30, r24
    139c:	17 82       	std	Z+7, r1	; 0x07
    139e:	16 82       	std	Z+6, r1	; 0x06
    13a0:	83 81       	ldd	r24, Z+3	; 0x03
    13a2:	81 ff       	sbrs	r24, 1
    13a4:	b0 c1       	rjmp	.+864    	; 0x1706 <vfprintf+0x3a6>
    13a6:	ce 01       	movw	r24, r28
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	4c 01       	movw	r8, r24
    13ac:	f7 01       	movw	r30, r14
    13ae:	93 81       	ldd	r25, Z+3	; 0x03
    13b0:	f6 01       	movw	r30, r12
    13b2:	93 fd       	sbrc	r25, 3
    13b4:	85 91       	lpm	r24, Z+
    13b6:	93 ff       	sbrs	r25, 3
    13b8:	81 91       	ld	r24, Z+
    13ba:	6f 01       	movw	r12, r30
    13bc:	88 23       	and	r24, r24
    13be:	09 f4       	brne	.+2      	; 0x13c2 <vfprintf+0x62>
    13c0:	9e c1       	rjmp	.+828    	; 0x16fe <vfprintf+0x39e>
    13c2:	85 32       	cpi	r24, 0x25	; 37
    13c4:	39 f4       	brne	.+14     	; 0x13d4 <vfprintf+0x74>
    13c6:	93 fd       	sbrc	r25, 3
    13c8:	85 91       	lpm	r24, Z+
    13ca:	93 ff       	sbrs	r25, 3
    13cc:	81 91       	ld	r24, Z+
    13ce:	6f 01       	movw	r12, r30
    13d0:	85 32       	cpi	r24, 0x25	; 37
    13d2:	21 f4       	brne	.+8      	; 0x13dc <vfprintf+0x7c>
    13d4:	b7 01       	movw	r22, r14
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0f d3       	rcall	.+1566   	; 0x19f8 <fputc>
    13da:	e8 cf       	rjmp	.-48     	; 0x13ac <vfprintf+0x4c>
    13dc:	51 2c       	mov	r5, r1
    13de:	31 2c       	mov	r3, r1
    13e0:	20 e0       	ldi	r18, 0x00	; 0
    13e2:	20 32       	cpi	r18, 0x20	; 32
    13e4:	a0 f4       	brcc	.+40     	; 0x140e <vfprintf+0xae>
    13e6:	8b 32       	cpi	r24, 0x2B	; 43
    13e8:	69 f0       	breq	.+26     	; 0x1404 <vfprintf+0xa4>
    13ea:	30 f4       	brcc	.+12     	; 0x13f8 <vfprintf+0x98>
    13ec:	80 32       	cpi	r24, 0x20	; 32
    13ee:	59 f0       	breq	.+22     	; 0x1406 <vfprintf+0xa6>
    13f0:	83 32       	cpi	r24, 0x23	; 35
    13f2:	69 f4       	brne	.+26     	; 0x140e <vfprintf+0xae>
    13f4:	20 61       	ori	r18, 0x10	; 16
    13f6:	2c c0       	rjmp	.+88     	; 0x1450 <vfprintf+0xf0>
    13f8:	8d 32       	cpi	r24, 0x2D	; 45
    13fa:	39 f0       	breq	.+14     	; 0x140a <vfprintf+0xaa>
    13fc:	80 33       	cpi	r24, 0x30	; 48
    13fe:	39 f4       	brne	.+14     	; 0x140e <vfprintf+0xae>
    1400:	21 60       	ori	r18, 0x01	; 1
    1402:	26 c0       	rjmp	.+76     	; 0x1450 <vfprintf+0xf0>
    1404:	22 60       	ori	r18, 0x02	; 2
    1406:	24 60       	ori	r18, 0x04	; 4
    1408:	23 c0       	rjmp	.+70     	; 0x1450 <vfprintf+0xf0>
    140a:	28 60       	ori	r18, 0x08	; 8
    140c:	21 c0       	rjmp	.+66     	; 0x1450 <vfprintf+0xf0>
    140e:	27 fd       	sbrc	r18, 7
    1410:	27 c0       	rjmp	.+78     	; 0x1460 <vfprintf+0x100>
    1412:	30 ed       	ldi	r19, 0xD0	; 208
    1414:	38 0f       	add	r19, r24
    1416:	3a 30       	cpi	r19, 0x0A	; 10
    1418:	78 f4       	brcc	.+30     	; 0x1438 <vfprintf+0xd8>
    141a:	26 ff       	sbrs	r18, 6
    141c:	06 c0       	rjmp	.+12     	; 0x142a <vfprintf+0xca>
    141e:	fa e0       	ldi	r31, 0x0A	; 10
    1420:	5f 9e       	mul	r5, r31
    1422:	30 0d       	add	r19, r0
    1424:	11 24       	eor	r1, r1
    1426:	53 2e       	mov	r5, r19
    1428:	13 c0       	rjmp	.+38     	; 0x1450 <vfprintf+0xf0>
    142a:	8a e0       	ldi	r24, 0x0A	; 10
    142c:	38 9e       	mul	r3, r24
    142e:	30 0d       	add	r19, r0
    1430:	11 24       	eor	r1, r1
    1432:	33 2e       	mov	r3, r19
    1434:	20 62       	ori	r18, 0x20	; 32
    1436:	0c c0       	rjmp	.+24     	; 0x1450 <vfprintf+0xf0>
    1438:	8e 32       	cpi	r24, 0x2E	; 46
    143a:	21 f4       	brne	.+8      	; 0x1444 <vfprintf+0xe4>
    143c:	26 fd       	sbrc	r18, 6
    143e:	5f c1       	rjmp	.+702    	; 0x16fe <vfprintf+0x39e>
    1440:	20 64       	ori	r18, 0x40	; 64
    1442:	06 c0       	rjmp	.+12     	; 0x1450 <vfprintf+0xf0>
    1444:	8c 36       	cpi	r24, 0x6C	; 108
    1446:	11 f4       	brne	.+4      	; 0x144c <vfprintf+0xec>
    1448:	20 68       	ori	r18, 0x80	; 128
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <vfprintf+0xf0>
    144c:	88 36       	cpi	r24, 0x68	; 104
    144e:	41 f4       	brne	.+16     	; 0x1460 <vfprintf+0x100>
    1450:	f6 01       	movw	r30, r12
    1452:	93 fd       	sbrc	r25, 3
    1454:	85 91       	lpm	r24, Z+
    1456:	93 ff       	sbrs	r25, 3
    1458:	81 91       	ld	r24, Z+
    145a:	6f 01       	movw	r12, r30
    145c:	81 11       	cpse	r24, r1
    145e:	c1 cf       	rjmp	.-126    	; 0x13e2 <vfprintf+0x82>
    1460:	98 2f       	mov	r25, r24
    1462:	9f 7d       	andi	r25, 0xDF	; 223
    1464:	95 54       	subi	r25, 0x45	; 69
    1466:	93 30       	cpi	r25, 0x03	; 3
    1468:	28 f4       	brcc	.+10     	; 0x1474 <vfprintf+0x114>
    146a:	0c 5f       	subi	r16, 0xFC	; 252
    146c:	1f 4f       	sbci	r17, 0xFF	; 255
    146e:	ff e3       	ldi	r31, 0x3F	; 63
    1470:	f9 83       	std	Y+1, r31	; 0x01
    1472:	0d c0       	rjmp	.+26     	; 0x148e <vfprintf+0x12e>
    1474:	83 36       	cpi	r24, 0x63	; 99
    1476:	31 f0       	breq	.+12     	; 0x1484 <vfprintf+0x124>
    1478:	83 37       	cpi	r24, 0x73	; 115
    147a:	71 f0       	breq	.+28     	; 0x1498 <vfprintf+0x138>
    147c:	83 35       	cpi	r24, 0x53	; 83
    147e:	09 f0       	breq	.+2      	; 0x1482 <vfprintf+0x122>
    1480:	57 c0       	rjmp	.+174    	; 0x1530 <vfprintf+0x1d0>
    1482:	21 c0       	rjmp	.+66     	; 0x14c6 <vfprintf+0x166>
    1484:	f8 01       	movw	r30, r16
    1486:	80 81       	ld	r24, Z
    1488:	89 83       	std	Y+1, r24	; 0x01
    148a:	0e 5f       	subi	r16, 0xFE	; 254
    148c:	1f 4f       	sbci	r17, 0xFF	; 255
    148e:	44 24       	eor	r4, r4
    1490:	43 94       	inc	r4
    1492:	51 2c       	mov	r5, r1
    1494:	54 01       	movw	r10, r8
    1496:	14 c0       	rjmp	.+40     	; 0x14c0 <vfprintf+0x160>
    1498:	38 01       	movw	r6, r16
    149a:	f2 e0       	ldi	r31, 0x02	; 2
    149c:	6f 0e       	add	r6, r31
    149e:	71 1c       	adc	r7, r1
    14a0:	f8 01       	movw	r30, r16
    14a2:	a0 80       	ld	r10, Z
    14a4:	b1 80       	ldd	r11, Z+1	; 0x01
    14a6:	26 ff       	sbrs	r18, 6
    14a8:	03 c0       	rjmp	.+6      	; 0x14b0 <vfprintf+0x150>
    14aa:	65 2d       	mov	r22, r5
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <vfprintf+0x154>
    14b0:	6f ef       	ldi	r22, 0xFF	; 255
    14b2:	7f ef       	ldi	r23, 0xFF	; 255
    14b4:	c5 01       	movw	r24, r10
    14b6:	2c 87       	std	Y+12, r18	; 0x0c
    14b8:	94 d2       	rcall	.+1320   	; 0x19e2 <strnlen>
    14ba:	2c 01       	movw	r4, r24
    14bc:	83 01       	movw	r16, r6
    14be:	2c 85       	ldd	r18, Y+12	; 0x0c
    14c0:	2f 77       	andi	r18, 0x7F	; 127
    14c2:	22 2e       	mov	r2, r18
    14c4:	16 c0       	rjmp	.+44     	; 0x14f2 <vfprintf+0x192>
    14c6:	38 01       	movw	r6, r16
    14c8:	f2 e0       	ldi	r31, 0x02	; 2
    14ca:	6f 0e       	add	r6, r31
    14cc:	71 1c       	adc	r7, r1
    14ce:	f8 01       	movw	r30, r16
    14d0:	a0 80       	ld	r10, Z
    14d2:	b1 80       	ldd	r11, Z+1	; 0x01
    14d4:	26 ff       	sbrs	r18, 6
    14d6:	03 c0       	rjmp	.+6      	; 0x14de <vfprintf+0x17e>
    14d8:	65 2d       	mov	r22, r5
    14da:	70 e0       	ldi	r23, 0x00	; 0
    14dc:	02 c0       	rjmp	.+4      	; 0x14e2 <vfprintf+0x182>
    14de:	6f ef       	ldi	r22, 0xFF	; 255
    14e0:	7f ef       	ldi	r23, 0xFF	; 255
    14e2:	c5 01       	movw	r24, r10
    14e4:	2c 87       	std	Y+12, r18	; 0x0c
    14e6:	6b d2       	rcall	.+1238   	; 0x19be <strnlen_P>
    14e8:	2c 01       	movw	r4, r24
    14ea:	2c 85       	ldd	r18, Y+12	; 0x0c
    14ec:	20 68       	ori	r18, 0x80	; 128
    14ee:	22 2e       	mov	r2, r18
    14f0:	83 01       	movw	r16, r6
    14f2:	23 fc       	sbrc	r2, 3
    14f4:	19 c0       	rjmp	.+50     	; 0x1528 <vfprintf+0x1c8>
    14f6:	83 2d       	mov	r24, r3
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	48 16       	cp	r4, r24
    14fc:	59 06       	cpc	r5, r25
    14fe:	a0 f4       	brcc	.+40     	; 0x1528 <vfprintf+0x1c8>
    1500:	b7 01       	movw	r22, r14
    1502:	80 e2       	ldi	r24, 0x20	; 32
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	78 d2       	rcall	.+1264   	; 0x19f8 <fputc>
    1508:	3a 94       	dec	r3
    150a:	f5 cf       	rjmp	.-22     	; 0x14f6 <vfprintf+0x196>
    150c:	f5 01       	movw	r30, r10
    150e:	27 fc       	sbrc	r2, 7
    1510:	85 91       	lpm	r24, Z+
    1512:	27 fe       	sbrs	r2, 7
    1514:	81 91       	ld	r24, Z+
    1516:	5f 01       	movw	r10, r30
    1518:	b7 01       	movw	r22, r14
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	6d d2       	rcall	.+1242   	; 0x19f8 <fputc>
    151e:	31 10       	cpse	r3, r1
    1520:	3a 94       	dec	r3
    1522:	f1 e0       	ldi	r31, 0x01	; 1
    1524:	4f 1a       	sub	r4, r31
    1526:	51 08       	sbc	r5, r1
    1528:	41 14       	cp	r4, r1
    152a:	51 04       	cpc	r5, r1
    152c:	79 f7       	brne	.-34     	; 0x150c <vfprintf+0x1ac>
    152e:	de c0       	rjmp	.+444    	; 0x16ec <vfprintf+0x38c>
    1530:	84 36       	cpi	r24, 0x64	; 100
    1532:	11 f0       	breq	.+4      	; 0x1538 <vfprintf+0x1d8>
    1534:	89 36       	cpi	r24, 0x69	; 105
    1536:	31 f5       	brne	.+76     	; 0x1584 <vfprintf+0x224>
    1538:	f8 01       	movw	r30, r16
    153a:	27 ff       	sbrs	r18, 7
    153c:	07 c0       	rjmp	.+14     	; 0x154c <vfprintf+0x1ec>
    153e:	60 81       	ld	r22, Z
    1540:	71 81       	ldd	r23, Z+1	; 0x01
    1542:	82 81       	ldd	r24, Z+2	; 0x02
    1544:	93 81       	ldd	r25, Z+3	; 0x03
    1546:	0c 5f       	subi	r16, 0xFC	; 252
    1548:	1f 4f       	sbci	r17, 0xFF	; 255
    154a:	08 c0       	rjmp	.+16     	; 0x155c <vfprintf+0x1fc>
    154c:	60 81       	ld	r22, Z
    154e:	71 81       	ldd	r23, Z+1	; 0x01
    1550:	88 27       	eor	r24, r24
    1552:	77 fd       	sbrc	r23, 7
    1554:	80 95       	com	r24
    1556:	98 2f       	mov	r25, r24
    1558:	0e 5f       	subi	r16, 0xFE	; 254
    155a:	1f 4f       	sbci	r17, 0xFF	; 255
    155c:	2f 76       	andi	r18, 0x6F	; 111
    155e:	b2 2e       	mov	r11, r18
    1560:	97 ff       	sbrs	r25, 7
    1562:	09 c0       	rjmp	.+18     	; 0x1576 <vfprintf+0x216>
    1564:	90 95       	com	r25
    1566:	80 95       	com	r24
    1568:	70 95       	com	r23
    156a:	61 95       	neg	r22
    156c:	7f 4f       	sbci	r23, 0xFF	; 255
    156e:	8f 4f       	sbci	r24, 0xFF	; 255
    1570:	9f 4f       	sbci	r25, 0xFF	; 255
    1572:	20 68       	ori	r18, 0x80	; 128
    1574:	b2 2e       	mov	r11, r18
    1576:	2a e0       	ldi	r18, 0x0A	; 10
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	a4 01       	movw	r20, r8
    157c:	6f d2       	rcall	.+1246   	; 0x1a5c <__ultoa_invert>
    157e:	a8 2e       	mov	r10, r24
    1580:	a8 18       	sub	r10, r8
    1582:	43 c0       	rjmp	.+134    	; 0x160a <vfprintf+0x2aa>
    1584:	85 37       	cpi	r24, 0x75	; 117
    1586:	29 f4       	brne	.+10     	; 0x1592 <vfprintf+0x232>
    1588:	2f 7e       	andi	r18, 0xEF	; 239
    158a:	b2 2e       	mov	r11, r18
    158c:	2a e0       	ldi	r18, 0x0A	; 10
    158e:	30 e0       	ldi	r19, 0x00	; 0
    1590:	25 c0       	rjmp	.+74     	; 0x15dc <vfprintf+0x27c>
    1592:	f2 2f       	mov	r31, r18
    1594:	f9 7f       	andi	r31, 0xF9	; 249
    1596:	bf 2e       	mov	r11, r31
    1598:	8f 36       	cpi	r24, 0x6F	; 111
    159a:	c1 f0       	breq	.+48     	; 0x15cc <vfprintf+0x26c>
    159c:	18 f4       	brcc	.+6      	; 0x15a4 <vfprintf+0x244>
    159e:	88 35       	cpi	r24, 0x58	; 88
    15a0:	79 f0       	breq	.+30     	; 0x15c0 <vfprintf+0x260>
    15a2:	ad c0       	rjmp	.+346    	; 0x16fe <vfprintf+0x39e>
    15a4:	80 37       	cpi	r24, 0x70	; 112
    15a6:	19 f0       	breq	.+6      	; 0x15ae <vfprintf+0x24e>
    15a8:	88 37       	cpi	r24, 0x78	; 120
    15aa:	21 f0       	breq	.+8      	; 0x15b4 <vfprintf+0x254>
    15ac:	a8 c0       	rjmp	.+336    	; 0x16fe <vfprintf+0x39e>
    15ae:	2f 2f       	mov	r18, r31
    15b0:	20 61       	ori	r18, 0x10	; 16
    15b2:	b2 2e       	mov	r11, r18
    15b4:	b4 fe       	sbrs	r11, 4
    15b6:	0d c0       	rjmp	.+26     	; 0x15d2 <vfprintf+0x272>
    15b8:	8b 2d       	mov	r24, r11
    15ba:	84 60       	ori	r24, 0x04	; 4
    15bc:	b8 2e       	mov	r11, r24
    15be:	09 c0       	rjmp	.+18     	; 0x15d2 <vfprintf+0x272>
    15c0:	24 ff       	sbrs	r18, 4
    15c2:	0a c0       	rjmp	.+20     	; 0x15d8 <vfprintf+0x278>
    15c4:	9f 2f       	mov	r25, r31
    15c6:	96 60       	ori	r25, 0x06	; 6
    15c8:	b9 2e       	mov	r11, r25
    15ca:	06 c0       	rjmp	.+12     	; 0x15d8 <vfprintf+0x278>
    15cc:	28 e0       	ldi	r18, 0x08	; 8
    15ce:	30 e0       	ldi	r19, 0x00	; 0
    15d0:	05 c0       	rjmp	.+10     	; 0x15dc <vfprintf+0x27c>
    15d2:	20 e1       	ldi	r18, 0x10	; 16
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <vfprintf+0x27c>
    15d8:	20 e1       	ldi	r18, 0x10	; 16
    15da:	32 e0       	ldi	r19, 0x02	; 2
    15dc:	f8 01       	movw	r30, r16
    15de:	b7 fe       	sbrs	r11, 7
    15e0:	07 c0       	rjmp	.+14     	; 0x15f0 <vfprintf+0x290>
    15e2:	60 81       	ld	r22, Z
    15e4:	71 81       	ldd	r23, Z+1	; 0x01
    15e6:	82 81       	ldd	r24, Z+2	; 0x02
    15e8:	93 81       	ldd	r25, Z+3	; 0x03
    15ea:	0c 5f       	subi	r16, 0xFC	; 252
    15ec:	1f 4f       	sbci	r17, 0xFF	; 255
    15ee:	06 c0       	rjmp	.+12     	; 0x15fc <vfprintf+0x29c>
    15f0:	60 81       	ld	r22, Z
    15f2:	71 81       	ldd	r23, Z+1	; 0x01
    15f4:	80 e0       	ldi	r24, 0x00	; 0
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	0e 5f       	subi	r16, 0xFE	; 254
    15fa:	1f 4f       	sbci	r17, 0xFF	; 255
    15fc:	a4 01       	movw	r20, r8
    15fe:	2e d2       	rcall	.+1116   	; 0x1a5c <__ultoa_invert>
    1600:	a8 2e       	mov	r10, r24
    1602:	a8 18       	sub	r10, r8
    1604:	fb 2d       	mov	r31, r11
    1606:	ff 77       	andi	r31, 0x7F	; 127
    1608:	bf 2e       	mov	r11, r31
    160a:	b6 fe       	sbrs	r11, 6
    160c:	0b c0       	rjmp	.+22     	; 0x1624 <vfprintf+0x2c4>
    160e:	2b 2d       	mov	r18, r11
    1610:	2e 7f       	andi	r18, 0xFE	; 254
    1612:	a5 14       	cp	r10, r5
    1614:	50 f4       	brcc	.+20     	; 0x162a <vfprintf+0x2ca>
    1616:	b4 fe       	sbrs	r11, 4
    1618:	0a c0       	rjmp	.+20     	; 0x162e <vfprintf+0x2ce>
    161a:	b2 fc       	sbrc	r11, 2
    161c:	08 c0       	rjmp	.+16     	; 0x162e <vfprintf+0x2ce>
    161e:	2b 2d       	mov	r18, r11
    1620:	2e 7e       	andi	r18, 0xEE	; 238
    1622:	05 c0       	rjmp	.+10     	; 0x162e <vfprintf+0x2ce>
    1624:	7a 2c       	mov	r7, r10
    1626:	2b 2d       	mov	r18, r11
    1628:	03 c0       	rjmp	.+6      	; 0x1630 <vfprintf+0x2d0>
    162a:	7a 2c       	mov	r7, r10
    162c:	01 c0       	rjmp	.+2      	; 0x1630 <vfprintf+0x2d0>
    162e:	75 2c       	mov	r7, r5
    1630:	24 ff       	sbrs	r18, 4
    1632:	0d c0       	rjmp	.+26     	; 0x164e <vfprintf+0x2ee>
    1634:	fe 01       	movw	r30, r28
    1636:	ea 0d       	add	r30, r10
    1638:	f1 1d       	adc	r31, r1
    163a:	80 81       	ld	r24, Z
    163c:	80 33       	cpi	r24, 0x30	; 48
    163e:	11 f4       	brne	.+4      	; 0x1644 <vfprintf+0x2e4>
    1640:	29 7e       	andi	r18, 0xE9	; 233
    1642:	09 c0       	rjmp	.+18     	; 0x1656 <vfprintf+0x2f6>
    1644:	22 ff       	sbrs	r18, 2
    1646:	06 c0       	rjmp	.+12     	; 0x1654 <vfprintf+0x2f4>
    1648:	73 94       	inc	r7
    164a:	73 94       	inc	r7
    164c:	04 c0       	rjmp	.+8      	; 0x1656 <vfprintf+0x2f6>
    164e:	82 2f       	mov	r24, r18
    1650:	86 78       	andi	r24, 0x86	; 134
    1652:	09 f0       	breq	.+2      	; 0x1656 <vfprintf+0x2f6>
    1654:	73 94       	inc	r7
    1656:	23 fd       	sbrc	r18, 3
    1658:	12 c0       	rjmp	.+36     	; 0x167e <vfprintf+0x31e>
    165a:	20 ff       	sbrs	r18, 0
    165c:	06 c0       	rjmp	.+12     	; 0x166a <vfprintf+0x30a>
    165e:	5a 2c       	mov	r5, r10
    1660:	73 14       	cp	r7, r3
    1662:	18 f4       	brcc	.+6      	; 0x166a <vfprintf+0x30a>
    1664:	53 0c       	add	r5, r3
    1666:	57 18       	sub	r5, r7
    1668:	73 2c       	mov	r7, r3
    166a:	73 14       	cp	r7, r3
    166c:	60 f4       	brcc	.+24     	; 0x1686 <vfprintf+0x326>
    166e:	b7 01       	movw	r22, r14
    1670:	80 e2       	ldi	r24, 0x20	; 32
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	2c 87       	std	Y+12, r18	; 0x0c
    1676:	c0 d1       	rcall	.+896    	; 0x19f8 <fputc>
    1678:	73 94       	inc	r7
    167a:	2c 85       	ldd	r18, Y+12	; 0x0c
    167c:	f6 cf       	rjmp	.-20     	; 0x166a <vfprintf+0x30a>
    167e:	73 14       	cp	r7, r3
    1680:	10 f4       	brcc	.+4      	; 0x1686 <vfprintf+0x326>
    1682:	37 18       	sub	r3, r7
    1684:	01 c0       	rjmp	.+2      	; 0x1688 <vfprintf+0x328>
    1686:	31 2c       	mov	r3, r1
    1688:	24 ff       	sbrs	r18, 4
    168a:	11 c0       	rjmp	.+34     	; 0x16ae <vfprintf+0x34e>
    168c:	b7 01       	movw	r22, r14
    168e:	80 e3       	ldi	r24, 0x30	; 48
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	2c 87       	std	Y+12, r18	; 0x0c
    1694:	b1 d1       	rcall	.+866    	; 0x19f8 <fputc>
    1696:	2c 85       	ldd	r18, Y+12	; 0x0c
    1698:	22 ff       	sbrs	r18, 2
    169a:	16 c0       	rjmp	.+44     	; 0x16c8 <vfprintf+0x368>
    169c:	21 ff       	sbrs	r18, 1
    169e:	03 c0       	rjmp	.+6      	; 0x16a6 <vfprintf+0x346>
    16a0:	88 e5       	ldi	r24, 0x58	; 88
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	02 c0       	rjmp	.+4      	; 0x16aa <vfprintf+0x34a>
    16a6:	88 e7       	ldi	r24, 0x78	; 120
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	b7 01       	movw	r22, r14
    16ac:	0c c0       	rjmp	.+24     	; 0x16c6 <vfprintf+0x366>
    16ae:	82 2f       	mov	r24, r18
    16b0:	86 78       	andi	r24, 0x86	; 134
    16b2:	51 f0       	breq	.+20     	; 0x16c8 <vfprintf+0x368>
    16b4:	21 fd       	sbrc	r18, 1
    16b6:	02 c0       	rjmp	.+4      	; 0x16bc <vfprintf+0x35c>
    16b8:	80 e2       	ldi	r24, 0x20	; 32
    16ba:	01 c0       	rjmp	.+2      	; 0x16be <vfprintf+0x35e>
    16bc:	8b e2       	ldi	r24, 0x2B	; 43
    16be:	27 fd       	sbrc	r18, 7
    16c0:	8d e2       	ldi	r24, 0x2D	; 45
    16c2:	b7 01       	movw	r22, r14
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	98 d1       	rcall	.+816    	; 0x19f8 <fputc>
    16c8:	a5 14       	cp	r10, r5
    16ca:	30 f4       	brcc	.+12     	; 0x16d8 <vfprintf+0x378>
    16cc:	b7 01       	movw	r22, r14
    16ce:	80 e3       	ldi	r24, 0x30	; 48
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	92 d1       	rcall	.+804    	; 0x19f8 <fputc>
    16d4:	5a 94       	dec	r5
    16d6:	f8 cf       	rjmp	.-16     	; 0x16c8 <vfprintf+0x368>
    16d8:	aa 94       	dec	r10
    16da:	f4 01       	movw	r30, r8
    16dc:	ea 0d       	add	r30, r10
    16de:	f1 1d       	adc	r31, r1
    16e0:	80 81       	ld	r24, Z
    16e2:	b7 01       	movw	r22, r14
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	88 d1       	rcall	.+784    	; 0x19f8 <fputc>
    16e8:	a1 10       	cpse	r10, r1
    16ea:	f6 cf       	rjmp	.-20     	; 0x16d8 <vfprintf+0x378>
    16ec:	33 20       	and	r3, r3
    16ee:	09 f4       	brne	.+2      	; 0x16f2 <vfprintf+0x392>
    16f0:	5d ce       	rjmp	.-838    	; 0x13ac <vfprintf+0x4c>
    16f2:	b7 01       	movw	r22, r14
    16f4:	80 e2       	ldi	r24, 0x20	; 32
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	7f d1       	rcall	.+766    	; 0x19f8 <fputc>
    16fa:	3a 94       	dec	r3
    16fc:	f7 cf       	rjmp	.-18     	; 0x16ec <vfprintf+0x38c>
    16fe:	f7 01       	movw	r30, r14
    1700:	86 81       	ldd	r24, Z+6	; 0x06
    1702:	97 81       	ldd	r25, Z+7	; 0x07
    1704:	02 c0       	rjmp	.+4      	; 0x170a <vfprintf+0x3aa>
    1706:	8f ef       	ldi	r24, 0xFF	; 255
    1708:	9f ef       	ldi	r25, 0xFF	; 255
    170a:	2c 96       	adiw	r28, 0x0c	; 12
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	f8 94       	cli
    1710:	de bf       	out	0x3e, r29	; 62
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	cd bf       	out	0x3d, r28	; 61
    1716:	df 91       	pop	r29
    1718:	cf 91       	pop	r28
    171a:	1f 91       	pop	r17
    171c:	0f 91       	pop	r16
    171e:	ff 90       	pop	r15
    1720:	ef 90       	pop	r14
    1722:	df 90       	pop	r13
    1724:	cf 90       	pop	r12
    1726:	bf 90       	pop	r11
    1728:	af 90       	pop	r10
    172a:	9f 90       	pop	r9
    172c:	8f 90       	pop	r8
    172e:	7f 90       	pop	r7
    1730:	6f 90       	pop	r6
    1732:	5f 90       	pop	r5
    1734:	4f 90       	pop	r4
    1736:	3f 90       	pop	r3
    1738:	2f 90       	pop	r2
    173a:	08 95       	ret

0000173c <calloc>:
    173c:	0f 93       	push	r16
    173e:	1f 93       	push	r17
    1740:	cf 93       	push	r28
    1742:	df 93       	push	r29
    1744:	86 9f       	mul	r24, r22
    1746:	80 01       	movw	r16, r0
    1748:	87 9f       	mul	r24, r23
    174a:	10 0d       	add	r17, r0
    174c:	96 9f       	mul	r25, r22
    174e:	10 0d       	add	r17, r0
    1750:	11 24       	eor	r1, r1
    1752:	c8 01       	movw	r24, r16
    1754:	0d d0       	rcall	.+26     	; 0x1770 <malloc>
    1756:	ec 01       	movw	r28, r24
    1758:	00 97       	sbiw	r24, 0x00	; 0
    175a:	21 f0       	breq	.+8      	; 0x1764 <calloc+0x28>
    175c:	a8 01       	movw	r20, r16
    175e:	60 e0       	ldi	r22, 0x00	; 0
    1760:	70 e0       	ldi	r23, 0x00	; 0
    1762:	38 d1       	rcall	.+624    	; 0x19d4 <memset>
    1764:	ce 01       	movw	r24, r28
    1766:	df 91       	pop	r29
    1768:	cf 91       	pop	r28
    176a:	1f 91       	pop	r17
    176c:	0f 91       	pop	r16
    176e:	08 95       	ret

00001770 <malloc>:
    1770:	cf 93       	push	r28
    1772:	df 93       	push	r29
    1774:	82 30       	cpi	r24, 0x02	; 2
    1776:	91 05       	cpc	r25, r1
    1778:	10 f4       	brcc	.+4      	; 0x177e <malloc+0xe>
    177a:	82 e0       	ldi	r24, 0x02	; 2
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	e0 91 b5 02 	lds	r30, 0x02B5
    1782:	f0 91 b6 02 	lds	r31, 0x02B6
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	a0 e0       	ldi	r26, 0x00	; 0
    178c:	b0 e0       	ldi	r27, 0x00	; 0
    178e:	30 97       	sbiw	r30, 0x00	; 0
    1790:	39 f1       	breq	.+78     	; 0x17e0 <malloc+0x70>
    1792:	40 81       	ld	r20, Z
    1794:	51 81       	ldd	r21, Z+1	; 0x01
    1796:	48 17       	cp	r20, r24
    1798:	59 07       	cpc	r21, r25
    179a:	b8 f0       	brcs	.+46     	; 0x17ca <malloc+0x5a>
    179c:	48 17       	cp	r20, r24
    179e:	59 07       	cpc	r21, r25
    17a0:	71 f4       	brne	.+28     	; 0x17be <malloc+0x4e>
    17a2:	82 81       	ldd	r24, Z+2	; 0x02
    17a4:	93 81       	ldd	r25, Z+3	; 0x03
    17a6:	10 97       	sbiw	r26, 0x00	; 0
    17a8:	29 f0       	breq	.+10     	; 0x17b4 <malloc+0x44>
    17aa:	13 96       	adiw	r26, 0x03	; 3
    17ac:	9c 93       	st	X, r25
    17ae:	8e 93       	st	-X, r24
    17b0:	12 97       	sbiw	r26, 0x02	; 2
    17b2:	2c c0       	rjmp	.+88     	; 0x180c <malloc+0x9c>
    17b4:	90 93 b6 02 	sts	0x02B6, r25
    17b8:	80 93 b5 02 	sts	0x02B5, r24
    17bc:	27 c0       	rjmp	.+78     	; 0x180c <malloc+0x9c>
    17be:	21 15       	cp	r18, r1
    17c0:	31 05       	cpc	r19, r1
    17c2:	31 f0       	breq	.+12     	; 0x17d0 <malloc+0x60>
    17c4:	42 17       	cp	r20, r18
    17c6:	53 07       	cpc	r21, r19
    17c8:	18 f0       	brcs	.+6      	; 0x17d0 <malloc+0x60>
    17ca:	a9 01       	movw	r20, r18
    17cc:	db 01       	movw	r26, r22
    17ce:	01 c0       	rjmp	.+2      	; 0x17d2 <malloc+0x62>
    17d0:	ef 01       	movw	r28, r30
    17d2:	9a 01       	movw	r18, r20
    17d4:	bd 01       	movw	r22, r26
    17d6:	df 01       	movw	r26, r30
    17d8:	02 80       	ldd	r0, Z+2	; 0x02
    17da:	f3 81       	ldd	r31, Z+3	; 0x03
    17dc:	e0 2d       	mov	r30, r0
    17de:	d7 cf       	rjmp	.-82     	; 0x178e <malloc+0x1e>
    17e0:	21 15       	cp	r18, r1
    17e2:	31 05       	cpc	r19, r1
    17e4:	f9 f0       	breq	.+62     	; 0x1824 <malloc+0xb4>
    17e6:	28 1b       	sub	r18, r24
    17e8:	39 0b       	sbc	r19, r25
    17ea:	24 30       	cpi	r18, 0x04	; 4
    17ec:	31 05       	cpc	r19, r1
    17ee:	80 f4       	brcc	.+32     	; 0x1810 <malloc+0xa0>
    17f0:	8a 81       	ldd	r24, Y+2	; 0x02
    17f2:	9b 81       	ldd	r25, Y+3	; 0x03
    17f4:	61 15       	cp	r22, r1
    17f6:	71 05       	cpc	r23, r1
    17f8:	21 f0       	breq	.+8      	; 0x1802 <malloc+0x92>
    17fa:	fb 01       	movw	r30, r22
    17fc:	93 83       	std	Z+3, r25	; 0x03
    17fe:	82 83       	std	Z+2, r24	; 0x02
    1800:	04 c0       	rjmp	.+8      	; 0x180a <malloc+0x9a>
    1802:	90 93 b6 02 	sts	0x02B6, r25
    1806:	80 93 b5 02 	sts	0x02B5, r24
    180a:	fe 01       	movw	r30, r28
    180c:	32 96       	adiw	r30, 0x02	; 2
    180e:	44 c0       	rjmp	.+136    	; 0x1898 <malloc+0x128>
    1810:	fe 01       	movw	r30, r28
    1812:	e2 0f       	add	r30, r18
    1814:	f3 1f       	adc	r31, r19
    1816:	81 93       	st	Z+, r24
    1818:	91 93       	st	Z+, r25
    181a:	22 50       	subi	r18, 0x02	; 2
    181c:	31 09       	sbc	r19, r1
    181e:	39 83       	std	Y+1, r19	; 0x01
    1820:	28 83       	st	Y, r18
    1822:	3a c0       	rjmp	.+116    	; 0x1898 <malloc+0x128>
    1824:	20 91 b3 02 	lds	r18, 0x02B3
    1828:	30 91 b4 02 	lds	r19, 0x02B4
    182c:	23 2b       	or	r18, r19
    182e:	41 f4       	brne	.+16     	; 0x1840 <malloc+0xd0>
    1830:	20 91 02 02 	lds	r18, 0x0202
    1834:	30 91 03 02 	lds	r19, 0x0203
    1838:	30 93 b4 02 	sts	0x02B4, r19
    183c:	20 93 b3 02 	sts	0x02B3, r18
    1840:	20 91 00 02 	lds	r18, 0x0200
    1844:	30 91 01 02 	lds	r19, 0x0201
    1848:	21 15       	cp	r18, r1
    184a:	31 05       	cpc	r19, r1
    184c:	41 f4       	brne	.+16     	; 0x185e <malloc+0xee>
    184e:	2d b7       	in	r18, 0x3d	; 61
    1850:	3e b7       	in	r19, 0x3e	; 62
    1852:	40 91 04 02 	lds	r20, 0x0204
    1856:	50 91 05 02 	lds	r21, 0x0205
    185a:	24 1b       	sub	r18, r20
    185c:	35 0b       	sbc	r19, r21
    185e:	e0 91 b3 02 	lds	r30, 0x02B3
    1862:	f0 91 b4 02 	lds	r31, 0x02B4
    1866:	e2 17       	cp	r30, r18
    1868:	f3 07       	cpc	r31, r19
    186a:	a0 f4       	brcc	.+40     	; 0x1894 <malloc+0x124>
    186c:	2e 1b       	sub	r18, r30
    186e:	3f 0b       	sbc	r19, r31
    1870:	28 17       	cp	r18, r24
    1872:	39 07       	cpc	r19, r25
    1874:	78 f0       	brcs	.+30     	; 0x1894 <malloc+0x124>
    1876:	ac 01       	movw	r20, r24
    1878:	4e 5f       	subi	r20, 0xFE	; 254
    187a:	5f 4f       	sbci	r21, 0xFF	; 255
    187c:	24 17       	cp	r18, r20
    187e:	35 07       	cpc	r19, r21
    1880:	48 f0       	brcs	.+18     	; 0x1894 <malloc+0x124>
    1882:	4e 0f       	add	r20, r30
    1884:	5f 1f       	adc	r21, r31
    1886:	50 93 b4 02 	sts	0x02B4, r21
    188a:	40 93 b3 02 	sts	0x02B3, r20
    188e:	81 93       	st	Z+, r24
    1890:	91 93       	st	Z+, r25
    1892:	02 c0       	rjmp	.+4      	; 0x1898 <malloc+0x128>
    1894:	e0 e0       	ldi	r30, 0x00	; 0
    1896:	f0 e0       	ldi	r31, 0x00	; 0
    1898:	cf 01       	movw	r24, r30
    189a:	df 91       	pop	r29
    189c:	cf 91       	pop	r28
    189e:	08 95       	ret

000018a0 <free>:
    18a0:	cf 93       	push	r28
    18a2:	df 93       	push	r29
    18a4:	00 97       	sbiw	r24, 0x00	; 0
    18a6:	09 f4       	brne	.+2      	; 0x18aa <free+0xa>
    18a8:	87 c0       	rjmp	.+270    	; 0x19b8 <free+0x118>
    18aa:	fc 01       	movw	r30, r24
    18ac:	32 97       	sbiw	r30, 0x02	; 2
    18ae:	13 82       	std	Z+3, r1	; 0x03
    18b0:	12 82       	std	Z+2, r1	; 0x02
    18b2:	c0 91 b5 02 	lds	r28, 0x02B5
    18b6:	d0 91 b6 02 	lds	r29, 0x02B6
    18ba:	20 97       	sbiw	r28, 0x00	; 0
    18bc:	81 f4       	brne	.+32     	; 0x18de <free+0x3e>
    18be:	20 81       	ld	r18, Z
    18c0:	31 81       	ldd	r19, Z+1	; 0x01
    18c2:	28 0f       	add	r18, r24
    18c4:	39 1f       	adc	r19, r25
    18c6:	80 91 b3 02 	lds	r24, 0x02B3
    18ca:	90 91 b4 02 	lds	r25, 0x02B4
    18ce:	82 17       	cp	r24, r18
    18d0:	93 07       	cpc	r25, r19
    18d2:	79 f5       	brne	.+94     	; 0x1932 <free+0x92>
    18d4:	f0 93 b4 02 	sts	0x02B4, r31
    18d8:	e0 93 b3 02 	sts	0x02B3, r30
    18dc:	6d c0       	rjmp	.+218    	; 0x19b8 <free+0x118>
    18de:	de 01       	movw	r26, r28
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	ae 17       	cp	r26, r30
    18e6:	bf 07       	cpc	r27, r31
    18e8:	50 f4       	brcc	.+20     	; 0x18fe <free+0x5e>
    18ea:	12 96       	adiw	r26, 0x02	; 2
    18ec:	4d 91       	ld	r20, X+
    18ee:	5c 91       	ld	r21, X
    18f0:	13 97       	sbiw	r26, 0x03	; 3
    18f2:	9d 01       	movw	r18, r26
    18f4:	41 15       	cp	r20, r1
    18f6:	51 05       	cpc	r21, r1
    18f8:	09 f1       	breq	.+66     	; 0x193c <free+0x9c>
    18fa:	da 01       	movw	r26, r20
    18fc:	f3 cf       	rjmp	.-26     	; 0x18e4 <free+0x44>
    18fe:	b3 83       	std	Z+3, r27	; 0x03
    1900:	a2 83       	std	Z+2, r26	; 0x02
    1902:	40 81       	ld	r20, Z
    1904:	51 81       	ldd	r21, Z+1	; 0x01
    1906:	84 0f       	add	r24, r20
    1908:	95 1f       	adc	r25, r21
    190a:	8a 17       	cp	r24, r26
    190c:	9b 07       	cpc	r25, r27
    190e:	71 f4       	brne	.+28     	; 0x192c <free+0x8c>
    1910:	8d 91       	ld	r24, X+
    1912:	9c 91       	ld	r25, X
    1914:	11 97       	sbiw	r26, 0x01	; 1
    1916:	84 0f       	add	r24, r20
    1918:	95 1f       	adc	r25, r21
    191a:	02 96       	adiw	r24, 0x02	; 2
    191c:	91 83       	std	Z+1, r25	; 0x01
    191e:	80 83       	st	Z, r24
    1920:	12 96       	adiw	r26, 0x02	; 2
    1922:	8d 91       	ld	r24, X+
    1924:	9c 91       	ld	r25, X
    1926:	13 97       	sbiw	r26, 0x03	; 3
    1928:	93 83       	std	Z+3, r25	; 0x03
    192a:	82 83       	std	Z+2, r24	; 0x02
    192c:	21 15       	cp	r18, r1
    192e:	31 05       	cpc	r19, r1
    1930:	29 f4       	brne	.+10     	; 0x193c <free+0x9c>
    1932:	f0 93 b6 02 	sts	0x02B6, r31
    1936:	e0 93 b5 02 	sts	0x02B5, r30
    193a:	3e c0       	rjmp	.+124    	; 0x19b8 <free+0x118>
    193c:	d9 01       	movw	r26, r18
    193e:	13 96       	adiw	r26, 0x03	; 3
    1940:	fc 93       	st	X, r31
    1942:	ee 93       	st	-X, r30
    1944:	12 97       	sbiw	r26, 0x02	; 2
    1946:	4d 91       	ld	r20, X+
    1948:	5d 91       	ld	r21, X+
    194a:	a4 0f       	add	r26, r20
    194c:	b5 1f       	adc	r27, r21
    194e:	ea 17       	cp	r30, r26
    1950:	fb 07       	cpc	r31, r27
    1952:	79 f4       	brne	.+30     	; 0x1972 <free+0xd2>
    1954:	80 81       	ld	r24, Z
    1956:	91 81       	ldd	r25, Z+1	; 0x01
    1958:	84 0f       	add	r24, r20
    195a:	95 1f       	adc	r25, r21
    195c:	02 96       	adiw	r24, 0x02	; 2
    195e:	d9 01       	movw	r26, r18
    1960:	11 96       	adiw	r26, 0x01	; 1
    1962:	9c 93       	st	X, r25
    1964:	8e 93       	st	-X, r24
    1966:	82 81       	ldd	r24, Z+2	; 0x02
    1968:	93 81       	ldd	r25, Z+3	; 0x03
    196a:	13 96       	adiw	r26, 0x03	; 3
    196c:	9c 93       	st	X, r25
    196e:	8e 93       	st	-X, r24
    1970:	12 97       	sbiw	r26, 0x02	; 2
    1972:	e0 e0       	ldi	r30, 0x00	; 0
    1974:	f0 e0       	ldi	r31, 0x00	; 0
    1976:	8a 81       	ldd	r24, Y+2	; 0x02
    1978:	9b 81       	ldd	r25, Y+3	; 0x03
    197a:	00 97       	sbiw	r24, 0x00	; 0
    197c:	19 f0       	breq	.+6      	; 0x1984 <free+0xe4>
    197e:	fe 01       	movw	r30, r28
    1980:	ec 01       	movw	r28, r24
    1982:	f9 cf       	rjmp	.-14     	; 0x1976 <free+0xd6>
    1984:	ce 01       	movw	r24, r28
    1986:	02 96       	adiw	r24, 0x02	; 2
    1988:	28 81       	ld	r18, Y
    198a:	39 81       	ldd	r19, Y+1	; 0x01
    198c:	82 0f       	add	r24, r18
    198e:	93 1f       	adc	r25, r19
    1990:	20 91 b3 02 	lds	r18, 0x02B3
    1994:	30 91 b4 02 	lds	r19, 0x02B4
    1998:	28 17       	cp	r18, r24
    199a:	39 07       	cpc	r19, r25
    199c:	69 f4       	brne	.+26     	; 0x19b8 <free+0x118>
    199e:	30 97       	sbiw	r30, 0x00	; 0
    19a0:	29 f4       	brne	.+10     	; 0x19ac <free+0x10c>
    19a2:	10 92 b6 02 	sts	0x02B6, r1
    19a6:	10 92 b5 02 	sts	0x02B5, r1
    19aa:	02 c0       	rjmp	.+4      	; 0x19b0 <free+0x110>
    19ac:	13 82       	std	Z+3, r1	; 0x03
    19ae:	12 82       	std	Z+2, r1	; 0x02
    19b0:	d0 93 b4 02 	sts	0x02B4, r29
    19b4:	c0 93 b3 02 	sts	0x02B3, r28
    19b8:	df 91       	pop	r29
    19ba:	cf 91       	pop	r28
    19bc:	08 95       	ret

000019be <strnlen_P>:
    19be:	fc 01       	movw	r30, r24
    19c0:	05 90       	lpm	r0, Z+
    19c2:	61 50       	subi	r22, 0x01	; 1
    19c4:	70 40       	sbci	r23, 0x00	; 0
    19c6:	01 10       	cpse	r0, r1
    19c8:	d8 f7       	brcc	.-10     	; 0x19c0 <strnlen_P+0x2>
    19ca:	80 95       	com	r24
    19cc:	90 95       	com	r25
    19ce:	8e 0f       	add	r24, r30
    19d0:	9f 1f       	adc	r25, r31
    19d2:	08 95       	ret

000019d4 <memset>:
    19d4:	dc 01       	movw	r26, r24
    19d6:	01 c0       	rjmp	.+2      	; 0x19da <memset+0x6>
    19d8:	6d 93       	st	X+, r22
    19da:	41 50       	subi	r20, 0x01	; 1
    19dc:	50 40       	sbci	r21, 0x00	; 0
    19de:	e0 f7       	brcc	.-8      	; 0x19d8 <memset+0x4>
    19e0:	08 95       	ret

000019e2 <strnlen>:
    19e2:	fc 01       	movw	r30, r24
    19e4:	61 50       	subi	r22, 0x01	; 1
    19e6:	70 40       	sbci	r23, 0x00	; 0
    19e8:	01 90       	ld	r0, Z+
    19ea:	01 10       	cpse	r0, r1
    19ec:	d8 f7       	brcc	.-10     	; 0x19e4 <strnlen+0x2>
    19ee:	80 95       	com	r24
    19f0:	90 95       	com	r25
    19f2:	8e 0f       	add	r24, r30
    19f4:	9f 1f       	adc	r25, r31
    19f6:	08 95       	ret

000019f8 <fputc>:
    19f8:	0f 93       	push	r16
    19fa:	1f 93       	push	r17
    19fc:	cf 93       	push	r28
    19fe:	df 93       	push	r29
    1a00:	18 2f       	mov	r17, r24
    1a02:	09 2f       	mov	r16, r25
    1a04:	eb 01       	movw	r28, r22
    1a06:	8b 81       	ldd	r24, Y+3	; 0x03
    1a08:	81 fd       	sbrc	r24, 1
    1a0a:	03 c0       	rjmp	.+6      	; 0x1a12 <fputc+0x1a>
    1a0c:	8f ef       	ldi	r24, 0xFF	; 255
    1a0e:	9f ef       	ldi	r25, 0xFF	; 255
    1a10:	20 c0       	rjmp	.+64     	; 0x1a52 <fputc+0x5a>
    1a12:	82 ff       	sbrs	r24, 2
    1a14:	10 c0       	rjmp	.+32     	; 0x1a36 <fputc+0x3e>
    1a16:	4e 81       	ldd	r20, Y+6	; 0x06
    1a18:	5f 81       	ldd	r21, Y+7	; 0x07
    1a1a:	2c 81       	ldd	r18, Y+4	; 0x04
    1a1c:	3d 81       	ldd	r19, Y+5	; 0x05
    1a1e:	42 17       	cp	r20, r18
    1a20:	53 07       	cpc	r21, r19
    1a22:	7c f4       	brge	.+30     	; 0x1a42 <fputc+0x4a>
    1a24:	e8 81       	ld	r30, Y
    1a26:	f9 81       	ldd	r31, Y+1	; 0x01
    1a28:	9f 01       	movw	r18, r30
    1a2a:	2f 5f       	subi	r18, 0xFF	; 255
    1a2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2e:	39 83       	std	Y+1, r19	; 0x01
    1a30:	28 83       	st	Y, r18
    1a32:	10 83       	st	Z, r17
    1a34:	06 c0       	rjmp	.+12     	; 0x1a42 <fputc+0x4a>
    1a36:	e8 85       	ldd	r30, Y+8	; 0x08
    1a38:	f9 85       	ldd	r31, Y+9	; 0x09
    1a3a:	81 2f       	mov	r24, r17
    1a3c:	19 95       	eicall
    1a3e:	89 2b       	or	r24, r25
    1a40:	29 f7       	brne	.-54     	; 0x1a0c <fputc+0x14>
    1a42:	2e 81       	ldd	r18, Y+6	; 0x06
    1a44:	3f 81       	ldd	r19, Y+7	; 0x07
    1a46:	2f 5f       	subi	r18, 0xFF	; 255
    1a48:	3f 4f       	sbci	r19, 0xFF	; 255
    1a4a:	3f 83       	std	Y+7, r19	; 0x07
    1a4c:	2e 83       	std	Y+6, r18	; 0x06
    1a4e:	81 2f       	mov	r24, r17
    1a50:	90 2f       	mov	r25, r16
    1a52:	df 91       	pop	r29
    1a54:	cf 91       	pop	r28
    1a56:	1f 91       	pop	r17
    1a58:	0f 91       	pop	r16
    1a5a:	08 95       	ret

00001a5c <__ultoa_invert>:
    1a5c:	fa 01       	movw	r30, r20
    1a5e:	aa 27       	eor	r26, r26
    1a60:	28 30       	cpi	r18, 0x08	; 8
    1a62:	51 f1       	breq	.+84     	; 0x1ab8 <__ultoa_invert+0x5c>
    1a64:	20 31       	cpi	r18, 0x10	; 16
    1a66:	81 f1       	breq	.+96     	; 0x1ac8 <__ultoa_invert+0x6c>
    1a68:	e8 94       	clt
    1a6a:	6f 93       	push	r22
    1a6c:	6e 7f       	andi	r22, 0xFE	; 254
    1a6e:	6e 5f       	subi	r22, 0xFE	; 254
    1a70:	7f 4f       	sbci	r23, 0xFF	; 255
    1a72:	8f 4f       	sbci	r24, 0xFF	; 255
    1a74:	9f 4f       	sbci	r25, 0xFF	; 255
    1a76:	af 4f       	sbci	r26, 0xFF	; 255
    1a78:	b1 e0       	ldi	r27, 0x01	; 1
    1a7a:	3e d0       	rcall	.+124    	; 0x1af8 <__ultoa_invert+0x9c>
    1a7c:	b4 e0       	ldi	r27, 0x04	; 4
    1a7e:	3c d0       	rcall	.+120    	; 0x1af8 <__ultoa_invert+0x9c>
    1a80:	67 0f       	add	r22, r23
    1a82:	78 1f       	adc	r23, r24
    1a84:	89 1f       	adc	r24, r25
    1a86:	9a 1f       	adc	r25, r26
    1a88:	a1 1d       	adc	r26, r1
    1a8a:	68 0f       	add	r22, r24
    1a8c:	79 1f       	adc	r23, r25
    1a8e:	8a 1f       	adc	r24, r26
    1a90:	91 1d       	adc	r25, r1
    1a92:	a1 1d       	adc	r26, r1
    1a94:	6a 0f       	add	r22, r26
    1a96:	71 1d       	adc	r23, r1
    1a98:	81 1d       	adc	r24, r1
    1a9a:	91 1d       	adc	r25, r1
    1a9c:	a1 1d       	adc	r26, r1
    1a9e:	20 d0       	rcall	.+64     	; 0x1ae0 <__ultoa_invert+0x84>
    1aa0:	09 f4       	brne	.+2      	; 0x1aa4 <__ultoa_invert+0x48>
    1aa2:	68 94       	set
    1aa4:	3f 91       	pop	r19
    1aa6:	2a e0       	ldi	r18, 0x0A	; 10
    1aa8:	26 9f       	mul	r18, r22
    1aaa:	11 24       	eor	r1, r1
    1aac:	30 19       	sub	r19, r0
    1aae:	30 5d       	subi	r19, 0xD0	; 208
    1ab0:	31 93       	st	Z+, r19
    1ab2:	de f6       	brtc	.-74     	; 0x1a6a <__ultoa_invert+0xe>
    1ab4:	cf 01       	movw	r24, r30
    1ab6:	08 95       	ret
    1ab8:	46 2f       	mov	r20, r22
    1aba:	47 70       	andi	r20, 0x07	; 7
    1abc:	40 5d       	subi	r20, 0xD0	; 208
    1abe:	41 93       	st	Z+, r20
    1ac0:	b3 e0       	ldi	r27, 0x03	; 3
    1ac2:	0f d0       	rcall	.+30     	; 0x1ae2 <__ultoa_invert+0x86>
    1ac4:	c9 f7       	brne	.-14     	; 0x1ab8 <__ultoa_invert+0x5c>
    1ac6:	f6 cf       	rjmp	.-20     	; 0x1ab4 <__ultoa_invert+0x58>
    1ac8:	46 2f       	mov	r20, r22
    1aca:	4f 70       	andi	r20, 0x0F	; 15
    1acc:	40 5d       	subi	r20, 0xD0	; 208
    1ace:	4a 33       	cpi	r20, 0x3A	; 58
    1ad0:	18 f0       	brcs	.+6      	; 0x1ad8 <__ultoa_invert+0x7c>
    1ad2:	49 5d       	subi	r20, 0xD9	; 217
    1ad4:	31 fd       	sbrc	r19, 1
    1ad6:	40 52       	subi	r20, 0x20	; 32
    1ad8:	41 93       	st	Z+, r20
    1ada:	02 d0       	rcall	.+4      	; 0x1ae0 <__ultoa_invert+0x84>
    1adc:	a9 f7       	brne	.-22     	; 0x1ac8 <__ultoa_invert+0x6c>
    1ade:	ea cf       	rjmp	.-44     	; 0x1ab4 <__ultoa_invert+0x58>
    1ae0:	b4 e0       	ldi	r27, 0x04	; 4
    1ae2:	a6 95       	lsr	r26
    1ae4:	97 95       	ror	r25
    1ae6:	87 95       	ror	r24
    1ae8:	77 95       	ror	r23
    1aea:	67 95       	ror	r22
    1aec:	ba 95       	dec	r27
    1aee:	c9 f7       	brne	.-14     	; 0x1ae2 <__ultoa_invert+0x86>
    1af0:	00 97       	sbiw	r24, 0x00	; 0
    1af2:	61 05       	cpc	r22, r1
    1af4:	71 05       	cpc	r23, r1
    1af6:	08 95       	ret
    1af8:	9b 01       	movw	r18, r22
    1afa:	ac 01       	movw	r20, r24
    1afc:	0a 2e       	mov	r0, r26
    1afe:	06 94       	lsr	r0
    1b00:	57 95       	ror	r21
    1b02:	47 95       	ror	r20
    1b04:	37 95       	ror	r19
    1b06:	27 95       	ror	r18
    1b08:	ba 95       	dec	r27
    1b0a:	c9 f7       	brne	.-14     	; 0x1afe <__ultoa_invert+0xa2>
    1b0c:	62 0f       	add	r22, r18
    1b0e:	73 1f       	adc	r23, r19
    1b10:	84 1f       	adc	r24, r20
    1b12:	95 1f       	adc	r25, r21
    1b14:	a0 1d       	adc	r26, r0
    1b16:	08 95       	ret

00001b18 <_exit>:
    1b18:	f8 94       	cli

00001b1a <__stop_program>:
    1b1a:	ff cf       	rjmp	.-2      	; 0x1b1a <__stop_program>
