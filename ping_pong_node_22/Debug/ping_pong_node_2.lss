
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800200  00001324  000013b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001324  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800298  00800298  00001450  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000140  00000000  00000000  000014ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001412  00000000  00000000  000015ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000974  00000000  00000000  000029fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a4e  00000000  00000000  00003372  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000330  00000000  00000000  00003dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000045b  00000000  00000000  000040f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a24  00000000  00000000  0000454b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  00004f6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e4 e2       	ldi	r30, 0x24	; 36
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 39       	cpi	r26, 0x98	; 152
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a8 e9       	ldi	r26, 0x98	; 152
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 3a       	cpi	r26, 0xA2	; 162
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	f3 d0       	rcall	.+486    	; 0x306 <main>
     120:	0c 94 90 09 	jmp	0x1320	; 0x1320 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <can_init>:
		printf("can message send %d", msg->data[i]);
	}
	printf("\n\r");
	mcp2515_request(MCP_RTS_TX0);
	//Do something...
}
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	2a 97       	sbiw	r28, 0x0a	; 10
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
     13a:	21 d1       	rcall	.+578    	; 0x37e <mcp2515_init>
     13c:	41 e0       	ldi	r20, 0x01	; 1
     13e:	60 e6       	ldi	r22, 0x60	; 96
     140:	80 e6       	ldi	r24, 0x60	; 96
     142:	3f d1       	rcall	.+638    	; 0x3c2 <mcp2515_write>
     144:	8f ef       	ldi	r24, 0xFF	; 255
     146:	9f e8       	ldi	r25, 0x8F	; 143
     148:	01 97       	sbiw	r24, 0x01	; 1
     14a:	f1 f7       	brne	.-4      	; 0x148 <can_init+0x22>
     14c:	00 c0       	rjmp	.+0      	; 0x14e <can_init+0x28>
     14e:	00 00       	nop
     150:	41 e0       	ldi	r20, 0x01	; 1
     152:	61 e0       	ldi	r22, 0x01	; 1
     154:	8b e2       	ldi	r24, 0x2B	; 43
     156:	4b d1       	rcall	.+662    	; 0x3ee <mcp2515_bit_modify>
     158:	8f ef       	ldi	r24, 0xFF	; 255
     15a:	9f e8       	ldi	r25, 0x8F	; 143
     15c:	01 97       	sbiw	r24, 0x01	; 1
     15e:	f1 f7       	brne	.-4      	; 0x15c <can_init+0x36>
     160:	00 c0       	rjmp	.+0      	; 0x162 <can_init+0x3c>
     162:	00 00       	nop
     164:	40 e0       	ldi	r20, 0x00	; 0
     166:	60 ee       	ldi	r22, 0xE0	; 224
     168:	8f e0       	ldi	r24, 0x0F	; 15
     16a:	41 d1       	rcall	.+642    	; 0x3ee <mcp2515_bit_modify>
     16c:	8f ef       	ldi	r24, 0xFF	; 255
     16e:	9f e8       	ldi	r25, 0x8F	; 143
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <can_init+0x4a>
     174:	00 c0       	rjmp	.+0      	; 0x176 <can_init+0x50>
     176:	00 00       	nop
     178:	4a e0       	ldi	r20, 0x0A	; 10
     17a:	be 01       	movw	r22, r28
     17c:	6f 5f       	subi	r22, 0xFF	; 255
     17e:	7f 4f       	sbci	r23, 0xFF	; 255
     180:	8e e0       	ldi	r24, 0x0E	; 14
     182:	00 d1       	rcall	.+512    	; 0x384 <mcp2515_read>
     184:	89 81       	ldd	r24, Y+1	; 0x01
     186:	80 7e       	andi	r24, 0xE0	; 224
     188:	99 f0       	breq	.+38     	; 0x1b0 <can_init+0x8a>
     18a:	1f 92       	push	r1
     18c:	8f 93       	push	r24
     18e:	86 e0       	ldi	r24, 0x06	; 6
     190:	92 e0       	ldi	r25, 0x02	; 2
     192:	9f 93       	push	r25
     194:	8f 93       	push	r24
     196:	aa d4       	rcall	.+2388   	; 0xaec <printf>
     198:	8f e7       	ldi	r24, 0x7F	; 127
     19a:	92 e0       	ldi	r25, 0x02	; 2
     19c:	9f 93       	push	r25
     19e:	8f 93       	push	r24
     1a0:	a5 d4       	rcall	.+2378   	; 0xaec <printf>
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	0f 90       	pop	r0
     1ae:	07 c0       	rjmp	.+14     	; 0x1be <can_init+0x98>
     1b0:	8a e4       	ldi	r24, 0x4A	; 74
     1b2:	92 e0       	ldi	r25, 0x02	; 2
     1b4:	9f 93       	push	r25
     1b6:	8f 93       	push	r24
     1b8:	99 d4       	rcall	.+2354   	; 0xaec <printf>
     1ba:	0f 90       	pop	r0
     1bc:	0f 90       	pop	r0
     1be:	2a 96       	adiw	r28, 0x0a	; 10
     1c0:	0f b6       	in	r0, 0x3f	; 63
     1c2:	f8 94       	cli
     1c4:	de bf       	out	0x3e, r29	; 62
     1c6:	0f be       	out	0x3f, r0	; 63
     1c8:	cd bf       	out	0x3d, r28	; 61
     1ca:	df 91       	pop	r29
     1cc:	cf 91       	pop	r28
     1ce:	08 95       	ret

000001d0 <can_data_receive>:
{
	
}
*/
void can_data_receive(struct can_message* msg, int buffer)
{
     1d0:	ff 92       	push	r15
     1d2:	0f 93       	push	r16
     1d4:	1f 93       	push	r17
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
     1de:	2a 97       	sbiw	r28, 0x0a	; 10
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	8c 01       	movw	r16, r24
     1ec:	f6 2e       	mov	r15, r22
	uint8_t result[MAX_CAN_LENGTH];
	
		
	mcp2515_read(MCP_CANINTF, result, 1);
     1ee:	41 e0       	ldi	r20, 0x01	; 1
     1f0:	be 01       	movw	r22, r28
     1f2:	6f 5f       	subi	r22, 0xFF	; 255
     1f4:	7f 4f       	sbci	r23, 0xFF	; 255
     1f6:	8c e2       	ldi	r24, 0x2C	; 44
     1f8:	c5 d0       	rcall	.+394    	; 0x384 <mcp2515_read>

	if (!result[0]){
     1fa:	89 81       	ldd	r24, Y+1	; 0x01
     1fc:	81 11       	cpse	r24, r1
     1fe:	0b c0       	rjmp	.+22     	; 0x216 <can_data_receive+0x46>
		printf("CANINTF out %d \n\r", result[0] & 0b1);
     200:	1f 92       	push	r1
     202:	1f 92       	push	r1
     204:	20 e7       	ldi	r18, 0x70	; 112
     206:	32 e0       	ldi	r19, 0x02	; 2
     208:	3f 93       	push	r19
     20a:	2f 93       	push	r18
     20c:	6f d4       	rcall	.+2270   	; 0xaec <printf>
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	0f 90       	pop	r0
     214:	0f 90       	pop	r0
	}
	
	uint8_t i;
	
	mcp2515_read(MCP_RXB0DLC + buffer, result, 1);
     216:	41 e0       	ldi	r20, 0x01	; 1
     218:	be 01       	movw	r22, r28
     21a:	6f 5f       	subi	r22, 0xFF	; 255
     21c:	7f 4f       	sbci	r23, 0xFF	; 255
     21e:	85 e6       	ldi	r24, 0x65	; 101
     220:	8f 0d       	add	r24, r15
     222:	b0 d0       	rcall	.+352    	; 0x384 <mcp2515_read>
	msg->length = result[0];
     224:	89 81       	ldd	r24, Y+1	; 0x01
     226:	f8 01       	movw	r30, r16
     228:	82 83       	std	Z+2, r24	; 0x02
	
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
     22a:	41 e0       	ldi	r20, 0x01	; 1
     22c:	be 01       	movw	r22, r28
     22e:	6f 5f       	subi	r22, 0xFF	; 255
     230:	7f 4f       	sbci	r23, 0xFF	; 255
     232:	81 e6       	ldi	r24, 0x61	; 97
     234:	8f 0d       	add	r24, r15
     236:	a6 d0       	rcall	.+332    	; 0x384 <mcp2515_read>
	msg->id = result[0];
     238:	29 81       	ldd	r18, Y+1	; 0x01
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f8 01       	movw	r30, r16
     23e:	31 83       	std	Z+1, r19	; 0x01
     240:	20 83       	st	Z, r18
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
     242:	42 81       	ldd	r20, Z+2	; 0x02
     244:	be 01       	movw	r22, r28
     246:	6f 5f       	subi	r22, 0xFF	; 255
     248:	7f 4f       	sbci	r23, 0xFF	; 255
     24a:	86 e6       	ldi	r24, 0x66	; 102
     24c:	8f 0d       	add	r24, r15
     24e:	9a d0       	rcall	.+308    	; 0x384 <mcp2515_read>
	
	for (i = 0; i < msg->length; i++)
     250:	f8 01       	movw	r30, r16
     252:	92 81       	ldd	r25, Z+2	; 0x02
     254:	99 23       	and	r25, r25
     256:	61 f0       	breq	.+24     	; 0x270 <can_data_receive+0xa0>
     258:	9e 01       	movw	r18, r28
     25a:	2f 5f       	subi	r18, 0xFF	; 255
     25c:	3f 4f       	sbci	r19, 0xFF	; 255
     25e:	d8 01       	movw	r26, r16
     260:	13 96       	adiw	r26, 0x03	; 3
     262:	f9 01       	movw	r30, r18
	{
		msg->data[i] = result[i];
     264:	81 91       	ld	r24, Z+
     266:	8d 93       	st	X+, r24
     268:	8e 2f       	mov	r24, r30
     26a:	82 1b       	sub	r24, r18
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
	msg->id = result[0];
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
	
	for (i = 0; i < msg->length; i++)
     26c:	89 17       	cp	r24, r25
     26e:	d0 f3       	brcs	.-12     	; 0x264 <can_data_receive+0x94>
		msg->data[i] = result[i];
		//printf("can messsage received %c", msg->data[i]);
	}
	//printf("\n\r");
	
	mcp2515_bit_modify(MCP_CANINTF, 0x01, 0x00);
     270:	40 e0       	ldi	r20, 0x00	; 0
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	8c e2       	ldi	r24, 0x2C	; 44
     276:	bb d0       	rcall	.+374    	; 0x3ee <mcp2515_bit_modify>
}
     278:	2a 96       	adiw	r28, 0x0a	; 10
     27a:	0f b6       	in	r0, 0x3f	; 63
     27c:	f8 94       	cli
     27e:	de bf       	out	0x3e, r29	; 62
     280:	0f be       	out	0x3f, r0	; 63
     282:	cd bf       	out	0x3d, r28	; 61
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	1f 91       	pop	r17
     28a:	0f 91       	pop	r16
     28c:	ff 90       	pop	r15
     28e:	08 95       	ret

00000290 <can_get_message>:

int can_get_message(struct can_message* message)
{
     290:	0f 93       	push	r16
     292:	1f 93       	push	r17
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62
     29c:	2a 97       	sbiw	r28, 0x0a	; 10
     29e:	0f b6       	in	r0, 0x3f	; 63
     2a0:	f8 94       	cli
     2a2:	de bf       	out	0x3e, r29	; 62
     2a4:	0f be       	out	0x3f, r0	; 63
     2a6:	cd bf       	out	0x3d, r28	; 61
     2a8:	8c 01       	movw	r16, r24
	uint8_t result[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANINTF, result, 1);
     2aa:	41 e0       	ldi	r20, 0x01	; 1
     2ac:	be 01       	movw	r22, r28
     2ae:	6f 5f       	subi	r22, 0xFF	; 255
     2b0:	7f 4f       	sbci	r23, 0xFF	; 255
     2b2:	8c e2       	ldi	r24, 0x2C	; 44
     2b4:	67 d0       	rcall	.+206    	; 0x384 <mcp2515_read>

	
	if ((result[0] & 0x01) == 0x01)
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	80 ff       	sbrs	r24, 0
     2ba:	0b c0       	rjmp	.+22     	; 0x2d2 <can_get_message+0x42>
	{
		can_data_receive(message,0);
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	c8 01       	movw	r24, r16
     2c2:	86 df       	rcall	.-244    	; 0x1d0 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     2c4:	40 e0       	ldi	r20, 0x00	; 0
     2c6:	61 e0       	ldi	r22, 0x01	; 1
     2c8:	8c e2       	ldi	r24, 0x2C	; 44
     2ca:	91 d0       	rcall	.+290    	; 0x3ee <mcp2515_bit_modify>
		return 1;
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	0f c0       	rjmp	.+30     	; 0x2f0 <can_get_message+0x60>
	}
	else if ((result[0] & 0x02) == 0x02)
     2d2:	81 ff       	sbrs	r24, 1
     2d4:	0b c0       	rjmp	.+22     	; 0x2ec <can_get_message+0x5c>
	{
		can_data_receive(message,1);
     2d6:	61 e0       	ldi	r22, 0x01	; 1
     2d8:	70 e0       	ldi	r23, 0x00	; 0
     2da:	c8 01       	movw	r24, r16
     2dc:	79 df       	rcall	.-270    	; 0x1d0 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
     2de:	40 e0       	ldi	r20, 0x00	; 0
     2e0:	62 e0       	ldi	r22, 0x02	; 2
     2e2:	8c e2       	ldi	r24, 0x2C	; 44
     2e4:	84 d0       	rcall	.+264    	; 0x3ee <mcp2515_bit_modify>
		return 1;
     2e6:	81 e0       	ldi	r24, 0x01	; 1
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <can_get_message+0x60>
	}
	else
	{
		return 0;
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     2f0:	2a 96       	adiw	r28, 0x0a	; 10
     2f2:	0f b6       	in	r0, 0x3f	; 63
     2f4:	f8 94       	cli
     2f6:	de bf       	out	0x3e, r29	; 62
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	cd bf       	out	0x3d, r28	; 61
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	1f 91       	pop	r17
     302:	0f 91       	pop	r16
     304:	08 95       	ret

00000306 <main>:
#include "can_controller.h"
#include "spi.h"
#include "pwm.h"


int main(void){
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
     30a:	cd b7       	in	r28, 0x3d	; 61
     30c:	de b7       	in	r29, 0x3e	; 62
     30e:	2d 97       	sbiw	r28, 0x0d	; 13
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	f8 94       	cli
     314:	de bf       	out	0x3e, r29	; 62
     316:	0f be       	out	0x3f, r0	; 63
     318:	cd bf       	out	0x3d, r28	; 61
	
	USART_Init(MYUBRR);
     31a:	87 e6       	ldi	r24, 0x67	; 103
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	71 d1       	rcall	.+738    	; 0x602 <USART_Init>
	printf("start \n\r \n");
     320:	82 e8       	ldi	r24, 0x82	; 130
     322:	92 e0       	ldi	r25, 0x02	; 2
     324:	f4 d3       	rcall	.+2024   	; 0xb0e <puts>
	
	can_init();
     326:	ff de       	rcall	.-514    	; 0x126 <can_init>
	message.length = 1;
	message.data[0] = (uint8_t) 'c';
	
	
	struct can_message message2;
	message2.id = 3;
     328:	83 e0       	ldi	r24, 0x03	; 3
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	9a 83       	std	Y+2, r25	; 0x02
     32e:	89 83       	std	Y+1, r24	; 0x01
	message2.length = 1;
     330:	81 e0       	ldi	r24, 0x01	; 1
     332:	8b 83       	std	Y+3, r24	; 0x03
	printf("In the main received %c \n\r \n\r", message2.data[0]);
	*/
	int i = 4;
	char joy_equivalence[5][40] = {"Left", "Right", "Up", "Down", "Neutral"};
	
	pwm_init();	
     334:	86 d0       	rcall	.+268    	; 0x442 <pwm_init>
	//pwm_set_pulse_width(50000);	
	float pw = 1600;

    while(1)
    {
		if(can_get_message(&message2)){
     336:	ce 01       	movw	r24, r28
     338:	01 96       	adiw	r24, 0x01	; 1
     33a:	aa df       	rcall	.-172    	; 0x290 <can_get_message>
     33c:	89 2b       	or	r24, r25
     33e:	39 f0       	breq	.+14     	; 0x34e <main+0x48>
			
			//printf("Atmega2560 received a new message %d \n \r \n\r", message2.data[0]);
			
				
			pw = (float) message2.data[0];
     340:	6c 81       	ldd	r22, Y+4	; 0x04
     342:	70 e0       	ldi	r23, 0x00	; 0
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	6e d2       	rcall	.+1244   	; 0x826 <__floatunsisf>
			pw = pwm_scale_joystick_val(pw);
     34a:	fd d0       	rcall	.+506    	; 0x546 <pwm_scale_joystick_val>
			pwm_set_pulse_width(pw);
     34c:	a6 d0       	rcall	.+332    	; 0x49a <pwm_set_pulse_width>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     34e:	83 ed       	ldi	r24, 0xD3	; 211
     350:	90 e3       	ldi	r25, 0x30	; 48
     352:	01 97       	sbiw	r24, 0x01	; 1
     354:	f1 f7       	brne	.-4      	; 0x352 <main+0x4c>
     356:	00 c0       	rjmp	.+0      	; 0x358 <main+0x52>
     358:	00 00       	nop
     35a:	ed cf       	rjmp	.-38     	; 0x336 <main+0x30>

0000035c <mcp2515_reset>:
		
	uint8_t cmd[] = {rqs};
	spi_write(cmd, 1);		
	
	PORTB |= (1<<PB7); // Deselect CAN-controller
}
     35c:	cf 93       	push	r28
     35e:	df 93       	push	r29
     360:	1f 92       	push	r1
     362:	cd b7       	in	r28, 0x3d	; 61
     364:	de b7       	in	r29, 0x3e	; 62
     366:	2f 98       	cbi	0x05, 7	; 5
     368:	80 ec       	ldi	r24, 0xC0	; 192
     36a:	89 83       	std	Y+1, r24	; 0x01
     36c:	61 e0       	ldi	r22, 0x01	; 1
     36e:	ce 01       	movw	r24, r28
     370:	01 96       	adiw	r24, 0x01	; 1
     372:	23 d1       	rcall	.+582    	; 0x5ba <spi_write>
     374:	2f 9a       	sbi	0x05, 7	; 5
     376:	0f 90       	pop	r0
     378:	df 91       	pop	r29
     37a:	cf 91       	pop	r28
     37c:	08 95       	ret

0000037e <mcp2515_init>:
     37e:	ee d0       	rcall	.+476    	; 0x55c <spi_init>
     380:	ed cf       	rjmp	.-38     	; 0x35c <mcp2515_reset>
     382:	08 95       	ret

00000384 <mcp2515_read>:
     384:	ff 92       	push	r15
     386:	0f 93       	push	r16
     388:	1f 93       	push	r17
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	1f 92       	push	r1
     390:	1f 92       	push	r1
     392:	cd b7       	in	r28, 0x3d	; 61
     394:	de b7       	in	r29, 0x3e	; 62
     396:	8b 01       	movw	r16, r22
     398:	f4 2e       	mov	r15, r20
     39a:	2f 98       	cbi	0x05, 7	; 5
     39c:	93 e0       	ldi	r25, 0x03	; 3
     39e:	99 83       	std	Y+1, r25	; 0x01
     3a0:	8a 83       	std	Y+2, r24	; 0x02
     3a2:	62 e0       	ldi	r22, 0x02	; 2
     3a4:	ce 01       	movw	r24, r28
     3a6:	01 96       	adiw	r24, 0x01	; 1
     3a8:	08 d1       	rcall	.+528    	; 0x5ba <spi_write>
     3aa:	6f 2d       	mov	r22, r15
     3ac:	c8 01       	movw	r24, r16
     3ae:	df d0       	rcall	.+446    	; 0x56e <spi_read>
     3b0:	2f 9a       	sbi	0x05, 7	; 5
     3b2:	0f 90       	pop	r0
     3b4:	0f 90       	pop	r0
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	08 95       	ret

000003c2 <mcp2515_write>:
     3c2:	cf 93       	push	r28
     3c4:	df 93       	push	r29
     3c6:	00 d0       	rcall	.+0      	; 0x3c8 <mcp2515_write+0x6>
     3c8:	cd b7       	in	r28, 0x3d	; 61
     3ca:	de b7       	in	r29, 0x3e	; 62
     3cc:	2f 98       	cbi	0x05, 7	; 5
     3ce:	92 e0       	ldi	r25, 0x02	; 2
     3d0:	99 83       	std	Y+1, r25	; 0x01
     3d2:	8a 83       	std	Y+2, r24	; 0x02
     3d4:	6b 83       	std	Y+3, r22	; 0x03
     3d6:	62 e0       	ldi	r22, 0x02	; 2
     3d8:	64 0f       	add	r22, r20
     3da:	ce 01       	movw	r24, r28
     3dc:	01 96       	adiw	r24, 0x01	; 1
     3de:	ed d0       	rcall	.+474    	; 0x5ba <spi_write>
     3e0:	2f 9a       	sbi	0x05, 7	; 5
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	0f 90       	pop	r0
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	08 95       	ret

000003ee <mcp2515_bit_modify>:

// Modify bits in the register / See datasheet 12.10
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data) 
{
     3ee:	cf 93       	push	r28
     3f0:	df 93       	push	r29
     3f2:	00 d0       	rcall	.+0      	; 0x3f4 <mcp2515_bit_modify+0x6>
     3f4:	1f 92       	push	r1
     3f6:	cd b7       	in	r28, 0x3d	; 61
     3f8:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PB7); // Select CAN-controller
     3fa:	2f 98       	cbi	0x05, 7	; 5
	//SPSR &= ~(1 << SPIF);	

	uint8_t bit_list[] = {MCP_BITMOD, address, mask, data};
     3fc:	95 e0       	ldi	r25, 0x05	; 5
     3fe:	99 83       	std	Y+1, r25	; 0x01
     400:	8a 83       	std	Y+2, r24	; 0x02
     402:	6b 83       	std	Y+3, r22	; 0x03
     404:	4c 83       	std	Y+4, r20	; 0x04
	spi_write(bit_list, 4);	
     406:	64 e0       	ldi	r22, 0x04	; 4
     408:	ce 01       	movw	r24, r28
     40a:	01 96       	adiw	r24, 0x01	; 1
     40c:	d6 d0       	rcall	.+428    	; 0x5ba <spi_write>
	
	PORTB |= (1<<PB7); //Deselect CAN-controller
     40e:	2f 9a       	sbi	0x05, 7	; 5

}
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
     418:	df 91       	pop	r29
     41a:	cf 91       	pop	r28
     41c:	08 95       	ret

0000041e <pwm_set_signal_period>:
	
}

void pwm_set_signal_period(){
	//prescale
	set_bit(TCCR1B, CS11);
     41e:	e1 e8       	ldi	r30, 0x81	; 129
     420:	f0 e0       	ldi	r31, 0x00	; 0
     422:	80 81       	ld	r24, Z
     424:	82 60       	ori	r24, 0x02	; 2
     426:	80 83       	st	Z, r24
	clear_bit(TCCR1B, CS12);
     428:	80 81       	ld	r24, Z
     42a:	8b 7f       	andi	r24, 0xFB	; 251
     42c:	80 83       	st	Z, r24
	clear_bit(TCCR1B, CS10);
     42e:	80 81       	ld	r24, Z
     430:	8e 7f       	andi	r24, 0xFE	; 254
     432:	80 83       	st	Z, r24
	
	ICR1 = TOP_VALUE;	//set period to 20ms
     434:	80 e4       	ldi	r24, 0x40	; 64
     436:	9c e9       	ldi	r25, 0x9C	; 156
     438:	90 93 87 00 	sts	0x0087, r25
     43c:	80 93 86 00 	sts	0x0086, r24
     440:	08 95       	ret

00000442 <pwm_init>:
#define  TOP_VALUE FOSC/8/50


void pwm_init(){
	// set mode to fast pwm
	set_bit(TCCR1B, WGM13);
     442:	e1 e8       	ldi	r30, 0x81	; 129
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	80 81       	ld	r24, Z
     448:	80 61       	ori	r24, 0x10	; 16
     44a:	80 83       	st	Z, r24
	set_bit(TCCR1B, WGM12);
     44c:	80 81       	ld	r24, Z
     44e:	88 60       	ori	r24, 0x08	; 8
     450:	80 83       	st	Z, r24
	set_bit(TCCR1A, WGM11);
     452:	e0 e8       	ldi	r30, 0x80	; 128
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	80 81       	ld	r24, Z
     458:	82 60       	ori	r24, 0x02	; 2
     45a:	80 83       	st	Z, r24
	clear_bit(TCCR1A, WGM10);
     45c:	80 81       	ld	r24, Z
     45e:	8e 7f       	andi	r24, 0xFE	; 254
     460:	80 83       	st	Z, r24
	
	//set output on PB5 to compare
	set_bit(TCCR1A, COM1A1);
     462:	80 81       	ld	r24, Z
     464:	80 68       	ori	r24, 0x80	; 128
     466:	80 83       	st	Z, r24
	clear_bit(TCCR1A, COM1A0);
     468:	80 81       	ld	r24, Z
     46a:	8f 7b       	andi	r24, 0xBF	; 191
     46c:	80 83       	st	Z, r24
	pwm_set_signal_period();
     46e:	d7 df       	rcall	.-82     	; 0x41e <pwm_set_signal_period>
	
	//set PB5 to output mode
	set_bit(DDRB, PB5);
     470:	25 9a       	sbi	0x04, 5	; 4
void pwm_set_pulse_width(float pulse_width){
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
	if (pulse_width>2100.0){pulse_width=2100.0;}	
	int pulse = (int) (pulse_width/20000*TOP_VALUE);	//pw*2
	OCR1A = pulse;
     472:	e8 e8       	ldi	r30, 0x88	; 136
     474:	f0 e0       	ldi	r31, 0x00	; 0
     476:	88 eb       	ldi	r24, 0xB8	; 184
     478:	9b e0       	ldi	r25, 0x0B	; 11
     47a:	91 83       	std	Z+1, r25	; 0x01
     47c:	80 83       	st	Z, r24
	
	printf("OCR1A: %d\n\r",  OCR1A);
     47e:	80 81       	ld	r24, Z
     480:	91 81       	ldd	r25, Z+1	; 0x01
     482:	9f 93       	push	r25
     484:	8f 93       	push	r24
     486:	8c e8       	ldi	r24, 0x8C	; 140
     488:	92 e0       	ldi	r25, 0x02	; 2
     48a:	9f 93       	push	r25
     48c:	8f 93       	push	r24
     48e:	2e d3       	rcall	.+1628   	; 0xaec <printf>
     490:	0f 90       	pop	r0
     492:	0f 90       	pop	r0
     494:	0f 90       	pop	r0
     496:	0f 90       	pop	r0
     498:	08 95       	ret

0000049a <pwm_set_pulse_width>:
	
	ICR1 = TOP_VALUE;	//set period to 20ms
	//ICR1 = 1250;
}

void pwm_set_pulse_width(float pulse_width){
     49a:	cf 92       	push	r12
     49c:	df 92       	push	r13
     49e:	ef 92       	push	r14
     4a0:	ff 92       	push	r15
     4a2:	6b 01       	movw	r12, r22
     4a4:	7c 01       	movw	r14, r24
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	41 e6       	ldi	r20, 0x61	; 97
     4ac:	54 e4       	ldi	r21, 0x44	; 68
     4ae:	1e d1       	rcall	.+572    	; 0x6ec <__cmpsf2>
     4b0:	88 23       	and	r24, r24
     4b2:	54 f0       	brlt	.+20     	; 0x4c8 <pwm_set_pulse_width+0x2e>
	if (pulse_width>2100.0){pulse_width=2100.0;}	
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e4       	ldi	r19, 0x40	; 64
     4b8:	43 e0       	ldi	r20, 0x03	; 3
     4ba:	55 e4       	ldi	r21, 0x45	; 69
     4bc:	c7 01       	movw	r24, r14
     4be:	b6 01       	movw	r22, r12
     4c0:	64 d2       	rcall	.+1224   	; 0x98a <__gesf2>
     4c2:	18 16       	cp	r1, r24
     4c4:	54 f0       	brlt	.+20     	; 0x4da <pwm_set_pulse_width+0x40>
     4c6:	12 c0       	rjmp	.+36     	; 0x4ec <pwm_set_pulse_width+0x52>
	//ICR1 = 1250;
}

void pwm_set_pulse_width(float pulse_width){
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
     4c8:	0f 2e       	mov	r0, r31
     4ca:	c1 2c       	mov	r12, r1
     4cc:	d1 2c       	mov	r13, r1
     4ce:	f1 e6       	ldi	r31, 0x61	; 97
     4d0:	ef 2e       	mov	r14, r31
     4d2:	f4 e4       	ldi	r31, 0x44	; 68
     4d4:	ff 2e       	mov	r15, r31
     4d6:	f0 2d       	mov	r31, r0
     4d8:	09 c0       	rjmp	.+18     	; 0x4ec <pwm_set_pulse_width+0x52>
	if (pulse_width>2100.0){pulse_width=2100.0;}	
     4da:	0f 2e       	mov	r0, r31
     4dc:	c1 2c       	mov	r12, r1
     4de:	f0 e4       	ldi	r31, 0x40	; 64
     4e0:	df 2e       	mov	r13, r31
     4e2:	f3 e0       	ldi	r31, 0x03	; 3
     4e4:	ef 2e       	mov	r14, r31
     4e6:	f5 e4       	ldi	r31, 0x45	; 69
     4e8:	ff 2e       	mov	r15, r31
     4ea:	f0 2d       	mov	r31, r0
	int pulse = (int) (pulse_width/20000*TOP_VALUE);	//pw*2
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	30 e4       	ldi	r19, 0x40	; 64
     4f0:	4c e9       	ldi	r20, 0x9C	; 156
     4f2:	56 e4       	ldi	r21, 0x46	; 70
     4f4:	c7 01       	movw	r24, r14
     4f6:	b6 01       	movw	r22, r12
     4f8:	fd d0       	rcall	.+506    	; 0x6f4 <__divsf3>
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	34 e2       	ldi	r19, 0x24	; 36
     4fe:	44 e7       	ldi	r20, 0x74	; 116
     500:	5b e4       	ldi	r21, 0x4B	; 75
     502:	47 d2       	rcall	.+1166   	; 0x992 <__mulsf3>
     504:	20 e0       	ldi	r18, 0x00	; 0
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	40 e0       	ldi	r20, 0x00	; 0
     50a:	5e e3       	ldi	r21, 0x3E	; 62
     50c:	42 d2       	rcall	.+1156   	; 0x992 <__mulsf3>
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	48 e4       	ldi	r20, 0x48	; 72
     514:	52 e4       	ldi	r21, 0x42	; 66
     516:	ee d0       	rcall	.+476    	; 0x6f4 <__divsf3>
     518:	55 d1       	rcall	.+682    	; 0x7c4 <__fixsfsi>
	OCR1A = pulse;
     51a:	e8 e8       	ldi	r30, 0x88	; 136
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	71 83       	std	Z+1, r23	; 0x01
     520:	60 83       	st	Z, r22
	
	printf("OCR1A: %d\n\r",  OCR1A);
     522:	80 81       	ld	r24, Z
     524:	91 81       	ldd	r25, Z+1	; 0x01
     526:	9f 93       	push	r25
     528:	8f 93       	push	r24
     52a:	8c e8       	ldi	r24, 0x8C	; 140
     52c:	92 e0       	ldi	r25, 0x02	; 2
     52e:	9f 93       	push	r25
     530:	8f 93       	push	r24
     532:	dc d2       	rcall	.+1464   	; 0xaec <printf>
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0
	
	//OCR1A = 1150;
}
     53c:	ff 90       	pop	r15
     53e:	ef 90       	pop	r14
     540:	df 90       	pop	r13
     542:	cf 90       	pop	r12
     544:	08 95       	ret

00000546 <pwm_scale_joystick_val>:

float pwm_scale_joystick_val(float x_val){
		return (x_val*4.7059+900);	
     546:	2c eb       	ldi	r18, 0xBC	; 188
     548:	36 e9       	ldi	r19, 0x96	; 150
     54a:	46 e9       	ldi	r20, 0x96	; 150
     54c:	50 e4       	ldi	r21, 0x40	; 64
     54e:	21 d2       	rcall	.+1090   	; 0x992 <__mulsf3>
     550:	20 e0       	ldi	r18, 0x00	; 0
     552:	30 e0       	ldi	r19, 0x00	; 0
     554:	41 e6       	ldi	r20, 0x61	; 97
     556:	54 e4       	ldi	r21, 0x44	; 68
     558:	65 c0       	rjmp	.+202    	; 0x624 <__addsf3>
     55a:	08 95       	ret

0000055c <spi_init>:
#define MISO_PIN PB3

void spi_init() {

  /* Set MOSI and SCK and CS output, all others input */
  DDRB |= (1 << MOSI_PIN) | (1 << SCK_PIN) | (1 << SS_PIN) | (1 << PB0);
     55c:	84 b1       	in	r24, 0x04	; 4
     55e:	87 68       	ori	r24, 0x87	; 135
     560:	84 b9       	out	0x04, r24	; 4
  PORTB |= (1 << SS_PIN) | (1 << PB0); // Set Master mode
     562:	85 b1       	in	r24, 0x05	; 5
     564:	81 68       	ori	r24, 0x81	; 129
     566:	85 b9       	out	0x05, r24	; 5
  /* Enable interrupt */
  // SPSR = (1<<SPIF);

  /* Enable SPI interrupt, SPI, Master, set clock rate fck/16 , SPI mode 0 by
   * default*/
  SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     568:	81 e5       	ldi	r24, 0x51	; 81
     56a:	8c bd       	out	0x2c, r24	; 44
     56c:	08 95       	ret

0000056e <spi_read>:
}

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
     572:	cd b7       	in	r28, 0x3d	; 61
     574:	de b7       	in	r29, 0x3e	; 62
     576:	2a 97       	sbiw	r28, 0x0a	; 10
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	f8 94       	cli
     57c:	de bf       	out	0x3e, r29	; 62
     57e:	0f be       	out	0x3f, r0	; 63
     580:	cd bf       	out	0x3d, r28	; 61
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     582:	66 23       	and	r22, r22
     584:	89 f0       	breq	.+34     	; 0x5a8 <spi_read+0x3a>
     586:	fe 01       	movw	r30, r28
     588:	31 96       	adiw	r30, 0x01	; 1
     58a:	a8 2f       	mov	r26, r24
     58c:	b9 2f       	mov	r27, r25
     58e:	cf 01       	movw	r24, r30
     590:	86 0f       	add	r24, r22
     592:	91 1d       	adc	r25, r1
	{
		SPDR = dummy_data[i];
     594:	21 91       	ld	r18, Z+
     596:	2e bd       	out	0x2e, r18	; 46
		int j = 0;
		while (!(SPSR & (1 << SPIF))){
     598:	0d b4       	in	r0, 0x2d	; 45
     59a:	07 fe       	sbrs	r0, 7
     59c:	fd cf       	rjmp	.-6      	; 0x598 <spi_read+0x2a>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
     59e:	2e b5       	in	r18, 0x2e	; 46
     5a0:	2d 93       	st	X+, r18

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     5a2:	e8 17       	cp	r30, r24
     5a4:	f9 07       	cpc	r31, r25
     5a6:	b1 f7       	brne	.-20     	; 0x594 <spi_read+0x26>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
	}
	
}
     5a8:	2a 96       	adiw	r28, 0x0a	; 10
     5aa:	0f b6       	in	r0, 0x3f	; 63
     5ac:	f8 94       	cli
     5ae:	de bf       	out	0x3e, r29	; 62
     5b0:	0f be       	out	0x3f, r0	; 63
     5b2:	cd bf       	out	0x3d, r28	; 61
     5b4:	df 91       	pop	r29
     5b6:	cf 91       	pop	r28
     5b8:	08 95       	ret

000005ba <spi_write>:

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     5ba:	26 2f       	mov	r18, r22
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	12 16       	cp	r1, r18
     5c0:	13 06       	cpc	r1, r19
     5c2:	74 f4       	brge	.+28     	; 0x5e0 <spi_write+0x26>
     5c4:	e8 2f       	mov	r30, r24
     5c6:	f9 2f       	mov	r31, r25
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	90 e0       	ldi	r25, 0x00	; 0
	{
		SPDR = send_data[i];
     5cc:	41 91       	ld	r20, Z+
     5ce:	4e bd       	out	0x2e, r20	; 46
		while (!(SPSR & (1 << SPIF)));
     5d0:	0d b4       	in	r0, 0x2d	; 45
     5d2:	07 fe       	sbrs	r0, 7
     5d4:	fd cf       	rjmp	.-6      	; 0x5d0 <spi_write+0x16>
		dummy_data[i] = SPDR;
     5d6:	4e b5       	in	r20, 0x2e	; 46
}

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     5d8:	01 96       	adiw	r24, 0x01	; 1
     5da:	82 17       	cp	r24, r18
     5dc:	93 07       	cpc	r25, r19
     5de:	b4 f3       	brlt	.-20     	; 0x5cc <spi_write+0x12>
     5e0:	08 95       	ret

000005e2 <USART_Transmit>:
     5e2:	e0 ec       	ldi	r30, 0xC0	; 192
     5e4:	f0 e0       	ldi	r31, 0x00	; 0
     5e6:	90 81       	ld	r25, Z
     5e8:	95 ff       	sbrs	r25, 5
     5ea:	fd cf       	rjmp	.-6      	; 0x5e6 <USART_Transmit+0x4>
     5ec:	80 93 c6 00 	sts	0x00C6, r24
     5f0:	08 95       	ret

000005f2 <USART_Receive>:
     5f2:	e0 ec       	ldi	r30, 0xC0	; 192
     5f4:	f0 e0       	ldi	r31, 0x00	; 0
     5f6:	80 81       	ld	r24, Z
     5f8:	88 23       	and	r24, r24
     5fa:	ec f3       	brlt	.-6      	; 0x5f6 <USART_Receive+0x4>
     5fc:	80 91 c6 00 	lds	r24, 0x00C6
     600:	08 95       	ret

00000602 <USART_Init>:
     602:	90 93 c5 00 	sts	0x00C5, r25
     606:	80 93 c4 00 	sts	0x00C4, r24
     60a:	88 e1       	ldi	r24, 0x18	; 24
     60c:	80 93 c1 00 	sts	0x00C1, r24
     610:	8e e0       	ldi	r24, 0x0E	; 14
     612:	80 93 c2 00 	sts	0x00C2, r24
     616:	69 ef       	ldi	r22, 0xF9	; 249
     618:	72 e0       	ldi	r23, 0x02	; 2
     61a:	81 ef       	ldi	r24, 0xF1	; 241
     61c:	92 e0       	ldi	r25, 0x02	; 2
     61e:	1c c2       	rjmp	.+1080   	; 0xa58 <fdevopen>
     620:	08 95       	ret

00000622 <__subsf3>:
     622:	50 58       	subi	r21, 0x80	; 128

00000624 <__addsf3>:
     624:	bb 27       	eor	r27, r27
     626:	aa 27       	eor	r26, r26
     628:	0e d0       	rcall	.+28     	; 0x646 <__addsf3x>
     62a:	75 c1       	rjmp	.+746    	; 0x916 <__fp_round>
     62c:	66 d1       	rcall	.+716    	; 0x8fa <__fp_pscA>
     62e:	30 f0       	brcs	.+12     	; 0x63c <__addsf3+0x18>
     630:	6b d1       	rcall	.+726    	; 0x908 <__fp_pscB>
     632:	20 f0       	brcs	.+8      	; 0x63c <__addsf3+0x18>
     634:	31 f4       	brne	.+12     	; 0x642 <__addsf3+0x1e>
     636:	9f 3f       	cpi	r25, 0xFF	; 255
     638:	11 f4       	brne	.+4      	; 0x63e <__addsf3+0x1a>
     63a:	1e f4       	brtc	.+6      	; 0x642 <__addsf3+0x1e>
     63c:	5b c1       	rjmp	.+694    	; 0x8f4 <__fp_nan>
     63e:	0e f4       	brtc	.+2      	; 0x642 <__addsf3+0x1e>
     640:	e0 95       	com	r30
     642:	e7 fb       	bst	r30, 7
     644:	51 c1       	rjmp	.+674    	; 0x8e8 <__fp_inf>

00000646 <__addsf3x>:
     646:	e9 2f       	mov	r30, r25
     648:	77 d1       	rcall	.+750    	; 0x938 <__fp_split3>
     64a:	80 f3       	brcs	.-32     	; 0x62c <__addsf3+0x8>
     64c:	ba 17       	cp	r27, r26
     64e:	62 07       	cpc	r22, r18
     650:	73 07       	cpc	r23, r19
     652:	84 07       	cpc	r24, r20
     654:	95 07       	cpc	r25, r21
     656:	18 f0       	brcs	.+6      	; 0x65e <__addsf3x+0x18>
     658:	71 f4       	brne	.+28     	; 0x676 <__addsf3x+0x30>
     65a:	9e f5       	brtc	.+102    	; 0x6c2 <__addsf3x+0x7c>
     65c:	8f c1       	rjmp	.+798    	; 0x97c <__fp_zero>
     65e:	0e f4       	brtc	.+2      	; 0x662 <__addsf3x+0x1c>
     660:	e0 95       	com	r30
     662:	0b 2e       	mov	r0, r27
     664:	ba 2f       	mov	r27, r26
     666:	a0 2d       	mov	r26, r0
     668:	0b 01       	movw	r0, r22
     66a:	b9 01       	movw	r22, r18
     66c:	90 01       	movw	r18, r0
     66e:	0c 01       	movw	r0, r24
     670:	ca 01       	movw	r24, r20
     672:	a0 01       	movw	r20, r0
     674:	11 24       	eor	r1, r1
     676:	ff 27       	eor	r31, r31
     678:	59 1b       	sub	r21, r25
     67a:	99 f0       	breq	.+38     	; 0x6a2 <__addsf3x+0x5c>
     67c:	59 3f       	cpi	r21, 0xF9	; 249
     67e:	50 f4       	brcc	.+20     	; 0x694 <__addsf3x+0x4e>
     680:	50 3e       	cpi	r21, 0xE0	; 224
     682:	68 f1       	brcs	.+90     	; 0x6de <__addsf3x+0x98>
     684:	1a 16       	cp	r1, r26
     686:	f0 40       	sbci	r31, 0x00	; 0
     688:	a2 2f       	mov	r26, r18
     68a:	23 2f       	mov	r18, r19
     68c:	34 2f       	mov	r19, r20
     68e:	44 27       	eor	r20, r20
     690:	58 5f       	subi	r21, 0xF8	; 248
     692:	f3 cf       	rjmp	.-26     	; 0x67a <__addsf3x+0x34>
     694:	46 95       	lsr	r20
     696:	37 95       	ror	r19
     698:	27 95       	ror	r18
     69a:	a7 95       	ror	r26
     69c:	f0 40       	sbci	r31, 0x00	; 0
     69e:	53 95       	inc	r21
     6a0:	c9 f7       	brne	.-14     	; 0x694 <__addsf3x+0x4e>
     6a2:	7e f4       	brtc	.+30     	; 0x6c2 <__addsf3x+0x7c>
     6a4:	1f 16       	cp	r1, r31
     6a6:	ba 0b       	sbc	r27, r26
     6a8:	62 0b       	sbc	r22, r18
     6aa:	73 0b       	sbc	r23, r19
     6ac:	84 0b       	sbc	r24, r20
     6ae:	ba f0       	brmi	.+46     	; 0x6de <__addsf3x+0x98>
     6b0:	91 50       	subi	r25, 0x01	; 1
     6b2:	a1 f0       	breq	.+40     	; 0x6dc <__addsf3x+0x96>
     6b4:	ff 0f       	add	r31, r31
     6b6:	bb 1f       	adc	r27, r27
     6b8:	66 1f       	adc	r22, r22
     6ba:	77 1f       	adc	r23, r23
     6bc:	88 1f       	adc	r24, r24
     6be:	c2 f7       	brpl	.-16     	; 0x6b0 <__addsf3x+0x6a>
     6c0:	0e c0       	rjmp	.+28     	; 0x6de <__addsf3x+0x98>
     6c2:	ba 0f       	add	r27, r26
     6c4:	62 1f       	adc	r22, r18
     6c6:	73 1f       	adc	r23, r19
     6c8:	84 1f       	adc	r24, r20
     6ca:	48 f4       	brcc	.+18     	; 0x6de <__addsf3x+0x98>
     6cc:	87 95       	ror	r24
     6ce:	77 95       	ror	r23
     6d0:	67 95       	ror	r22
     6d2:	b7 95       	ror	r27
     6d4:	f7 95       	ror	r31
     6d6:	9e 3f       	cpi	r25, 0xFE	; 254
     6d8:	08 f0       	brcs	.+2      	; 0x6dc <__addsf3x+0x96>
     6da:	b3 cf       	rjmp	.-154    	; 0x642 <__addsf3+0x1e>
     6dc:	93 95       	inc	r25
     6de:	88 0f       	add	r24, r24
     6e0:	08 f0       	brcs	.+2      	; 0x6e4 <__addsf3x+0x9e>
     6e2:	99 27       	eor	r25, r25
     6e4:	ee 0f       	add	r30, r30
     6e6:	97 95       	ror	r25
     6e8:	87 95       	ror	r24
     6ea:	08 95       	ret

000006ec <__cmpsf2>:
     6ec:	d9 d0       	rcall	.+434    	; 0x8a0 <__fp_cmp>
     6ee:	08 f4       	brcc	.+2      	; 0x6f2 <__cmpsf2+0x6>
     6f0:	81 e0       	ldi	r24, 0x01	; 1
     6f2:	08 95       	ret

000006f4 <__divsf3>:
     6f4:	0c d0       	rcall	.+24     	; 0x70e <__divsf3x>
     6f6:	0f c1       	rjmp	.+542    	; 0x916 <__fp_round>
     6f8:	07 d1       	rcall	.+526    	; 0x908 <__fp_pscB>
     6fa:	40 f0       	brcs	.+16     	; 0x70c <__divsf3+0x18>
     6fc:	fe d0       	rcall	.+508    	; 0x8fa <__fp_pscA>
     6fe:	30 f0       	brcs	.+12     	; 0x70c <__divsf3+0x18>
     700:	21 f4       	brne	.+8      	; 0x70a <__divsf3+0x16>
     702:	5f 3f       	cpi	r21, 0xFF	; 255
     704:	19 f0       	breq	.+6      	; 0x70c <__divsf3+0x18>
     706:	f0 c0       	rjmp	.+480    	; 0x8e8 <__fp_inf>
     708:	51 11       	cpse	r21, r1
     70a:	39 c1       	rjmp	.+626    	; 0x97e <__fp_szero>
     70c:	f3 c0       	rjmp	.+486    	; 0x8f4 <__fp_nan>

0000070e <__divsf3x>:
     70e:	14 d1       	rcall	.+552    	; 0x938 <__fp_split3>
     710:	98 f3       	brcs	.-26     	; 0x6f8 <__divsf3+0x4>

00000712 <__divsf3_pse>:
     712:	99 23       	and	r25, r25
     714:	c9 f3       	breq	.-14     	; 0x708 <__divsf3+0x14>
     716:	55 23       	and	r21, r21
     718:	b1 f3       	breq	.-20     	; 0x706 <__divsf3+0x12>
     71a:	95 1b       	sub	r25, r21
     71c:	55 0b       	sbc	r21, r21
     71e:	bb 27       	eor	r27, r27
     720:	aa 27       	eor	r26, r26
     722:	62 17       	cp	r22, r18
     724:	73 07       	cpc	r23, r19
     726:	84 07       	cpc	r24, r20
     728:	38 f0       	brcs	.+14     	; 0x738 <__divsf3_pse+0x26>
     72a:	9f 5f       	subi	r25, 0xFF	; 255
     72c:	5f 4f       	sbci	r21, 0xFF	; 255
     72e:	22 0f       	add	r18, r18
     730:	33 1f       	adc	r19, r19
     732:	44 1f       	adc	r20, r20
     734:	aa 1f       	adc	r26, r26
     736:	a9 f3       	breq	.-22     	; 0x722 <__divsf3_pse+0x10>
     738:	33 d0       	rcall	.+102    	; 0x7a0 <__divsf3_pse+0x8e>
     73a:	0e 2e       	mov	r0, r30
     73c:	3a f0       	brmi	.+14     	; 0x74c <__divsf3_pse+0x3a>
     73e:	e0 e8       	ldi	r30, 0x80	; 128
     740:	30 d0       	rcall	.+96     	; 0x7a2 <__divsf3_pse+0x90>
     742:	91 50       	subi	r25, 0x01	; 1
     744:	50 40       	sbci	r21, 0x00	; 0
     746:	e6 95       	lsr	r30
     748:	00 1c       	adc	r0, r0
     74a:	ca f7       	brpl	.-14     	; 0x73e <__divsf3_pse+0x2c>
     74c:	29 d0       	rcall	.+82     	; 0x7a0 <__divsf3_pse+0x8e>
     74e:	fe 2f       	mov	r31, r30
     750:	27 d0       	rcall	.+78     	; 0x7a0 <__divsf3_pse+0x8e>
     752:	66 0f       	add	r22, r22
     754:	77 1f       	adc	r23, r23
     756:	88 1f       	adc	r24, r24
     758:	bb 1f       	adc	r27, r27
     75a:	26 17       	cp	r18, r22
     75c:	37 07       	cpc	r19, r23
     75e:	48 07       	cpc	r20, r24
     760:	ab 07       	cpc	r26, r27
     762:	b0 e8       	ldi	r27, 0x80	; 128
     764:	09 f0       	breq	.+2      	; 0x768 <__divsf3_pse+0x56>
     766:	bb 0b       	sbc	r27, r27
     768:	80 2d       	mov	r24, r0
     76a:	bf 01       	movw	r22, r30
     76c:	ff 27       	eor	r31, r31
     76e:	93 58       	subi	r25, 0x83	; 131
     770:	5f 4f       	sbci	r21, 0xFF	; 255
     772:	2a f0       	brmi	.+10     	; 0x77e <__divsf3_pse+0x6c>
     774:	9e 3f       	cpi	r25, 0xFE	; 254
     776:	51 05       	cpc	r21, r1
     778:	68 f0       	brcs	.+26     	; 0x794 <__divsf3_pse+0x82>
     77a:	b6 c0       	rjmp	.+364    	; 0x8e8 <__fp_inf>
     77c:	00 c1       	rjmp	.+512    	; 0x97e <__fp_szero>
     77e:	5f 3f       	cpi	r21, 0xFF	; 255
     780:	ec f3       	brlt	.-6      	; 0x77c <__divsf3_pse+0x6a>
     782:	98 3e       	cpi	r25, 0xE8	; 232
     784:	dc f3       	brlt	.-10     	; 0x77c <__divsf3_pse+0x6a>
     786:	86 95       	lsr	r24
     788:	77 95       	ror	r23
     78a:	67 95       	ror	r22
     78c:	b7 95       	ror	r27
     78e:	f7 95       	ror	r31
     790:	9f 5f       	subi	r25, 0xFF	; 255
     792:	c9 f7       	brne	.-14     	; 0x786 <__divsf3_pse+0x74>
     794:	88 0f       	add	r24, r24
     796:	91 1d       	adc	r25, r1
     798:	96 95       	lsr	r25
     79a:	87 95       	ror	r24
     79c:	97 f9       	bld	r25, 7
     79e:	08 95       	ret
     7a0:	e1 e0       	ldi	r30, 0x01	; 1
     7a2:	66 0f       	add	r22, r22
     7a4:	77 1f       	adc	r23, r23
     7a6:	88 1f       	adc	r24, r24
     7a8:	bb 1f       	adc	r27, r27
     7aa:	62 17       	cp	r22, r18
     7ac:	73 07       	cpc	r23, r19
     7ae:	84 07       	cpc	r24, r20
     7b0:	ba 07       	cpc	r27, r26
     7b2:	20 f0       	brcs	.+8      	; 0x7bc <__divsf3_pse+0xaa>
     7b4:	62 1b       	sub	r22, r18
     7b6:	73 0b       	sbc	r23, r19
     7b8:	84 0b       	sbc	r24, r20
     7ba:	ba 0b       	sbc	r27, r26
     7bc:	ee 1f       	adc	r30, r30
     7be:	88 f7       	brcc	.-30     	; 0x7a2 <__divsf3_pse+0x90>
     7c0:	e0 95       	com	r30
     7c2:	08 95       	ret

000007c4 <__fixsfsi>:
     7c4:	04 d0       	rcall	.+8      	; 0x7ce <__fixunssfsi>
     7c6:	68 94       	set
     7c8:	b1 11       	cpse	r27, r1
     7ca:	d9 c0       	rjmp	.+434    	; 0x97e <__fp_szero>
     7cc:	08 95       	ret

000007ce <__fixunssfsi>:
     7ce:	bc d0       	rcall	.+376    	; 0x948 <__fp_splitA>
     7d0:	88 f0       	brcs	.+34     	; 0x7f4 <__fixunssfsi+0x26>
     7d2:	9f 57       	subi	r25, 0x7F	; 127
     7d4:	90 f0       	brcs	.+36     	; 0x7fa <__fixunssfsi+0x2c>
     7d6:	b9 2f       	mov	r27, r25
     7d8:	99 27       	eor	r25, r25
     7da:	b7 51       	subi	r27, 0x17	; 23
     7dc:	a0 f0       	brcs	.+40     	; 0x806 <__fixunssfsi+0x38>
     7de:	d1 f0       	breq	.+52     	; 0x814 <__fixunssfsi+0x46>
     7e0:	66 0f       	add	r22, r22
     7e2:	77 1f       	adc	r23, r23
     7e4:	88 1f       	adc	r24, r24
     7e6:	99 1f       	adc	r25, r25
     7e8:	1a f0       	brmi	.+6      	; 0x7f0 <__fixunssfsi+0x22>
     7ea:	ba 95       	dec	r27
     7ec:	c9 f7       	brne	.-14     	; 0x7e0 <__fixunssfsi+0x12>
     7ee:	12 c0       	rjmp	.+36     	; 0x814 <__fixunssfsi+0x46>
     7f0:	b1 30       	cpi	r27, 0x01	; 1
     7f2:	81 f0       	breq	.+32     	; 0x814 <__fixunssfsi+0x46>
     7f4:	c3 d0       	rcall	.+390    	; 0x97c <__fp_zero>
     7f6:	b1 e0       	ldi	r27, 0x01	; 1
     7f8:	08 95       	ret
     7fa:	c0 c0       	rjmp	.+384    	; 0x97c <__fp_zero>
     7fc:	67 2f       	mov	r22, r23
     7fe:	78 2f       	mov	r23, r24
     800:	88 27       	eor	r24, r24
     802:	b8 5f       	subi	r27, 0xF8	; 248
     804:	39 f0       	breq	.+14     	; 0x814 <__fixunssfsi+0x46>
     806:	b9 3f       	cpi	r27, 0xF9	; 249
     808:	cc f3       	brlt	.-14     	; 0x7fc <__fixunssfsi+0x2e>
     80a:	86 95       	lsr	r24
     80c:	77 95       	ror	r23
     80e:	67 95       	ror	r22
     810:	b3 95       	inc	r27
     812:	d9 f7       	brne	.-10     	; 0x80a <__fixunssfsi+0x3c>
     814:	3e f4       	brtc	.+14     	; 0x824 <__fixunssfsi+0x56>
     816:	90 95       	com	r25
     818:	80 95       	com	r24
     81a:	70 95       	com	r23
     81c:	61 95       	neg	r22
     81e:	7f 4f       	sbci	r23, 0xFF	; 255
     820:	8f 4f       	sbci	r24, 0xFF	; 255
     822:	9f 4f       	sbci	r25, 0xFF	; 255
     824:	08 95       	ret

00000826 <__floatunsisf>:
     826:	e8 94       	clt
     828:	09 c0       	rjmp	.+18     	; 0x83c <__floatsisf+0x12>

0000082a <__floatsisf>:
     82a:	97 fb       	bst	r25, 7
     82c:	3e f4       	brtc	.+14     	; 0x83c <__floatsisf+0x12>
     82e:	90 95       	com	r25
     830:	80 95       	com	r24
     832:	70 95       	com	r23
     834:	61 95       	neg	r22
     836:	7f 4f       	sbci	r23, 0xFF	; 255
     838:	8f 4f       	sbci	r24, 0xFF	; 255
     83a:	9f 4f       	sbci	r25, 0xFF	; 255
     83c:	99 23       	and	r25, r25
     83e:	a9 f0       	breq	.+42     	; 0x86a <__floatsisf+0x40>
     840:	f9 2f       	mov	r31, r25
     842:	96 e9       	ldi	r25, 0x96	; 150
     844:	bb 27       	eor	r27, r27
     846:	93 95       	inc	r25
     848:	f6 95       	lsr	r31
     84a:	87 95       	ror	r24
     84c:	77 95       	ror	r23
     84e:	67 95       	ror	r22
     850:	b7 95       	ror	r27
     852:	f1 11       	cpse	r31, r1
     854:	f8 cf       	rjmp	.-16     	; 0x846 <__floatsisf+0x1c>
     856:	fa f4       	brpl	.+62     	; 0x896 <__floatsisf+0x6c>
     858:	bb 0f       	add	r27, r27
     85a:	11 f4       	brne	.+4      	; 0x860 <__floatsisf+0x36>
     85c:	60 ff       	sbrs	r22, 0
     85e:	1b c0       	rjmp	.+54     	; 0x896 <__floatsisf+0x6c>
     860:	6f 5f       	subi	r22, 0xFF	; 255
     862:	7f 4f       	sbci	r23, 0xFF	; 255
     864:	8f 4f       	sbci	r24, 0xFF	; 255
     866:	9f 4f       	sbci	r25, 0xFF	; 255
     868:	16 c0       	rjmp	.+44     	; 0x896 <__floatsisf+0x6c>
     86a:	88 23       	and	r24, r24
     86c:	11 f0       	breq	.+4      	; 0x872 <__floatsisf+0x48>
     86e:	96 e9       	ldi	r25, 0x96	; 150
     870:	11 c0       	rjmp	.+34     	; 0x894 <__floatsisf+0x6a>
     872:	77 23       	and	r23, r23
     874:	21 f0       	breq	.+8      	; 0x87e <__floatsisf+0x54>
     876:	9e e8       	ldi	r25, 0x8E	; 142
     878:	87 2f       	mov	r24, r23
     87a:	76 2f       	mov	r23, r22
     87c:	05 c0       	rjmp	.+10     	; 0x888 <__floatsisf+0x5e>
     87e:	66 23       	and	r22, r22
     880:	71 f0       	breq	.+28     	; 0x89e <__floatsisf+0x74>
     882:	96 e8       	ldi	r25, 0x86	; 134
     884:	86 2f       	mov	r24, r22
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	60 e0       	ldi	r22, 0x00	; 0
     88a:	2a f0       	brmi	.+10     	; 0x896 <__floatsisf+0x6c>
     88c:	9a 95       	dec	r25
     88e:	66 0f       	add	r22, r22
     890:	77 1f       	adc	r23, r23
     892:	88 1f       	adc	r24, r24
     894:	da f7       	brpl	.-10     	; 0x88c <__floatsisf+0x62>
     896:	88 0f       	add	r24, r24
     898:	96 95       	lsr	r25
     89a:	87 95       	ror	r24
     89c:	97 f9       	bld	r25, 7
     89e:	08 95       	ret

000008a0 <__fp_cmp>:
     8a0:	99 0f       	add	r25, r25
     8a2:	00 08       	sbc	r0, r0
     8a4:	55 0f       	add	r21, r21
     8a6:	aa 0b       	sbc	r26, r26
     8a8:	e0 e8       	ldi	r30, 0x80	; 128
     8aa:	fe ef       	ldi	r31, 0xFE	; 254
     8ac:	16 16       	cp	r1, r22
     8ae:	17 06       	cpc	r1, r23
     8b0:	e8 07       	cpc	r30, r24
     8b2:	f9 07       	cpc	r31, r25
     8b4:	c0 f0       	brcs	.+48     	; 0x8e6 <__fp_cmp+0x46>
     8b6:	12 16       	cp	r1, r18
     8b8:	13 06       	cpc	r1, r19
     8ba:	e4 07       	cpc	r30, r20
     8bc:	f5 07       	cpc	r31, r21
     8be:	98 f0       	brcs	.+38     	; 0x8e6 <__fp_cmp+0x46>
     8c0:	62 1b       	sub	r22, r18
     8c2:	73 0b       	sbc	r23, r19
     8c4:	84 0b       	sbc	r24, r20
     8c6:	95 0b       	sbc	r25, r21
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__fp_cmp+0x38>
     8ca:	0a 26       	eor	r0, r26
     8cc:	61 f0       	breq	.+24     	; 0x8e6 <__fp_cmp+0x46>
     8ce:	23 2b       	or	r18, r19
     8d0:	24 2b       	or	r18, r20
     8d2:	25 2b       	or	r18, r21
     8d4:	21 f4       	brne	.+8      	; 0x8de <__fp_cmp+0x3e>
     8d6:	08 95       	ret
     8d8:	0a 26       	eor	r0, r26
     8da:	09 f4       	brne	.+2      	; 0x8de <__fp_cmp+0x3e>
     8dc:	a1 40       	sbci	r26, 0x01	; 1
     8de:	a6 95       	lsr	r26
     8e0:	8f ef       	ldi	r24, 0xFF	; 255
     8e2:	81 1d       	adc	r24, r1
     8e4:	81 1d       	adc	r24, r1
     8e6:	08 95       	ret

000008e8 <__fp_inf>:
     8e8:	97 f9       	bld	r25, 7
     8ea:	9f 67       	ori	r25, 0x7F	; 127
     8ec:	80 e8       	ldi	r24, 0x80	; 128
     8ee:	70 e0       	ldi	r23, 0x00	; 0
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	08 95       	ret

000008f4 <__fp_nan>:
     8f4:	9f ef       	ldi	r25, 0xFF	; 255
     8f6:	80 ec       	ldi	r24, 0xC0	; 192
     8f8:	08 95       	ret

000008fa <__fp_pscA>:
     8fa:	00 24       	eor	r0, r0
     8fc:	0a 94       	dec	r0
     8fe:	16 16       	cp	r1, r22
     900:	17 06       	cpc	r1, r23
     902:	18 06       	cpc	r1, r24
     904:	09 06       	cpc	r0, r25
     906:	08 95       	ret

00000908 <__fp_pscB>:
     908:	00 24       	eor	r0, r0
     90a:	0a 94       	dec	r0
     90c:	12 16       	cp	r1, r18
     90e:	13 06       	cpc	r1, r19
     910:	14 06       	cpc	r1, r20
     912:	05 06       	cpc	r0, r21
     914:	08 95       	ret

00000916 <__fp_round>:
     916:	09 2e       	mov	r0, r25
     918:	03 94       	inc	r0
     91a:	00 0c       	add	r0, r0
     91c:	11 f4       	brne	.+4      	; 0x922 <__fp_round+0xc>
     91e:	88 23       	and	r24, r24
     920:	52 f0       	brmi	.+20     	; 0x936 <__fp_round+0x20>
     922:	bb 0f       	add	r27, r27
     924:	40 f4       	brcc	.+16     	; 0x936 <__fp_round+0x20>
     926:	bf 2b       	or	r27, r31
     928:	11 f4       	brne	.+4      	; 0x92e <__fp_round+0x18>
     92a:	60 ff       	sbrs	r22, 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fp_round+0x20>
     92e:	6f 5f       	subi	r22, 0xFF	; 255
     930:	7f 4f       	sbci	r23, 0xFF	; 255
     932:	8f 4f       	sbci	r24, 0xFF	; 255
     934:	9f 4f       	sbci	r25, 0xFF	; 255
     936:	08 95       	ret

00000938 <__fp_split3>:
     938:	57 fd       	sbrc	r21, 7
     93a:	90 58       	subi	r25, 0x80	; 128
     93c:	44 0f       	add	r20, r20
     93e:	55 1f       	adc	r21, r21
     940:	59 f0       	breq	.+22     	; 0x958 <__fp_splitA+0x10>
     942:	5f 3f       	cpi	r21, 0xFF	; 255
     944:	71 f0       	breq	.+28     	; 0x962 <__fp_splitA+0x1a>
     946:	47 95       	ror	r20

00000948 <__fp_splitA>:
     948:	88 0f       	add	r24, r24
     94a:	97 fb       	bst	r25, 7
     94c:	99 1f       	adc	r25, r25
     94e:	61 f0       	breq	.+24     	; 0x968 <__fp_splitA+0x20>
     950:	9f 3f       	cpi	r25, 0xFF	; 255
     952:	79 f0       	breq	.+30     	; 0x972 <__fp_splitA+0x2a>
     954:	87 95       	ror	r24
     956:	08 95       	ret
     958:	12 16       	cp	r1, r18
     95a:	13 06       	cpc	r1, r19
     95c:	14 06       	cpc	r1, r20
     95e:	55 1f       	adc	r21, r21
     960:	f2 cf       	rjmp	.-28     	; 0x946 <__fp_split3+0xe>
     962:	46 95       	lsr	r20
     964:	f1 df       	rcall	.-30     	; 0x948 <__fp_splitA>
     966:	08 c0       	rjmp	.+16     	; 0x978 <__fp_splitA+0x30>
     968:	16 16       	cp	r1, r22
     96a:	17 06       	cpc	r1, r23
     96c:	18 06       	cpc	r1, r24
     96e:	99 1f       	adc	r25, r25
     970:	f1 cf       	rjmp	.-30     	; 0x954 <__fp_splitA+0xc>
     972:	86 95       	lsr	r24
     974:	71 05       	cpc	r23, r1
     976:	61 05       	cpc	r22, r1
     978:	08 94       	sec
     97a:	08 95       	ret

0000097c <__fp_zero>:
     97c:	e8 94       	clt

0000097e <__fp_szero>:
     97e:	bb 27       	eor	r27, r27
     980:	66 27       	eor	r22, r22
     982:	77 27       	eor	r23, r23
     984:	cb 01       	movw	r24, r22
     986:	97 f9       	bld	r25, 7
     988:	08 95       	ret

0000098a <__gesf2>:
     98a:	8a df       	rcall	.-236    	; 0x8a0 <__fp_cmp>
     98c:	08 f4       	brcc	.+2      	; 0x990 <__gesf2+0x6>
     98e:	8f ef       	ldi	r24, 0xFF	; 255
     990:	08 95       	ret

00000992 <__mulsf3>:
     992:	0b d0       	rcall	.+22     	; 0x9aa <__mulsf3x>
     994:	c0 cf       	rjmp	.-128    	; 0x916 <__fp_round>
     996:	b1 df       	rcall	.-158    	; 0x8fa <__fp_pscA>
     998:	28 f0       	brcs	.+10     	; 0x9a4 <__mulsf3+0x12>
     99a:	b6 df       	rcall	.-148    	; 0x908 <__fp_pscB>
     99c:	18 f0       	brcs	.+6      	; 0x9a4 <__mulsf3+0x12>
     99e:	95 23       	and	r25, r21
     9a0:	09 f0       	breq	.+2      	; 0x9a4 <__mulsf3+0x12>
     9a2:	a2 cf       	rjmp	.-188    	; 0x8e8 <__fp_inf>
     9a4:	a7 cf       	rjmp	.-178    	; 0x8f4 <__fp_nan>
     9a6:	11 24       	eor	r1, r1
     9a8:	ea cf       	rjmp	.-44     	; 0x97e <__fp_szero>

000009aa <__mulsf3x>:
     9aa:	c6 df       	rcall	.-116    	; 0x938 <__fp_split3>
     9ac:	a0 f3       	brcs	.-24     	; 0x996 <__mulsf3+0x4>

000009ae <__mulsf3_pse>:
     9ae:	95 9f       	mul	r25, r21
     9b0:	d1 f3       	breq	.-12     	; 0x9a6 <__mulsf3+0x14>
     9b2:	95 0f       	add	r25, r21
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	55 1f       	adc	r21, r21
     9b8:	62 9f       	mul	r22, r18
     9ba:	f0 01       	movw	r30, r0
     9bc:	72 9f       	mul	r23, r18
     9be:	bb 27       	eor	r27, r27
     9c0:	f0 0d       	add	r31, r0
     9c2:	b1 1d       	adc	r27, r1
     9c4:	63 9f       	mul	r22, r19
     9c6:	aa 27       	eor	r26, r26
     9c8:	f0 0d       	add	r31, r0
     9ca:	b1 1d       	adc	r27, r1
     9cc:	aa 1f       	adc	r26, r26
     9ce:	64 9f       	mul	r22, r20
     9d0:	66 27       	eor	r22, r22
     9d2:	b0 0d       	add	r27, r0
     9d4:	a1 1d       	adc	r26, r1
     9d6:	66 1f       	adc	r22, r22
     9d8:	82 9f       	mul	r24, r18
     9da:	22 27       	eor	r18, r18
     9dc:	b0 0d       	add	r27, r0
     9de:	a1 1d       	adc	r26, r1
     9e0:	62 1f       	adc	r22, r18
     9e2:	73 9f       	mul	r23, r19
     9e4:	b0 0d       	add	r27, r0
     9e6:	a1 1d       	adc	r26, r1
     9e8:	62 1f       	adc	r22, r18
     9ea:	83 9f       	mul	r24, r19
     9ec:	a0 0d       	add	r26, r0
     9ee:	61 1d       	adc	r22, r1
     9f0:	22 1f       	adc	r18, r18
     9f2:	74 9f       	mul	r23, r20
     9f4:	33 27       	eor	r19, r19
     9f6:	a0 0d       	add	r26, r0
     9f8:	61 1d       	adc	r22, r1
     9fa:	23 1f       	adc	r18, r19
     9fc:	84 9f       	mul	r24, r20
     9fe:	60 0d       	add	r22, r0
     a00:	21 1d       	adc	r18, r1
     a02:	82 2f       	mov	r24, r18
     a04:	76 2f       	mov	r23, r22
     a06:	6a 2f       	mov	r22, r26
     a08:	11 24       	eor	r1, r1
     a0a:	9f 57       	subi	r25, 0x7F	; 127
     a0c:	50 40       	sbci	r21, 0x00	; 0
     a0e:	8a f0       	brmi	.+34     	; 0xa32 <__mulsf3_pse+0x84>
     a10:	e1 f0       	breq	.+56     	; 0xa4a <__mulsf3_pse+0x9c>
     a12:	88 23       	and	r24, r24
     a14:	4a f0       	brmi	.+18     	; 0xa28 <__mulsf3_pse+0x7a>
     a16:	ee 0f       	add	r30, r30
     a18:	ff 1f       	adc	r31, r31
     a1a:	bb 1f       	adc	r27, r27
     a1c:	66 1f       	adc	r22, r22
     a1e:	77 1f       	adc	r23, r23
     a20:	88 1f       	adc	r24, r24
     a22:	91 50       	subi	r25, 0x01	; 1
     a24:	50 40       	sbci	r21, 0x00	; 0
     a26:	a9 f7       	brne	.-22     	; 0xa12 <__mulsf3_pse+0x64>
     a28:	9e 3f       	cpi	r25, 0xFE	; 254
     a2a:	51 05       	cpc	r21, r1
     a2c:	70 f0       	brcs	.+28     	; 0xa4a <__mulsf3_pse+0x9c>
     a2e:	5c cf       	rjmp	.-328    	; 0x8e8 <__fp_inf>
     a30:	a6 cf       	rjmp	.-180    	; 0x97e <__fp_szero>
     a32:	5f 3f       	cpi	r21, 0xFF	; 255
     a34:	ec f3       	brlt	.-6      	; 0xa30 <__mulsf3_pse+0x82>
     a36:	98 3e       	cpi	r25, 0xE8	; 232
     a38:	dc f3       	brlt	.-10     	; 0xa30 <__mulsf3_pse+0x82>
     a3a:	86 95       	lsr	r24
     a3c:	77 95       	ror	r23
     a3e:	67 95       	ror	r22
     a40:	b7 95       	ror	r27
     a42:	f7 95       	ror	r31
     a44:	e7 95       	ror	r30
     a46:	9f 5f       	subi	r25, 0xFF	; 255
     a48:	c1 f7       	brne	.-16     	; 0xa3a <__mulsf3_pse+0x8c>
     a4a:	fe 2b       	or	r31, r30
     a4c:	88 0f       	add	r24, r24
     a4e:	91 1d       	adc	r25, r1
     a50:	96 95       	lsr	r25
     a52:	87 95       	ror	r24
     a54:	97 f9       	bld	r25, 7
     a56:	08 95       	ret

00000a58 <fdevopen>:
     a58:	0f 93       	push	r16
     a5a:	1f 93       	push	r17
     a5c:	cf 93       	push	r28
     a5e:	df 93       	push	r29
     a60:	ec 01       	movw	r28, r24
     a62:	8b 01       	movw	r16, r22
     a64:	00 97       	sbiw	r24, 0x00	; 0
     a66:	31 f4       	brne	.+12     	; 0xa74 <fdevopen+0x1c>
     a68:	61 15       	cp	r22, r1
     a6a:	71 05       	cpc	r23, r1
     a6c:	19 f4       	brne	.+6      	; 0xa74 <fdevopen+0x1c>
     a6e:	80 e0       	ldi	r24, 0x00	; 0
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	37 c0       	rjmp	.+110    	; 0xae2 <fdevopen+0x8a>
     a74:	6e e0       	ldi	r22, 0x0E	; 14
     a76:	70 e0       	ldi	r23, 0x00	; 0
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	63 d2       	rcall	.+1222   	; 0xf44 <calloc>
     a7e:	fc 01       	movw	r30, r24
     a80:	00 97       	sbiw	r24, 0x00	; 0
     a82:	a9 f3       	breq	.-22     	; 0xa6e <fdevopen+0x16>
     a84:	80 e8       	ldi	r24, 0x80	; 128
     a86:	83 83       	std	Z+3, r24	; 0x03
     a88:	01 15       	cp	r16, r1
     a8a:	11 05       	cpc	r17, r1
     a8c:	71 f0       	breq	.+28     	; 0xaaa <fdevopen+0x52>
     a8e:	13 87       	std	Z+11, r17	; 0x0b
     a90:	02 87       	std	Z+10, r16	; 0x0a
     a92:	81 e8       	ldi	r24, 0x81	; 129
     a94:	83 83       	std	Z+3, r24	; 0x03
     a96:	80 91 98 02 	lds	r24, 0x0298
     a9a:	90 91 99 02 	lds	r25, 0x0299
     a9e:	89 2b       	or	r24, r25
     aa0:	21 f4       	brne	.+8      	; 0xaaa <fdevopen+0x52>
     aa2:	f0 93 99 02 	sts	0x0299, r31
     aa6:	e0 93 98 02 	sts	0x0298, r30
     aaa:	20 97       	sbiw	r28, 0x00	; 0
     aac:	c9 f0       	breq	.+50     	; 0xae0 <fdevopen+0x88>
     aae:	d1 87       	std	Z+9, r29	; 0x09
     ab0:	c0 87       	std	Z+8, r28	; 0x08
     ab2:	83 81       	ldd	r24, Z+3	; 0x03
     ab4:	82 60       	ori	r24, 0x02	; 2
     ab6:	83 83       	std	Z+3, r24	; 0x03
     ab8:	80 91 9a 02 	lds	r24, 0x029A
     abc:	90 91 9b 02 	lds	r25, 0x029B
     ac0:	89 2b       	or	r24, r25
     ac2:	71 f4       	brne	.+28     	; 0xae0 <fdevopen+0x88>
     ac4:	f0 93 9b 02 	sts	0x029B, r31
     ac8:	e0 93 9a 02 	sts	0x029A, r30
     acc:	80 91 9c 02 	lds	r24, 0x029C
     ad0:	90 91 9d 02 	lds	r25, 0x029D
     ad4:	89 2b       	or	r24, r25
     ad6:	21 f4       	brne	.+8      	; 0xae0 <fdevopen+0x88>
     ad8:	f0 93 9d 02 	sts	0x029D, r31
     adc:	e0 93 9c 02 	sts	0x029C, r30
     ae0:	cf 01       	movw	r24, r30
     ae2:	df 91       	pop	r29
     ae4:	cf 91       	pop	r28
     ae6:	1f 91       	pop	r17
     ae8:	0f 91       	pop	r16
     aea:	08 95       	ret

00000aec <printf>:
     aec:	cf 93       	push	r28
     aee:	df 93       	push	r29
     af0:	cd b7       	in	r28, 0x3d	; 61
     af2:	de b7       	in	r29, 0x3e	; 62
     af4:	fe 01       	movw	r30, r28
     af6:	36 96       	adiw	r30, 0x06	; 6
     af8:	61 91       	ld	r22, Z+
     afa:	71 91       	ld	r23, Z+
     afc:	af 01       	movw	r20, r30
     afe:	80 91 9a 02 	lds	r24, 0x029A
     b02:	90 91 9b 02 	lds	r25, 0x029B
     b06:	30 d0       	rcall	.+96     	; 0xb68 <vfprintf>
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <puts>:
     b0e:	0f 93       	push	r16
     b10:	1f 93       	push	r17
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	e0 91 9a 02 	lds	r30, 0x029A
     b1a:	f0 91 9b 02 	lds	r31, 0x029B
     b1e:	23 81       	ldd	r18, Z+3	; 0x03
     b20:	21 ff       	sbrs	r18, 1
     b22:	1b c0       	rjmp	.+54     	; 0xb5a <puts+0x4c>
     b24:	ec 01       	movw	r28, r24
     b26:	00 e0       	ldi	r16, 0x00	; 0
     b28:	10 e0       	ldi	r17, 0x00	; 0
     b2a:	89 91       	ld	r24, Y+
     b2c:	60 91 9a 02 	lds	r22, 0x029A
     b30:	70 91 9b 02 	lds	r23, 0x029B
     b34:	db 01       	movw	r26, r22
     b36:	18 96       	adiw	r26, 0x08	; 8
     b38:	ed 91       	ld	r30, X+
     b3a:	fc 91       	ld	r31, X
     b3c:	19 97       	sbiw	r26, 0x09	; 9
     b3e:	88 23       	and	r24, r24
     b40:	31 f0       	breq	.+12     	; 0xb4e <puts+0x40>
     b42:	19 95       	eicall
     b44:	89 2b       	or	r24, r25
     b46:	89 f3       	breq	.-30     	; 0xb2a <puts+0x1c>
     b48:	0f ef       	ldi	r16, 0xFF	; 255
     b4a:	1f ef       	ldi	r17, 0xFF	; 255
     b4c:	ee cf       	rjmp	.-36     	; 0xb2a <puts+0x1c>
     b4e:	8a e0       	ldi	r24, 0x0A	; 10
     b50:	19 95       	eicall
     b52:	89 2b       	or	r24, r25
     b54:	11 f4       	brne	.+4      	; 0xb5a <puts+0x4c>
     b56:	c8 01       	movw	r24, r16
     b58:	02 c0       	rjmp	.+4      	; 0xb5e <puts+0x50>
     b5a:	8f ef       	ldi	r24, 0xFF	; 255
     b5c:	9f ef       	ldi	r25, 0xFF	; 255
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	1f 91       	pop	r17
     b64:	0f 91       	pop	r16
     b66:	08 95       	ret

00000b68 <vfprintf>:
     b68:	2f 92       	push	r2
     b6a:	3f 92       	push	r3
     b6c:	4f 92       	push	r4
     b6e:	5f 92       	push	r5
     b70:	6f 92       	push	r6
     b72:	7f 92       	push	r7
     b74:	8f 92       	push	r8
     b76:	9f 92       	push	r9
     b78:	af 92       	push	r10
     b7a:	bf 92       	push	r11
     b7c:	cf 92       	push	r12
     b7e:	df 92       	push	r13
     b80:	ef 92       	push	r14
     b82:	ff 92       	push	r15
     b84:	0f 93       	push	r16
     b86:	1f 93       	push	r17
     b88:	cf 93       	push	r28
     b8a:	df 93       	push	r29
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	2c 97       	sbiw	r28, 0x0c	; 12
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	de bf       	out	0x3e, r29	; 62
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	cd bf       	out	0x3d, r28	; 61
     b9c:	7c 01       	movw	r14, r24
     b9e:	6b 01       	movw	r12, r22
     ba0:	8a 01       	movw	r16, r20
     ba2:	fc 01       	movw	r30, r24
     ba4:	17 82       	std	Z+7, r1	; 0x07
     ba6:	16 82       	std	Z+6, r1	; 0x06
     ba8:	83 81       	ldd	r24, Z+3	; 0x03
     baa:	81 ff       	sbrs	r24, 1
     bac:	b0 c1       	rjmp	.+864    	; 0xf0e <vfprintf+0x3a6>
     bae:	ce 01       	movw	r24, r28
     bb0:	01 96       	adiw	r24, 0x01	; 1
     bb2:	4c 01       	movw	r8, r24
     bb4:	f7 01       	movw	r30, r14
     bb6:	93 81       	ldd	r25, Z+3	; 0x03
     bb8:	f6 01       	movw	r30, r12
     bba:	93 fd       	sbrc	r25, 3
     bbc:	85 91       	lpm	r24, Z+
     bbe:	93 ff       	sbrs	r25, 3
     bc0:	81 91       	ld	r24, Z+
     bc2:	6f 01       	movw	r12, r30
     bc4:	88 23       	and	r24, r24
     bc6:	09 f4       	brne	.+2      	; 0xbca <vfprintf+0x62>
     bc8:	9e c1       	rjmp	.+828    	; 0xf06 <vfprintf+0x39e>
     bca:	85 32       	cpi	r24, 0x25	; 37
     bcc:	39 f4       	brne	.+14     	; 0xbdc <vfprintf+0x74>
     bce:	93 fd       	sbrc	r25, 3
     bd0:	85 91       	lpm	r24, Z+
     bd2:	93 ff       	sbrs	r25, 3
     bd4:	81 91       	ld	r24, Z+
     bd6:	6f 01       	movw	r12, r30
     bd8:	85 32       	cpi	r24, 0x25	; 37
     bda:	21 f4       	brne	.+8      	; 0xbe4 <vfprintf+0x7c>
     bdc:	b7 01       	movw	r22, r14
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	0f d3       	rcall	.+1566   	; 0x1200 <fputc>
     be2:	e8 cf       	rjmp	.-48     	; 0xbb4 <vfprintf+0x4c>
     be4:	51 2c       	mov	r5, r1
     be6:	31 2c       	mov	r3, r1
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	20 32       	cpi	r18, 0x20	; 32
     bec:	a0 f4       	brcc	.+40     	; 0xc16 <vfprintf+0xae>
     bee:	8b 32       	cpi	r24, 0x2B	; 43
     bf0:	69 f0       	breq	.+26     	; 0xc0c <vfprintf+0xa4>
     bf2:	30 f4       	brcc	.+12     	; 0xc00 <vfprintf+0x98>
     bf4:	80 32       	cpi	r24, 0x20	; 32
     bf6:	59 f0       	breq	.+22     	; 0xc0e <vfprintf+0xa6>
     bf8:	83 32       	cpi	r24, 0x23	; 35
     bfa:	69 f4       	brne	.+26     	; 0xc16 <vfprintf+0xae>
     bfc:	20 61       	ori	r18, 0x10	; 16
     bfe:	2c c0       	rjmp	.+88     	; 0xc58 <vfprintf+0xf0>
     c00:	8d 32       	cpi	r24, 0x2D	; 45
     c02:	39 f0       	breq	.+14     	; 0xc12 <vfprintf+0xaa>
     c04:	80 33       	cpi	r24, 0x30	; 48
     c06:	39 f4       	brne	.+14     	; 0xc16 <vfprintf+0xae>
     c08:	21 60       	ori	r18, 0x01	; 1
     c0a:	26 c0       	rjmp	.+76     	; 0xc58 <vfprintf+0xf0>
     c0c:	22 60       	ori	r18, 0x02	; 2
     c0e:	24 60       	ori	r18, 0x04	; 4
     c10:	23 c0       	rjmp	.+70     	; 0xc58 <vfprintf+0xf0>
     c12:	28 60       	ori	r18, 0x08	; 8
     c14:	21 c0       	rjmp	.+66     	; 0xc58 <vfprintf+0xf0>
     c16:	27 fd       	sbrc	r18, 7
     c18:	27 c0       	rjmp	.+78     	; 0xc68 <vfprintf+0x100>
     c1a:	30 ed       	ldi	r19, 0xD0	; 208
     c1c:	38 0f       	add	r19, r24
     c1e:	3a 30       	cpi	r19, 0x0A	; 10
     c20:	78 f4       	brcc	.+30     	; 0xc40 <vfprintf+0xd8>
     c22:	26 ff       	sbrs	r18, 6
     c24:	06 c0       	rjmp	.+12     	; 0xc32 <vfprintf+0xca>
     c26:	fa e0       	ldi	r31, 0x0A	; 10
     c28:	5f 9e       	mul	r5, r31
     c2a:	30 0d       	add	r19, r0
     c2c:	11 24       	eor	r1, r1
     c2e:	53 2e       	mov	r5, r19
     c30:	13 c0       	rjmp	.+38     	; 0xc58 <vfprintf+0xf0>
     c32:	8a e0       	ldi	r24, 0x0A	; 10
     c34:	38 9e       	mul	r3, r24
     c36:	30 0d       	add	r19, r0
     c38:	11 24       	eor	r1, r1
     c3a:	33 2e       	mov	r3, r19
     c3c:	20 62       	ori	r18, 0x20	; 32
     c3e:	0c c0       	rjmp	.+24     	; 0xc58 <vfprintf+0xf0>
     c40:	8e 32       	cpi	r24, 0x2E	; 46
     c42:	21 f4       	brne	.+8      	; 0xc4c <vfprintf+0xe4>
     c44:	26 fd       	sbrc	r18, 6
     c46:	5f c1       	rjmp	.+702    	; 0xf06 <vfprintf+0x39e>
     c48:	20 64       	ori	r18, 0x40	; 64
     c4a:	06 c0       	rjmp	.+12     	; 0xc58 <vfprintf+0xf0>
     c4c:	8c 36       	cpi	r24, 0x6C	; 108
     c4e:	11 f4       	brne	.+4      	; 0xc54 <vfprintf+0xec>
     c50:	20 68       	ori	r18, 0x80	; 128
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <vfprintf+0xf0>
     c54:	88 36       	cpi	r24, 0x68	; 104
     c56:	41 f4       	brne	.+16     	; 0xc68 <vfprintf+0x100>
     c58:	f6 01       	movw	r30, r12
     c5a:	93 fd       	sbrc	r25, 3
     c5c:	85 91       	lpm	r24, Z+
     c5e:	93 ff       	sbrs	r25, 3
     c60:	81 91       	ld	r24, Z+
     c62:	6f 01       	movw	r12, r30
     c64:	81 11       	cpse	r24, r1
     c66:	c1 cf       	rjmp	.-126    	; 0xbea <vfprintf+0x82>
     c68:	98 2f       	mov	r25, r24
     c6a:	9f 7d       	andi	r25, 0xDF	; 223
     c6c:	95 54       	subi	r25, 0x45	; 69
     c6e:	93 30       	cpi	r25, 0x03	; 3
     c70:	28 f4       	brcc	.+10     	; 0xc7c <vfprintf+0x114>
     c72:	0c 5f       	subi	r16, 0xFC	; 252
     c74:	1f 4f       	sbci	r17, 0xFF	; 255
     c76:	ff e3       	ldi	r31, 0x3F	; 63
     c78:	f9 83       	std	Y+1, r31	; 0x01
     c7a:	0d c0       	rjmp	.+26     	; 0xc96 <vfprintf+0x12e>
     c7c:	83 36       	cpi	r24, 0x63	; 99
     c7e:	31 f0       	breq	.+12     	; 0xc8c <vfprintf+0x124>
     c80:	83 37       	cpi	r24, 0x73	; 115
     c82:	71 f0       	breq	.+28     	; 0xca0 <vfprintf+0x138>
     c84:	83 35       	cpi	r24, 0x53	; 83
     c86:	09 f0       	breq	.+2      	; 0xc8a <vfprintf+0x122>
     c88:	57 c0       	rjmp	.+174    	; 0xd38 <vfprintf+0x1d0>
     c8a:	21 c0       	rjmp	.+66     	; 0xcce <vfprintf+0x166>
     c8c:	f8 01       	movw	r30, r16
     c8e:	80 81       	ld	r24, Z
     c90:	89 83       	std	Y+1, r24	; 0x01
     c92:	0e 5f       	subi	r16, 0xFE	; 254
     c94:	1f 4f       	sbci	r17, 0xFF	; 255
     c96:	44 24       	eor	r4, r4
     c98:	43 94       	inc	r4
     c9a:	51 2c       	mov	r5, r1
     c9c:	54 01       	movw	r10, r8
     c9e:	14 c0       	rjmp	.+40     	; 0xcc8 <vfprintf+0x160>
     ca0:	38 01       	movw	r6, r16
     ca2:	f2 e0       	ldi	r31, 0x02	; 2
     ca4:	6f 0e       	add	r6, r31
     ca6:	71 1c       	adc	r7, r1
     ca8:	f8 01       	movw	r30, r16
     caa:	a0 80       	ld	r10, Z
     cac:	b1 80       	ldd	r11, Z+1	; 0x01
     cae:	26 ff       	sbrs	r18, 6
     cb0:	03 c0       	rjmp	.+6      	; 0xcb8 <vfprintf+0x150>
     cb2:	65 2d       	mov	r22, r5
     cb4:	70 e0       	ldi	r23, 0x00	; 0
     cb6:	02 c0       	rjmp	.+4      	; 0xcbc <vfprintf+0x154>
     cb8:	6f ef       	ldi	r22, 0xFF	; 255
     cba:	7f ef       	ldi	r23, 0xFF	; 255
     cbc:	c5 01       	movw	r24, r10
     cbe:	2c 87       	std	Y+12, r18	; 0x0c
     cc0:	94 d2       	rcall	.+1320   	; 0x11ea <strnlen>
     cc2:	2c 01       	movw	r4, r24
     cc4:	83 01       	movw	r16, r6
     cc6:	2c 85       	ldd	r18, Y+12	; 0x0c
     cc8:	2f 77       	andi	r18, 0x7F	; 127
     cca:	22 2e       	mov	r2, r18
     ccc:	16 c0       	rjmp	.+44     	; 0xcfa <vfprintf+0x192>
     cce:	38 01       	movw	r6, r16
     cd0:	f2 e0       	ldi	r31, 0x02	; 2
     cd2:	6f 0e       	add	r6, r31
     cd4:	71 1c       	adc	r7, r1
     cd6:	f8 01       	movw	r30, r16
     cd8:	a0 80       	ld	r10, Z
     cda:	b1 80       	ldd	r11, Z+1	; 0x01
     cdc:	26 ff       	sbrs	r18, 6
     cde:	03 c0       	rjmp	.+6      	; 0xce6 <vfprintf+0x17e>
     ce0:	65 2d       	mov	r22, r5
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	02 c0       	rjmp	.+4      	; 0xcea <vfprintf+0x182>
     ce6:	6f ef       	ldi	r22, 0xFF	; 255
     ce8:	7f ef       	ldi	r23, 0xFF	; 255
     cea:	c5 01       	movw	r24, r10
     cec:	2c 87       	std	Y+12, r18	; 0x0c
     cee:	6b d2       	rcall	.+1238   	; 0x11c6 <strnlen_P>
     cf0:	2c 01       	movw	r4, r24
     cf2:	2c 85       	ldd	r18, Y+12	; 0x0c
     cf4:	20 68       	ori	r18, 0x80	; 128
     cf6:	22 2e       	mov	r2, r18
     cf8:	83 01       	movw	r16, r6
     cfa:	23 fc       	sbrc	r2, 3
     cfc:	19 c0       	rjmp	.+50     	; 0xd30 <vfprintf+0x1c8>
     cfe:	83 2d       	mov	r24, r3
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	48 16       	cp	r4, r24
     d04:	59 06       	cpc	r5, r25
     d06:	a0 f4       	brcc	.+40     	; 0xd30 <vfprintf+0x1c8>
     d08:	b7 01       	movw	r22, r14
     d0a:	80 e2       	ldi	r24, 0x20	; 32
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	78 d2       	rcall	.+1264   	; 0x1200 <fputc>
     d10:	3a 94       	dec	r3
     d12:	f5 cf       	rjmp	.-22     	; 0xcfe <vfprintf+0x196>
     d14:	f5 01       	movw	r30, r10
     d16:	27 fc       	sbrc	r2, 7
     d18:	85 91       	lpm	r24, Z+
     d1a:	27 fe       	sbrs	r2, 7
     d1c:	81 91       	ld	r24, Z+
     d1e:	5f 01       	movw	r10, r30
     d20:	b7 01       	movw	r22, r14
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	6d d2       	rcall	.+1242   	; 0x1200 <fputc>
     d26:	31 10       	cpse	r3, r1
     d28:	3a 94       	dec	r3
     d2a:	f1 e0       	ldi	r31, 0x01	; 1
     d2c:	4f 1a       	sub	r4, r31
     d2e:	51 08       	sbc	r5, r1
     d30:	41 14       	cp	r4, r1
     d32:	51 04       	cpc	r5, r1
     d34:	79 f7       	brne	.-34     	; 0xd14 <vfprintf+0x1ac>
     d36:	de c0       	rjmp	.+444    	; 0xef4 <vfprintf+0x38c>
     d38:	84 36       	cpi	r24, 0x64	; 100
     d3a:	11 f0       	breq	.+4      	; 0xd40 <vfprintf+0x1d8>
     d3c:	89 36       	cpi	r24, 0x69	; 105
     d3e:	31 f5       	brne	.+76     	; 0xd8c <vfprintf+0x224>
     d40:	f8 01       	movw	r30, r16
     d42:	27 ff       	sbrs	r18, 7
     d44:	07 c0       	rjmp	.+14     	; 0xd54 <vfprintf+0x1ec>
     d46:	60 81       	ld	r22, Z
     d48:	71 81       	ldd	r23, Z+1	; 0x01
     d4a:	82 81       	ldd	r24, Z+2	; 0x02
     d4c:	93 81       	ldd	r25, Z+3	; 0x03
     d4e:	0c 5f       	subi	r16, 0xFC	; 252
     d50:	1f 4f       	sbci	r17, 0xFF	; 255
     d52:	08 c0       	rjmp	.+16     	; 0xd64 <vfprintf+0x1fc>
     d54:	60 81       	ld	r22, Z
     d56:	71 81       	ldd	r23, Z+1	; 0x01
     d58:	88 27       	eor	r24, r24
     d5a:	77 fd       	sbrc	r23, 7
     d5c:	80 95       	com	r24
     d5e:	98 2f       	mov	r25, r24
     d60:	0e 5f       	subi	r16, 0xFE	; 254
     d62:	1f 4f       	sbci	r17, 0xFF	; 255
     d64:	2f 76       	andi	r18, 0x6F	; 111
     d66:	b2 2e       	mov	r11, r18
     d68:	97 ff       	sbrs	r25, 7
     d6a:	09 c0       	rjmp	.+18     	; 0xd7e <vfprintf+0x216>
     d6c:	90 95       	com	r25
     d6e:	80 95       	com	r24
     d70:	70 95       	com	r23
     d72:	61 95       	neg	r22
     d74:	7f 4f       	sbci	r23, 0xFF	; 255
     d76:	8f 4f       	sbci	r24, 0xFF	; 255
     d78:	9f 4f       	sbci	r25, 0xFF	; 255
     d7a:	20 68       	ori	r18, 0x80	; 128
     d7c:	b2 2e       	mov	r11, r18
     d7e:	2a e0       	ldi	r18, 0x0A	; 10
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	a4 01       	movw	r20, r8
     d84:	6f d2       	rcall	.+1246   	; 0x1264 <__ultoa_invert>
     d86:	a8 2e       	mov	r10, r24
     d88:	a8 18       	sub	r10, r8
     d8a:	43 c0       	rjmp	.+134    	; 0xe12 <vfprintf+0x2aa>
     d8c:	85 37       	cpi	r24, 0x75	; 117
     d8e:	29 f4       	brne	.+10     	; 0xd9a <vfprintf+0x232>
     d90:	2f 7e       	andi	r18, 0xEF	; 239
     d92:	b2 2e       	mov	r11, r18
     d94:	2a e0       	ldi	r18, 0x0A	; 10
     d96:	30 e0       	ldi	r19, 0x00	; 0
     d98:	25 c0       	rjmp	.+74     	; 0xde4 <vfprintf+0x27c>
     d9a:	f2 2f       	mov	r31, r18
     d9c:	f9 7f       	andi	r31, 0xF9	; 249
     d9e:	bf 2e       	mov	r11, r31
     da0:	8f 36       	cpi	r24, 0x6F	; 111
     da2:	c1 f0       	breq	.+48     	; 0xdd4 <vfprintf+0x26c>
     da4:	18 f4       	brcc	.+6      	; 0xdac <vfprintf+0x244>
     da6:	88 35       	cpi	r24, 0x58	; 88
     da8:	79 f0       	breq	.+30     	; 0xdc8 <vfprintf+0x260>
     daa:	ad c0       	rjmp	.+346    	; 0xf06 <vfprintf+0x39e>
     dac:	80 37       	cpi	r24, 0x70	; 112
     dae:	19 f0       	breq	.+6      	; 0xdb6 <vfprintf+0x24e>
     db0:	88 37       	cpi	r24, 0x78	; 120
     db2:	21 f0       	breq	.+8      	; 0xdbc <vfprintf+0x254>
     db4:	a8 c0       	rjmp	.+336    	; 0xf06 <vfprintf+0x39e>
     db6:	2f 2f       	mov	r18, r31
     db8:	20 61       	ori	r18, 0x10	; 16
     dba:	b2 2e       	mov	r11, r18
     dbc:	b4 fe       	sbrs	r11, 4
     dbe:	0d c0       	rjmp	.+26     	; 0xdda <vfprintf+0x272>
     dc0:	8b 2d       	mov	r24, r11
     dc2:	84 60       	ori	r24, 0x04	; 4
     dc4:	b8 2e       	mov	r11, r24
     dc6:	09 c0       	rjmp	.+18     	; 0xdda <vfprintf+0x272>
     dc8:	24 ff       	sbrs	r18, 4
     dca:	0a c0       	rjmp	.+20     	; 0xde0 <vfprintf+0x278>
     dcc:	9f 2f       	mov	r25, r31
     dce:	96 60       	ori	r25, 0x06	; 6
     dd0:	b9 2e       	mov	r11, r25
     dd2:	06 c0       	rjmp	.+12     	; 0xde0 <vfprintf+0x278>
     dd4:	28 e0       	ldi	r18, 0x08	; 8
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	05 c0       	rjmp	.+10     	; 0xde4 <vfprintf+0x27c>
     dda:	20 e1       	ldi	r18, 0x10	; 16
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <vfprintf+0x27c>
     de0:	20 e1       	ldi	r18, 0x10	; 16
     de2:	32 e0       	ldi	r19, 0x02	; 2
     de4:	f8 01       	movw	r30, r16
     de6:	b7 fe       	sbrs	r11, 7
     de8:	07 c0       	rjmp	.+14     	; 0xdf8 <vfprintf+0x290>
     dea:	60 81       	ld	r22, Z
     dec:	71 81       	ldd	r23, Z+1	; 0x01
     dee:	82 81       	ldd	r24, Z+2	; 0x02
     df0:	93 81       	ldd	r25, Z+3	; 0x03
     df2:	0c 5f       	subi	r16, 0xFC	; 252
     df4:	1f 4f       	sbci	r17, 0xFF	; 255
     df6:	06 c0       	rjmp	.+12     	; 0xe04 <vfprintf+0x29c>
     df8:	60 81       	ld	r22, Z
     dfa:	71 81       	ldd	r23, Z+1	; 0x01
     dfc:	80 e0       	ldi	r24, 0x00	; 0
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	0e 5f       	subi	r16, 0xFE	; 254
     e02:	1f 4f       	sbci	r17, 0xFF	; 255
     e04:	a4 01       	movw	r20, r8
     e06:	2e d2       	rcall	.+1116   	; 0x1264 <__ultoa_invert>
     e08:	a8 2e       	mov	r10, r24
     e0a:	a8 18       	sub	r10, r8
     e0c:	fb 2d       	mov	r31, r11
     e0e:	ff 77       	andi	r31, 0x7F	; 127
     e10:	bf 2e       	mov	r11, r31
     e12:	b6 fe       	sbrs	r11, 6
     e14:	0b c0       	rjmp	.+22     	; 0xe2c <vfprintf+0x2c4>
     e16:	2b 2d       	mov	r18, r11
     e18:	2e 7f       	andi	r18, 0xFE	; 254
     e1a:	a5 14       	cp	r10, r5
     e1c:	50 f4       	brcc	.+20     	; 0xe32 <vfprintf+0x2ca>
     e1e:	b4 fe       	sbrs	r11, 4
     e20:	0a c0       	rjmp	.+20     	; 0xe36 <vfprintf+0x2ce>
     e22:	b2 fc       	sbrc	r11, 2
     e24:	08 c0       	rjmp	.+16     	; 0xe36 <vfprintf+0x2ce>
     e26:	2b 2d       	mov	r18, r11
     e28:	2e 7e       	andi	r18, 0xEE	; 238
     e2a:	05 c0       	rjmp	.+10     	; 0xe36 <vfprintf+0x2ce>
     e2c:	7a 2c       	mov	r7, r10
     e2e:	2b 2d       	mov	r18, r11
     e30:	03 c0       	rjmp	.+6      	; 0xe38 <vfprintf+0x2d0>
     e32:	7a 2c       	mov	r7, r10
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <vfprintf+0x2d0>
     e36:	75 2c       	mov	r7, r5
     e38:	24 ff       	sbrs	r18, 4
     e3a:	0d c0       	rjmp	.+26     	; 0xe56 <vfprintf+0x2ee>
     e3c:	fe 01       	movw	r30, r28
     e3e:	ea 0d       	add	r30, r10
     e40:	f1 1d       	adc	r31, r1
     e42:	80 81       	ld	r24, Z
     e44:	80 33       	cpi	r24, 0x30	; 48
     e46:	11 f4       	brne	.+4      	; 0xe4c <vfprintf+0x2e4>
     e48:	29 7e       	andi	r18, 0xE9	; 233
     e4a:	09 c0       	rjmp	.+18     	; 0xe5e <vfprintf+0x2f6>
     e4c:	22 ff       	sbrs	r18, 2
     e4e:	06 c0       	rjmp	.+12     	; 0xe5c <vfprintf+0x2f4>
     e50:	73 94       	inc	r7
     e52:	73 94       	inc	r7
     e54:	04 c0       	rjmp	.+8      	; 0xe5e <vfprintf+0x2f6>
     e56:	82 2f       	mov	r24, r18
     e58:	86 78       	andi	r24, 0x86	; 134
     e5a:	09 f0       	breq	.+2      	; 0xe5e <vfprintf+0x2f6>
     e5c:	73 94       	inc	r7
     e5e:	23 fd       	sbrc	r18, 3
     e60:	12 c0       	rjmp	.+36     	; 0xe86 <vfprintf+0x31e>
     e62:	20 ff       	sbrs	r18, 0
     e64:	06 c0       	rjmp	.+12     	; 0xe72 <vfprintf+0x30a>
     e66:	5a 2c       	mov	r5, r10
     e68:	73 14       	cp	r7, r3
     e6a:	18 f4       	brcc	.+6      	; 0xe72 <vfprintf+0x30a>
     e6c:	53 0c       	add	r5, r3
     e6e:	57 18       	sub	r5, r7
     e70:	73 2c       	mov	r7, r3
     e72:	73 14       	cp	r7, r3
     e74:	60 f4       	brcc	.+24     	; 0xe8e <vfprintf+0x326>
     e76:	b7 01       	movw	r22, r14
     e78:	80 e2       	ldi	r24, 0x20	; 32
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	2c 87       	std	Y+12, r18	; 0x0c
     e7e:	c0 d1       	rcall	.+896    	; 0x1200 <fputc>
     e80:	73 94       	inc	r7
     e82:	2c 85       	ldd	r18, Y+12	; 0x0c
     e84:	f6 cf       	rjmp	.-20     	; 0xe72 <vfprintf+0x30a>
     e86:	73 14       	cp	r7, r3
     e88:	10 f4       	brcc	.+4      	; 0xe8e <vfprintf+0x326>
     e8a:	37 18       	sub	r3, r7
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <vfprintf+0x328>
     e8e:	31 2c       	mov	r3, r1
     e90:	24 ff       	sbrs	r18, 4
     e92:	11 c0       	rjmp	.+34     	; 0xeb6 <vfprintf+0x34e>
     e94:	b7 01       	movw	r22, r14
     e96:	80 e3       	ldi	r24, 0x30	; 48
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	2c 87       	std	Y+12, r18	; 0x0c
     e9c:	b1 d1       	rcall	.+866    	; 0x1200 <fputc>
     e9e:	2c 85       	ldd	r18, Y+12	; 0x0c
     ea0:	22 ff       	sbrs	r18, 2
     ea2:	16 c0       	rjmp	.+44     	; 0xed0 <vfprintf+0x368>
     ea4:	21 ff       	sbrs	r18, 1
     ea6:	03 c0       	rjmp	.+6      	; 0xeae <vfprintf+0x346>
     ea8:	88 e5       	ldi	r24, 0x58	; 88
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	02 c0       	rjmp	.+4      	; 0xeb2 <vfprintf+0x34a>
     eae:	88 e7       	ldi	r24, 0x78	; 120
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	b7 01       	movw	r22, r14
     eb4:	0c c0       	rjmp	.+24     	; 0xece <vfprintf+0x366>
     eb6:	82 2f       	mov	r24, r18
     eb8:	86 78       	andi	r24, 0x86	; 134
     eba:	51 f0       	breq	.+20     	; 0xed0 <vfprintf+0x368>
     ebc:	21 fd       	sbrc	r18, 1
     ebe:	02 c0       	rjmp	.+4      	; 0xec4 <vfprintf+0x35c>
     ec0:	80 e2       	ldi	r24, 0x20	; 32
     ec2:	01 c0       	rjmp	.+2      	; 0xec6 <vfprintf+0x35e>
     ec4:	8b e2       	ldi	r24, 0x2B	; 43
     ec6:	27 fd       	sbrc	r18, 7
     ec8:	8d e2       	ldi	r24, 0x2D	; 45
     eca:	b7 01       	movw	r22, r14
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	98 d1       	rcall	.+816    	; 0x1200 <fputc>
     ed0:	a5 14       	cp	r10, r5
     ed2:	30 f4       	brcc	.+12     	; 0xee0 <vfprintf+0x378>
     ed4:	b7 01       	movw	r22, r14
     ed6:	80 e3       	ldi	r24, 0x30	; 48
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	92 d1       	rcall	.+804    	; 0x1200 <fputc>
     edc:	5a 94       	dec	r5
     ede:	f8 cf       	rjmp	.-16     	; 0xed0 <vfprintf+0x368>
     ee0:	aa 94       	dec	r10
     ee2:	f4 01       	movw	r30, r8
     ee4:	ea 0d       	add	r30, r10
     ee6:	f1 1d       	adc	r31, r1
     ee8:	80 81       	ld	r24, Z
     eea:	b7 01       	movw	r22, r14
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	88 d1       	rcall	.+784    	; 0x1200 <fputc>
     ef0:	a1 10       	cpse	r10, r1
     ef2:	f6 cf       	rjmp	.-20     	; 0xee0 <vfprintf+0x378>
     ef4:	33 20       	and	r3, r3
     ef6:	09 f4       	brne	.+2      	; 0xefa <vfprintf+0x392>
     ef8:	5d ce       	rjmp	.-838    	; 0xbb4 <vfprintf+0x4c>
     efa:	b7 01       	movw	r22, r14
     efc:	80 e2       	ldi	r24, 0x20	; 32
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	7f d1       	rcall	.+766    	; 0x1200 <fputc>
     f02:	3a 94       	dec	r3
     f04:	f7 cf       	rjmp	.-18     	; 0xef4 <vfprintf+0x38c>
     f06:	f7 01       	movw	r30, r14
     f08:	86 81       	ldd	r24, Z+6	; 0x06
     f0a:	97 81       	ldd	r25, Z+7	; 0x07
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <vfprintf+0x3aa>
     f0e:	8f ef       	ldi	r24, 0xFF	; 255
     f10:	9f ef       	ldi	r25, 0xFF	; 255
     f12:	2c 96       	adiw	r28, 0x0c	; 12
     f14:	0f b6       	in	r0, 0x3f	; 63
     f16:	f8 94       	cli
     f18:	de bf       	out	0x3e, r29	; 62
     f1a:	0f be       	out	0x3f, r0	; 63
     f1c:	cd bf       	out	0x3d, r28	; 61
     f1e:	df 91       	pop	r29
     f20:	cf 91       	pop	r28
     f22:	1f 91       	pop	r17
     f24:	0f 91       	pop	r16
     f26:	ff 90       	pop	r15
     f28:	ef 90       	pop	r14
     f2a:	df 90       	pop	r13
     f2c:	cf 90       	pop	r12
     f2e:	bf 90       	pop	r11
     f30:	af 90       	pop	r10
     f32:	9f 90       	pop	r9
     f34:	8f 90       	pop	r8
     f36:	7f 90       	pop	r7
     f38:	6f 90       	pop	r6
     f3a:	5f 90       	pop	r5
     f3c:	4f 90       	pop	r4
     f3e:	3f 90       	pop	r3
     f40:	2f 90       	pop	r2
     f42:	08 95       	ret

00000f44 <calloc>:
     f44:	0f 93       	push	r16
     f46:	1f 93       	push	r17
     f48:	cf 93       	push	r28
     f4a:	df 93       	push	r29
     f4c:	86 9f       	mul	r24, r22
     f4e:	80 01       	movw	r16, r0
     f50:	87 9f       	mul	r24, r23
     f52:	10 0d       	add	r17, r0
     f54:	96 9f       	mul	r25, r22
     f56:	10 0d       	add	r17, r0
     f58:	11 24       	eor	r1, r1
     f5a:	c8 01       	movw	r24, r16
     f5c:	0d d0       	rcall	.+26     	; 0xf78 <malloc>
     f5e:	ec 01       	movw	r28, r24
     f60:	00 97       	sbiw	r24, 0x00	; 0
     f62:	21 f0       	breq	.+8      	; 0xf6c <calloc+0x28>
     f64:	a8 01       	movw	r20, r16
     f66:	60 e0       	ldi	r22, 0x00	; 0
     f68:	70 e0       	ldi	r23, 0x00	; 0
     f6a:	38 d1       	rcall	.+624    	; 0x11dc <memset>
     f6c:	ce 01       	movw	r24, r28
     f6e:	df 91       	pop	r29
     f70:	cf 91       	pop	r28
     f72:	1f 91       	pop	r17
     f74:	0f 91       	pop	r16
     f76:	08 95       	ret

00000f78 <malloc>:
     f78:	cf 93       	push	r28
     f7a:	df 93       	push	r29
     f7c:	82 30       	cpi	r24, 0x02	; 2
     f7e:	91 05       	cpc	r25, r1
     f80:	10 f4       	brcc	.+4      	; 0xf86 <malloc+0xe>
     f82:	82 e0       	ldi	r24, 0x02	; 2
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	e0 91 a0 02 	lds	r30, 0x02A0
     f8a:	f0 91 a1 02 	lds	r31, 0x02A1
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	a0 e0       	ldi	r26, 0x00	; 0
     f94:	b0 e0       	ldi	r27, 0x00	; 0
     f96:	30 97       	sbiw	r30, 0x00	; 0
     f98:	39 f1       	breq	.+78     	; 0xfe8 <malloc+0x70>
     f9a:	40 81       	ld	r20, Z
     f9c:	51 81       	ldd	r21, Z+1	; 0x01
     f9e:	48 17       	cp	r20, r24
     fa0:	59 07       	cpc	r21, r25
     fa2:	b8 f0       	brcs	.+46     	; 0xfd2 <malloc+0x5a>
     fa4:	48 17       	cp	r20, r24
     fa6:	59 07       	cpc	r21, r25
     fa8:	71 f4       	brne	.+28     	; 0xfc6 <malloc+0x4e>
     faa:	82 81       	ldd	r24, Z+2	; 0x02
     fac:	93 81       	ldd	r25, Z+3	; 0x03
     fae:	10 97       	sbiw	r26, 0x00	; 0
     fb0:	29 f0       	breq	.+10     	; 0xfbc <malloc+0x44>
     fb2:	13 96       	adiw	r26, 0x03	; 3
     fb4:	9c 93       	st	X, r25
     fb6:	8e 93       	st	-X, r24
     fb8:	12 97       	sbiw	r26, 0x02	; 2
     fba:	2c c0       	rjmp	.+88     	; 0x1014 <malloc+0x9c>
     fbc:	90 93 a1 02 	sts	0x02A1, r25
     fc0:	80 93 a0 02 	sts	0x02A0, r24
     fc4:	27 c0       	rjmp	.+78     	; 0x1014 <malloc+0x9c>
     fc6:	21 15       	cp	r18, r1
     fc8:	31 05       	cpc	r19, r1
     fca:	31 f0       	breq	.+12     	; 0xfd8 <malloc+0x60>
     fcc:	42 17       	cp	r20, r18
     fce:	53 07       	cpc	r21, r19
     fd0:	18 f0       	brcs	.+6      	; 0xfd8 <malloc+0x60>
     fd2:	a9 01       	movw	r20, r18
     fd4:	db 01       	movw	r26, r22
     fd6:	01 c0       	rjmp	.+2      	; 0xfda <malloc+0x62>
     fd8:	ef 01       	movw	r28, r30
     fda:	9a 01       	movw	r18, r20
     fdc:	bd 01       	movw	r22, r26
     fde:	df 01       	movw	r26, r30
     fe0:	02 80       	ldd	r0, Z+2	; 0x02
     fe2:	f3 81       	ldd	r31, Z+3	; 0x03
     fe4:	e0 2d       	mov	r30, r0
     fe6:	d7 cf       	rjmp	.-82     	; 0xf96 <malloc+0x1e>
     fe8:	21 15       	cp	r18, r1
     fea:	31 05       	cpc	r19, r1
     fec:	f9 f0       	breq	.+62     	; 0x102c <malloc+0xb4>
     fee:	28 1b       	sub	r18, r24
     ff0:	39 0b       	sbc	r19, r25
     ff2:	24 30       	cpi	r18, 0x04	; 4
     ff4:	31 05       	cpc	r19, r1
     ff6:	80 f4       	brcc	.+32     	; 0x1018 <malloc+0xa0>
     ff8:	8a 81       	ldd	r24, Y+2	; 0x02
     ffa:	9b 81       	ldd	r25, Y+3	; 0x03
     ffc:	61 15       	cp	r22, r1
     ffe:	71 05       	cpc	r23, r1
    1000:	21 f0       	breq	.+8      	; 0x100a <malloc+0x92>
    1002:	fb 01       	movw	r30, r22
    1004:	93 83       	std	Z+3, r25	; 0x03
    1006:	82 83       	std	Z+2, r24	; 0x02
    1008:	04 c0       	rjmp	.+8      	; 0x1012 <malloc+0x9a>
    100a:	90 93 a1 02 	sts	0x02A1, r25
    100e:	80 93 a0 02 	sts	0x02A0, r24
    1012:	fe 01       	movw	r30, r28
    1014:	32 96       	adiw	r30, 0x02	; 2
    1016:	44 c0       	rjmp	.+136    	; 0x10a0 <malloc+0x128>
    1018:	fe 01       	movw	r30, r28
    101a:	e2 0f       	add	r30, r18
    101c:	f3 1f       	adc	r31, r19
    101e:	81 93       	st	Z+, r24
    1020:	91 93       	st	Z+, r25
    1022:	22 50       	subi	r18, 0x02	; 2
    1024:	31 09       	sbc	r19, r1
    1026:	39 83       	std	Y+1, r19	; 0x01
    1028:	28 83       	st	Y, r18
    102a:	3a c0       	rjmp	.+116    	; 0x10a0 <malloc+0x128>
    102c:	20 91 9e 02 	lds	r18, 0x029E
    1030:	30 91 9f 02 	lds	r19, 0x029F
    1034:	23 2b       	or	r18, r19
    1036:	41 f4       	brne	.+16     	; 0x1048 <malloc+0xd0>
    1038:	20 91 02 02 	lds	r18, 0x0202
    103c:	30 91 03 02 	lds	r19, 0x0203
    1040:	30 93 9f 02 	sts	0x029F, r19
    1044:	20 93 9e 02 	sts	0x029E, r18
    1048:	20 91 00 02 	lds	r18, 0x0200
    104c:	30 91 01 02 	lds	r19, 0x0201
    1050:	21 15       	cp	r18, r1
    1052:	31 05       	cpc	r19, r1
    1054:	41 f4       	brne	.+16     	; 0x1066 <malloc+0xee>
    1056:	2d b7       	in	r18, 0x3d	; 61
    1058:	3e b7       	in	r19, 0x3e	; 62
    105a:	40 91 04 02 	lds	r20, 0x0204
    105e:	50 91 05 02 	lds	r21, 0x0205
    1062:	24 1b       	sub	r18, r20
    1064:	35 0b       	sbc	r19, r21
    1066:	e0 91 9e 02 	lds	r30, 0x029E
    106a:	f0 91 9f 02 	lds	r31, 0x029F
    106e:	e2 17       	cp	r30, r18
    1070:	f3 07       	cpc	r31, r19
    1072:	a0 f4       	brcc	.+40     	; 0x109c <malloc+0x124>
    1074:	2e 1b       	sub	r18, r30
    1076:	3f 0b       	sbc	r19, r31
    1078:	28 17       	cp	r18, r24
    107a:	39 07       	cpc	r19, r25
    107c:	78 f0       	brcs	.+30     	; 0x109c <malloc+0x124>
    107e:	ac 01       	movw	r20, r24
    1080:	4e 5f       	subi	r20, 0xFE	; 254
    1082:	5f 4f       	sbci	r21, 0xFF	; 255
    1084:	24 17       	cp	r18, r20
    1086:	35 07       	cpc	r19, r21
    1088:	48 f0       	brcs	.+18     	; 0x109c <malloc+0x124>
    108a:	4e 0f       	add	r20, r30
    108c:	5f 1f       	adc	r21, r31
    108e:	50 93 9f 02 	sts	0x029F, r21
    1092:	40 93 9e 02 	sts	0x029E, r20
    1096:	81 93       	st	Z+, r24
    1098:	91 93       	st	Z+, r25
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <malloc+0x128>
    109c:	e0 e0       	ldi	r30, 0x00	; 0
    109e:	f0 e0       	ldi	r31, 0x00	; 0
    10a0:	cf 01       	movw	r24, r30
    10a2:	df 91       	pop	r29
    10a4:	cf 91       	pop	r28
    10a6:	08 95       	ret

000010a8 <free>:
    10a8:	cf 93       	push	r28
    10aa:	df 93       	push	r29
    10ac:	00 97       	sbiw	r24, 0x00	; 0
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <free+0xa>
    10b0:	87 c0       	rjmp	.+270    	; 0x11c0 <free+0x118>
    10b2:	fc 01       	movw	r30, r24
    10b4:	32 97       	sbiw	r30, 0x02	; 2
    10b6:	13 82       	std	Z+3, r1	; 0x03
    10b8:	12 82       	std	Z+2, r1	; 0x02
    10ba:	c0 91 a0 02 	lds	r28, 0x02A0
    10be:	d0 91 a1 02 	lds	r29, 0x02A1
    10c2:	20 97       	sbiw	r28, 0x00	; 0
    10c4:	81 f4       	brne	.+32     	; 0x10e6 <free+0x3e>
    10c6:	20 81       	ld	r18, Z
    10c8:	31 81       	ldd	r19, Z+1	; 0x01
    10ca:	28 0f       	add	r18, r24
    10cc:	39 1f       	adc	r19, r25
    10ce:	80 91 9e 02 	lds	r24, 0x029E
    10d2:	90 91 9f 02 	lds	r25, 0x029F
    10d6:	82 17       	cp	r24, r18
    10d8:	93 07       	cpc	r25, r19
    10da:	79 f5       	brne	.+94     	; 0x113a <free+0x92>
    10dc:	f0 93 9f 02 	sts	0x029F, r31
    10e0:	e0 93 9e 02 	sts	0x029E, r30
    10e4:	6d c0       	rjmp	.+218    	; 0x11c0 <free+0x118>
    10e6:	de 01       	movw	r26, r28
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	ae 17       	cp	r26, r30
    10ee:	bf 07       	cpc	r27, r31
    10f0:	50 f4       	brcc	.+20     	; 0x1106 <free+0x5e>
    10f2:	12 96       	adiw	r26, 0x02	; 2
    10f4:	4d 91       	ld	r20, X+
    10f6:	5c 91       	ld	r21, X
    10f8:	13 97       	sbiw	r26, 0x03	; 3
    10fa:	9d 01       	movw	r18, r26
    10fc:	41 15       	cp	r20, r1
    10fe:	51 05       	cpc	r21, r1
    1100:	09 f1       	breq	.+66     	; 0x1144 <free+0x9c>
    1102:	da 01       	movw	r26, r20
    1104:	f3 cf       	rjmp	.-26     	; 0x10ec <free+0x44>
    1106:	b3 83       	std	Z+3, r27	; 0x03
    1108:	a2 83       	std	Z+2, r26	; 0x02
    110a:	40 81       	ld	r20, Z
    110c:	51 81       	ldd	r21, Z+1	; 0x01
    110e:	84 0f       	add	r24, r20
    1110:	95 1f       	adc	r25, r21
    1112:	8a 17       	cp	r24, r26
    1114:	9b 07       	cpc	r25, r27
    1116:	71 f4       	brne	.+28     	; 0x1134 <free+0x8c>
    1118:	8d 91       	ld	r24, X+
    111a:	9c 91       	ld	r25, X
    111c:	11 97       	sbiw	r26, 0x01	; 1
    111e:	84 0f       	add	r24, r20
    1120:	95 1f       	adc	r25, r21
    1122:	02 96       	adiw	r24, 0x02	; 2
    1124:	91 83       	std	Z+1, r25	; 0x01
    1126:	80 83       	st	Z, r24
    1128:	12 96       	adiw	r26, 0x02	; 2
    112a:	8d 91       	ld	r24, X+
    112c:	9c 91       	ld	r25, X
    112e:	13 97       	sbiw	r26, 0x03	; 3
    1130:	93 83       	std	Z+3, r25	; 0x03
    1132:	82 83       	std	Z+2, r24	; 0x02
    1134:	21 15       	cp	r18, r1
    1136:	31 05       	cpc	r19, r1
    1138:	29 f4       	brne	.+10     	; 0x1144 <free+0x9c>
    113a:	f0 93 a1 02 	sts	0x02A1, r31
    113e:	e0 93 a0 02 	sts	0x02A0, r30
    1142:	3e c0       	rjmp	.+124    	; 0x11c0 <free+0x118>
    1144:	d9 01       	movw	r26, r18
    1146:	13 96       	adiw	r26, 0x03	; 3
    1148:	fc 93       	st	X, r31
    114a:	ee 93       	st	-X, r30
    114c:	12 97       	sbiw	r26, 0x02	; 2
    114e:	4d 91       	ld	r20, X+
    1150:	5d 91       	ld	r21, X+
    1152:	a4 0f       	add	r26, r20
    1154:	b5 1f       	adc	r27, r21
    1156:	ea 17       	cp	r30, r26
    1158:	fb 07       	cpc	r31, r27
    115a:	79 f4       	brne	.+30     	; 0x117a <free+0xd2>
    115c:	80 81       	ld	r24, Z
    115e:	91 81       	ldd	r25, Z+1	; 0x01
    1160:	84 0f       	add	r24, r20
    1162:	95 1f       	adc	r25, r21
    1164:	02 96       	adiw	r24, 0x02	; 2
    1166:	d9 01       	movw	r26, r18
    1168:	11 96       	adiw	r26, 0x01	; 1
    116a:	9c 93       	st	X, r25
    116c:	8e 93       	st	-X, r24
    116e:	82 81       	ldd	r24, Z+2	; 0x02
    1170:	93 81       	ldd	r25, Z+3	; 0x03
    1172:	13 96       	adiw	r26, 0x03	; 3
    1174:	9c 93       	st	X, r25
    1176:	8e 93       	st	-X, r24
    1178:	12 97       	sbiw	r26, 0x02	; 2
    117a:	e0 e0       	ldi	r30, 0x00	; 0
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	8a 81       	ldd	r24, Y+2	; 0x02
    1180:	9b 81       	ldd	r25, Y+3	; 0x03
    1182:	00 97       	sbiw	r24, 0x00	; 0
    1184:	19 f0       	breq	.+6      	; 0x118c <free+0xe4>
    1186:	fe 01       	movw	r30, r28
    1188:	ec 01       	movw	r28, r24
    118a:	f9 cf       	rjmp	.-14     	; 0x117e <free+0xd6>
    118c:	ce 01       	movw	r24, r28
    118e:	02 96       	adiw	r24, 0x02	; 2
    1190:	28 81       	ld	r18, Y
    1192:	39 81       	ldd	r19, Y+1	; 0x01
    1194:	82 0f       	add	r24, r18
    1196:	93 1f       	adc	r25, r19
    1198:	20 91 9e 02 	lds	r18, 0x029E
    119c:	30 91 9f 02 	lds	r19, 0x029F
    11a0:	28 17       	cp	r18, r24
    11a2:	39 07       	cpc	r19, r25
    11a4:	69 f4       	brne	.+26     	; 0x11c0 <free+0x118>
    11a6:	30 97       	sbiw	r30, 0x00	; 0
    11a8:	29 f4       	brne	.+10     	; 0x11b4 <free+0x10c>
    11aa:	10 92 a1 02 	sts	0x02A1, r1
    11ae:	10 92 a0 02 	sts	0x02A0, r1
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <free+0x110>
    11b4:	13 82       	std	Z+3, r1	; 0x03
    11b6:	12 82       	std	Z+2, r1	; 0x02
    11b8:	d0 93 9f 02 	sts	0x029F, r29
    11bc:	c0 93 9e 02 	sts	0x029E, r28
    11c0:	df 91       	pop	r29
    11c2:	cf 91       	pop	r28
    11c4:	08 95       	ret

000011c6 <strnlen_P>:
    11c6:	fc 01       	movw	r30, r24
    11c8:	05 90       	lpm	r0, Z+
    11ca:	61 50       	subi	r22, 0x01	; 1
    11cc:	70 40       	sbci	r23, 0x00	; 0
    11ce:	01 10       	cpse	r0, r1
    11d0:	d8 f7       	brcc	.-10     	; 0x11c8 <strnlen_P+0x2>
    11d2:	80 95       	com	r24
    11d4:	90 95       	com	r25
    11d6:	8e 0f       	add	r24, r30
    11d8:	9f 1f       	adc	r25, r31
    11da:	08 95       	ret

000011dc <memset>:
    11dc:	dc 01       	movw	r26, r24
    11de:	01 c0       	rjmp	.+2      	; 0x11e2 <memset+0x6>
    11e0:	6d 93       	st	X+, r22
    11e2:	41 50       	subi	r20, 0x01	; 1
    11e4:	50 40       	sbci	r21, 0x00	; 0
    11e6:	e0 f7       	brcc	.-8      	; 0x11e0 <memset+0x4>
    11e8:	08 95       	ret

000011ea <strnlen>:
    11ea:	fc 01       	movw	r30, r24
    11ec:	61 50       	subi	r22, 0x01	; 1
    11ee:	70 40       	sbci	r23, 0x00	; 0
    11f0:	01 90       	ld	r0, Z+
    11f2:	01 10       	cpse	r0, r1
    11f4:	d8 f7       	brcc	.-10     	; 0x11ec <strnlen+0x2>
    11f6:	80 95       	com	r24
    11f8:	90 95       	com	r25
    11fa:	8e 0f       	add	r24, r30
    11fc:	9f 1f       	adc	r25, r31
    11fe:	08 95       	ret

00001200 <fputc>:
    1200:	0f 93       	push	r16
    1202:	1f 93       	push	r17
    1204:	cf 93       	push	r28
    1206:	df 93       	push	r29
    1208:	18 2f       	mov	r17, r24
    120a:	09 2f       	mov	r16, r25
    120c:	eb 01       	movw	r28, r22
    120e:	8b 81       	ldd	r24, Y+3	; 0x03
    1210:	81 fd       	sbrc	r24, 1
    1212:	03 c0       	rjmp	.+6      	; 0x121a <fputc+0x1a>
    1214:	8f ef       	ldi	r24, 0xFF	; 255
    1216:	9f ef       	ldi	r25, 0xFF	; 255
    1218:	20 c0       	rjmp	.+64     	; 0x125a <fputc+0x5a>
    121a:	82 ff       	sbrs	r24, 2
    121c:	10 c0       	rjmp	.+32     	; 0x123e <fputc+0x3e>
    121e:	4e 81       	ldd	r20, Y+6	; 0x06
    1220:	5f 81       	ldd	r21, Y+7	; 0x07
    1222:	2c 81       	ldd	r18, Y+4	; 0x04
    1224:	3d 81       	ldd	r19, Y+5	; 0x05
    1226:	42 17       	cp	r20, r18
    1228:	53 07       	cpc	r21, r19
    122a:	7c f4       	brge	.+30     	; 0x124a <fputc+0x4a>
    122c:	e8 81       	ld	r30, Y
    122e:	f9 81       	ldd	r31, Y+1	; 0x01
    1230:	9f 01       	movw	r18, r30
    1232:	2f 5f       	subi	r18, 0xFF	; 255
    1234:	3f 4f       	sbci	r19, 0xFF	; 255
    1236:	39 83       	std	Y+1, r19	; 0x01
    1238:	28 83       	st	Y, r18
    123a:	10 83       	st	Z, r17
    123c:	06 c0       	rjmp	.+12     	; 0x124a <fputc+0x4a>
    123e:	e8 85       	ldd	r30, Y+8	; 0x08
    1240:	f9 85       	ldd	r31, Y+9	; 0x09
    1242:	81 2f       	mov	r24, r17
    1244:	19 95       	eicall
    1246:	89 2b       	or	r24, r25
    1248:	29 f7       	brne	.-54     	; 0x1214 <fputc+0x14>
    124a:	2e 81       	ldd	r18, Y+6	; 0x06
    124c:	3f 81       	ldd	r19, Y+7	; 0x07
    124e:	2f 5f       	subi	r18, 0xFF	; 255
    1250:	3f 4f       	sbci	r19, 0xFF	; 255
    1252:	3f 83       	std	Y+7, r19	; 0x07
    1254:	2e 83       	std	Y+6, r18	; 0x06
    1256:	81 2f       	mov	r24, r17
    1258:	90 2f       	mov	r25, r16
    125a:	df 91       	pop	r29
    125c:	cf 91       	pop	r28
    125e:	1f 91       	pop	r17
    1260:	0f 91       	pop	r16
    1262:	08 95       	ret

00001264 <__ultoa_invert>:
    1264:	fa 01       	movw	r30, r20
    1266:	aa 27       	eor	r26, r26
    1268:	28 30       	cpi	r18, 0x08	; 8
    126a:	51 f1       	breq	.+84     	; 0x12c0 <__ultoa_invert+0x5c>
    126c:	20 31       	cpi	r18, 0x10	; 16
    126e:	81 f1       	breq	.+96     	; 0x12d0 <__ultoa_invert+0x6c>
    1270:	e8 94       	clt
    1272:	6f 93       	push	r22
    1274:	6e 7f       	andi	r22, 0xFE	; 254
    1276:	6e 5f       	subi	r22, 0xFE	; 254
    1278:	7f 4f       	sbci	r23, 0xFF	; 255
    127a:	8f 4f       	sbci	r24, 0xFF	; 255
    127c:	9f 4f       	sbci	r25, 0xFF	; 255
    127e:	af 4f       	sbci	r26, 0xFF	; 255
    1280:	b1 e0       	ldi	r27, 0x01	; 1
    1282:	3e d0       	rcall	.+124    	; 0x1300 <__ultoa_invert+0x9c>
    1284:	b4 e0       	ldi	r27, 0x04	; 4
    1286:	3c d0       	rcall	.+120    	; 0x1300 <__ultoa_invert+0x9c>
    1288:	67 0f       	add	r22, r23
    128a:	78 1f       	adc	r23, r24
    128c:	89 1f       	adc	r24, r25
    128e:	9a 1f       	adc	r25, r26
    1290:	a1 1d       	adc	r26, r1
    1292:	68 0f       	add	r22, r24
    1294:	79 1f       	adc	r23, r25
    1296:	8a 1f       	adc	r24, r26
    1298:	91 1d       	adc	r25, r1
    129a:	a1 1d       	adc	r26, r1
    129c:	6a 0f       	add	r22, r26
    129e:	71 1d       	adc	r23, r1
    12a0:	81 1d       	adc	r24, r1
    12a2:	91 1d       	adc	r25, r1
    12a4:	a1 1d       	adc	r26, r1
    12a6:	20 d0       	rcall	.+64     	; 0x12e8 <__ultoa_invert+0x84>
    12a8:	09 f4       	brne	.+2      	; 0x12ac <__ultoa_invert+0x48>
    12aa:	68 94       	set
    12ac:	3f 91       	pop	r19
    12ae:	2a e0       	ldi	r18, 0x0A	; 10
    12b0:	26 9f       	mul	r18, r22
    12b2:	11 24       	eor	r1, r1
    12b4:	30 19       	sub	r19, r0
    12b6:	30 5d       	subi	r19, 0xD0	; 208
    12b8:	31 93       	st	Z+, r19
    12ba:	de f6       	brtc	.-74     	; 0x1272 <__ultoa_invert+0xe>
    12bc:	cf 01       	movw	r24, r30
    12be:	08 95       	ret
    12c0:	46 2f       	mov	r20, r22
    12c2:	47 70       	andi	r20, 0x07	; 7
    12c4:	40 5d       	subi	r20, 0xD0	; 208
    12c6:	41 93       	st	Z+, r20
    12c8:	b3 e0       	ldi	r27, 0x03	; 3
    12ca:	0f d0       	rcall	.+30     	; 0x12ea <__ultoa_invert+0x86>
    12cc:	c9 f7       	brne	.-14     	; 0x12c0 <__ultoa_invert+0x5c>
    12ce:	f6 cf       	rjmp	.-20     	; 0x12bc <__ultoa_invert+0x58>
    12d0:	46 2f       	mov	r20, r22
    12d2:	4f 70       	andi	r20, 0x0F	; 15
    12d4:	40 5d       	subi	r20, 0xD0	; 208
    12d6:	4a 33       	cpi	r20, 0x3A	; 58
    12d8:	18 f0       	brcs	.+6      	; 0x12e0 <__ultoa_invert+0x7c>
    12da:	49 5d       	subi	r20, 0xD9	; 217
    12dc:	31 fd       	sbrc	r19, 1
    12de:	40 52       	subi	r20, 0x20	; 32
    12e0:	41 93       	st	Z+, r20
    12e2:	02 d0       	rcall	.+4      	; 0x12e8 <__ultoa_invert+0x84>
    12e4:	a9 f7       	brne	.-22     	; 0x12d0 <__ultoa_invert+0x6c>
    12e6:	ea cf       	rjmp	.-44     	; 0x12bc <__ultoa_invert+0x58>
    12e8:	b4 e0       	ldi	r27, 0x04	; 4
    12ea:	a6 95       	lsr	r26
    12ec:	97 95       	ror	r25
    12ee:	87 95       	ror	r24
    12f0:	77 95       	ror	r23
    12f2:	67 95       	ror	r22
    12f4:	ba 95       	dec	r27
    12f6:	c9 f7       	brne	.-14     	; 0x12ea <__ultoa_invert+0x86>
    12f8:	00 97       	sbiw	r24, 0x00	; 0
    12fa:	61 05       	cpc	r22, r1
    12fc:	71 05       	cpc	r23, r1
    12fe:	08 95       	ret
    1300:	9b 01       	movw	r18, r22
    1302:	ac 01       	movw	r20, r24
    1304:	0a 2e       	mov	r0, r26
    1306:	06 94       	lsr	r0
    1308:	57 95       	ror	r21
    130a:	47 95       	ror	r20
    130c:	37 95       	ror	r19
    130e:	27 95       	ror	r18
    1310:	ba 95       	dec	r27
    1312:	c9 f7       	brne	.-14     	; 0x1306 <__ultoa_invert+0xa2>
    1314:	62 0f       	add	r22, r18
    1316:	73 1f       	adc	r23, r19
    1318:	84 1f       	adc	r24, r20
    131a:	95 1f       	adc	r25, r21
    131c:	a0 1d       	adc	r26, r0
    131e:	08 95       	ret

00001320 <_exit>:
    1320:	f8 94       	cli

00001322 <__stop_program>:
    1322:	ff cf       	rjmp	.-2      	; 0x1322 <__stop_program>
