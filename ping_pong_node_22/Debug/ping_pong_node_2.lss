
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b0  00800200  00001b56  00001bea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b56  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002b0  008002b0  00001c9a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c9a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000220  00000000  00000000  00001cf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001fa4  00000000  00000000  00001f16  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ea1  00000000  00000000  00003eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001348  00000000  00000000  00004d5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000534  00000000  00000000  000060a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000785  00000000  00000000  000065d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000136d  00000000  00000000  00006d5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000190  00000000  00000000  000080ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	32 c6       	rjmp	.+3172   	; 0xd02 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	9c 06       	cpc	r9, r28
      e6:	ee 06       	cpc	r14, r30
      e8:	ee 06       	cpc	r14, r30
      ea:	ee 06       	cpc	r14, r30
      ec:	ee 06       	cpc	r14, r30
      ee:	ee 06       	cpc	r14, r30
      f0:	ee 06       	cpc	r14, r30
      f2:	ee 06       	cpc	r14, r30
      f4:	9c 06       	cpc	r9, r28
      f6:	ee 06       	cpc	r14, r30
      f8:	ee 06       	cpc	r14, r30
      fa:	ee 06       	cpc	r14, r30
      fc:	ee 06       	cpc	r14, r30
      fe:	ee 06       	cpc	r14, r30
     100:	ee 06       	cpc	r14, r30
     102:	ee 06       	cpc	r14, r30
     104:	9e 06       	cpc	r9, r30
     106:	ee 06       	cpc	r14, r30
     108:	ee 06       	cpc	r14, r30
     10a:	ee 06       	cpc	r14, r30
     10c:	ee 06       	cpc	r14, r30
     10e:	ee 06       	cpc	r14, r30
     110:	ee 06       	cpc	r14, r30
     112:	ee 06       	cpc	r14, r30
     114:	ee 06       	cpc	r14, r30
     116:	ee 06       	cpc	r14, r30
     118:	ee 06       	cpc	r14, r30
     11a:	ee 06       	cpc	r14, r30
     11c:	ee 06       	cpc	r14, r30
     11e:	ee 06       	cpc	r14, r30
     120:	ee 06       	cpc	r14, r30
     122:	ee 06       	cpc	r14, r30
     124:	9e 06       	cpc	r9, r30
     126:	ee 06       	cpc	r14, r30
     128:	ee 06       	cpc	r14, r30
     12a:	ee 06       	cpc	r14, r30
     12c:	ee 06       	cpc	r14, r30
     12e:	ee 06       	cpc	r14, r30
     130:	ee 06       	cpc	r14, r30
     132:	ee 06       	cpc	r14, r30
     134:	ee 06       	cpc	r14, r30
     136:	ee 06       	cpc	r14, r30
     138:	ee 06       	cpc	r14, r30
     13a:	ee 06       	cpc	r14, r30
     13c:	ee 06       	cpc	r14, r30
     13e:	ee 06       	cpc	r14, r30
     140:	ee 06       	cpc	r14, r30
     142:	ee 06       	cpc	r14, r30
     144:	ea 06       	cpc	r14, r26
     146:	ee 06       	cpc	r14, r30
     148:	ee 06       	cpc	r14, r30
     14a:	ee 06       	cpc	r14, r30
     14c:	ee 06       	cpc	r14, r30
     14e:	ee 06       	cpc	r14, r30
     150:	ee 06       	cpc	r14, r30
     152:	ee 06       	cpc	r14, r30
     154:	c7 06       	cpc	r12, r23
     156:	ee 06       	cpc	r14, r30
     158:	ee 06       	cpc	r14, r30
     15a:	ee 06       	cpc	r14, r30
     15c:	ee 06       	cpc	r14, r30
     15e:	ee 06       	cpc	r14, r30
     160:	ee 06       	cpc	r14, r30
     162:	ee 06       	cpc	r14, r30
     164:	ee 06       	cpc	r14, r30
     166:	ee 06       	cpc	r14, r30
     168:	ee 06       	cpc	r14, r30
     16a:	ee 06       	cpc	r14, r30
     16c:	ee 06       	cpc	r14, r30
     16e:	ee 06       	cpc	r14, r30
     170:	ee 06       	cpc	r14, r30
     172:	ee 06       	cpc	r14, r30
     174:	bb 06       	cpc	r11, r27
     176:	ee 06       	cpc	r14, r30
     178:	ee 06       	cpc	r14, r30
     17a:	ee 06       	cpc	r14, r30
     17c:	ee 06       	cpc	r14, r30
     17e:	ee 06       	cpc	r14, r30
     180:	ee 06       	cpc	r14, r30
     182:	ee 06       	cpc	r14, r30
     184:	d9 06       	cpc	r13, r25

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e6 e5       	ldi	r30, 0x56	; 86
     19e:	fb e1       	ldi	r31, 0x1B	; 27
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a0 3b       	cpi	r26, 0xB0	; 176
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a0 eb       	ldi	r26, 0xB0	; 176
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	a5 3c       	cpi	r26, 0xC5	; 197
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	45 d1       	rcall	.+650    	; 0x44c <main>
     1c2:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <adc_init>:
     1c8:	ea e7       	ldi	r30, 0x7A	; 122
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	87 60       	ori	r24, 0x07	; 7
     1d0:	80 83       	st	Z, r24
     1d2:	80 81       	ld	r24, Z
     1d4:	80 68       	ori	r24, 0x80	; 128
     1d6:	80 83       	st	Z, r24
     1d8:	08 95       	ret

000001da <adc_read>:
     1da:	ec e7       	ldi	r30, 0x7C	; 124
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	80 68       	ori	r24, 0x80	; 128
     1e2:	80 83       	st	Z, r24
     1e4:	ea e7       	ldi	r30, 0x7A	; 122
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	80 64       	ori	r24, 0x40	; 64
     1ec:	80 83       	st	Z, r24
     1ee:	80 81       	ld	r24, Z
     1f0:	86 fd       	sbrc	r24, 6
     1f2:	fd cf       	rjmp	.-6      	; 0x1ee <adc_read+0x14>
     1f4:	20 91 78 00 	lds	r18, 0x0078
     1f8:	30 91 79 00 	lds	r19, 0x0079
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	24 36       	cpi	r18, 0x64	; 100
     202:	31 05       	cpc	r19, r1
     204:	10 f4       	brcc	.+4      	; 0x20a <adc_read+0x30>
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	08 95       	ret

0000020c <can_init>:
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	cd b7       	in	r28, 0x3d	; 61
     212:	de b7       	in	r29, 0x3e	; 62
     214:	2a 97       	sbiw	r28, 0x0a	; 10
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 d2       	rcall	.+1024   	; 0x622 <mcp2515_init>
     222:	41 e0       	ldi	r20, 0x01	; 1
     224:	60 e6       	ldi	r22, 0x60	; 96
     226:	80 e6       	ldi	r24, 0x60	; 96
     228:	1e d2       	rcall	.+1084   	; 0x666 <mcp2515_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     22a:	8f ef       	ldi	r24, 0xFF	; 255
     22c:	9f e8       	ldi	r25, 0x8F	; 143
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <can_init+0x22>
     232:	00 c0       	rjmp	.+0      	; 0x234 <can_init+0x28>
     234:	00 00       	nop
     236:	41 e0       	ldi	r20, 0x01	; 1
     238:	61 e0       	ldi	r22, 0x01	; 1
     23a:	8b e2       	ldi	r24, 0x2B	; 43
     23c:	3a d2       	rcall	.+1140   	; 0x6b2 <mcp2515_bit_modify>
     23e:	8f ef       	ldi	r24, 0xFF	; 255
     240:	9f e8       	ldi	r25, 0x8F	; 143
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <can_init+0x36>
     246:	00 c0       	rjmp	.+0      	; 0x248 <can_init+0x3c>
     248:	00 00       	nop
     24a:	40 e0       	ldi	r20, 0x00	; 0
     24c:	60 ee       	ldi	r22, 0xE0	; 224
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	30 d2       	rcall	.+1120   	; 0x6b2 <mcp2515_bit_modify>
     252:	8f ef       	ldi	r24, 0xFF	; 255
     254:	9f e8       	ldi	r25, 0x8F	; 143
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <can_init+0x4a>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <can_init+0x50>
     25c:	00 00       	nop
     25e:	4a e0       	ldi	r20, 0x0A	; 10
     260:	be 01       	movw	r22, r28
     262:	6f 5f       	subi	r22, 0xFF	; 255
     264:	7f 4f       	sbci	r23, 0xFF	; 255
     266:	8e e0       	ldi	r24, 0x0E	; 14
     268:	df d1       	rcall	.+958    	; 0x628 <mcp2515_read>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	80 7e       	andi	r24, 0xE0	; 224
     26e:	a9 f0       	breq	.+42     	; 0x29a <can_init+0x8e>
     270:	1f 92       	push	r1
     272:	8f 93       	push	r24
     274:	87 e1       	ldi	r24, 0x17	; 23
     276:	92 e0       	ldi	r25, 0x02	; 2
     278:	9f 93       	push	r25
     27a:	8f 93       	push	r24
     27c:	0e 94 8f 09 	call	0x131e	; 0x131e <printf>
     280:	8c ea       	ldi	r24, 0xAC	; 172
     282:	92 e0       	ldi	r25, 0x02	; 2
     284:	9f 93       	push	r25
     286:	8f 93       	push	r24
     288:	0e 94 8f 09 	call	0x131e	; 0x131e <printf>
     28c:	0f 90       	pop	r0
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	0f 90       	pop	r0
     296:	0f 90       	pop	r0
     298:	08 c0       	rjmp	.+16     	; 0x2aa <can_init+0x9e>
     29a:	8b e5       	ldi	r24, 0x5B	; 91
     29c:	92 e0       	ldi	r25, 0x02	; 2
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	0e 94 8f 09 	call	0x131e	; 0x131e <printf>
     2a6:	0f 90       	pop	r0
     2a8:	0f 90       	pop	r0
     2aa:	2a 96       	adiw	r28, 0x0a	; 10
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <can_message_send>:
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	ec 01       	movw	r28, r24
     2c4:	41 e0       	ldi	r20, 0x01	; 1
     2c6:	6a 81       	ldd	r22, Y+2	; 0x02
     2c8:	85 e3       	ldi	r24, 0x35	; 53
     2ca:	cd d1       	rcall	.+922    	; 0x666 <mcp2515_write>
     2cc:	41 e0       	ldi	r20, 0x01	; 1
     2ce:	68 81       	ld	r22, Y
     2d0:	81 e3       	ldi	r24, 0x31	; 49
     2d2:	c9 d1       	rcall	.+914    	; 0x666 <mcp2515_write>
     2d4:	41 e0       	ldi	r20, 0x01	; 1
     2d6:	68 81       	ld	r22, Y
     2d8:	82 e3       	ldi	r24, 0x32	; 50
     2da:	c5 d1       	rcall	.+906    	; 0x666 <mcp2515_write>
     2dc:	8a 81       	ldd	r24, Y+2	; 0x02
     2de:	88 23       	and	r24, r24
     2e0:	61 f0       	breq	.+24     	; 0x2fa <can_message_send+0x3e>
     2e2:	10 e0       	ldi	r17, 0x00	; 0
     2e4:	fe 01       	movw	r30, r28
     2e6:	e1 0f       	add	r30, r17
     2e8:	f1 1d       	adc	r31, r1
     2ea:	41 e0       	ldi	r20, 0x01	; 1
     2ec:	63 81       	ldd	r22, Z+3	; 0x03
     2ee:	86 e3       	ldi	r24, 0x36	; 54
     2f0:	ba d1       	rcall	.+884    	; 0x666 <mcp2515_write>
     2f2:	1f 5f       	subi	r17, 0xFF	; 255
     2f4:	8a 81       	ldd	r24, Y+2	; 0x02
     2f6:	18 17       	cp	r17, r24
     2f8:	a8 f3       	brcs	.-22     	; 0x2e4 <can_message_send+0x28>
     2fa:	8c ea       	ldi	r24, 0xAC	; 172
     2fc:	92 e0       	ldi	r25, 0x02	; 2
     2fe:	9f 93       	push	r25
     300:	8f 93       	push	r24
     302:	0e 94 8f 09 	call	0x131e	; 0x131e <printf>
     306:	81 e8       	ldi	r24, 0x81	; 129
     308:	c4 d1       	rcall	.+904    	; 0x692 <mcp2515_request>
     30a:	0f 90       	pop	r0
     30c:	0f 90       	pop	r0
     30e:	df 91       	pop	r29
     310:	cf 91       	pop	r28
     312:	1f 91       	pop	r17
     314:	08 95       	ret

00000316 <can_data_receive>:
     316:	ff 92       	push	r15
     318:	0f 93       	push	r16
     31a:	1f 93       	push	r17
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	2a 97       	sbiw	r28, 0x0a	; 10
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	8c 01       	movw	r16, r24
     332:	f6 2e       	mov	r15, r22
     334:	41 e0       	ldi	r20, 0x01	; 1
     336:	be 01       	movw	r22, r28
     338:	6f 5f       	subi	r22, 0xFF	; 255
     33a:	7f 4f       	sbci	r23, 0xFF	; 255
     33c:	8c e2       	ldi	r24, 0x2C	; 44
     33e:	74 d1       	rcall	.+744    	; 0x628 <mcp2515_read>
     340:	89 81       	ldd	r24, Y+1	; 0x01
     342:	81 11       	cpse	r24, r1
     344:	0b c0       	rjmp	.+22     	; 0x35c <can_data_receive+0x46>
     346:	1f 92       	push	r1
     348:	1f 92       	push	r1
     34a:	2d e6       	ldi	r18, 0x6D	; 109
     34c:	32 e0       	ldi	r19, 0x02	; 2
     34e:	3f 93       	push	r19
     350:	2f 93       	push	r18
     352:	e5 d7       	rcall	.+4042   	; 0x131e <printf>
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
     35c:	41 e0       	ldi	r20, 0x01	; 1
     35e:	be 01       	movw	r22, r28
     360:	6f 5f       	subi	r22, 0xFF	; 255
     362:	7f 4f       	sbci	r23, 0xFF	; 255
     364:	85 e6       	ldi	r24, 0x65	; 101
     366:	8f 0d       	add	r24, r15
     368:	5f d1       	rcall	.+702    	; 0x628 <mcp2515_read>
     36a:	89 81       	ldd	r24, Y+1	; 0x01
     36c:	f8 01       	movw	r30, r16
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	41 e0       	ldi	r20, 0x01	; 1
     372:	be 01       	movw	r22, r28
     374:	6f 5f       	subi	r22, 0xFF	; 255
     376:	7f 4f       	sbci	r23, 0xFF	; 255
     378:	81 e6       	ldi	r24, 0x61	; 97
     37a:	8f 0d       	add	r24, r15
     37c:	55 d1       	rcall	.+682    	; 0x628 <mcp2515_read>
     37e:	29 81       	ldd	r18, Y+1	; 0x01
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	f8 01       	movw	r30, r16
     384:	31 83       	std	Z+1, r19	; 0x01
     386:	20 83       	st	Z, r18
     388:	42 81       	ldd	r20, Z+2	; 0x02
     38a:	be 01       	movw	r22, r28
     38c:	6f 5f       	subi	r22, 0xFF	; 255
     38e:	7f 4f       	sbci	r23, 0xFF	; 255
     390:	86 e6       	ldi	r24, 0x66	; 102
     392:	8f 0d       	add	r24, r15
     394:	49 d1       	rcall	.+658    	; 0x628 <mcp2515_read>
     396:	f8 01       	movw	r30, r16
     398:	92 81       	ldd	r25, Z+2	; 0x02
     39a:	99 23       	and	r25, r25
     39c:	61 f0       	breq	.+24     	; 0x3b6 <can_data_receive+0xa0>
     39e:	9e 01       	movw	r18, r28
     3a0:	2f 5f       	subi	r18, 0xFF	; 255
     3a2:	3f 4f       	sbci	r19, 0xFF	; 255
     3a4:	d8 01       	movw	r26, r16
     3a6:	13 96       	adiw	r26, 0x03	; 3
     3a8:	f9 01       	movw	r30, r18
     3aa:	81 91       	ld	r24, Z+
     3ac:	8d 93       	st	X+, r24
     3ae:	8e 2f       	mov	r24, r30
     3b0:	82 1b       	sub	r24, r18
     3b2:	89 17       	cp	r24, r25
     3b4:	d0 f3       	brcs	.-12     	; 0x3aa <can_data_receive+0x94>
     3b6:	40 e0       	ldi	r20, 0x00	; 0
     3b8:	61 e0       	ldi	r22, 0x01	; 1
     3ba:	8c e2       	ldi	r24, 0x2C	; 44
     3bc:	7a d1       	rcall	.+756    	; 0x6b2 <mcp2515_bit_modify>
     3be:	2a 96       	adiw	r28, 0x0a	; 10
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
     3ca:	df 91       	pop	r29
     3cc:	cf 91       	pop	r28
     3ce:	1f 91       	pop	r17
     3d0:	0f 91       	pop	r16
     3d2:	ff 90       	pop	r15
     3d4:	08 95       	ret

000003d6 <can_get_message>:
     3d6:	0f 93       	push	r16
     3d8:	1f 93       	push	r17
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	2a 97       	sbiw	r28, 0x0a	; 10
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	f8 94       	cli
     3e8:	de bf       	out	0x3e, r29	; 62
     3ea:	0f be       	out	0x3f, r0	; 63
     3ec:	cd bf       	out	0x3d, r28	; 61
     3ee:	8c 01       	movw	r16, r24
     3f0:	41 e0       	ldi	r20, 0x01	; 1
     3f2:	be 01       	movw	r22, r28
     3f4:	6f 5f       	subi	r22, 0xFF	; 255
     3f6:	7f 4f       	sbci	r23, 0xFF	; 255
     3f8:	8c e2       	ldi	r24, 0x2C	; 44
     3fa:	16 d1       	rcall	.+556    	; 0x628 <mcp2515_read>
     3fc:	89 81       	ldd	r24, Y+1	; 0x01
     3fe:	80 ff       	sbrs	r24, 0
     400:	0b c0       	rjmp	.+22     	; 0x418 <can_get_message+0x42>
     402:	60 e0       	ldi	r22, 0x00	; 0
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	c8 01       	movw	r24, r16
     408:	86 df       	rcall	.-244    	; 0x316 <can_data_receive>
     40a:	40 e0       	ldi	r20, 0x00	; 0
     40c:	61 e0       	ldi	r22, 0x01	; 1
     40e:	8c e2       	ldi	r24, 0x2C	; 44
     410:	50 d1       	rcall	.+672    	; 0x6b2 <mcp2515_bit_modify>
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0f c0       	rjmp	.+30     	; 0x436 <can_get_message+0x60>
     418:	81 ff       	sbrs	r24, 1
     41a:	0b c0       	rjmp	.+22     	; 0x432 <can_get_message+0x5c>
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	70 e0       	ldi	r23, 0x00	; 0
     420:	c8 01       	movw	r24, r16
     422:	79 df       	rcall	.-270    	; 0x316 <can_data_receive>
     424:	40 e0       	ldi	r20, 0x00	; 0
     426:	62 e0       	ldi	r22, 0x02	; 2
     428:	8c e2       	ldi	r24, 0x2C	; 44
     42a:	43 d1       	rcall	.+646    	; 0x6b2 <mcp2515_bit_modify>
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	02 c0       	rjmp	.+4      	; 0x436 <can_get_message+0x60>
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	2a 96       	adiw	r28, 0x0a	; 10
     438:	0f b6       	in	r0, 0x3f	; 63
     43a:	f8 94       	cli
     43c:	de bf       	out	0x3e, r29	; 62
     43e:	0f be       	out	0x3f, r0	; 63
     440:	cd bf       	out	0x3d, r28	; 61
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	1f 91       	pop	r17
     448:	0f 91       	pop	r16
     44a:	08 95       	ret

0000044c <main>:
#include "pwm.h"
#include "adc.h"
#include "motor.h"


int main(void){
     44c:	cf 93       	push	r28
     44e:	df 93       	push	r29
     450:	cd b7       	in	r28, 0x3d	; 61
     452:	de b7       	in	r29, 0x3e	; 62
     454:	a7 97       	sbiw	r28, 0x27	; 39
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	de bf       	out	0x3e, r29	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	cd bf       	out	0x3d, r28	; 61
	
	DDRD |= (1 << PD3);//init solenoid
     460:	53 9a       	sbi	0x0a, 3	; 10
	PORTD &= (1 << PD3);//init solenoid
     462:	8b b1       	in	r24, 0x0b	; 11
     464:	88 70       	andi	r24, 0x08	; 8
     466:	8b b9       	out	0x0b, r24	; 11
	
	USART_Init(MYUBRR);
     468:	87 e6       	ldi	r24, 0x67	; 103
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	dd d4       	rcall	.+2490   	; 0xe28 <USART_Init>
	printf("start \n\r \n");
     46e:	8f e7       	ldi	r24, 0x7F	; 127
     470:	92 e0       	ldi	r25, 0x02	; 2
     472:	66 d7       	rcall	.+3788   	; 0x1340 <puts>
	
	can_init();
     474:	cb de       	rcall	.-618    	; 0x20c <can_init>
	
	struct can_message message_input;
	message_input.id = 1;
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	89 83       	std	Y+1, r24	; 0x01
	message_input.length = 1;
     47e:	21 e0       	ldi	r18, 0x01	; 1
     480:	2b 83       	std	Y+3, r18	; 0x03
	message_input.data[0] = (uint8_t) 0;
     482:	1c 82       	std	Y+4, r1	; 0x04
	
	struct can_message message_score;
	message_score.id = 1;
     484:	9f 87       	std	Y+15, r25	; 0x0f
     486:	8e 87       	std	Y+14, r24	; 0x0e
	message_score.length = 1;
     488:	28 8b       	std	Y+16, r18	; 0x10
	message_score.data[0] = (uint8_t) 0;
     48a:	19 8a       	std	Y+17, r1	; 0x11
	
	struct can_message message_game_over;
	message_game_over.id = 2;
     48c:	82 e0       	ldi	r24, 0x02	; 2
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	9c 8f       	std	Y+28, r25	; 0x1c
     492:	8b 8f       	std	Y+27, r24	; 0x1b
	message_game_over.length = 1;
     494:	2d 8f       	std	Y+29, r18	; 0x1d
	message_game_over.data[0] = (uint8_t) 1;
     496:	2e 8f       	std	Y+30, r18	; 0x1e
	

	pwm_init();	
     498:	52 d3       	rcall	.+1700   	; 0xb3e <pwm_init>
	adc_init();
     49a:	96 de       	rcall	.-724    	; 0x1c8 <adc_init>
	
	float pw = 1500;
	float x_val = 130;
	
	int old_val = adc_read();
     49c:	9e de       	rcall	.-708    	; 0x1da <adc_read>
     49e:	8c 01       	movw	r16, r24
	int new_val = adc_read();
     4a0:	9c de       	rcall	.-712    	; 0x1da <adc_read>
	
	int succesfull_bounce = 0;
	sei();
     4a2:	78 94       	sei
	motor_init();
     4a4:	3f d1       	rcall	.+638    	; 0x724 <motor_init>
	printf("init\n\r");
     4a6:	89 e8       	ldi	r24, 0x89	; 137
     4a8:	92 e0       	ldi	r25, 0x02	; 2
     4aa:	9f 93       	push	r25
     4ac:	8f 93       	push	r24
     4ae:	37 d7       	rcall	.+3694   	; 0x131e <printf>
     4b0:	2f ef       	ldi	r18, 0xFF	; 255
     4b2:	87 ea       	ldi	r24, 0xA7	; 167
     4b4:	91 e6       	ldi	r25, 0x61	; 97
     4b6:	21 50       	subi	r18, 0x01	; 1
     4b8:	80 40       	sbci	r24, 0x00	; 0
     4ba:	90 40       	sbci	r25, 0x00	; 0
     4bc:	e1 f7       	brne	.-8      	; 0x4b6 <main+0x6a>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <main+0x74>
     4c0:	00 00       	nop
	_delay_ms(2000);
	printf("init finish\n\r");
     4c2:	80 e9       	ldi	r24, 0x90	; 144
     4c4:	92 e0       	ldi	r25, 0x02	; 2
     4c6:	9f 93       	push	r25
     4c8:	8f 93       	push	r24
     4ca:	29 d7       	rcall	.+3666   	; 0x131e <printf>
	motor_reset_encoder();
     4cc:	75 d1       	rcall	.+746    	; 0x7b8 <motor_reset_encoder>
	motor_dac_write(0);
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	08 d1       	rcall	.+528    	; 0x6e2 <motor_dac_write>
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
	
	uint8_t gain_choise = 0;
     4da:	91 2c       	mov	r9, r1
	printf("init finish\n\r");
	motor_reset_encoder();
	motor_dac_write(0);
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
     4dc:	e1 2c       	mov	r14, r1
     4de:	f1 2c       	mov	r15, r1
	float x_val = 130;
	
	int old_val = adc_read();
	int new_val = adc_read();
	
	int succesfull_bounce = 0;
     4e0:	c1 2c       	mov	r12, r1
     4e2:	d1 2c       	mov	r13, r1
			}
			else if(message_input.id == 2){
				motor_pid_controller(message_input.data[0]);
			}
			else if(message_input.id == 3){	
				printf("shot \n\r");			
     4e4:	0f 2e       	mov	r0, r31
     4e6:	fe e9       	ldi	r31, 0x9E	; 158
     4e8:	af 2e       	mov	r10, r31
     4ea:	f2 e0       	ldi	r31, 0x02	; 2
     4ec:	bf 2e       	mov	r11, r31
     4ee:	f0 2d       	mov	r31, r0
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
				message_score.data[0] = succesfull_bounce;
				can_message_send(&message_score);
				enable_game_fail = 1;				
     4f0:	55 24       	eor	r5, r5
     4f2:	53 94       	inc	r5
     4f4:	61 2c       	mov	r6, r1
     4f6:	71 2c       	mov	r7, r1
     4f8:	81 2c       	mov	r8, r1
	
	uint8_t gain_choise = 0;
	uint8_t gain_val = 0;

    while(1){
		if(can_get_message(&message_input)){
     4fa:	ce 01       	movw	r24, r28
     4fc:	01 96       	adiw	r24, 0x01	; 1
     4fe:	6b df       	rcall	.-298    	; 0x3d6 <can_get_message>
     500:	89 2b       	or	r24, r25
     502:	09 f4       	brne	.+2      	; 0x506 <main+0xba>
     504:	48 c0       	rjmp	.+144    	; 0x596 <main+0x14a>
			if(message_input.id == 1){
     506:	89 81       	ldd	r24, Y+1	; 0x01
     508:	9a 81       	ldd	r25, Y+2	; 0x02
     50a:	81 30       	cpi	r24, 0x01	; 1
     50c:	91 05       	cpc	r25, r1
     50e:	79 f4       	brne	.+30     	; 0x52e <main+0xe2>
				x_val = 255-(float) message_input.data[0];
     510:	6c 81       	ldd	r22, Y+4	; 0x04
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	99 d5       	rcall	.+2866   	; 0x104c <__floatunsisf>
     51a:	9b 01       	movw	r18, r22
     51c:	ac 01       	movw	r20, r24
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	70 e0       	ldi	r23, 0x00	; 0
     522:	8f e7       	ldi	r24, 0x7F	; 127
     524:	93 e4       	ldi	r25, 0x43	; 67
     526:	90 d4       	rcall	.+2336   	; 0xe48 <__subsf3>
				pw = pwm_scale_joystick_val(x_val);
     528:	72 d3       	rcall	.+1764   	; 0xc0e <pwm_scale_joystick_val>
				pwm_set_pulse_width(pw);
     52a:	28 d3       	rcall	.+1616   	; 0xb7c <pwm_set_pulse_width>
     52c:	34 c0       	rjmp	.+104    	; 0x596 <main+0x14a>
				
			}
			else if(message_input.id == 2){
     52e:	82 30       	cpi	r24, 0x02	; 2
     530:	91 05       	cpc	r25, r1
     532:	19 f4       	brne	.+6      	; 0x53a <main+0xee>
				motor_pid_controller(message_input.data[0]);
     534:	8c 81       	ldd	r24, Y+4	; 0x04
     536:	4d d1       	rcall	.+666    	; 0x7d2 <motor_pid_controller>
     538:	2e c0       	rjmp	.+92     	; 0x596 <main+0x14a>
			}
			else if(message_input.id == 3){	
     53a:	83 30       	cpi	r24, 0x03	; 3
     53c:	91 05       	cpc	r25, r1
     53e:	f1 f4       	brne	.+60     	; 0x57c <main+0x130>
				printf("shot \n\r");			
     540:	bf 92       	push	r11
     542:	af 92       	push	r10
     544:	ec d6       	rcall	.+3544   	; 0x131e <printf>
				PORTD |= (1 << PD3);
     546:	5b 9a       	sbi	0x0b, 3	; 11
     548:	2f ef       	ldi	r18, 0xFF	; 255
     54a:	81 ee       	ldi	r24, 0xE1	; 225
     54c:	94 e0       	ldi	r25, 0x04	; 4
     54e:	21 50       	subi	r18, 0x01	; 1
     550:	80 40       	sbci	r24, 0x00	; 0
     552:	90 40       	sbci	r25, 0x00	; 0
     554:	e1 f7       	brne	.-8      	; 0x54e <main+0x102>
     556:	00 c0       	rjmp	.+0      	; 0x558 <main+0x10c>
     558:	00 00       	nop
				_delay_ms(100);
				PORTD &= ~(1 << PD3);
     55a:	5b 98       	cbi	0x0b, 3	; 11
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	dd 20       	and	r13, r13
     562:	14 f4       	brge	.+4      	; 0x568 <main+0x11c>
     564:	c7 2c       	mov	r12, r7
     566:	d8 2c       	mov	r13, r8
				if (succesfull_bounce < 0)
				{
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
     568:	2f ef       	ldi	r18, 0xFF	; 255
     56a:	c2 1a       	sub	r12, r18
     56c:	d2 0a       	sbc	r13, r18
				message_score.data[0] = succesfull_bounce;
     56e:	c9 8a       	std	Y+17, r12	; 0x11
				can_message_send(&message_score);
     570:	ce 01       	movw	r24, r28
     572:	0e 96       	adiw	r24, 0x0e	; 14
     574:	a3 de       	rcall	.-698    	; 0x2bc <can_message_send>
				enable_game_fail = 1;				
     576:	e5 2c       	mov	r14, r5
     578:	f6 2c       	mov	r15, r6
     57a:	0d c0       	rjmp	.+26     	; 0x596 <main+0x14a>
			}
			else if (message_input.id == 4){
     57c:	84 30       	cpi	r24, 0x04	; 4
     57e:	91 05       	cpc	r25, r1
     580:	29 f4       	brne	.+10     	; 0x58c <main+0x140>
				gain_choise = message_input.data[0];
     582:	9c 80       	ldd	r9, Y+4	; 0x04
				motor_set_gain(gain_choise);
     584:	89 2d       	mov	r24, r9
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	1b d2       	rcall	.+1078   	; 0x9c0 <motor_set_gain>
     58a:	05 c0       	rjmp	.+10     	; 0x596 <main+0x14a>
			}else if (message_input.id == 5){
     58c:	05 97       	sbiw	r24, 0x05	; 5
     58e:	19 f4       	brne	.+6      	; 0x596 <main+0x14a>
				gain_val = message_input.data[0];
				motor_tune_gain(gain_choise, gain_val);
     590:	6c 81       	ldd	r22, Y+4	; 0x04
     592:	89 2d       	mov	r24, r9
     594:	86 d2       	rcall	.+1292   	; 0xaa2 <motor_tune_gain>
			}			
		}

		
		
		new_val = adc_read();
     596:	21 de       	rcall	.-958    	; 0x1da <adc_read>

		
		if( (old_val == 0) && (new_val == 1) )
     598:	01 15       	cp	r16, r1
     59a:	11 05       	cpc	r17, r1
     59c:	79 f4       	brne	.+30     	; 0x5bc <main+0x170>
     59e:	01 97       	sbiw	r24, 0x01	; 1
     5a0:	09 f0       	breq	.+2      	; 0x5a4 <main+0x158>
     5a2:	ab cf       	rjmp	.-170    	; 0x4fa <main+0xae>
     5a4:	8f ef       	ldi	r24, 0xFF	; 255
     5a6:	90 e7       	ldi	r25, 0x70	; 112
     5a8:	22 e0       	ldi	r18, 0x02	; 2
     5aa:	81 50       	subi	r24, 0x01	; 1
     5ac:	90 40       	sbci	r25, 0x00	; 0
     5ae:	20 40       	sbci	r18, 0x00	; 0
     5b0:	e1 f7       	brne	.-8      	; 0x5aa <main+0x15e>
     5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <main+0x168>
     5b4:	00 00       	nop
		{
			old_val = 1;
     5b6:	05 2d       	mov	r16, r5
     5b8:	16 2d       	mov	r17, r6
     5ba:	9f cf       	rjmp	.-194    	; 0x4fa <main+0xae>
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
     5bc:	01 30       	cpi	r16, 0x01	; 1
     5be:	11 05       	cpc	r17, r1
     5c0:	09 f0       	breq	.+2      	; 0x5c4 <main+0x178>
     5c2:	9b cf       	rjmp	.-202    	; 0x4fa <main+0xae>
     5c4:	89 2b       	or	r24, r25
     5c6:	09 f0       	breq	.+2      	; 0x5ca <main+0x17e>
     5c8:	98 cf       	rjmp	.-208    	; 0x4fa <main+0xae>
     5ca:	e1 14       	cp	r14, r1
     5cc:	f1 04       	cpc	r15, r1
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <main+0x186>
     5d0:	94 cf       	rjmp	.-216    	; 0x4fa <main+0xae>
     5d2:	8f ef       	ldi	r24, 0xFF	; 255
     5d4:	90 e7       	ldi	r25, 0x70	; 112
     5d6:	22 e0       	ldi	r18, 0x02	; 2
     5d8:	81 50       	subi	r24, 0x01	; 1
     5da:	90 40       	sbci	r25, 0x00	; 0
     5dc:	20 40       	sbci	r18, 0x00	; 0
     5de:	e1 f7       	brne	.-8      	; 0x5d8 <main+0x18c>
     5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <main+0x196>
     5e2:	00 00       	nop
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
			message_score.data[0] = succesfull_bounce;
     5e4:	19 8a       	std	Y+17, r1	; 0x11
			can_message_send(&message_game_over);
     5e6:	ce 01       	movw	r24, r28
     5e8:	4b 96       	adiw	r24, 0x1b	; 27
     5ea:	68 de       	rcall	.-816    	; 0x2bc <can_message_send>
			can_message_send(&message_score);
     5ec:	ce 01       	movw	r24, r28
     5ee:	0e 96       	adiw	r24, 0x0e	; 14
     5f0:	65 de       	rcall	.-822    	; 0x2bc <can_message_send>
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
     5f2:	e7 2c       	mov	r14, r7
     5f4:	f8 2c       	mov	r15, r8
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
     5f6:	c7 2c       	mov	r12, r7
     5f8:	d8 2c       	mov	r13, r8
			old_val = 1;
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
     5fa:	07 2d       	mov	r16, r7
     5fc:	18 2d       	mov	r17, r8
     5fe:	7d cf       	rjmp	.-262    	; 0x4fa <main+0xae>

00000600 <mcp2515_reset>:
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	1f 92       	push	r1
     606:	cd b7       	in	r28, 0x3d	; 61
     608:	de b7       	in	r29, 0x3e	; 62
     60a:	2f 98       	cbi	0x05, 7	; 5
     60c:	80 ec       	ldi	r24, 0xC0	; 192
     60e:	89 83       	std	Y+1, r24	; 0x01
     610:	61 e0       	ldi	r22, 0x01	; 1
     612:	ce 01       	movw	r24, r28
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	35 d3       	rcall	.+1642   	; 0xc82 <spi_write>
     618:	2f 9a       	sbi	0x05, 7	; 5
     61a:	0f 90       	pop	r0
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	08 95       	ret

00000622 <mcp2515_init>:
     622:	00 d3       	rcall	.+1536   	; 0xc24 <spi_init>
     624:	ed cf       	rjmp	.-38     	; 0x600 <mcp2515_reset>
     626:	08 95       	ret

00000628 <mcp2515_read>:
     628:	ff 92       	push	r15
     62a:	0f 93       	push	r16
     62c:	1f 93       	push	r17
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
     632:	1f 92       	push	r1
     634:	1f 92       	push	r1
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
     63a:	8b 01       	movw	r16, r22
     63c:	f4 2e       	mov	r15, r20
     63e:	2f 98       	cbi	0x05, 7	; 5
     640:	93 e0       	ldi	r25, 0x03	; 3
     642:	99 83       	std	Y+1, r25	; 0x01
     644:	8a 83       	std	Y+2, r24	; 0x02
     646:	62 e0       	ldi	r22, 0x02	; 2
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	1a d3       	rcall	.+1588   	; 0xc82 <spi_write>
     64e:	6f 2d       	mov	r22, r15
     650:	c8 01       	movw	r24, r16
     652:	f1 d2       	rcall	.+1506   	; 0xc36 <spi_read>
     654:	2f 9a       	sbi	0x05, 7	; 5
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	df 91       	pop	r29
     65c:	cf 91       	pop	r28
     65e:	1f 91       	pop	r17
     660:	0f 91       	pop	r16
     662:	ff 90       	pop	r15
     664:	08 95       	ret

00000666 <mcp2515_write>:
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	00 d0       	rcall	.+0      	; 0x66c <mcp2515_write+0x6>
     66c:	cd b7       	in	r28, 0x3d	; 61
     66e:	de b7       	in	r29, 0x3e	; 62
     670:	2f 98       	cbi	0x05, 7	; 5
     672:	92 e0       	ldi	r25, 0x02	; 2
     674:	99 83       	std	Y+1, r25	; 0x01
     676:	8a 83       	std	Y+2, r24	; 0x02
     678:	6b 83       	std	Y+3, r22	; 0x03
     67a:	62 e0       	ldi	r22, 0x02	; 2
     67c:	64 0f       	add	r22, r20
     67e:	ce 01       	movw	r24, r28
     680:	01 96       	adiw	r24, 0x01	; 1
     682:	ff d2       	rcall	.+1534   	; 0xc82 <spi_write>
     684:	2f 9a       	sbi	0x05, 7	; 5
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	08 95       	ret

00000692 <mcp2515_request>:
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	1f 92       	push	r1
     698:	cd b7       	in	r28, 0x3d	; 61
     69a:	de b7       	in	r29, 0x3e	; 62
     69c:	2f 98       	cbi	0x05, 7	; 5
     69e:	89 83       	std	Y+1, r24	; 0x01
     6a0:	61 e0       	ldi	r22, 0x01	; 1
     6a2:	ce 01       	movw	r24, r28
     6a4:	01 96       	adiw	r24, 0x01	; 1
     6a6:	ed d2       	rcall	.+1498   	; 0xc82 <spi_write>
     6a8:	2f 9a       	sbi	0x05, 7	; 5
     6aa:	0f 90       	pop	r0
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret

000006b2 <mcp2515_bit_modify>:
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	00 d0       	rcall	.+0      	; 0x6b8 <mcp2515_bit_modify+0x6>
     6b8:	1f 92       	push	r1
     6ba:	cd b7       	in	r28, 0x3d	; 61
     6bc:	de b7       	in	r29, 0x3e	; 62
     6be:	2f 98       	cbi	0x05, 7	; 5
     6c0:	95 e0       	ldi	r25, 0x05	; 5
     6c2:	99 83       	std	Y+1, r25	; 0x01
     6c4:	8a 83       	std	Y+2, r24	; 0x02
     6c6:	6b 83       	std	Y+3, r22	; 0x03
     6c8:	4c 83       	std	Y+4, r20	; 0x04
     6ca:	64 e0       	ldi	r22, 0x04	; 4
     6cc:	ce 01       	movw	r24, r28
     6ce:	01 96       	adiw	r24, 0x01	; 1
     6d0:	d8 d2       	rcall	.+1456   	; 0xc82 <spi_write>
     6d2:	2f 9a       	sbi	0x05, 7	; 5
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	08 95       	ret

000006e2 <motor_dac_write>:
	}
	else {
		motor_set_dir(1);
		motor_dac_write((slider_pos - 127) * 0.5);
	}
}
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	00 d0       	rcall	.+0      	; 0x6e8 <motor_dac_write+0x6>
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
     6ec:	90 e5       	ldi	r25, 0x50	; 80
     6ee:	99 83       	std	Y+1, r25	; 0x01
     6f0:	1a 82       	std	Y+2, r1	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	64 e0       	ldi	r22, 0x04	; 4
     6f6:	ce 01       	movw	r24, r28
     6f8:	01 96       	adiw	r24, 0x01	; 1
     6fa:	e1 d2       	rcall	.+1474   	; 0xcbe <TWI_Start_Transceiver_With_Data>
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	08 95       	ret

00000708 <motor_set_dir>:
     708:	88 23       	and	r24, r24
     70a:	31 f0       	breq	.+12     	; 0x718 <motor_set_dir+0x10>
     70c:	e2 e0       	ldi	r30, 0x02	; 2
     70e:	f1 e0       	ldi	r31, 0x01	; 1
     710:	80 81       	ld	r24, Z
     712:	82 60       	ori	r24, 0x02	; 2
     714:	80 83       	st	Z, r24
     716:	08 95       	ret
     718:	e2 e0       	ldi	r30, 0x02	; 2
     71a:	f1 e0       	ldi	r31, 0x01	; 1
     71c:	80 81       	ld	r24, Z
     71e:	8d 7f       	andi	r24, 0xFD	; 253
     720:	80 83       	st	Z, r24
     722:	08 95       	ret

00000724 <motor_init>:
     724:	c2 d2       	rcall	.+1412   	; 0xcaa <TWI_Master_Initialise>
     726:	e1 e0       	ldi	r30, 0x01	; 1
     728:	f1 e0       	ldi	r31, 0x01	; 1
     72a:	80 81       	ld	r24, Z
     72c:	8a 67       	ori	r24, 0x7A	; 122
     72e:	80 83       	st	Z, r24
     730:	e2 e0       	ldi	r30, 0x02	; 2
     732:	f1 e0       	ldi	r31, 0x01	; 1
     734:	80 81       	ld	r24, Z
     736:	82 60       	ori	r24, 0x02	; 2
     738:	80 83       	st	Z, r24
     73a:	80 81       	ld	r24, Z
     73c:	80 61       	ori	r24, 0x10	; 16
     73e:	80 83       	st	Z, r24
     740:	10 92 07 01 	sts	0x0107, r1
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	e0 df       	rcall	.-64     	; 0x708 <motor_set_dir>
     748:	80 e5       	ldi	r24, 0x50	; 80
     74a:	cb cf       	rjmp	.-106    	; 0x6e2 <motor_dac_write>
     74c:	08 95       	ret

0000074e <motor_read_encoder>:

int16_t motor_read_encoder(){
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	00 d0       	rcall	.+0      	; 0x754 <motor_read_encoder+0x6>
     754:	1f 92       	push	r1
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
	volatile int16_t encoder_val;
	volatile uint8_t lsb;
	volatile uint8_t msb;
	
	PORTH &= ~(1 << PH5); //set !OE low. enable output
     75a:	e2 e0       	ldi	r30, 0x02	; 2
     75c:	f1 e0       	ldi	r31, 0x01	; 1
     75e:	80 81       	ld	r24, Z
     760:	8f 7d       	andi	r24, 0xDF	; 223
     762:	80 83       	st	Z, r24
	PORTH &= ~(1 << PH3); //set SEL low to get high byte
     764:	80 81       	ld	r24, Z
     766:	87 7f       	andi	r24, 0xF7	; 247
     768:	80 83       	st	Z, r24
     76a:	87 e8       	ldi	r24, 0x87	; 135
     76c:	93 e1       	ldi	r25, 0x13	; 19
     76e:	01 97       	sbiw	r24, 0x01	; 1
     770:	f1 f7       	brne	.-4      	; 0x76e <motor_read_encoder+0x20>
     772:	00 c0       	rjmp	.+0      	; 0x774 <motor_read_encoder+0x26>
     774:	00 00       	nop
	
	_delay_ms(20);
	
	msb = PINK; // read msb
     776:	80 91 06 01 	lds	r24, 0x0106
     77a:	8c 83       	std	Y+4, r24	; 0x04
	
	PORTH |= (1 << PH3); // set SEL high to get low byte
     77c:	80 81       	ld	r24, Z
     77e:	88 60       	ori	r24, 0x08	; 8
     780:	80 83       	st	Z, r24
     782:	87 e8       	ldi	r24, 0x87	; 135
     784:	93 e1       	ldi	r25, 0x13	; 19
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	f1 f7       	brne	.-4      	; 0x786 <motor_read_encoder+0x38>
     78a:	00 c0       	rjmp	.+0      	; 0x78c <motor_read_encoder+0x3e>
     78c:	00 00       	nop
	
	_delay_ms(20);
	
	lsb = PINK; // read lsb
     78e:	80 91 06 01 	lds	r24, 0x0106
     792:	8b 83       	std	Y+3, r24	; 0x03
	
	PORTH |= (1 << PH5); // Disable encoder read
     794:	80 81       	ld	r24, Z
     796:	80 62       	ori	r24, 0x20	; 32
     798:	80 83       	st	Z, r24
	
	encoder_val = ((msb<<8) | lsb); //process data
     79a:	2c 81       	ldd	r18, Y+4	; 0x04
     79c:	8b 81       	ldd	r24, Y+3	; 0x03
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	92 2b       	or	r25, r18
     7a2:	9a 83       	std	Y+2, r25	; 0x02
     7a4:	89 83       	std	Y+1, r24	; 0x01
	return encoder_val;
     7a6:	89 81       	ldd	r24, Y+1	; 0x01
     7a8:	9a 81       	ldd	r25, Y+2	; 0x02
}
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	0f 90       	pop	r0
     7b0:	0f 90       	pop	r0
     7b2:	df 91       	pop	r29
     7b4:	cf 91       	pop	r28
     7b6:	08 95       	ret

000007b8 <motor_reset_encoder>:

void motor_reset_encoder() {
	PORTH &= ~(1<<PH6);
     7b8:	e2 e0       	ldi	r30, 0x02	; 2
     7ba:	f1 e0       	ldi	r31, 0x01	; 1
     7bc:	80 81       	ld	r24, Z
     7be:	8f 7b       	andi	r24, 0xBF	; 191
     7c0:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7c2:	82 e4       	ldi	r24, 0x42	; 66
     7c4:	8a 95       	dec	r24
     7c6:	f1 f7       	brne	.-4      	; 0x7c4 <motor_reset_encoder+0xc>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <motor_reset_encoder+0x12>
	_delay_us(200);
	PORTH |= (1<<PH6);
     7ca:	80 81       	ld	r24, Z
     7cc:	80 64       	ori	r24, 0x40	; 64
     7ce:	80 83       	st	Z, r24
     7d0:	08 95       	ret

000007d2 <motor_pid_controller>:
}

void motor_pid_controller(uint8_t reference){
     7d2:	af 92       	push	r10
     7d4:	bf 92       	push	r11
     7d6:	cf 92       	push	r12
     7d8:	df 92       	push	r13
     7da:	ef 92       	push	r14
     7dc:	ff 92       	push	r15
     7de:	0f 93       	push	r16
     7e0:	1f 93       	push	r17
     7e2:	cf 93       	push	r28
     7e4:	df 93       	push	r29
     7e6:	c8 2f       	mov	r28, r24
	reference = -reference;
	uint16_t encoder = motor_read_encoder();
     7e8:	b2 df       	rcall	.-156    	; 0x74e <motor_read_encoder>
	_delay_us(200);
	PORTH |= (1<<PH6);
}

void motor_pid_controller(uint8_t reference){
	reference = -reference;
     7ea:	c1 95       	neg	r28
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
	double measured_val = encoder_diff * scalor;
	int k = (int)measured_val;
	//printf("m  %d \n\r", k);
	int error = reference - (int) measured_val;
     7ec:	d0 e0       	ldi	r29, 0x00	; 0

void motor_pid_controller(uint8_t reference){
	reference = -reference;
	uint16_t encoder = motor_read_encoder();
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
     7ee:	bc 01       	movw	r22, r24
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	2b d4       	rcall	.+2134   	; 0x104c <__floatunsisf>
     7f6:	6b 01       	movw	r12, r22
     7f8:	7c 01       	movw	r14, r24
     7fa:	60 91 06 02 	lds	r22, 0x0206
     7fe:	70 91 07 02 	lds	r23, 0x0207
     802:	80 e0       	ldi	r24, 0x00	; 0
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	22 d4       	rcall	.+2116   	; 0x104c <__floatunsisf>
     808:	9b 01       	movw	r18, r22
     80a:	ac 01       	movw	r20, r24
     80c:	c7 01       	movw	r24, r14
     80e:	b6 01       	movw	r22, r12
     810:	1b d3       	rcall	.+1590   	; 0xe48 <__subsf3>
	double measured_val = encoder_diff * scalor;
     812:	24 e8       	ldi	r18, 0x84	; 132
     814:	3b e4       	ldi	r19, 0x4B	; 75
     816:	47 e0       	ldi	r20, 0x07	; 7
     818:	5d e3       	ldi	r21, 0x3D	; 61
     81a:	ce d4       	rcall	.+2460   	; 0x11b8 <__mulsf3>
	int k = (int)measured_val;
	//printf("m  %d \n\r", k);
	int error = reference - (int) measured_val;
     81c:	e6 d3       	rcall	.+1996   	; 0xfea <__fixsfsi>
     81e:	c6 1b       	sub	r28, r22
     820:	d7 0b       	sbc	r29, r23
	printf("e  %d \n\r", error);
     822:	df 93       	push	r29
     824:	cf 93       	push	r28
     826:	86 ea       	ldi	r24, 0xA6	; 166
     828:	92 e0       	ldi	r25, 0x02	; 2
     82a:	9f 93       	push	r25
     82c:	8f 93       	push	r24
     82e:	77 d5       	rcall	.+2798   	; 0x131e <printf>
	//int error = reference - (encoder - encoder_min) * 255 / (encoder_max - encoder_min); 
	sum_error += error;
     830:	80 91 b0 02 	lds	r24, 0x02B0
     834:	90 91 b1 02 	lds	r25, 0x02B1
     838:	8c 0f       	add	r24, r28
     83a:	9d 1f       	adc	r25, r29
	if (sum_error < -500){sum_error = -500;}
     83c:	0f 90       	pop	r0
     83e:	0f 90       	pop	r0
     840:	0f 90       	pop	r0
     842:	0f 90       	pop	r0
     844:	8c 30       	cpi	r24, 0x0C	; 12
     846:	2e ef       	ldi	r18, 0xFE	; 254
     848:	92 07       	cpc	r25, r18
     84a:	3c f4       	brge	.+14     	; 0x85a <motor_pid_controller+0x88>
     84c:	8c e0       	ldi	r24, 0x0C	; 12
     84e:	9e ef       	ldi	r25, 0xFE	; 254
     850:	90 93 b1 02 	sts	0x02B1, r25
     854:	80 93 b0 02 	sts	0x02B0, r24
     858:	0f c0       	rjmp	.+30     	; 0x878 <motor_pid_controller+0xa6>
	else if (sum_error > 500){sum_error = 500;}
     85a:	85 3f       	cpi	r24, 0xF5	; 245
     85c:	21 e0       	ldi	r18, 0x01	; 1
     85e:	92 07       	cpc	r25, r18
     860:	2c f4       	brge	.+10     	; 0x86c <motor_pid_controller+0x9a>
	int k = (int)measured_val;
	//printf("m  %d \n\r", k);
	int error = reference - (int) measured_val;
	printf("e  %d \n\r", error);
	//int error = reference - (encoder - encoder_min) * 255 / (encoder_max - encoder_min); 
	sum_error += error;
     862:	90 93 b1 02 	sts	0x02B1, r25
     866:	80 93 b0 02 	sts	0x02B0, r24
     86a:	06 c0       	rjmp	.+12     	; 0x878 <motor_pid_controller+0xa6>
	if (sum_error < -500){sum_error = -500;}
	else if (sum_error > 500){sum_error = 500;}
     86c:	84 ef       	ldi	r24, 0xF4	; 244
     86e:	91 e0       	ldi	r25, 0x01	; 1
     870:	90 93 b1 02 	sts	0x02B1, r25
     874:	80 93 b0 02 	sts	0x02B0, r24
	int integral_part = ( ki * sum_error / freq );
     878:	60 91 08 02 	lds	r22, 0x0208
     87c:	70 91 09 02 	lds	r23, 0x0209
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	e3 d3       	rcall	.+1990   	; 0x104c <__floatunsisf>
     886:	6b 01       	movw	r12, r22
     888:	7c 01       	movw	r14, r24
     88a:	60 91 b0 02 	lds	r22, 0x02B0
     88e:	70 91 b1 02 	lds	r23, 0x02B1
     892:	88 27       	eor	r24, r24
     894:	77 fd       	sbrc	r23, 7
     896:	80 95       	com	r24
     898:	98 2f       	mov	r25, r24
     89a:	da d3       	rcall	.+1972   	; 0x1050 <__floatsisf>
     89c:	20 91 0a 02 	lds	r18, 0x020A
     8a0:	30 91 0b 02 	lds	r19, 0x020B
     8a4:	40 91 0c 02 	lds	r20, 0x020C
     8a8:	50 91 0d 02 	lds	r21, 0x020D
     8ac:	85 d4       	rcall	.+2314   	; 0x11b8 <__mulsf3>
     8ae:	a7 01       	movw	r20, r14
     8b0:	96 01       	movw	r18, r12
     8b2:	33 d3       	rcall	.+1638   	; 0xf1a <__divsf3>
     8b4:	9a d3       	rcall	.+1844   	; 0xfea <__fixsfsi>
     8b6:	5b 01       	movw	r10, r22
     8b8:	89 e2       	ldi	r24, 0x29	; 41
     8ba:	a8 16       	cp	r10, r24
     8bc:	b1 04       	cpc	r11, r1
     8be:	2c f0       	brlt	.+10     	; 0x8ca <motor_pid_controller+0xf8>
     8c0:	0f 2e       	mov	r0, r31
     8c2:	f8 e2       	ldi	r31, 0x28	; 40
     8c4:	af 2e       	mov	r10, r31
     8c6:	b1 2c       	mov	r11, r1
     8c8:	f0 2d       	mov	r31, r0
	if (integral_part < -40){integral_part = -40;}
	else if (integral_part > 40){integral_part = 40;}
	int derivative_part = ( kd * (error - prev_error) * freq);
     8ca:	80 91 b2 02 	lds	r24, 0x02B2
     8ce:	90 91 b3 02 	lds	r25, 0x02B3
     8d2:	be 01       	movw	r22, r28
     8d4:	68 1b       	sub	r22, r24
     8d6:	79 0b       	sbc	r23, r25
     8d8:	80 e0       	ldi	r24, 0x00	; 0
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	b7 d3       	rcall	.+1902   	; 0x104c <__floatunsisf>
     8de:	20 91 0e 02 	lds	r18, 0x020E
     8e2:	30 91 0f 02 	lds	r19, 0x020F
     8e6:	40 91 10 02 	lds	r20, 0x0210
     8ea:	50 91 11 02 	lds	r21, 0x0211
     8ee:	64 d4       	rcall	.+2248   	; 0x11b8 <__mulsf3>
     8f0:	9b 01       	movw	r18, r22
     8f2:	ac 01       	movw	r20, r24
     8f4:	c7 01       	movw	r24, r14
     8f6:	b6 01       	movw	r22, r12
     8f8:	5f d4       	rcall	.+2238   	; 0x11b8 <__mulsf3>
     8fa:	77 d3       	rcall	.+1774   	; 0xfea <__fixsfsi>
     8fc:	8b 01       	movw	r16, r22
     8fe:	69 32       	cpi	r22, 0x29	; 41
     900:	71 05       	cpc	r23, r1
     902:	14 f0       	brlt	.+4      	; 0x908 <motor_pid_controller+0x136>
     904:	08 e2       	ldi	r16, 0x28	; 40
     906:	10 e0       	ldi	r17, 0x00	; 0
	if (derivative_part < -40){derivative_part = -40;}
	else if (derivative_part > 40){derivative_part = 40;}
	int u = ( kp * error ) + integral_part + derivative_part;
     908:	be 01       	movw	r22, r28
     90a:	88 27       	eor	r24, r24
     90c:	77 fd       	sbrc	r23, 7
     90e:	80 95       	com	r24
     910:	98 2f       	mov	r25, r24
     912:	9e d3       	rcall	.+1852   	; 0x1050 <__floatsisf>
     914:	20 91 12 02 	lds	r18, 0x0212
     918:	30 91 13 02 	lds	r19, 0x0213
     91c:	40 91 14 02 	lds	r20, 0x0214
     920:	50 91 15 02 	lds	r21, 0x0215
     924:	49 d4       	rcall	.+2194   	; 0x11b8 <__mulsf3>
     926:	6b 01       	movw	r12, r22
     928:	7c 01       	movw	r14, r24
     92a:	b5 01       	movw	r22, r10
     92c:	28 ed       	ldi	r18, 0xD8	; 216
     92e:	a2 16       	cp	r10, r18
     930:	2f ef       	ldi	r18, 0xFF	; 255
     932:	b2 06       	cpc	r11, r18
     934:	14 f4       	brge	.+4      	; 0x93a <motor_pid_controller+0x168>
     936:	68 ed       	ldi	r22, 0xD8	; 216
     938:	7f ef       	ldi	r23, 0xFF	; 255
     93a:	88 27       	eor	r24, r24
     93c:	77 fd       	sbrc	r23, 7
     93e:	80 95       	com	r24
     940:	98 2f       	mov	r25, r24
     942:	86 d3       	rcall	.+1804   	; 0x1050 <__floatsisf>
     944:	9b 01       	movw	r18, r22
     946:	ac 01       	movw	r20, r24
     948:	c7 01       	movw	r24, r14
     94a:	b6 01       	movw	r22, r12
     94c:	7e d2       	rcall	.+1276   	; 0xe4a <__addsf3>
     94e:	6b 01       	movw	r12, r22
     950:	7c 01       	movw	r14, r24
     952:	b8 01       	movw	r22, r16
     954:	08 3d       	cpi	r16, 0xD8	; 216
     956:	8f ef       	ldi	r24, 0xFF	; 255
     958:	18 07       	cpc	r17, r24
     95a:	14 f4       	brge	.+4      	; 0x960 <motor_pid_controller+0x18e>
     95c:	68 ed       	ldi	r22, 0xD8	; 216
     95e:	7f ef       	ldi	r23, 0xFF	; 255
     960:	88 27       	eor	r24, r24
     962:	77 fd       	sbrc	r23, 7
     964:	80 95       	com	r24
     966:	98 2f       	mov	r25, r24
     968:	73 d3       	rcall	.+1766   	; 0x1050 <__floatsisf>
     96a:	9b 01       	movw	r18, r22
     96c:	ac 01       	movw	r20, r24
     96e:	c7 01       	movw	r24, r14
     970:	b6 01       	movw	r22, r12
     972:	6b d2       	rcall	.+1238   	; 0xe4a <__addsf3>
     974:	3a d3       	rcall	.+1652   	; 0xfea <__fixsfsi>
     976:	6b 01       	movw	r12, r22
     978:	7c 01       	movw	r14, r24
     97a:	8b 01       	movw	r16, r22
	prev_error = error;
     97c:	d0 93 b3 02 	sts	0x02B3, r29
     980:	c0 93 b2 02 	sts	0x02B2, r28
	//printf("u  %d \n\r", u);
	if (u > 0){motor_set_dir(0);}
     984:	16 16       	cp	r1, r22
     986:	17 06       	cpc	r1, r23
     988:	1c f4       	brge	.+6      	; 0x990 <motor_pid_controller+0x1be>
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	bd de       	rcall	.-646    	; 0x708 <motor_set_dir>
     98e:	06 c0       	rjmp	.+12     	; 0x99c <motor_pid_controller+0x1ca>
	else {
		motor_set_dir(1);
     990:	81 e0       	ldi	r24, 0x01	; 1
     992:	ba de       	rcall	.-652    	; 0x708 <motor_set_dir>
		u = -u;
     994:	00 27       	eor	r16, r16
     996:	11 27       	eor	r17, r17
     998:	0c 19       	sub	r16, r12
     99a:	1d 09       	sbc	r17, r13
     99c:	c8 01       	movw	r24, r16
     99e:	05 36       	cpi	r16, 0x65	; 101
     9a0:	11 05       	cpc	r17, r1
     9a2:	14 f0       	brlt	.+4      	; 0x9a8 <motor_pid_controller+0x1d6>
     9a4:	84 e6       	ldi	r24, 0x64	; 100
     9a6:	90 e0       	ldi	r25, 0x00	; 0
	}
	if ( 100 < u ){ u = 100; };
	motor_dac_write(u);
     9a8:	9c de       	rcall	.-712    	; 0x6e2 <motor_dac_write>
 	
}
     9aa:	df 91       	pop	r29
     9ac:	cf 91       	pop	r28
     9ae:	1f 91       	pop	r17
     9b0:	0f 91       	pop	r16
     9b2:	ff 90       	pop	r15
     9b4:	ef 90       	pop	r14
     9b6:	df 90       	pop	r13
     9b8:	cf 90       	pop	r12
     9ba:	bf 90       	pop	r11
     9bc:	af 90       	pop	r10
     9be:	08 95       	ret

000009c0 <motor_set_gain>:

void motor_set_gain(int gain_choise){
	switch (gain_choise){
     9c0:	81 30       	cpi	r24, 0x01	; 1
     9c2:	91 05       	cpc	r25, r1
     9c4:	61 f1       	breq	.+88     	; 0xa1e <motor_set_gain+0x5e>
     9c6:	82 30       	cpi	r24, 0x02	; 2
     9c8:	91 05       	cpc	r25, r1
     9ca:	09 f4       	brne	.+2      	; 0x9ce <motor_set_gain+0xe>
     9cc:	4d c0       	rjmp	.+154    	; 0xa68 <motor_set_gain+0xa8>
     9ce:	89 2b       	or	r24, r25
     9d0:	09 f0       	breq	.+2      	; 0x9d4 <motor_set_gain+0x14>
     9d2:	66 c0       	rjmp	.+204    	; 0xaa0 <motor_set_gain+0xe0>
		case 0:
			kp = 1.2;
     9d4:	8a e9       	ldi	r24, 0x9A	; 154
     9d6:	99 e9       	ldi	r25, 0x99	; 153
     9d8:	a9 e9       	ldi	r26, 0x99	; 153
     9da:	bf e3       	ldi	r27, 0x3F	; 63
     9dc:	80 93 12 02 	sts	0x0212, r24
     9e0:	90 93 13 02 	sts	0x0213, r25
     9e4:	a0 93 14 02 	sts	0x0214, r26
     9e8:	b0 93 15 02 	sts	0x0215, r27
			ki = 0.8;
     9ec:	8d ec       	ldi	r24, 0xCD	; 205
     9ee:	9c ec       	ldi	r25, 0xCC	; 204
     9f0:	ac e4       	ldi	r26, 0x4C	; 76
     9f2:	bf e3       	ldi	r27, 0x3F	; 63
     9f4:	80 93 0a 02 	sts	0x020A, r24
     9f8:	90 93 0b 02 	sts	0x020B, r25
     9fc:	a0 93 0c 02 	sts	0x020C, r26
     a00:	b0 93 0d 02 	sts	0x020D, r27
			kd = 0.2;
     a04:	8d ec       	ldi	r24, 0xCD	; 205
     a06:	9c ec       	ldi	r25, 0xCC	; 204
     a08:	ac e4       	ldi	r26, 0x4C	; 76
     a0a:	be e3       	ldi	r27, 0x3E	; 62
     a0c:	80 93 0e 02 	sts	0x020E, r24
     a10:	90 93 0f 02 	sts	0x020F, r25
     a14:	a0 93 10 02 	sts	0x0210, r26
     a18:	b0 93 11 02 	sts	0x0211, r27
			break;
     a1c:	08 95       	ret
		case 1:
			kp = 0.6;
     a1e:	8a e9       	ldi	r24, 0x9A	; 154
     a20:	99 e9       	ldi	r25, 0x99	; 153
     a22:	a9 e1       	ldi	r26, 0x19	; 25
     a24:	bf e3       	ldi	r27, 0x3F	; 63
     a26:	80 93 12 02 	sts	0x0212, r24
     a2a:	90 93 13 02 	sts	0x0213, r25
     a2e:	a0 93 14 02 	sts	0x0214, r26
     a32:	b0 93 15 02 	sts	0x0215, r27
			ki = 0.8;
     a36:	8d ec       	ldi	r24, 0xCD	; 205
     a38:	9c ec       	ldi	r25, 0xCC	; 204
     a3a:	ac e4       	ldi	r26, 0x4C	; 76
     a3c:	bf e3       	ldi	r27, 0x3F	; 63
     a3e:	80 93 0a 02 	sts	0x020A, r24
     a42:	90 93 0b 02 	sts	0x020B, r25
     a46:	a0 93 0c 02 	sts	0x020C, r26
     a4a:	b0 93 0d 02 	sts	0x020D, r27
			kd = 0.2;
     a4e:	8d ec       	ldi	r24, 0xCD	; 205
     a50:	9c ec       	ldi	r25, 0xCC	; 204
     a52:	ac e4       	ldi	r26, 0x4C	; 76
     a54:	be e3       	ldi	r27, 0x3E	; 62
     a56:	80 93 0e 02 	sts	0x020E, r24
     a5a:	90 93 0f 02 	sts	0x020F, r25
     a5e:	a0 93 10 02 	sts	0x0210, r26
     a62:	b0 93 11 02 	sts	0x0211, r27
			break;
     a66:	08 95       	ret
		case 2:
			kp = 2.0;
     a68:	80 e0       	ldi	r24, 0x00	; 0
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	a0 e0       	ldi	r26, 0x00	; 0
     a6e:	b0 e4       	ldi	r27, 0x40	; 64
     a70:	80 93 12 02 	sts	0x0212, r24
     a74:	90 93 13 02 	sts	0x0213, r25
     a78:	a0 93 14 02 	sts	0x0214, r26
     a7c:	b0 93 15 02 	sts	0x0215, r27
			ki = 0.0;
     a80:	10 92 0a 02 	sts	0x020A, r1
     a84:	10 92 0b 02 	sts	0x020B, r1
     a88:	10 92 0c 02 	sts	0x020C, r1
     a8c:	10 92 0d 02 	sts	0x020D, r1
			kd = 0.0;
     a90:	10 92 0e 02 	sts	0x020E, r1
     a94:	10 92 0f 02 	sts	0x020F, r1
     a98:	10 92 10 02 	sts	0x0210, r1
     a9c:	10 92 11 02 	sts	0x0211, r1
     aa0:	08 95       	ret

00000aa2 <motor_tune_gain>:
			break;
	}
}
double b = 0;
void motor_tune_gain(uint8_t gain_choise, uint8_t gain_val){
	switch(gain_choise){
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	b1 f0       	breq	.+44     	; 0xad2 <motor_tune_gain+0x30>
     aa6:	85 30       	cpi	r24, 0x05	; 5
     aa8:	31 f1       	breq	.+76     	; 0xaf6 <motor_tune_gain+0x54>
     aaa:	83 30       	cpi	r24, 0x03	; 3
     aac:	a9 f5       	brne	.+106    	; 0xb18 <motor_tune_gain+0x76>
		case 3:
			kp = (double)(gain_val / 100.0);
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	80 e0       	ldi	r24, 0x00	; 0
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	cd d2       	rcall	.+1434   	; 0x1050 <__floatsisf>
     ab6:	20 e0       	ldi	r18, 0x00	; 0
     ab8:	30 e0       	ldi	r19, 0x00	; 0
     aba:	48 ec       	ldi	r20, 0xC8	; 200
     abc:	52 e4       	ldi	r21, 0x42	; 66
     abe:	2d d2       	rcall	.+1114   	; 0xf1a <__divsf3>
     ac0:	60 93 12 02 	sts	0x0212, r22
     ac4:	70 93 13 02 	sts	0x0213, r23
     ac8:	80 93 14 02 	sts	0x0214, r24
     acc:	90 93 15 02 	sts	0x0215, r25
			break;
     ad0:	08 95       	ret
		case 4:
			ki = (double)(gain_val / 100.0);
     ad2:	70 e0       	ldi	r23, 0x00	; 0
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	bb d2       	rcall	.+1398   	; 0x1050 <__floatsisf>
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	48 ec       	ldi	r20, 0xC8	; 200
     ae0:	52 e4       	ldi	r21, 0x42	; 66
     ae2:	1b d2       	rcall	.+1078   	; 0xf1a <__divsf3>
     ae4:	60 93 0a 02 	sts	0x020A, r22
     ae8:	70 93 0b 02 	sts	0x020B, r23
     aec:	80 93 0c 02 	sts	0x020C, r24
     af0:	90 93 0d 02 	sts	0x020D, r25
			break;
     af4:	08 95       	ret
		case 5:
			kd = (double)(gain_val / 100.0);
     af6:	70 e0       	ldi	r23, 0x00	; 0
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	a9 d2       	rcall	.+1362   	; 0x1050 <__floatsisf>
     afe:	20 e0       	ldi	r18, 0x00	; 0
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	48 ec       	ldi	r20, 0xC8	; 200
     b04:	52 e4       	ldi	r21, 0x42	; 66
     b06:	09 d2       	rcall	.+1042   	; 0xf1a <__divsf3>
     b08:	60 93 0e 02 	sts	0x020E, r22
     b0c:	70 93 0f 02 	sts	0x020F, r23
     b10:	80 93 10 02 	sts	0x0210, r24
     b14:	90 93 11 02 	sts	0x0211, r25
     b18:	08 95       	ret

00000b1a <pwm_set_signal_period>:
     b1a:	e1 e8       	ldi	r30, 0x81	; 129
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	80 81       	ld	r24, Z
     b20:	82 60       	ori	r24, 0x02	; 2
     b22:	80 83       	st	Z, r24
     b24:	80 81       	ld	r24, Z
     b26:	8b 7f       	andi	r24, 0xFB	; 251
     b28:	80 83       	st	Z, r24
     b2a:	80 81       	ld	r24, Z
     b2c:	8e 7f       	andi	r24, 0xFE	; 254
     b2e:	80 83       	st	Z, r24
     b30:	80 e4       	ldi	r24, 0x40	; 64
     b32:	9c e9       	ldi	r25, 0x9C	; 156
     b34:	90 93 87 00 	sts	0x0087, r25
     b38:	80 93 86 00 	sts	0x0086, r24
     b3c:	08 95       	ret

00000b3e <pwm_init>:
     b3e:	e1 e8       	ldi	r30, 0x81	; 129
     b40:	f0 e0       	ldi	r31, 0x00	; 0
     b42:	80 81       	ld	r24, Z
     b44:	80 61       	ori	r24, 0x10	; 16
     b46:	80 83       	st	Z, r24
     b48:	80 81       	ld	r24, Z
     b4a:	88 60       	ori	r24, 0x08	; 8
     b4c:	80 83       	st	Z, r24
     b4e:	e0 e8       	ldi	r30, 0x80	; 128
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	80 81       	ld	r24, Z
     b54:	82 60       	ori	r24, 0x02	; 2
     b56:	80 83       	st	Z, r24
     b58:	80 81       	ld	r24, Z
     b5a:	8e 7f       	andi	r24, 0xFE	; 254
     b5c:	80 83       	st	Z, r24
     b5e:	80 81       	ld	r24, Z
     b60:	80 68       	ori	r24, 0x80	; 128
     b62:	80 83       	st	Z, r24
     b64:	80 81       	ld	r24, Z
     b66:	8f 7b       	andi	r24, 0xBF	; 191
     b68:	80 83       	st	Z, r24
     b6a:	d7 df       	rcall	.-82     	; 0xb1a <pwm_set_signal_period>
     b6c:	25 9a       	sbi	0x04, 5	; 4
     b6e:	88 eb       	ldi	r24, 0xB8	; 184
     b70:	9b e0       	ldi	r25, 0x0B	; 11
     b72:	90 93 89 00 	sts	0x0089, r25
     b76:	80 93 88 00 	sts	0x0088, r24
     b7a:	08 95       	ret

00000b7c <pwm_set_pulse_width>:
     b7c:	cf 92       	push	r12
     b7e:	df 92       	push	r13
     b80:	ef 92       	push	r14
     b82:	ff 92       	push	r15
     b84:	6b 01       	movw	r12, r22
     b86:	7c 01       	movw	r14, r24
     b88:	20 e0       	ldi	r18, 0x00	; 0
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	41 e6       	ldi	r20, 0x61	; 97
     b8e:	54 e4       	ldi	r21, 0x44	; 68
     b90:	c0 d1       	rcall	.+896    	; 0xf12 <__cmpsf2>
     b92:	88 23       	and	r24, r24
     b94:	54 f0       	brlt	.+20     	; 0xbaa <pwm_set_pulse_width+0x2e>
     b96:	20 e0       	ldi	r18, 0x00	; 0
     b98:	30 e4       	ldi	r19, 0x40	; 64
     b9a:	43 e0       	ldi	r20, 0x03	; 3
     b9c:	55 e4       	ldi	r21, 0x45	; 69
     b9e:	c7 01       	movw	r24, r14
     ba0:	b6 01       	movw	r22, r12
     ba2:	06 d3       	rcall	.+1548   	; 0x11b0 <__gesf2>
     ba4:	18 16       	cp	r1, r24
     ba6:	54 f0       	brlt	.+20     	; 0xbbc <pwm_set_pulse_width+0x40>
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <pwm_set_pulse_width+0x52>
     baa:	0f 2e       	mov	r0, r31
     bac:	c1 2c       	mov	r12, r1
     bae:	d1 2c       	mov	r13, r1
     bb0:	f1 e6       	ldi	r31, 0x61	; 97
     bb2:	ef 2e       	mov	r14, r31
     bb4:	f4 e4       	ldi	r31, 0x44	; 68
     bb6:	ff 2e       	mov	r15, r31
     bb8:	f0 2d       	mov	r31, r0
     bba:	09 c0       	rjmp	.+18     	; 0xbce <pwm_set_pulse_width+0x52>
     bbc:	0f 2e       	mov	r0, r31
     bbe:	c1 2c       	mov	r12, r1
     bc0:	f0 e4       	ldi	r31, 0x40	; 64
     bc2:	df 2e       	mov	r13, r31
     bc4:	f3 e0       	ldi	r31, 0x03	; 3
     bc6:	ef 2e       	mov	r14, r31
     bc8:	f5 e4       	ldi	r31, 0x45	; 69
     bca:	ff 2e       	mov	r15, r31
     bcc:	f0 2d       	mov	r31, r0
     bce:	20 e0       	ldi	r18, 0x00	; 0
     bd0:	30 e4       	ldi	r19, 0x40	; 64
     bd2:	4c e9       	ldi	r20, 0x9C	; 156
     bd4:	56 e4       	ldi	r21, 0x46	; 70
     bd6:	c7 01       	movw	r24, r14
     bd8:	b6 01       	movw	r22, r12
     bda:	9f d1       	rcall	.+830    	; 0xf1a <__divsf3>
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	34 e2       	ldi	r19, 0x24	; 36
     be0:	44 e7       	ldi	r20, 0x74	; 116
     be2:	5b e4       	ldi	r21, 0x4B	; 75
     be4:	e9 d2       	rcall	.+1490   	; 0x11b8 <__mulsf3>
     be6:	20 e0       	ldi	r18, 0x00	; 0
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	40 e0       	ldi	r20, 0x00	; 0
     bec:	5e e3       	ldi	r21, 0x3E	; 62
     bee:	e4 d2       	rcall	.+1480   	; 0x11b8 <__mulsf3>
     bf0:	20 e0       	ldi	r18, 0x00	; 0
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	48 e4       	ldi	r20, 0x48	; 72
     bf6:	52 e4       	ldi	r21, 0x42	; 66
     bf8:	90 d1       	rcall	.+800    	; 0xf1a <__divsf3>
     bfa:	f7 d1       	rcall	.+1006   	; 0xfea <__fixsfsi>
     bfc:	70 93 89 00 	sts	0x0089, r23
     c00:	60 93 88 00 	sts	0x0088, r22
     c04:	ff 90       	pop	r15
     c06:	ef 90       	pop	r14
     c08:	df 90       	pop	r13
     c0a:	cf 90       	pop	r12
     c0c:	08 95       	ret

00000c0e <pwm_scale_joystick_val>:
     c0e:	2c eb       	ldi	r18, 0xBC	; 188
     c10:	36 e9       	ldi	r19, 0x96	; 150
     c12:	46 e9       	ldi	r20, 0x96	; 150
     c14:	50 e4       	ldi	r21, 0x40	; 64
     c16:	d0 d2       	rcall	.+1440   	; 0x11b8 <__mulsf3>
     c18:	20 e0       	ldi	r18, 0x00	; 0
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	41 e6       	ldi	r20, 0x61	; 97
     c1e:	54 e4       	ldi	r21, 0x44	; 68
     c20:	14 c1       	rjmp	.+552    	; 0xe4a <__addsf3>
     c22:	08 95       	ret

00000c24 <spi_init>:
     c24:	84 b1       	in	r24, 0x04	; 4
     c26:	87 68       	ori	r24, 0x87	; 135
     c28:	84 b9       	out	0x04, r24	; 4
     c2a:	85 b1       	in	r24, 0x05	; 5
     c2c:	81 68       	ori	r24, 0x81	; 129
     c2e:	85 b9       	out	0x05, r24	; 5
     c30:	81 e5       	ldi	r24, 0x51	; 81
     c32:	8c bd       	out	0x2c, r24	; 44
     c34:	08 95       	ret

00000c36 <spi_read>:
     c36:	cf 93       	push	r28
     c38:	df 93       	push	r29
     c3a:	cd b7       	in	r28, 0x3d	; 61
     c3c:	de b7       	in	r29, 0x3e	; 62
     c3e:	2a 97       	sbiw	r28, 0x0a	; 10
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	f8 94       	cli
     c44:	de bf       	out	0x3e, r29	; 62
     c46:	0f be       	out	0x3f, r0	; 63
     c48:	cd bf       	out	0x3d, r28	; 61
     c4a:	66 23       	and	r22, r22
     c4c:	89 f0       	breq	.+34     	; 0xc70 <spi_read+0x3a>
     c4e:	fe 01       	movw	r30, r28
     c50:	31 96       	adiw	r30, 0x01	; 1
     c52:	a8 2f       	mov	r26, r24
     c54:	b9 2f       	mov	r27, r25
     c56:	cf 01       	movw	r24, r30
     c58:	86 0f       	add	r24, r22
     c5a:	91 1d       	adc	r25, r1
     c5c:	21 91       	ld	r18, Z+
     c5e:	2e bd       	out	0x2e, r18	; 46
     c60:	0d b4       	in	r0, 0x2d	; 45
     c62:	07 fe       	sbrs	r0, 7
     c64:	fd cf       	rjmp	.-6      	; 0xc60 <spi_read+0x2a>
     c66:	2e b5       	in	r18, 0x2e	; 46
     c68:	2d 93       	st	X+, r18
     c6a:	e8 17       	cp	r30, r24
     c6c:	f9 07       	cpc	r31, r25
     c6e:	b1 f7       	brne	.-20     	; 0xc5c <spi_read+0x26>
     c70:	2a 96       	adiw	r28, 0x0a	; 10
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	f8 94       	cli
     c76:	de bf       	out	0x3e, r29	; 62
     c78:	0f be       	out	0x3f, r0	; 63
     c7a:	cd bf       	out	0x3d, r28	; 61
     c7c:	df 91       	pop	r29
     c7e:	cf 91       	pop	r28
     c80:	08 95       	ret

00000c82 <spi_write>:
     c82:	26 2f       	mov	r18, r22
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	12 16       	cp	r1, r18
     c88:	13 06       	cpc	r1, r19
     c8a:	74 f4       	brge	.+28     	; 0xca8 <spi_write+0x26>
     c8c:	e8 2f       	mov	r30, r24
     c8e:	f9 2f       	mov	r31, r25
     c90:	80 e0       	ldi	r24, 0x00	; 0
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	41 91       	ld	r20, Z+
     c96:	4e bd       	out	0x2e, r20	; 46
     c98:	0d b4       	in	r0, 0x2d	; 45
     c9a:	07 fe       	sbrs	r0, 7
     c9c:	fd cf       	rjmp	.-6      	; 0xc98 <spi_write+0x16>
     c9e:	4e b5       	in	r20, 0x2e	; 46
     ca0:	01 96       	adiw	r24, 0x01	; 1
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	b4 f3       	brlt	.-20     	; 0xc94 <spi_write+0x12>
     ca8:	08 95       	ret

00000caa <TWI_Master_Initialise>:
     caa:	8c e0       	ldi	r24, 0x0C	; 12
     cac:	80 93 b8 00 	sts	0x00B8, r24
     cb0:	8f ef       	ldi	r24, 0xFF	; 255
     cb2:	80 93 bb 00 	sts	0x00BB, r24
     cb6:	84 e0       	ldi	r24, 0x04	; 4
     cb8:	80 93 bc 00 	sts	0x00BC, r24
     cbc:	08 95       	ret

00000cbe <TWI_Start_Transceiver_With_Data>:
     cbe:	ec eb       	ldi	r30, 0xBC	; 188
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	20 81       	ld	r18, Z
     cc4:	20 fd       	sbrc	r18, 0
     cc6:	fd cf       	rjmp	.-6      	; 0xcc2 <TWI_Start_Transceiver_With_Data+0x4>
     cc8:	60 93 b6 02 	sts	0x02B6, r22
     ccc:	fc 01       	movw	r30, r24
     cce:	20 81       	ld	r18, Z
     cd0:	20 93 b7 02 	sts	0x02B7, r18
     cd4:	20 fd       	sbrc	r18, 0
     cd6:	0c c0       	rjmp	.+24     	; 0xcf0 <TWI_Start_Transceiver_With_Data+0x32>
     cd8:	62 30       	cpi	r22, 0x02	; 2
     cda:	50 f0       	brcs	.+20     	; 0xcf0 <TWI_Start_Transceiver_With_Data+0x32>
     cdc:	dc 01       	movw	r26, r24
     cde:	11 96       	adiw	r26, 0x01	; 1
     ce0:	e8 eb       	ldi	r30, 0xB8	; 184
     ce2:	f2 e0       	ldi	r31, 0x02	; 2
     ce4:	81 e0       	ldi	r24, 0x01	; 1
     ce6:	9d 91       	ld	r25, X+
     ce8:	91 93       	st	Z+, r25
     cea:	8f 5f       	subi	r24, 0xFF	; 255
     cec:	86 13       	cpse	r24, r22
     cee:	fb cf       	rjmp	.-10     	; 0xce6 <TWI_Start_Transceiver_With_Data+0x28>
     cf0:	10 92 b5 02 	sts	0x02B5, r1
     cf4:	88 ef       	ldi	r24, 0xF8	; 248
     cf6:	80 93 16 02 	sts	0x0216, r24
     cfa:	85 ea       	ldi	r24, 0xA5	; 165
     cfc:	80 93 bc 00 	sts	0x00BC, r24
     d00:	08 95       	ret

00000d02 <__vector_39>:
     d02:	1f 92       	push	r1
     d04:	0f 92       	push	r0
     d06:	0f b6       	in	r0, 0x3f	; 63
     d08:	0f 92       	push	r0
     d0a:	11 24       	eor	r1, r1
     d0c:	0b b6       	in	r0, 0x3b	; 59
     d0e:	0f 92       	push	r0
     d10:	2f 93       	push	r18
     d12:	3f 93       	push	r19
     d14:	8f 93       	push	r24
     d16:	9f 93       	push	r25
     d18:	af 93       	push	r26
     d1a:	bf 93       	push	r27
     d1c:	ef 93       	push	r30
     d1e:	ff 93       	push	r31
     d20:	80 91 b9 00 	lds	r24, 0x00B9
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	fc 01       	movw	r30, r24
     d28:	38 97       	sbiw	r30, 0x08	; 8
     d2a:	e1 35       	cpi	r30, 0x51	; 81
     d2c:	f1 05       	cpc	r31, r1
     d2e:	08 f0       	brcs	.+2      	; 0xd32 <__vector_39+0x30>
     d30:	55 c0       	rjmp	.+170    	; 0xddc <__vector_39+0xda>
     d32:	ee 58       	subi	r30, 0x8E	; 142
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
     d36:	a3 c2       	rjmp	.+1350   	; 0x127e <__tablejump2__>
     d38:	10 92 b4 02 	sts	0x02B4, r1
     d3c:	e0 91 b4 02 	lds	r30, 0x02B4
     d40:	80 91 b6 02 	lds	r24, 0x02B6
     d44:	e8 17       	cp	r30, r24
     d46:	70 f4       	brcc	.+28     	; 0xd64 <__vector_39+0x62>
     d48:	81 e0       	ldi	r24, 0x01	; 1
     d4a:	8e 0f       	add	r24, r30
     d4c:	80 93 b4 02 	sts	0x02B4, r24
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	e9 54       	subi	r30, 0x49	; 73
     d54:	fd 4f       	sbci	r31, 0xFD	; 253
     d56:	80 81       	ld	r24, Z
     d58:	80 93 bb 00 	sts	0x00BB, r24
     d5c:	85 e8       	ldi	r24, 0x85	; 133
     d5e:	80 93 bc 00 	sts	0x00BC, r24
     d62:	43 c0       	rjmp	.+134    	; 0xdea <__vector_39+0xe8>
     d64:	80 91 b5 02 	lds	r24, 0x02B5
     d68:	81 60       	ori	r24, 0x01	; 1
     d6a:	80 93 b5 02 	sts	0x02B5, r24
     d6e:	84 e9       	ldi	r24, 0x94	; 148
     d70:	80 93 bc 00 	sts	0x00BC, r24
     d74:	3a c0       	rjmp	.+116    	; 0xdea <__vector_39+0xe8>
     d76:	e0 91 b4 02 	lds	r30, 0x02B4
     d7a:	81 e0       	ldi	r24, 0x01	; 1
     d7c:	8e 0f       	add	r24, r30
     d7e:	80 93 b4 02 	sts	0x02B4, r24
     d82:	80 91 bb 00 	lds	r24, 0x00BB
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	e9 54       	subi	r30, 0x49	; 73
     d8a:	fd 4f       	sbci	r31, 0xFD	; 253
     d8c:	80 83       	st	Z, r24
     d8e:	20 91 b4 02 	lds	r18, 0x02B4
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	80 91 b6 02 	lds	r24, 0x02B6
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	01 97       	sbiw	r24, 0x01	; 1
     d9c:	28 17       	cp	r18, r24
     d9e:	39 07       	cpc	r19, r25
     da0:	24 f4       	brge	.+8      	; 0xdaa <__vector_39+0xa8>
     da2:	85 ec       	ldi	r24, 0xC5	; 197
     da4:	80 93 bc 00 	sts	0x00BC, r24
     da8:	20 c0       	rjmp	.+64     	; 0xdea <__vector_39+0xe8>
     daa:	85 e8       	ldi	r24, 0x85	; 133
     dac:	80 93 bc 00 	sts	0x00BC, r24
     db0:	1c c0       	rjmp	.+56     	; 0xdea <__vector_39+0xe8>
     db2:	80 91 bb 00 	lds	r24, 0x00BB
     db6:	e0 91 b4 02 	lds	r30, 0x02B4
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	e9 54       	subi	r30, 0x49	; 73
     dbe:	fd 4f       	sbci	r31, 0xFD	; 253
     dc0:	80 83       	st	Z, r24
     dc2:	80 91 b5 02 	lds	r24, 0x02B5
     dc6:	81 60       	ori	r24, 0x01	; 1
     dc8:	80 93 b5 02 	sts	0x02B5, r24
     dcc:	84 e9       	ldi	r24, 0x94	; 148
     dce:	80 93 bc 00 	sts	0x00BC, r24
     dd2:	0b c0       	rjmp	.+22     	; 0xdea <__vector_39+0xe8>
     dd4:	85 ea       	ldi	r24, 0xA5	; 165
     dd6:	80 93 bc 00 	sts	0x00BC, r24
     dda:	07 c0       	rjmp	.+14     	; 0xdea <__vector_39+0xe8>
     ddc:	80 91 b9 00 	lds	r24, 0x00B9
     de0:	80 93 16 02 	sts	0x0216, r24
     de4:	84 e0       	ldi	r24, 0x04	; 4
     de6:	80 93 bc 00 	sts	0x00BC, r24
     dea:	ff 91       	pop	r31
     dec:	ef 91       	pop	r30
     dee:	bf 91       	pop	r27
     df0:	af 91       	pop	r26
     df2:	9f 91       	pop	r25
     df4:	8f 91       	pop	r24
     df6:	3f 91       	pop	r19
     df8:	2f 91       	pop	r18
     dfa:	0f 90       	pop	r0
     dfc:	0b be       	out	0x3b, r0	; 59
     dfe:	0f 90       	pop	r0
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	0f 90       	pop	r0
     e04:	1f 90       	pop	r1
     e06:	18 95       	reti

00000e08 <USART_Transmit>:
     e08:	e0 ec       	ldi	r30, 0xC0	; 192
     e0a:	f0 e0       	ldi	r31, 0x00	; 0
     e0c:	90 81       	ld	r25, Z
     e0e:	95 ff       	sbrs	r25, 5
     e10:	fd cf       	rjmp	.-6      	; 0xe0c <USART_Transmit+0x4>
     e12:	80 93 c6 00 	sts	0x00C6, r24
     e16:	08 95       	ret

00000e18 <USART_Receive>:
     e18:	e0 ec       	ldi	r30, 0xC0	; 192
     e1a:	f0 e0       	ldi	r31, 0x00	; 0
     e1c:	80 81       	ld	r24, Z
     e1e:	88 23       	and	r24, r24
     e20:	ec f3       	brlt	.-6      	; 0xe1c <USART_Receive+0x4>
     e22:	80 91 c6 00 	lds	r24, 0x00C6
     e26:	08 95       	ret

00000e28 <USART_Init>:
     e28:	90 93 c5 00 	sts	0x00C5, r25
     e2c:	80 93 c4 00 	sts	0x00C4, r24
     e30:	88 e1       	ldi	r24, 0x18	; 24
     e32:	80 93 c1 00 	sts	0x00C1, r24
     e36:	8e e0       	ldi	r24, 0x0E	; 14
     e38:	80 93 c2 00 	sts	0x00C2, r24
     e3c:	6c e0       	ldi	r22, 0x0C	; 12
     e3e:	77 e0       	ldi	r23, 0x07	; 7
     e40:	84 e0       	ldi	r24, 0x04	; 4
     e42:	97 e0       	ldi	r25, 0x07	; 7
     e44:	22 c2       	rjmp	.+1092   	; 0x128a <fdevopen>
     e46:	08 95       	ret

00000e48 <__subsf3>:
     e48:	50 58       	subi	r21, 0x80	; 128

00000e4a <__addsf3>:
     e4a:	bb 27       	eor	r27, r27
     e4c:	aa 27       	eor	r26, r26
     e4e:	0e d0       	rcall	.+28     	; 0xe6c <__addsf3x>
     e50:	75 c1       	rjmp	.+746    	; 0x113c <__fp_round>
     e52:	66 d1       	rcall	.+716    	; 0x1120 <__fp_pscA>
     e54:	30 f0       	brcs	.+12     	; 0xe62 <__addsf3+0x18>
     e56:	6b d1       	rcall	.+726    	; 0x112e <__fp_pscB>
     e58:	20 f0       	brcs	.+8      	; 0xe62 <__addsf3+0x18>
     e5a:	31 f4       	brne	.+12     	; 0xe68 <__addsf3+0x1e>
     e5c:	9f 3f       	cpi	r25, 0xFF	; 255
     e5e:	11 f4       	brne	.+4      	; 0xe64 <__addsf3+0x1a>
     e60:	1e f4       	brtc	.+6      	; 0xe68 <__addsf3+0x1e>
     e62:	5b c1       	rjmp	.+694    	; 0x111a <__fp_nan>
     e64:	0e f4       	brtc	.+2      	; 0xe68 <__addsf3+0x1e>
     e66:	e0 95       	com	r30
     e68:	e7 fb       	bst	r30, 7
     e6a:	51 c1       	rjmp	.+674    	; 0x110e <__fp_inf>

00000e6c <__addsf3x>:
     e6c:	e9 2f       	mov	r30, r25
     e6e:	77 d1       	rcall	.+750    	; 0x115e <__fp_split3>
     e70:	80 f3       	brcs	.-32     	; 0xe52 <__addsf3+0x8>
     e72:	ba 17       	cp	r27, r26
     e74:	62 07       	cpc	r22, r18
     e76:	73 07       	cpc	r23, r19
     e78:	84 07       	cpc	r24, r20
     e7a:	95 07       	cpc	r25, r21
     e7c:	18 f0       	brcs	.+6      	; 0xe84 <__addsf3x+0x18>
     e7e:	71 f4       	brne	.+28     	; 0xe9c <__addsf3x+0x30>
     e80:	9e f5       	brtc	.+102    	; 0xee8 <__addsf3x+0x7c>
     e82:	8f c1       	rjmp	.+798    	; 0x11a2 <__fp_zero>
     e84:	0e f4       	brtc	.+2      	; 0xe88 <__addsf3x+0x1c>
     e86:	e0 95       	com	r30
     e88:	0b 2e       	mov	r0, r27
     e8a:	ba 2f       	mov	r27, r26
     e8c:	a0 2d       	mov	r26, r0
     e8e:	0b 01       	movw	r0, r22
     e90:	b9 01       	movw	r22, r18
     e92:	90 01       	movw	r18, r0
     e94:	0c 01       	movw	r0, r24
     e96:	ca 01       	movw	r24, r20
     e98:	a0 01       	movw	r20, r0
     e9a:	11 24       	eor	r1, r1
     e9c:	ff 27       	eor	r31, r31
     e9e:	59 1b       	sub	r21, r25
     ea0:	99 f0       	breq	.+38     	; 0xec8 <__addsf3x+0x5c>
     ea2:	59 3f       	cpi	r21, 0xF9	; 249
     ea4:	50 f4       	brcc	.+20     	; 0xeba <__addsf3x+0x4e>
     ea6:	50 3e       	cpi	r21, 0xE0	; 224
     ea8:	68 f1       	brcs	.+90     	; 0xf04 <__addsf3x+0x98>
     eaa:	1a 16       	cp	r1, r26
     eac:	f0 40       	sbci	r31, 0x00	; 0
     eae:	a2 2f       	mov	r26, r18
     eb0:	23 2f       	mov	r18, r19
     eb2:	34 2f       	mov	r19, r20
     eb4:	44 27       	eor	r20, r20
     eb6:	58 5f       	subi	r21, 0xF8	; 248
     eb8:	f3 cf       	rjmp	.-26     	; 0xea0 <__addsf3x+0x34>
     eba:	46 95       	lsr	r20
     ebc:	37 95       	ror	r19
     ebe:	27 95       	ror	r18
     ec0:	a7 95       	ror	r26
     ec2:	f0 40       	sbci	r31, 0x00	; 0
     ec4:	53 95       	inc	r21
     ec6:	c9 f7       	brne	.-14     	; 0xeba <__addsf3x+0x4e>
     ec8:	7e f4       	brtc	.+30     	; 0xee8 <__addsf3x+0x7c>
     eca:	1f 16       	cp	r1, r31
     ecc:	ba 0b       	sbc	r27, r26
     ece:	62 0b       	sbc	r22, r18
     ed0:	73 0b       	sbc	r23, r19
     ed2:	84 0b       	sbc	r24, r20
     ed4:	ba f0       	brmi	.+46     	; 0xf04 <__addsf3x+0x98>
     ed6:	91 50       	subi	r25, 0x01	; 1
     ed8:	a1 f0       	breq	.+40     	; 0xf02 <__addsf3x+0x96>
     eda:	ff 0f       	add	r31, r31
     edc:	bb 1f       	adc	r27, r27
     ede:	66 1f       	adc	r22, r22
     ee0:	77 1f       	adc	r23, r23
     ee2:	88 1f       	adc	r24, r24
     ee4:	c2 f7       	brpl	.-16     	; 0xed6 <__addsf3x+0x6a>
     ee6:	0e c0       	rjmp	.+28     	; 0xf04 <__addsf3x+0x98>
     ee8:	ba 0f       	add	r27, r26
     eea:	62 1f       	adc	r22, r18
     eec:	73 1f       	adc	r23, r19
     eee:	84 1f       	adc	r24, r20
     ef0:	48 f4       	brcc	.+18     	; 0xf04 <__addsf3x+0x98>
     ef2:	87 95       	ror	r24
     ef4:	77 95       	ror	r23
     ef6:	67 95       	ror	r22
     ef8:	b7 95       	ror	r27
     efa:	f7 95       	ror	r31
     efc:	9e 3f       	cpi	r25, 0xFE	; 254
     efe:	08 f0       	brcs	.+2      	; 0xf02 <__addsf3x+0x96>
     f00:	b3 cf       	rjmp	.-154    	; 0xe68 <__addsf3+0x1e>
     f02:	93 95       	inc	r25
     f04:	88 0f       	add	r24, r24
     f06:	08 f0       	brcs	.+2      	; 0xf0a <__addsf3x+0x9e>
     f08:	99 27       	eor	r25, r25
     f0a:	ee 0f       	add	r30, r30
     f0c:	97 95       	ror	r25
     f0e:	87 95       	ror	r24
     f10:	08 95       	ret

00000f12 <__cmpsf2>:
     f12:	d9 d0       	rcall	.+434    	; 0x10c6 <__fp_cmp>
     f14:	08 f4       	brcc	.+2      	; 0xf18 <__cmpsf2+0x6>
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	08 95       	ret

00000f1a <__divsf3>:
     f1a:	0c d0       	rcall	.+24     	; 0xf34 <__divsf3x>
     f1c:	0f c1       	rjmp	.+542    	; 0x113c <__fp_round>
     f1e:	07 d1       	rcall	.+526    	; 0x112e <__fp_pscB>
     f20:	40 f0       	brcs	.+16     	; 0xf32 <__divsf3+0x18>
     f22:	fe d0       	rcall	.+508    	; 0x1120 <__fp_pscA>
     f24:	30 f0       	brcs	.+12     	; 0xf32 <__divsf3+0x18>
     f26:	21 f4       	brne	.+8      	; 0xf30 <__divsf3+0x16>
     f28:	5f 3f       	cpi	r21, 0xFF	; 255
     f2a:	19 f0       	breq	.+6      	; 0xf32 <__divsf3+0x18>
     f2c:	f0 c0       	rjmp	.+480    	; 0x110e <__fp_inf>
     f2e:	51 11       	cpse	r21, r1
     f30:	39 c1       	rjmp	.+626    	; 0x11a4 <__fp_szero>
     f32:	f3 c0       	rjmp	.+486    	; 0x111a <__fp_nan>

00000f34 <__divsf3x>:
     f34:	14 d1       	rcall	.+552    	; 0x115e <__fp_split3>
     f36:	98 f3       	brcs	.-26     	; 0xf1e <__divsf3+0x4>

00000f38 <__divsf3_pse>:
     f38:	99 23       	and	r25, r25
     f3a:	c9 f3       	breq	.-14     	; 0xf2e <__divsf3+0x14>
     f3c:	55 23       	and	r21, r21
     f3e:	b1 f3       	breq	.-20     	; 0xf2c <__divsf3+0x12>
     f40:	95 1b       	sub	r25, r21
     f42:	55 0b       	sbc	r21, r21
     f44:	bb 27       	eor	r27, r27
     f46:	aa 27       	eor	r26, r26
     f48:	62 17       	cp	r22, r18
     f4a:	73 07       	cpc	r23, r19
     f4c:	84 07       	cpc	r24, r20
     f4e:	38 f0       	brcs	.+14     	; 0xf5e <__divsf3_pse+0x26>
     f50:	9f 5f       	subi	r25, 0xFF	; 255
     f52:	5f 4f       	sbci	r21, 0xFF	; 255
     f54:	22 0f       	add	r18, r18
     f56:	33 1f       	adc	r19, r19
     f58:	44 1f       	adc	r20, r20
     f5a:	aa 1f       	adc	r26, r26
     f5c:	a9 f3       	breq	.-22     	; 0xf48 <__divsf3_pse+0x10>
     f5e:	33 d0       	rcall	.+102    	; 0xfc6 <__divsf3_pse+0x8e>
     f60:	0e 2e       	mov	r0, r30
     f62:	3a f0       	brmi	.+14     	; 0xf72 <__divsf3_pse+0x3a>
     f64:	e0 e8       	ldi	r30, 0x80	; 128
     f66:	30 d0       	rcall	.+96     	; 0xfc8 <__divsf3_pse+0x90>
     f68:	91 50       	subi	r25, 0x01	; 1
     f6a:	50 40       	sbci	r21, 0x00	; 0
     f6c:	e6 95       	lsr	r30
     f6e:	00 1c       	adc	r0, r0
     f70:	ca f7       	brpl	.-14     	; 0xf64 <__divsf3_pse+0x2c>
     f72:	29 d0       	rcall	.+82     	; 0xfc6 <__divsf3_pse+0x8e>
     f74:	fe 2f       	mov	r31, r30
     f76:	27 d0       	rcall	.+78     	; 0xfc6 <__divsf3_pse+0x8e>
     f78:	66 0f       	add	r22, r22
     f7a:	77 1f       	adc	r23, r23
     f7c:	88 1f       	adc	r24, r24
     f7e:	bb 1f       	adc	r27, r27
     f80:	26 17       	cp	r18, r22
     f82:	37 07       	cpc	r19, r23
     f84:	48 07       	cpc	r20, r24
     f86:	ab 07       	cpc	r26, r27
     f88:	b0 e8       	ldi	r27, 0x80	; 128
     f8a:	09 f0       	breq	.+2      	; 0xf8e <__divsf3_pse+0x56>
     f8c:	bb 0b       	sbc	r27, r27
     f8e:	80 2d       	mov	r24, r0
     f90:	bf 01       	movw	r22, r30
     f92:	ff 27       	eor	r31, r31
     f94:	93 58       	subi	r25, 0x83	; 131
     f96:	5f 4f       	sbci	r21, 0xFF	; 255
     f98:	2a f0       	brmi	.+10     	; 0xfa4 <__divsf3_pse+0x6c>
     f9a:	9e 3f       	cpi	r25, 0xFE	; 254
     f9c:	51 05       	cpc	r21, r1
     f9e:	68 f0       	brcs	.+26     	; 0xfba <__divsf3_pse+0x82>
     fa0:	b6 c0       	rjmp	.+364    	; 0x110e <__fp_inf>
     fa2:	00 c1       	rjmp	.+512    	; 0x11a4 <__fp_szero>
     fa4:	5f 3f       	cpi	r21, 0xFF	; 255
     fa6:	ec f3       	brlt	.-6      	; 0xfa2 <__divsf3_pse+0x6a>
     fa8:	98 3e       	cpi	r25, 0xE8	; 232
     faa:	dc f3       	brlt	.-10     	; 0xfa2 <__divsf3_pse+0x6a>
     fac:	86 95       	lsr	r24
     fae:	77 95       	ror	r23
     fb0:	67 95       	ror	r22
     fb2:	b7 95       	ror	r27
     fb4:	f7 95       	ror	r31
     fb6:	9f 5f       	subi	r25, 0xFF	; 255
     fb8:	c9 f7       	brne	.-14     	; 0xfac <__divsf3_pse+0x74>
     fba:	88 0f       	add	r24, r24
     fbc:	91 1d       	adc	r25, r1
     fbe:	96 95       	lsr	r25
     fc0:	87 95       	ror	r24
     fc2:	97 f9       	bld	r25, 7
     fc4:	08 95       	ret
     fc6:	e1 e0       	ldi	r30, 0x01	; 1
     fc8:	66 0f       	add	r22, r22
     fca:	77 1f       	adc	r23, r23
     fcc:	88 1f       	adc	r24, r24
     fce:	bb 1f       	adc	r27, r27
     fd0:	62 17       	cp	r22, r18
     fd2:	73 07       	cpc	r23, r19
     fd4:	84 07       	cpc	r24, r20
     fd6:	ba 07       	cpc	r27, r26
     fd8:	20 f0       	brcs	.+8      	; 0xfe2 <__divsf3_pse+0xaa>
     fda:	62 1b       	sub	r22, r18
     fdc:	73 0b       	sbc	r23, r19
     fde:	84 0b       	sbc	r24, r20
     fe0:	ba 0b       	sbc	r27, r26
     fe2:	ee 1f       	adc	r30, r30
     fe4:	88 f7       	brcc	.-30     	; 0xfc8 <__divsf3_pse+0x90>
     fe6:	e0 95       	com	r30
     fe8:	08 95       	ret

00000fea <__fixsfsi>:
     fea:	04 d0       	rcall	.+8      	; 0xff4 <__fixunssfsi>
     fec:	68 94       	set
     fee:	b1 11       	cpse	r27, r1
     ff0:	d9 c0       	rjmp	.+434    	; 0x11a4 <__fp_szero>
     ff2:	08 95       	ret

00000ff4 <__fixunssfsi>:
     ff4:	bc d0       	rcall	.+376    	; 0x116e <__fp_splitA>
     ff6:	88 f0       	brcs	.+34     	; 0x101a <__fixunssfsi+0x26>
     ff8:	9f 57       	subi	r25, 0x7F	; 127
     ffa:	90 f0       	brcs	.+36     	; 0x1020 <__fixunssfsi+0x2c>
     ffc:	b9 2f       	mov	r27, r25
     ffe:	99 27       	eor	r25, r25
    1000:	b7 51       	subi	r27, 0x17	; 23
    1002:	a0 f0       	brcs	.+40     	; 0x102c <__fixunssfsi+0x38>
    1004:	d1 f0       	breq	.+52     	; 0x103a <__fixunssfsi+0x46>
    1006:	66 0f       	add	r22, r22
    1008:	77 1f       	adc	r23, r23
    100a:	88 1f       	adc	r24, r24
    100c:	99 1f       	adc	r25, r25
    100e:	1a f0       	brmi	.+6      	; 0x1016 <__fixunssfsi+0x22>
    1010:	ba 95       	dec	r27
    1012:	c9 f7       	brne	.-14     	; 0x1006 <__fixunssfsi+0x12>
    1014:	12 c0       	rjmp	.+36     	; 0x103a <__fixunssfsi+0x46>
    1016:	b1 30       	cpi	r27, 0x01	; 1
    1018:	81 f0       	breq	.+32     	; 0x103a <__fixunssfsi+0x46>
    101a:	c3 d0       	rcall	.+390    	; 0x11a2 <__fp_zero>
    101c:	b1 e0       	ldi	r27, 0x01	; 1
    101e:	08 95       	ret
    1020:	c0 c0       	rjmp	.+384    	; 0x11a2 <__fp_zero>
    1022:	67 2f       	mov	r22, r23
    1024:	78 2f       	mov	r23, r24
    1026:	88 27       	eor	r24, r24
    1028:	b8 5f       	subi	r27, 0xF8	; 248
    102a:	39 f0       	breq	.+14     	; 0x103a <__fixunssfsi+0x46>
    102c:	b9 3f       	cpi	r27, 0xF9	; 249
    102e:	cc f3       	brlt	.-14     	; 0x1022 <__fixunssfsi+0x2e>
    1030:	86 95       	lsr	r24
    1032:	77 95       	ror	r23
    1034:	67 95       	ror	r22
    1036:	b3 95       	inc	r27
    1038:	d9 f7       	brne	.-10     	; 0x1030 <__fixunssfsi+0x3c>
    103a:	3e f4       	brtc	.+14     	; 0x104a <__fixunssfsi+0x56>
    103c:	90 95       	com	r25
    103e:	80 95       	com	r24
    1040:	70 95       	com	r23
    1042:	61 95       	neg	r22
    1044:	7f 4f       	sbci	r23, 0xFF	; 255
    1046:	8f 4f       	sbci	r24, 0xFF	; 255
    1048:	9f 4f       	sbci	r25, 0xFF	; 255
    104a:	08 95       	ret

0000104c <__floatunsisf>:
    104c:	e8 94       	clt
    104e:	09 c0       	rjmp	.+18     	; 0x1062 <__floatsisf+0x12>

00001050 <__floatsisf>:
    1050:	97 fb       	bst	r25, 7
    1052:	3e f4       	brtc	.+14     	; 0x1062 <__floatsisf+0x12>
    1054:	90 95       	com	r25
    1056:	80 95       	com	r24
    1058:	70 95       	com	r23
    105a:	61 95       	neg	r22
    105c:	7f 4f       	sbci	r23, 0xFF	; 255
    105e:	8f 4f       	sbci	r24, 0xFF	; 255
    1060:	9f 4f       	sbci	r25, 0xFF	; 255
    1062:	99 23       	and	r25, r25
    1064:	a9 f0       	breq	.+42     	; 0x1090 <__floatsisf+0x40>
    1066:	f9 2f       	mov	r31, r25
    1068:	96 e9       	ldi	r25, 0x96	; 150
    106a:	bb 27       	eor	r27, r27
    106c:	93 95       	inc	r25
    106e:	f6 95       	lsr	r31
    1070:	87 95       	ror	r24
    1072:	77 95       	ror	r23
    1074:	67 95       	ror	r22
    1076:	b7 95       	ror	r27
    1078:	f1 11       	cpse	r31, r1
    107a:	f8 cf       	rjmp	.-16     	; 0x106c <__floatsisf+0x1c>
    107c:	fa f4       	brpl	.+62     	; 0x10bc <__floatsisf+0x6c>
    107e:	bb 0f       	add	r27, r27
    1080:	11 f4       	brne	.+4      	; 0x1086 <__floatsisf+0x36>
    1082:	60 ff       	sbrs	r22, 0
    1084:	1b c0       	rjmp	.+54     	; 0x10bc <__floatsisf+0x6c>
    1086:	6f 5f       	subi	r22, 0xFF	; 255
    1088:	7f 4f       	sbci	r23, 0xFF	; 255
    108a:	8f 4f       	sbci	r24, 0xFF	; 255
    108c:	9f 4f       	sbci	r25, 0xFF	; 255
    108e:	16 c0       	rjmp	.+44     	; 0x10bc <__floatsisf+0x6c>
    1090:	88 23       	and	r24, r24
    1092:	11 f0       	breq	.+4      	; 0x1098 <__floatsisf+0x48>
    1094:	96 e9       	ldi	r25, 0x96	; 150
    1096:	11 c0       	rjmp	.+34     	; 0x10ba <__floatsisf+0x6a>
    1098:	77 23       	and	r23, r23
    109a:	21 f0       	breq	.+8      	; 0x10a4 <__floatsisf+0x54>
    109c:	9e e8       	ldi	r25, 0x8E	; 142
    109e:	87 2f       	mov	r24, r23
    10a0:	76 2f       	mov	r23, r22
    10a2:	05 c0       	rjmp	.+10     	; 0x10ae <__floatsisf+0x5e>
    10a4:	66 23       	and	r22, r22
    10a6:	71 f0       	breq	.+28     	; 0x10c4 <__floatsisf+0x74>
    10a8:	96 e8       	ldi	r25, 0x86	; 134
    10aa:	86 2f       	mov	r24, r22
    10ac:	70 e0       	ldi	r23, 0x00	; 0
    10ae:	60 e0       	ldi	r22, 0x00	; 0
    10b0:	2a f0       	brmi	.+10     	; 0x10bc <__floatsisf+0x6c>
    10b2:	9a 95       	dec	r25
    10b4:	66 0f       	add	r22, r22
    10b6:	77 1f       	adc	r23, r23
    10b8:	88 1f       	adc	r24, r24
    10ba:	da f7       	brpl	.-10     	; 0x10b2 <__floatsisf+0x62>
    10bc:	88 0f       	add	r24, r24
    10be:	96 95       	lsr	r25
    10c0:	87 95       	ror	r24
    10c2:	97 f9       	bld	r25, 7
    10c4:	08 95       	ret

000010c6 <__fp_cmp>:
    10c6:	99 0f       	add	r25, r25
    10c8:	00 08       	sbc	r0, r0
    10ca:	55 0f       	add	r21, r21
    10cc:	aa 0b       	sbc	r26, r26
    10ce:	e0 e8       	ldi	r30, 0x80	; 128
    10d0:	fe ef       	ldi	r31, 0xFE	; 254
    10d2:	16 16       	cp	r1, r22
    10d4:	17 06       	cpc	r1, r23
    10d6:	e8 07       	cpc	r30, r24
    10d8:	f9 07       	cpc	r31, r25
    10da:	c0 f0       	brcs	.+48     	; 0x110c <__fp_cmp+0x46>
    10dc:	12 16       	cp	r1, r18
    10de:	13 06       	cpc	r1, r19
    10e0:	e4 07       	cpc	r30, r20
    10e2:	f5 07       	cpc	r31, r21
    10e4:	98 f0       	brcs	.+38     	; 0x110c <__fp_cmp+0x46>
    10e6:	62 1b       	sub	r22, r18
    10e8:	73 0b       	sbc	r23, r19
    10ea:	84 0b       	sbc	r24, r20
    10ec:	95 0b       	sbc	r25, r21
    10ee:	39 f4       	brne	.+14     	; 0x10fe <__fp_cmp+0x38>
    10f0:	0a 26       	eor	r0, r26
    10f2:	61 f0       	breq	.+24     	; 0x110c <__fp_cmp+0x46>
    10f4:	23 2b       	or	r18, r19
    10f6:	24 2b       	or	r18, r20
    10f8:	25 2b       	or	r18, r21
    10fa:	21 f4       	brne	.+8      	; 0x1104 <__fp_cmp+0x3e>
    10fc:	08 95       	ret
    10fe:	0a 26       	eor	r0, r26
    1100:	09 f4       	brne	.+2      	; 0x1104 <__fp_cmp+0x3e>
    1102:	a1 40       	sbci	r26, 0x01	; 1
    1104:	a6 95       	lsr	r26
    1106:	8f ef       	ldi	r24, 0xFF	; 255
    1108:	81 1d       	adc	r24, r1
    110a:	81 1d       	adc	r24, r1
    110c:	08 95       	ret

0000110e <__fp_inf>:
    110e:	97 f9       	bld	r25, 7
    1110:	9f 67       	ori	r25, 0x7F	; 127
    1112:	80 e8       	ldi	r24, 0x80	; 128
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	60 e0       	ldi	r22, 0x00	; 0
    1118:	08 95       	ret

0000111a <__fp_nan>:
    111a:	9f ef       	ldi	r25, 0xFF	; 255
    111c:	80 ec       	ldi	r24, 0xC0	; 192
    111e:	08 95       	ret

00001120 <__fp_pscA>:
    1120:	00 24       	eor	r0, r0
    1122:	0a 94       	dec	r0
    1124:	16 16       	cp	r1, r22
    1126:	17 06       	cpc	r1, r23
    1128:	18 06       	cpc	r1, r24
    112a:	09 06       	cpc	r0, r25
    112c:	08 95       	ret

0000112e <__fp_pscB>:
    112e:	00 24       	eor	r0, r0
    1130:	0a 94       	dec	r0
    1132:	12 16       	cp	r1, r18
    1134:	13 06       	cpc	r1, r19
    1136:	14 06       	cpc	r1, r20
    1138:	05 06       	cpc	r0, r21
    113a:	08 95       	ret

0000113c <__fp_round>:
    113c:	09 2e       	mov	r0, r25
    113e:	03 94       	inc	r0
    1140:	00 0c       	add	r0, r0
    1142:	11 f4       	brne	.+4      	; 0x1148 <__fp_round+0xc>
    1144:	88 23       	and	r24, r24
    1146:	52 f0       	brmi	.+20     	; 0x115c <__fp_round+0x20>
    1148:	bb 0f       	add	r27, r27
    114a:	40 f4       	brcc	.+16     	; 0x115c <__fp_round+0x20>
    114c:	bf 2b       	or	r27, r31
    114e:	11 f4       	brne	.+4      	; 0x1154 <__fp_round+0x18>
    1150:	60 ff       	sbrs	r22, 0
    1152:	04 c0       	rjmp	.+8      	; 0x115c <__fp_round+0x20>
    1154:	6f 5f       	subi	r22, 0xFF	; 255
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	8f 4f       	sbci	r24, 0xFF	; 255
    115a:	9f 4f       	sbci	r25, 0xFF	; 255
    115c:	08 95       	ret

0000115e <__fp_split3>:
    115e:	57 fd       	sbrc	r21, 7
    1160:	90 58       	subi	r25, 0x80	; 128
    1162:	44 0f       	add	r20, r20
    1164:	55 1f       	adc	r21, r21
    1166:	59 f0       	breq	.+22     	; 0x117e <__fp_splitA+0x10>
    1168:	5f 3f       	cpi	r21, 0xFF	; 255
    116a:	71 f0       	breq	.+28     	; 0x1188 <__fp_splitA+0x1a>
    116c:	47 95       	ror	r20

0000116e <__fp_splitA>:
    116e:	88 0f       	add	r24, r24
    1170:	97 fb       	bst	r25, 7
    1172:	99 1f       	adc	r25, r25
    1174:	61 f0       	breq	.+24     	; 0x118e <__fp_splitA+0x20>
    1176:	9f 3f       	cpi	r25, 0xFF	; 255
    1178:	79 f0       	breq	.+30     	; 0x1198 <__fp_splitA+0x2a>
    117a:	87 95       	ror	r24
    117c:	08 95       	ret
    117e:	12 16       	cp	r1, r18
    1180:	13 06       	cpc	r1, r19
    1182:	14 06       	cpc	r1, r20
    1184:	55 1f       	adc	r21, r21
    1186:	f2 cf       	rjmp	.-28     	; 0x116c <__fp_split3+0xe>
    1188:	46 95       	lsr	r20
    118a:	f1 df       	rcall	.-30     	; 0x116e <__fp_splitA>
    118c:	08 c0       	rjmp	.+16     	; 0x119e <__fp_splitA+0x30>
    118e:	16 16       	cp	r1, r22
    1190:	17 06       	cpc	r1, r23
    1192:	18 06       	cpc	r1, r24
    1194:	99 1f       	adc	r25, r25
    1196:	f1 cf       	rjmp	.-30     	; 0x117a <__fp_splitA+0xc>
    1198:	86 95       	lsr	r24
    119a:	71 05       	cpc	r23, r1
    119c:	61 05       	cpc	r22, r1
    119e:	08 94       	sec
    11a0:	08 95       	ret

000011a2 <__fp_zero>:
    11a2:	e8 94       	clt

000011a4 <__fp_szero>:
    11a4:	bb 27       	eor	r27, r27
    11a6:	66 27       	eor	r22, r22
    11a8:	77 27       	eor	r23, r23
    11aa:	cb 01       	movw	r24, r22
    11ac:	97 f9       	bld	r25, 7
    11ae:	08 95       	ret

000011b0 <__gesf2>:
    11b0:	8a df       	rcall	.-236    	; 0x10c6 <__fp_cmp>
    11b2:	08 f4       	brcc	.+2      	; 0x11b6 <__gesf2+0x6>
    11b4:	8f ef       	ldi	r24, 0xFF	; 255
    11b6:	08 95       	ret

000011b8 <__mulsf3>:
    11b8:	0b d0       	rcall	.+22     	; 0x11d0 <__mulsf3x>
    11ba:	c0 cf       	rjmp	.-128    	; 0x113c <__fp_round>
    11bc:	b1 df       	rcall	.-158    	; 0x1120 <__fp_pscA>
    11be:	28 f0       	brcs	.+10     	; 0x11ca <__mulsf3+0x12>
    11c0:	b6 df       	rcall	.-148    	; 0x112e <__fp_pscB>
    11c2:	18 f0       	brcs	.+6      	; 0x11ca <__mulsf3+0x12>
    11c4:	95 23       	and	r25, r21
    11c6:	09 f0       	breq	.+2      	; 0x11ca <__mulsf3+0x12>
    11c8:	a2 cf       	rjmp	.-188    	; 0x110e <__fp_inf>
    11ca:	a7 cf       	rjmp	.-178    	; 0x111a <__fp_nan>
    11cc:	11 24       	eor	r1, r1
    11ce:	ea cf       	rjmp	.-44     	; 0x11a4 <__fp_szero>

000011d0 <__mulsf3x>:
    11d0:	c6 df       	rcall	.-116    	; 0x115e <__fp_split3>
    11d2:	a0 f3       	brcs	.-24     	; 0x11bc <__mulsf3+0x4>

000011d4 <__mulsf3_pse>:
    11d4:	95 9f       	mul	r25, r21
    11d6:	d1 f3       	breq	.-12     	; 0x11cc <__mulsf3+0x14>
    11d8:	95 0f       	add	r25, r21
    11da:	50 e0       	ldi	r21, 0x00	; 0
    11dc:	55 1f       	adc	r21, r21
    11de:	62 9f       	mul	r22, r18
    11e0:	f0 01       	movw	r30, r0
    11e2:	72 9f       	mul	r23, r18
    11e4:	bb 27       	eor	r27, r27
    11e6:	f0 0d       	add	r31, r0
    11e8:	b1 1d       	adc	r27, r1
    11ea:	63 9f       	mul	r22, r19
    11ec:	aa 27       	eor	r26, r26
    11ee:	f0 0d       	add	r31, r0
    11f0:	b1 1d       	adc	r27, r1
    11f2:	aa 1f       	adc	r26, r26
    11f4:	64 9f       	mul	r22, r20
    11f6:	66 27       	eor	r22, r22
    11f8:	b0 0d       	add	r27, r0
    11fa:	a1 1d       	adc	r26, r1
    11fc:	66 1f       	adc	r22, r22
    11fe:	82 9f       	mul	r24, r18
    1200:	22 27       	eor	r18, r18
    1202:	b0 0d       	add	r27, r0
    1204:	a1 1d       	adc	r26, r1
    1206:	62 1f       	adc	r22, r18
    1208:	73 9f       	mul	r23, r19
    120a:	b0 0d       	add	r27, r0
    120c:	a1 1d       	adc	r26, r1
    120e:	62 1f       	adc	r22, r18
    1210:	83 9f       	mul	r24, r19
    1212:	a0 0d       	add	r26, r0
    1214:	61 1d       	adc	r22, r1
    1216:	22 1f       	adc	r18, r18
    1218:	74 9f       	mul	r23, r20
    121a:	33 27       	eor	r19, r19
    121c:	a0 0d       	add	r26, r0
    121e:	61 1d       	adc	r22, r1
    1220:	23 1f       	adc	r18, r19
    1222:	84 9f       	mul	r24, r20
    1224:	60 0d       	add	r22, r0
    1226:	21 1d       	adc	r18, r1
    1228:	82 2f       	mov	r24, r18
    122a:	76 2f       	mov	r23, r22
    122c:	6a 2f       	mov	r22, r26
    122e:	11 24       	eor	r1, r1
    1230:	9f 57       	subi	r25, 0x7F	; 127
    1232:	50 40       	sbci	r21, 0x00	; 0
    1234:	8a f0       	brmi	.+34     	; 0x1258 <__mulsf3_pse+0x84>
    1236:	e1 f0       	breq	.+56     	; 0x1270 <__mulsf3_pse+0x9c>
    1238:	88 23       	and	r24, r24
    123a:	4a f0       	brmi	.+18     	; 0x124e <__mulsf3_pse+0x7a>
    123c:	ee 0f       	add	r30, r30
    123e:	ff 1f       	adc	r31, r31
    1240:	bb 1f       	adc	r27, r27
    1242:	66 1f       	adc	r22, r22
    1244:	77 1f       	adc	r23, r23
    1246:	88 1f       	adc	r24, r24
    1248:	91 50       	subi	r25, 0x01	; 1
    124a:	50 40       	sbci	r21, 0x00	; 0
    124c:	a9 f7       	brne	.-22     	; 0x1238 <__mulsf3_pse+0x64>
    124e:	9e 3f       	cpi	r25, 0xFE	; 254
    1250:	51 05       	cpc	r21, r1
    1252:	70 f0       	brcs	.+28     	; 0x1270 <__mulsf3_pse+0x9c>
    1254:	5c cf       	rjmp	.-328    	; 0x110e <__fp_inf>
    1256:	a6 cf       	rjmp	.-180    	; 0x11a4 <__fp_szero>
    1258:	5f 3f       	cpi	r21, 0xFF	; 255
    125a:	ec f3       	brlt	.-6      	; 0x1256 <__mulsf3_pse+0x82>
    125c:	98 3e       	cpi	r25, 0xE8	; 232
    125e:	dc f3       	brlt	.-10     	; 0x1256 <__mulsf3_pse+0x82>
    1260:	86 95       	lsr	r24
    1262:	77 95       	ror	r23
    1264:	67 95       	ror	r22
    1266:	b7 95       	ror	r27
    1268:	f7 95       	ror	r31
    126a:	e7 95       	ror	r30
    126c:	9f 5f       	subi	r25, 0xFF	; 255
    126e:	c1 f7       	brne	.-16     	; 0x1260 <__mulsf3_pse+0x8c>
    1270:	fe 2b       	or	r31, r30
    1272:	88 0f       	add	r24, r24
    1274:	91 1d       	adc	r25, r1
    1276:	96 95       	lsr	r25
    1278:	87 95       	ror	r24
    127a:	97 f9       	bld	r25, 7
    127c:	08 95       	ret

0000127e <__tablejump2__>:
    127e:	ee 0f       	add	r30, r30
    1280:	ff 1f       	adc	r31, r31

00001282 <__tablejump__>:
    1282:	05 90       	lpm	r0, Z+
    1284:	f4 91       	lpm	r31, Z
    1286:	e0 2d       	mov	r30, r0
    1288:	19 94       	eijmp

0000128a <fdevopen>:
    128a:	0f 93       	push	r16
    128c:	1f 93       	push	r17
    128e:	cf 93       	push	r28
    1290:	df 93       	push	r29
    1292:	ec 01       	movw	r28, r24
    1294:	8b 01       	movw	r16, r22
    1296:	00 97       	sbiw	r24, 0x00	; 0
    1298:	31 f4       	brne	.+12     	; 0x12a6 <fdevopen+0x1c>
    129a:	61 15       	cp	r22, r1
    129c:	71 05       	cpc	r23, r1
    129e:	19 f4       	brne	.+6      	; 0x12a6 <fdevopen+0x1c>
    12a0:	80 e0       	ldi	r24, 0x00	; 0
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	37 c0       	rjmp	.+110    	; 0x1314 <fdevopen+0x8a>
    12a6:	6e e0       	ldi	r22, 0x0E	; 14
    12a8:	70 e0       	ldi	r23, 0x00	; 0
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	63 d2       	rcall	.+1222   	; 0x1776 <calloc>
    12b0:	fc 01       	movw	r30, r24
    12b2:	00 97       	sbiw	r24, 0x00	; 0
    12b4:	a9 f3       	breq	.-22     	; 0x12a0 <fdevopen+0x16>
    12b6:	80 e8       	ldi	r24, 0x80	; 128
    12b8:	83 83       	std	Z+3, r24	; 0x03
    12ba:	01 15       	cp	r16, r1
    12bc:	11 05       	cpc	r17, r1
    12be:	71 f0       	breq	.+28     	; 0x12dc <fdevopen+0x52>
    12c0:	13 87       	std	Z+11, r17	; 0x0b
    12c2:	02 87       	std	Z+10, r16	; 0x0a
    12c4:	81 e8       	ldi	r24, 0x81	; 129
    12c6:	83 83       	std	Z+3, r24	; 0x03
    12c8:	80 91 bb 02 	lds	r24, 0x02BB
    12cc:	90 91 bc 02 	lds	r25, 0x02BC
    12d0:	89 2b       	or	r24, r25
    12d2:	21 f4       	brne	.+8      	; 0x12dc <fdevopen+0x52>
    12d4:	f0 93 bc 02 	sts	0x02BC, r31
    12d8:	e0 93 bb 02 	sts	0x02BB, r30
    12dc:	20 97       	sbiw	r28, 0x00	; 0
    12de:	c9 f0       	breq	.+50     	; 0x1312 <fdevopen+0x88>
    12e0:	d1 87       	std	Z+9, r29	; 0x09
    12e2:	c0 87       	std	Z+8, r28	; 0x08
    12e4:	83 81       	ldd	r24, Z+3	; 0x03
    12e6:	82 60       	ori	r24, 0x02	; 2
    12e8:	83 83       	std	Z+3, r24	; 0x03
    12ea:	80 91 bd 02 	lds	r24, 0x02BD
    12ee:	90 91 be 02 	lds	r25, 0x02BE
    12f2:	89 2b       	or	r24, r25
    12f4:	71 f4       	brne	.+28     	; 0x1312 <fdevopen+0x88>
    12f6:	f0 93 be 02 	sts	0x02BE, r31
    12fa:	e0 93 bd 02 	sts	0x02BD, r30
    12fe:	80 91 bf 02 	lds	r24, 0x02BF
    1302:	90 91 c0 02 	lds	r25, 0x02C0
    1306:	89 2b       	or	r24, r25
    1308:	21 f4       	brne	.+8      	; 0x1312 <fdevopen+0x88>
    130a:	f0 93 c0 02 	sts	0x02C0, r31
    130e:	e0 93 bf 02 	sts	0x02BF, r30
    1312:	cf 01       	movw	r24, r30
    1314:	df 91       	pop	r29
    1316:	cf 91       	pop	r28
    1318:	1f 91       	pop	r17
    131a:	0f 91       	pop	r16
    131c:	08 95       	ret

0000131e <printf>:
    131e:	cf 93       	push	r28
    1320:	df 93       	push	r29
    1322:	cd b7       	in	r28, 0x3d	; 61
    1324:	de b7       	in	r29, 0x3e	; 62
    1326:	fe 01       	movw	r30, r28
    1328:	36 96       	adiw	r30, 0x06	; 6
    132a:	61 91       	ld	r22, Z+
    132c:	71 91       	ld	r23, Z+
    132e:	af 01       	movw	r20, r30
    1330:	80 91 bd 02 	lds	r24, 0x02BD
    1334:	90 91 be 02 	lds	r25, 0x02BE
    1338:	30 d0       	rcall	.+96     	; 0x139a <vfprintf>
    133a:	df 91       	pop	r29
    133c:	cf 91       	pop	r28
    133e:	08 95       	ret

00001340 <puts>:
    1340:	0f 93       	push	r16
    1342:	1f 93       	push	r17
    1344:	cf 93       	push	r28
    1346:	df 93       	push	r29
    1348:	e0 91 bd 02 	lds	r30, 0x02BD
    134c:	f0 91 be 02 	lds	r31, 0x02BE
    1350:	23 81       	ldd	r18, Z+3	; 0x03
    1352:	21 ff       	sbrs	r18, 1
    1354:	1b c0       	rjmp	.+54     	; 0x138c <puts+0x4c>
    1356:	ec 01       	movw	r28, r24
    1358:	00 e0       	ldi	r16, 0x00	; 0
    135a:	10 e0       	ldi	r17, 0x00	; 0
    135c:	89 91       	ld	r24, Y+
    135e:	60 91 bd 02 	lds	r22, 0x02BD
    1362:	70 91 be 02 	lds	r23, 0x02BE
    1366:	db 01       	movw	r26, r22
    1368:	18 96       	adiw	r26, 0x08	; 8
    136a:	ed 91       	ld	r30, X+
    136c:	fc 91       	ld	r31, X
    136e:	19 97       	sbiw	r26, 0x09	; 9
    1370:	88 23       	and	r24, r24
    1372:	31 f0       	breq	.+12     	; 0x1380 <puts+0x40>
    1374:	19 95       	eicall
    1376:	89 2b       	or	r24, r25
    1378:	89 f3       	breq	.-30     	; 0x135c <puts+0x1c>
    137a:	0f ef       	ldi	r16, 0xFF	; 255
    137c:	1f ef       	ldi	r17, 0xFF	; 255
    137e:	ee cf       	rjmp	.-36     	; 0x135c <puts+0x1c>
    1380:	8a e0       	ldi	r24, 0x0A	; 10
    1382:	19 95       	eicall
    1384:	89 2b       	or	r24, r25
    1386:	11 f4       	brne	.+4      	; 0x138c <puts+0x4c>
    1388:	c8 01       	movw	r24, r16
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <puts+0x50>
    138c:	8f ef       	ldi	r24, 0xFF	; 255
    138e:	9f ef       	ldi	r25, 0xFF	; 255
    1390:	df 91       	pop	r29
    1392:	cf 91       	pop	r28
    1394:	1f 91       	pop	r17
    1396:	0f 91       	pop	r16
    1398:	08 95       	ret

0000139a <vfprintf>:
    139a:	2f 92       	push	r2
    139c:	3f 92       	push	r3
    139e:	4f 92       	push	r4
    13a0:	5f 92       	push	r5
    13a2:	6f 92       	push	r6
    13a4:	7f 92       	push	r7
    13a6:	8f 92       	push	r8
    13a8:	9f 92       	push	r9
    13aa:	af 92       	push	r10
    13ac:	bf 92       	push	r11
    13ae:	cf 92       	push	r12
    13b0:	df 92       	push	r13
    13b2:	ef 92       	push	r14
    13b4:	ff 92       	push	r15
    13b6:	0f 93       	push	r16
    13b8:	1f 93       	push	r17
    13ba:	cf 93       	push	r28
    13bc:	df 93       	push	r29
    13be:	cd b7       	in	r28, 0x3d	; 61
    13c0:	de b7       	in	r29, 0x3e	; 62
    13c2:	2c 97       	sbiw	r28, 0x0c	; 12
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	f8 94       	cli
    13c8:	de bf       	out	0x3e, r29	; 62
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	cd bf       	out	0x3d, r28	; 61
    13ce:	7c 01       	movw	r14, r24
    13d0:	6b 01       	movw	r12, r22
    13d2:	8a 01       	movw	r16, r20
    13d4:	fc 01       	movw	r30, r24
    13d6:	17 82       	std	Z+7, r1	; 0x07
    13d8:	16 82       	std	Z+6, r1	; 0x06
    13da:	83 81       	ldd	r24, Z+3	; 0x03
    13dc:	81 ff       	sbrs	r24, 1
    13de:	b0 c1       	rjmp	.+864    	; 0x1740 <vfprintf+0x3a6>
    13e0:	ce 01       	movw	r24, r28
    13e2:	01 96       	adiw	r24, 0x01	; 1
    13e4:	4c 01       	movw	r8, r24
    13e6:	f7 01       	movw	r30, r14
    13e8:	93 81       	ldd	r25, Z+3	; 0x03
    13ea:	f6 01       	movw	r30, r12
    13ec:	93 fd       	sbrc	r25, 3
    13ee:	85 91       	lpm	r24, Z+
    13f0:	93 ff       	sbrs	r25, 3
    13f2:	81 91       	ld	r24, Z+
    13f4:	6f 01       	movw	r12, r30
    13f6:	88 23       	and	r24, r24
    13f8:	09 f4       	brne	.+2      	; 0x13fc <vfprintf+0x62>
    13fa:	9e c1       	rjmp	.+828    	; 0x1738 <vfprintf+0x39e>
    13fc:	85 32       	cpi	r24, 0x25	; 37
    13fe:	39 f4       	brne	.+14     	; 0x140e <vfprintf+0x74>
    1400:	93 fd       	sbrc	r25, 3
    1402:	85 91       	lpm	r24, Z+
    1404:	93 ff       	sbrs	r25, 3
    1406:	81 91       	ld	r24, Z+
    1408:	6f 01       	movw	r12, r30
    140a:	85 32       	cpi	r24, 0x25	; 37
    140c:	21 f4       	brne	.+8      	; 0x1416 <vfprintf+0x7c>
    140e:	b7 01       	movw	r22, r14
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	0f d3       	rcall	.+1566   	; 0x1a32 <fputc>
    1414:	e8 cf       	rjmp	.-48     	; 0x13e6 <vfprintf+0x4c>
    1416:	51 2c       	mov	r5, r1
    1418:	31 2c       	mov	r3, r1
    141a:	20 e0       	ldi	r18, 0x00	; 0
    141c:	20 32       	cpi	r18, 0x20	; 32
    141e:	a0 f4       	brcc	.+40     	; 0x1448 <vfprintf+0xae>
    1420:	8b 32       	cpi	r24, 0x2B	; 43
    1422:	69 f0       	breq	.+26     	; 0x143e <vfprintf+0xa4>
    1424:	30 f4       	brcc	.+12     	; 0x1432 <vfprintf+0x98>
    1426:	80 32       	cpi	r24, 0x20	; 32
    1428:	59 f0       	breq	.+22     	; 0x1440 <vfprintf+0xa6>
    142a:	83 32       	cpi	r24, 0x23	; 35
    142c:	69 f4       	brne	.+26     	; 0x1448 <vfprintf+0xae>
    142e:	20 61       	ori	r18, 0x10	; 16
    1430:	2c c0       	rjmp	.+88     	; 0x148a <vfprintf+0xf0>
    1432:	8d 32       	cpi	r24, 0x2D	; 45
    1434:	39 f0       	breq	.+14     	; 0x1444 <vfprintf+0xaa>
    1436:	80 33       	cpi	r24, 0x30	; 48
    1438:	39 f4       	brne	.+14     	; 0x1448 <vfprintf+0xae>
    143a:	21 60       	ori	r18, 0x01	; 1
    143c:	26 c0       	rjmp	.+76     	; 0x148a <vfprintf+0xf0>
    143e:	22 60       	ori	r18, 0x02	; 2
    1440:	24 60       	ori	r18, 0x04	; 4
    1442:	23 c0       	rjmp	.+70     	; 0x148a <vfprintf+0xf0>
    1444:	28 60       	ori	r18, 0x08	; 8
    1446:	21 c0       	rjmp	.+66     	; 0x148a <vfprintf+0xf0>
    1448:	27 fd       	sbrc	r18, 7
    144a:	27 c0       	rjmp	.+78     	; 0x149a <vfprintf+0x100>
    144c:	30 ed       	ldi	r19, 0xD0	; 208
    144e:	38 0f       	add	r19, r24
    1450:	3a 30       	cpi	r19, 0x0A	; 10
    1452:	78 f4       	brcc	.+30     	; 0x1472 <vfprintf+0xd8>
    1454:	26 ff       	sbrs	r18, 6
    1456:	06 c0       	rjmp	.+12     	; 0x1464 <vfprintf+0xca>
    1458:	fa e0       	ldi	r31, 0x0A	; 10
    145a:	5f 9e       	mul	r5, r31
    145c:	30 0d       	add	r19, r0
    145e:	11 24       	eor	r1, r1
    1460:	53 2e       	mov	r5, r19
    1462:	13 c0       	rjmp	.+38     	; 0x148a <vfprintf+0xf0>
    1464:	8a e0       	ldi	r24, 0x0A	; 10
    1466:	38 9e       	mul	r3, r24
    1468:	30 0d       	add	r19, r0
    146a:	11 24       	eor	r1, r1
    146c:	33 2e       	mov	r3, r19
    146e:	20 62       	ori	r18, 0x20	; 32
    1470:	0c c0       	rjmp	.+24     	; 0x148a <vfprintf+0xf0>
    1472:	8e 32       	cpi	r24, 0x2E	; 46
    1474:	21 f4       	brne	.+8      	; 0x147e <vfprintf+0xe4>
    1476:	26 fd       	sbrc	r18, 6
    1478:	5f c1       	rjmp	.+702    	; 0x1738 <vfprintf+0x39e>
    147a:	20 64       	ori	r18, 0x40	; 64
    147c:	06 c0       	rjmp	.+12     	; 0x148a <vfprintf+0xf0>
    147e:	8c 36       	cpi	r24, 0x6C	; 108
    1480:	11 f4       	brne	.+4      	; 0x1486 <vfprintf+0xec>
    1482:	20 68       	ori	r18, 0x80	; 128
    1484:	02 c0       	rjmp	.+4      	; 0x148a <vfprintf+0xf0>
    1486:	88 36       	cpi	r24, 0x68	; 104
    1488:	41 f4       	brne	.+16     	; 0x149a <vfprintf+0x100>
    148a:	f6 01       	movw	r30, r12
    148c:	93 fd       	sbrc	r25, 3
    148e:	85 91       	lpm	r24, Z+
    1490:	93 ff       	sbrs	r25, 3
    1492:	81 91       	ld	r24, Z+
    1494:	6f 01       	movw	r12, r30
    1496:	81 11       	cpse	r24, r1
    1498:	c1 cf       	rjmp	.-126    	; 0x141c <vfprintf+0x82>
    149a:	98 2f       	mov	r25, r24
    149c:	9f 7d       	andi	r25, 0xDF	; 223
    149e:	95 54       	subi	r25, 0x45	; 69
    14a0:	93 30       	cpi	r25, 0x03	; 3
    14a2:	28 f4       	brcc	.+10     	; 0x14ae <vfprintf+0x114>
    14a4:	0c 5f       	subi	r16, 0xFC	; 252
    14a6:	1f 4f       	sbci	r17, 0xFF	; 255
    14a8:	ff e3       	ldi	r31, 0x3F	; 63
    14aa:	f9 83       	std	Y+1, r31	; 0x01
    14ac:	0d c0       	rjmp	.+26     	; 0x14c8 <vfprintf+0x12e>
    14ae:	83 36       	cpi	r24, 0x63	; 99
    14b0:	31 f0       	breq	.+12     	; 0x14be <vfprintf+0x124>
    14b2:	83 37       	cpi	r24, 0x73	; 115
    14b4:	71 f0       	breq	.+28     	; 0x14d2 <vfprintf+0x138>
    14b6:	83 35       	cpi	r24, 0x53	; 83
    14b8:	09 f0       	breq	.+2      	; 0x14bc <vfprintf+0x122>
    14ba:	57 c0       	rjmp	.+174    	; 0x156a <vfprintf+0x1d0>
    14bc:	21 c0       	rjmp	.+66     	; 0x1500 <vfprintf+0x166>
    14be:	f8 01       	movw	r30, r16
    14c0:	80 81       	ld	r24, Z
    14c2:	89 83       	std	Y+1, r24	; 0x01
    14c4:	0e 5f       	subi	r16, 0xFE	; 254
    14c6:	1f 4f       	sbci	r17, 0xFF	; 255
    14c8:	44 24       	eor	r4, r4
    14ca:	43 94       	inc	r4
    14cc:	51 2c       	mov	r5, r1
    14ce:	54 01       	movw	r10, r8
    14d0:	14 c0       	rjmp	.+40     	; 0x14fa <vfprintf+0x160>
    14d2:	38 01       	movw	r6, r16
    14d4:	f2 e0       	ldi	r31, 0x02	; 2
    14d6:	6f 0e       	add	r6, r31
    14d8:	71 1c       	adc	r7, r1
    14da:	f8 01       	movw	r30, r16
    14dc:	a0 80       	ld	r10, Z
    14de:	b1 80       	ldd	r11, Z+1	; 0x01
    14e0:	26 ff       	sbrs	r18, 6
    14e2:	03 c0       	rjmp	.+6      	; 0x14ea <vfprintf+0x150>
    14e4:	65 2d       	mov	r22, r5
    14e6:	70 e0       	ldi	r23, 0x00	; 0
    14e8:	02 c0       	rjmp	.+4      	; 0x14ee <vfprintf+0x154>
    14ea:	6f ef       	ldi	r22, 0xFF	; 255
    14ec:	7f ef       	ldi	r23, 0xFF	; 255
    14ee:	c5 01       	movw	r24, r10
    14f0:	2c 87       	std	Y+12, r18	; 0x0c
    14f2:	94 d2       	rcall	.+1320   	; 0x1a1c <strnlen>
    14f4:	2c 01       	movw	r4, r24
    14f6:	83 01       	movw	r16, r6
    14f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    14fa:	2f 77       	andi	r18, 0x7F	; 127
    14fc:	22 2e       	mov	r2, r18
    14fe:	16 c0       	rjmp	.+44     	; 0x152c <vfprintf+0x192>
    1500:	38 01       	movw	r6, r16
    1502:	f2 e0       	ldi	r31, 0x02	; 2
    1504:	6f 0e       	add	r6, r31
    1506:	71 1c       	adc	r7, r1
    1508:	f8 01       	movw	r30, r16
    150a:	a0 80       	ld	r10, Z
    150c:	b1 80       	ldd	r11, Z+1	; 0x01
    150e:	26 ff       	sbrs	r18, 6
    1510:	03 c0       	rjmp	.+6      	; 0x1518 <vfprintf+0x17e>
    1512:	65 2d       	mov	r22, r5
    1514:	70 e0       	ldi	r23, 0x00	; 0
    1516:	02 c0       	rjmp	.+4      	; 0x151c <vfprintf+0x182>
    1518:	6f ef       	ldi	r22, 0xFF	; 255
    151a:	7f ef       	ldi	r23, 0xFF	; 255
    151c:	c5 01       	movw	r24, r10
    151e:	2c 87       	std	Y+12, r18	; 0x0c
    1520:	6b d2       	rcall	.+1238   	; 0x19f8 <strnlen_P>
    1522:	2c 01       	movw	r4, r24
    1524:	2c 85       	ldd	r18, Y+12	; 0x0c
    1526:	20 68       	ori	r18, 0x80	; 128
    1528:	22 2e       	mov	r2, r18
    152a:	83 01       	movw	r16, r6
    152c:	23 fc       	sbrc	r2, 3
    152e:	19 c0       	rjmp	.+50     	; 0x1562 <vfprintf+0x1c8>
    1530:	83 2d       	mov	r24, r3
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	48 16       	cp	r4, r24
    1536:	59 06       	cpc	r5, r25
    1538:	a0 f4       	brcc	.+40     	; 0x1562 <vfprintf+0x1c8>
    153a:	b7 01       	movw	r22, r14
    153c:	80 e2       	ldi	r24, 0x20	; 32
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	78 d2       	rcall	.+1264   	; 0x1a32 <fputc>
    1542:	3a 94       	dec	r3
    1544:	f5 cf       	rjmp	.-22     	; 0x1530 <vfprintf+0x196>
    1546:	f5 01       	movw	r30, r10
    1548:	27 fc       	sbrc	r2, 7
    154a:	85 91       	lpm	r24, Z+
    154c:	27 fe       	sbrs	r2, 7
    154e:	81 91       	ld	r24, Z+
    1550:	5f 01       	movw	r10, r30
    1552:	b7 01       	movw	r22, r14
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	6d d2       	rcall	.+1242   	; 0x1a32 <fputc>
    1558:	31 10       	cpse	r3, r1
    155a:	3a 94       	dec	r3
    155c:	f1 e0       	ldi	r31, 0x01	; 1
    155e:	4f 1a       	sub	r4, r31
    1560:	51 08       	sbc	r5, r1
    1562:	41 14       	cp	r4, r1
    1564:	51 04       	cpc	r5, r1
    1566:	79 f7       	brne	.-34     	; 0x1546 <vfprintf+0x1ac>
    1568:	de c0       	rjmp	.+444    	; 0x1726 <vfprintf+0x38c>
    156a:	84 36       	cpi	r24, 0x64	; 100
    156c:	11 f0       	breq	.+4      	; 0x1572 <vfprintf+0x1d8>
    156e:	89 36       	cpi	r24, 0x69	; 105
    1570:	31 f5       	brne	.+76     	; 0x15be <vfprintf+0x224>
    1572:	f8 01       	movw	r30, r16
    1574:	27 ff       	sbrs	r18, 7
    1576:	07 c0       	rjmp	.+14     	; 0x1586 <vfprintf+0x1ec>
    1578:	60 81       	ld	r22, Z
    157a:	71 81       	ldd	r23, Z+1	; 0x01
    157c:	82 81       	ldd	r24, Z+2	; 0x02
    157e:	93 81       	ldd	r25, Z+3	; 0x03
    1580:	0c 5f       	subi	r16, 0xFC	; 252
    1582:	1f 4f       	sbci	r17, 0xFF	; 255
    1584:	08 c0       	rjmp	.+16     	; 0x1596 <vfprintf+0x1fc>
    1586:	60 81       	ld	r22, Z
    1588:	71 81       	ldd	r23, Z+1	; 0x01
    158a:	88 27       	eor	r24, r24
    158c:	77 fd       	sbrc	r23, 7
    158e:	80 95       	com	r24
    1590:	98 2f       	mov	r25, r24
    1592:	0e 5f       	subi	r16, 0xFE	; 254
    1594:	1f 4f       	sbci	r17, 0xFF	; 255
    1596:	2f 76       	andi	r18, 0x6F	; 111
    1598:	b2 2e       	mov	r11, r18
    159a:	97 ff       	sbrs	r25, 7
    159c:	09 c0       	rjmp	.+18     	; 0x15b0 <vfprintf+0x216>
    159e:	90 95       	com	r25
    15a0:	80 95       	com	r24
    15a2:	70 95       	com	r23
    15a4:	61 95       	neg	r22
    15a6:	7f 4f       	sbci	r23, 0xFF	; 255
    15a8:	8f 4f       	sbci	r24, 0xFF	; 255
    15aa:	9f 4f       	sbci	r25, 0xFF	; 255
    15ac:	20 68       	ori	r18, 0x80	; 128
    15ae:	b2 2e       	mov	r11, r18
    15b0:	2a e0       	ldi	r18, 0x0A	; 10
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	a4 01       	movw	r20, r8
    15b6:	6f d2       	rcall	.+1246   	; 0x1a96 <__ultoa_invert>
    15b8:	a8 2e       	mov	r10, r24
    15ba:	a8 18       	sub	r10, r8
    15bc:	43 c0       	rjmp	.+134    	; 0x1644 <vfprintf+0x2aa>
    15be:	85 37       	cpi	r24, 0x75	; 117
    15c0:	29 f4       	brne	.+10     	; 0x15cc <vfprintf+0x232>
    15c2:	2f 7e       	andi	r18, 0xEF	; 239
    15c4:	b2 2e       	mov	r11, r18
    15c6:	2a e0       	ldi	r18, 0x0A	; 10
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	25 c0       	rjmp	.+74     	; 0x1616 <vfprintf+0x27c>
    15cc:	f2 2f       	mov	r31, r18
    15ce:	f9 7f       	andi	r31, 0xF9	; 249
    15d0:	bf 2e       	mov	r11, r31
    15d2:	8f 36       	cpi	r24, 0x6F	; 111
    15d4:	c1 f0       	breq	.+48     	; 0x1606 <vfprintf+0x26c>
    15d6:	18 f4       	brcc	.+6      	; 0x15de <vfprintf+0x244>
    15d8:	88 35       	cpi	r24, 0x58	; 88
    15da:	79 f0       	breq	.+30     	; 0x15fa <vfprintf+0x260>
    15dc:	ad c0       	rjmp	.+346    	; 0x1738 <vfprintf+0x39e>
    15de:	80 37       	cpi	r24, 0x70	; 112
    15e0:	19 f0       	breq	.+6      	; 0x15e8 <vfprintf+0x24e>
    15e2:	88 37       	cpi	r24, 0x78	; 120
    15e4:	21 f0       	breq	.+8      	; 0x15ee <vfprintf+0x254>
    15e6:	a8 c0       	rjmp	.+336    	; 0x1738 <vfprintf+0x39e>
    15e8:	2f 2f       	mov	r18, r31
    15ea:	20 61       	ori	r18, 0x10	; 16
    15ec:	b2 2e       	mov	r11, r18
    15ee:	b4 fe       	sbrs	r11, 4
    15f0:	0d c0       	rjmp	.+26     	; 0x160c <vfprintf+0x272>
    15f2:	8b 2d       	mov	r24, r11
    15f4:	84 60       	ori	r24, 0x04	; 4
    15f6:	b8 2e       	mov	r11, r24
    15f8:	09 c0       	rjmp	.+18     	; 0x160c <vfprintf+0x272>
    15fa:	24 ff       	sbrs	r18, 4
    15fc:	0a c0       	rjmp	.+20     	; 0x1612 <vfprintf+0x278>
    15fe:	9f 2f       	mov	r25, r31
    1600:	96 60       	ori	r25, 0x06	; 6
    1602:	b9 2e       	mov	r11, r25
    1604:	06 c0       	rjmp	.+12     	; 0x1612 <vfprintf+0x278>
    1606:	28 e0       	ldi	r18, 0x08	; 8
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	05 c0       	rjmp	.+10     	; 0x1616 <vfprintf+0x27c>
    160c:	20 e1       	ldi	r18, 0x10	; 16
    160e:	30 e0       	ldi	r19, 0x00	; 0
    1610:	02 c0       	rjmp	.+4      	; 0x1616 <vfprintf+0x27c>
    1612:	20 e1       	ldi	r18, 0x10	; 16
    1614:	32 e0       	ldi	r19, 0x02	; 2
    1616:	f8 01       	movw	r30, r16
    1618:	b7 fe       	sbrs	r11, 7
    161a:	07 c0       	rjmp	.+14     	; 0x162a <vfprintf+0x290>
    161c:	60 81       	ld	r22, Z
    161e:	71 81       	ldd	r23, Z+1	; 0x01
    1620:	82 81       	ldd	r24, Z+2	; 0x02
    1622:	93 81       	ldd	r25, Z+3	; 0x03
    1624:	0c 5f       	subi	r16, 0xFC	; 252
    1626:	1f 4f       	sbci	r17, 0xFF	; 255
    1628:	06 c0       	rjmp	.+12     	; 0x1636 <vfprintf+0x29c>
    162a:	60 81       	ld	r22, Z
    162c:	71 81       	ldd	r23, Z+1	; 0x01
    162e:	80 e0       	ldi	r24, 0x00	; 0
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0e 5f       	subi	r16, 0xFE	; 254
    1634:	1f 4f       	sbci	r17, 0xFF	; 255
    1636:	a4 01       	movw	r20, r8
    1638:	2e d2       	rcall	.+1116   	; 0x1a96 <__ultoa_invert>
    163a:	a8 2e       	mov	r10, r24
    163c:	a8 18       	sub	r10, r8
    163e:	fb 2d       	mov	r31, r11
    1640:	ff 77       	andi	r31, 0x7F	; 127
    1642:	bf 2e       	mov	r11, r31
    1644:	b6 fe       	sbrs	r11, 6
    1646:	0b c0       	rjmp	.+22     	; 0x165e <vfprintf+0x2c4>
    1648:	2b 2d       	mov	r18, r11
    164a:	2e 7f       	andi	r18, 0xFE	; 254
    164c:	a5 14       	cp	r10, r5
    164e:	50 f4       	brcc	.+20     	; 0x1664 <vfprintf+0x2ca>
    1650:	b4 fe       	sbrs	r11, 4
    1652:	0a c0       	rjmp	.+20     	; 0x1668 <vfprintf+0x2ce>
    1654:	b2 fc       	sbrc	r11, 2
    1656:	08 c0       	rjmp	.+16     	; 0x1668 <vfprintf+0x2ce>
    1658:	2b 2d       	mov	r18, r11
    165a:	2e 7e       	andi	r18, 0xEE	; 238
    165c:	05 c0       	rjmp	.+10     	; 0x1668 <vfprintf+0x2ce>
    165e:	7a 2c       	mov	r7, r10
    1660:	2b 2d       	mov	r18, r11
    1662:	03 c0       	rjmp	.+6      	; 0x166a <vfprintf+0x2d0>
    1664:	7a 2c       	mov	r7, r10
    1666:	01 c0       	rjmp	.+2      	; 0x166a <vfprintf+0x2d0>
    1668:	75 2c       	mov	r7, r5
    166a:	24 ff       	sbrs	r18, 4
    166c:	0d c0       	rjmp	.+26     	; 0x1688 <vfprintf+0x2ee>
    166e:	fe 01       	movw	r30, r28
    1670:	ea 0d       	add	r30, r10
    1672:	f1 1d       	adc	r31, r1
    1674:	80 81       	ld	r24, Z
    1676:	80 33       	cpi	r24, 0x30	; 48
    1678:	11 f4       	brne	.+4      	; 0x167e <vfprintf+0x2e4>
    167a:	29 7e       	andi	r18, 0xE9	; 233
    167c:	09 c0       	rjmp	.+18     	; 0x1690 <vfprintf+0x2f6>
    167e:	22 ff       	sbrs	r18, 2
    1680:	06 c0       	rjmp	.+12     	; 0x168e <vfprintf+0x2f4>
    1682:	73 94       	inc	r7
    1684:	73 94       	inc	r7
    1686:	04 c0       	rjmp	.+8      	; 0x1690 <vfprintf+0x2f6>
    1688:	82 2f       	mov	r24, r18
    168a:	86 78       	andi	r24, 0x86	; 134
    168c:	09 f0       	breq	.+2      	; 0x1690 <vfprintf+0x2f6>
    168e:	73 94       	inc	r7
    1690:	23 fd       	sbrc	r18, 3
    1692:	12 c0       	rjmp	.+36     	; 0x16b8 <vfprintf+0x31e>
    1694:	20 ff       	sbrs	r18, 0
    1696:	06 c0       	rjmp	.+12     	; 0x16a4 <vfprintf+0x30a>
    1698:	5a 2c       	mov	r5, r10
    169a:	73 14       	cp	r7, r3
    169c:	18 f4       	brcc	.+6      	; 0x16a4 <vfprintf+0x30a>
    169e:	53 0c       	add	r5, r3
    16a0:	57 18       	sub	r5, r7
    16a2:	73 2c       	mov	r7, r3
    16a4:	73 14       	cp	r7, r3
    16a6:	60 f4       	brcc	.+24     	; 0x16c0 <vfprintf+0x326>
    16a8:	b7 01       	movw	r22, r14
    16aa:	80 e2       	ldi	r24, 0x20	; 32
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	2c 87       	std	Y+12, r18	; 0x0c
    16b0:	c0 d1       	rcall	.+896    	; 0x1a32 <fputc>
    16b2:	73 94       	inc	r7
    16b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    16b6:	f6 cf       	rjmp	.-20     	; 0x16a4 <vfprintf+0x30a>
    16b8:	73 14       	cp	r7, r3
    16ba:	10 f4       	brcc	.+4      	; 0x16c0 <vfprintf+0x326>
    16bc:	37 18       	sub	r3, r7
    16be:	01 c0       	rjmp	.+2      	; 0x16c2 <vfprintf+0x328>
    16c0:	31 2c       	mov	r3, r1
    16c2:	24 ff       	sbrs	r18, 4
    16c4:	11 c0       	rjmp	.+34     	; 0x16e8 <vfprintf+0x34e>
    16c6:	b7 01       	movw	r22, r14
    16c8:	80 e3       	ldi	r24, 0x30	; 48
    16ca:	90 e0       	ldi	r25, 0x00	; 0
    16cc:	2c 87       	std	Y+12, r18	; 0x0c
    16ce:	b1 d1       	rcall	.+866    	; 0x1a32 <fputc>
    16d0:	2c 85       	ldd	r18, Y+12	; 0x0c
    16d2:	22 ff       	sbrs	r18, 2
    16d4:	16 c0       	rjmp	.+44     	; 0x1702 <vfprintf+0x368>
    16d6:	21 ff       	sbrs	r18, 1
    16d8:	03 c0       	rjmp	.+6      	; 0x16e0 <vfprintf+0x346>
    16da:	88 e5       	ldi	r24, 0x58	; 88
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	02 c0       	rjmp	.+4      	; 0x16e4 <vfprintf+0x34a>
    16e0:	88 e7       	ldi	r24, 0x78	; 120
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	b7 01       	movw	r22, r14
    16e6:	0c c0       	rjmp	.+24     	; 0x1700 <vfprintf+0x366>
    16e8:	82 2f       	mov	r24, r18
    16ea:	86 78       	andi	r24, 0x86	; 134
    16ec:	51 f0       	breq	.+20     	; 0x1702 <vfprintf+0x368>
    16ee:	21 fd       	sbrc	r18, 1
    16f0:	02 c0       	rjmp	.+4      	; 0x16f6 <vfprintf+0x35c>
    16f2:	80 e2       	ldi	r24, 0x20	; 32
    16f4:	01 c0       	rjmp	.+2      	; 0x16f8 <vfprintf+0x35e>
    16f6:	8b e2       	ldi	r24, 0x2B	; 43
    16f8:	27 fd       	sbrc	r18, 7
    16fa:	8d e2       	ldi	r24, 0x2D	; 45
    16fc:	b7 01       	movw	r22, r14
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	98 d1       	rcall	.+816    	; 0x1a32 <fputc>
    1702:	a5 14       	cp	r10, r5
    1704:	30 f4       	brcc	.+12     	; 0x1712 <vfprintf+0x378>
    1706:	b7 01       	movw	r22, r14
    1708:	80 e3       	ldi	r24, 0x30	; 48
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	92 d1       	rcall	.+804    	; 0x1a32 <fputc>
    170e:	5a 94       	dec	r5
    1710:	f8 cf       	rjmp	.-16     	; 0x1702 <vfprintf+0x368>
    1712:	aa 94       	dec	r10
    1714:	f4 01       	movw	r30, r8
    1716:	ea 0d       	add	r30, r10
    1718:	f1 1d       	adc	r31, r1
    171a:	80 81       	ld	r24, Z
    171c:	b7 01       	movw	r22, r14
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	88 d1       	rcall	.+784    	; 0x1a32 <fputc>
    1722:	a1 10       	cpse	r10, r1
    1724:	f6 cf       	rjmp	.-20     	; 0x1712 <vfprintf+0x378>
    1726:	33 20       	and	r3, r3
    1728:	09 f4       	brne	.+2      	; 0x172c <vfprintf+0x392>
    172a:	5d ce       	rjmp	.-838    	; 0x13e6 <vfprintf+0x4c>
    172c:	b7 01       	movw	r22, r14
    172e:	80 e2       	ldi	r24, 0x20	; 32
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	7f d1       	rcall	.+766    	; 0x1a32 <fputc>
    1734:	3a 94       	dec	r3
    1736:	f7 cf       	rjmp	.-18     	; 0x1726 <vfprintf+0x38c>
    1738:	f7 01       	movw	r30, r14
    173a:	86 81       	ldd	r24, Z+6	; 0x06
    173c:	97 81       	ldd	r25, Z+7	; 0x07
    173e:	02 c0       	rjmp	.+4      	; 0x1744 <vfprintf+0x3aa>
    1740:	8f ef       	ldi	r24, 0xFF	; 255
    1742:	9f ef       	ldi	r25, 0xFF	; 255
    1744:	2c 96       	adiw	r28, 0x0c	; 12
    1746:	0f b6       	in	r0, 0x3f	; 63
    1748:	f8 94       	cli
    174a:	de bf       	out	0x3e, r29	; 62
    174c:	0f be       	out	0x3f, r0	; 63
    174e:	cd bf       	out	0x3d, r28	; 61
    1750:	df 91       	pop	r29
    1752:	cf 91       	pop	r28
    1754:	1f 91       	pop	r17
    1756:	0f 91       	pop	r16
    1758:	ff 90       	pop	r15
    175a:	ef 90       	pop	r14
    175c:	df 90       	pop	r13
    175e:	cf 90       	pop	r12
    1760:	bf 90       	pop	r11
    1762:	af 90       	pop	r10
    1764:	9f 90       	pop	r9
    1766:	8f 90       	pop	r8
    1768:	7f 90       	pop	r7
    176a:	6f 90       	pop	r6
    176c:	5f 90       	pop	r5
    176e:	4f 90       	pop	r4
    1770:	3f 90       	pop	r3
    1772:	2f 90       	pop	r2
    1774:	08 95       	ret

00001776 <calloc>:
    1776:	0f 93       	push	r16
    1778:	1f 93       	push	r17
    177a:	cf 93       	push	r28
    177c:	df 93       	push	r29
    177e:	86 9f       	mul	r24, r22
    1780:	80 01       	movw	r16, r0
    1782:	87 9f       	mul	r24, r23
    1784:	10 0d       	add	r17, r0
    1786:	96 9f       	mul	r25, r22
    1788:	10 0d       	add	r17, r0
    178a:	11 24       	eor	r1, r1
    178c:	c8 01       	movw	r24, r16
    178e:	0d d0       	rcall	.+26     	; 0x17aa <malloc>
    1790:	ec 01       	movw	r28, r24
    1792:	00 97       	sbiw	r24, 0x00	; 0
    1794:	21 f0       	breq	.+8      	; 0x179e <calloc+0x28>
    1796:	a8 01       	movw	r20, r16
    1798:	60 e0       	ldi	r22, 0x00	; 0
    179a:	70 e0       	ldi	r23, 0x00	; 0
    179c:	38 d1       	rcall	.+624    	; 0x1a0e <memset>
    179e:	ce 01       	movw	r24, r28
    17a0:	df 91       	pop	r29
    17a2:	cf 91       	pop	r28
    17a4:	1f 91       	pop	r17
    17a6:	0f 91       	pop	r16
    17a8:	08 95       	ret

000017aa <malloc>:
    17aa:	cf 93       	push	r28
    17ac:	df 93       	push	r29
    17ae:	82 30       	cpi	r24, 0x02	; 2
    17b0:	91 05       	cpc	r25, r1
    17b2:	10 f4       	brcc	.+4      	; 0x17b8 <malloc+0xe>
    17b4:	82 e0       	ldi	r24, 0x02	; 2
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	e0 91 c3 02 	lds	r30, 0x02C3
    17bc:	f0 91 c4 02 	lds	r31, 0x02C4
    17c0:	20 e0       	ldi	r18, 0x00	; 0
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	a0 e0       	ldi	r26, 0x00	; 0
    17c6:	b0 e0       	ldi	r27, 0x00	; 0
    17c8:	30 97       	sbiw	r30, 0x00	; 0
    17ca:	39 f1       	breq	.+78     	; 0x181a <malloc+0x70>
    17cc:	40 81       	ld	r20, Z
    17ce:	51 81       	ldd	r21, Z+1	; 0x01
    17d0:	48 17       	cp	r20, r24
    17d2:	59 07       	cpc	r21, r25
    17d4:	b8 f0       	brcs	.+46     	; 0x1804 <malloc+0x5a>
    17d6:	48 17       	cp	r20, r24
    17d8:	59 07       	cpc	r21, r25
    17da:	71 f4       	brne	.+28     	; 0x17f8 <malloc+0x4e>
    17dc:	82 81       	ldd	r24, Z+2	; 0x02
    17de:	93 81       	ldd	r25, Z+3	; 0x03
    17e0:	10 97       	sbiw	r26, 0x00	; 0
    17e2:	29 f0       	breq	.+10     	; 0x17ee <malloc+0x44>
    17e4:	13 96       	adiw	r26, 0x03	; 3
    17e6:	9c 93       	st	X, r25
    17e8:	8e 93       	st	-X, r24
    17ea:	12 97       	sbiw	r26, 0x02	; 2
    17ec:	2c c0       	rjmp	.+88     	; 0x1846 <malloc+0x9c>
    17ee:	90 93 c4 02 	sts	0x02C4, r25
    17f2:	80 93 c3 02 	sts	0x02C3, r24
    17f6:	27 c0       	rjmp	.+78     	; 0x1846 <malloc+0x9c>
    17f8:	21 15       	cp	r18, r1
    17fa:	31 05       	cpc	r19, r1
    17fc:	31 f0       	breq	.+12     	; 0x180a <malloc+0x60>
    17fe:	42 17       	cp	r20, r18
    1800:	53 07       	cpc	r21, r19
    1802:	18 f0       	brcs	.+6      	; 0x180a <malloc+0x60>
    1804:	a9 01       	movw	r20, r18
    1806:	db 01       	movw	r26, r22
    1808:	01 c0       	rjmp	.+2      	; 0x180c <malloc+0x62>
    180a:	ef 01       	movw	r28, r30
    180c:	9a 01       	movw	r18, r20
    180e:	bd 01       	movw	r22, r26
    1810:	df 01       	movw	r26, r30
    1812:	02 80       	ldd	r0, Z+2	; 0x02
    1814:	f3 81       	ldd	r31, Z+3	; 0x03
    1816:	e0 2d       	mov	r30, r0
    1818:	d7 cf       	rjmp	.-82     	; 0x17c8 <malloc+0x1e>
    181a:	21 15       	cp	r18, r1
    181c:	31 05       	cpc	r19, r1
    181e:	f9 f0       	breq	.+62     	; 0x185e <malloc+0xb4>
    1820:	28 1b       	sub	r18, r24
    1822:	39 0b       	sbc	r19, r25
    1824:	24 30       	cpi	r18, 0x04	; 4
    1826:	31 05       	cpc	r19, r1
    1828:	80 f4       	brcc	.+32     	; 0x184a <malloc+0xa0>
    182a:	8a 81       	ldd	r24, Y+2	; 0x02
    182c:	9b 81       	ldd	r25, Y+3	; 0x03
    182e:	61 15       	cp	r22, r1
    1830:	71 05       	cpc	r23, r1
    1832:	21 f0       	breq	.+8      	; 0x183c <malloc+0x92>
    1834:	fb 01       	movw	r30, r22
    1836:	93 83       	std	Z+3, r25	; 0x03
    1838:	82 83       	std	Z+2, r24	; 0x02
    183a:	04 c0       	rjmp	.+8      	; 0x1844 <malloc+0x9a>
    183c:	90 93 c4 02 	sts	0x02C4, r25
    1840:	80 93 c3 02 	sts	0x02C3, r24
    1844:	fe 01       	movw	r30, r28
    1846:	32 96       	adiw	r30, 0x02	; 2
    1848:	44 c0       	rjmp	.+136    	; 0x18d2 <malloc+0x128>
    184a:	fe 01       	movw	r30, r28
    184c:	e2 0f       	add	r30, r18
    184e:	f3 1f       	adc	r31, r19
    1850:	81 93       	st	Z+, r24
    1852:	91 93       	st	Z+, r25
    1854:	22 50       	subi	r18, 0x02	; 2
    1856:	31 09       	sbc	r19, r1
    1858:	39 83       	std	Y+1, r19	; 0x01
    185a:	28 83       	st	Y, r18
    185c:	3a c0       	rjmp	.+116    	; 0x18d2 <malloc+0x128>
    185e:	20 91 c1 02 	lds	r18, 0x02C1
    1862:	30 91 c2 02 	lds	r19, 0x02C2
    1866:	23 2b       	or	r18, r19
    1868:	41 f4       	brne	.+16     	; 0x187a <malloc+0xd0>
    186a:	20 91 02 02 	lds	r18, 0x0202
    186e:	30 91 03 02 	lds	r19, 0x0203
    1872:	30 93 c2 02 	sts	0x02C2, r19
    1876:	20 93 c1 02 	sts	0x02C1, r18
    187a:	20 91 00 02 	lds	r18, 0x0200
    187e:	30 91 01 02 	lds	r19, 0x0201
    1882:	21 15       	cp	r18, r1
    1884:	31 05       	cpc	r19, r1
    1886:	41 f4       	brne	.+16     	; 0x1898 <malloc+0xee>
    1888:	2d b7       	in	r18, 0x3d	; 61
    188a:	3e b7       	in	r19, 0x3e	; 62
    188c:	40 91 04 02 	lds	r20, 0x0204
    1890:	50 91 05 02 	lds	r21, 0x0205
    1894:	24 1b       	sub	r18, r20
    1896:	35 0b       	sbc	r19, r21
    1898:	e0 91 c1 02 	lds	r30, 0x02C1
    189c:	f0 91 c2 02 	lds	r31, 0x02C2
    18a0:	e2 17       	cp	r30, r18
    18a2:	f3 07       	cpc	r31, r19
    18a4:	a0 f4       	brcc	.+40     	; 0x18ce <malloc+0x124>
    18a6:	2e 1b       	sub	r18, r30
    18a8:	3f 0b       	sbc	r19, r31
    18aa:	28 17       	cp	r18, r24
    18ac:	39 07       	cpc	r19, r25
    18ae:	78 f0       	brcs	.+30     	; 0x18ce <malloc+0x124>
    18b0:	ac 01       	movw	r20, r24
    18b2:	4e 5f       	subi	r20, 0xFE	; 254
    18b4:	5f 4f       	sbci	r21, 0xFF	; 255
    18b6:	24 17       	cp	r18, r20
    18b8:	35 07       	cpc	r19, r21
    18ba:	48 f0       	brcs	.+18     	; 0x18ce <malloc+0x124>
    18bc:	4e 0f       	add	r20, r30
    18be:	5f 1f       	adc	r21, r31
    18c0:	50 93 c2 02 	sts	0x02C2, r21
    18c4:	40 93 c1 02 	sts	0x02C1, r20
    18c8:	81 93       	st	Z+, r24
    18ca:	91 93       	st	Z+, r25
    18cc:	02 c0       	rjmp	.+4      	; 0x18d2 <malloc+0x128>
    18ce:	e0 e0       	ldi	r30, 0x00	; 0
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	cf 01       	movw	r24, r30
    18d4:	df 91       	pop	r29
    18d6:	cf 91       	pop	r28
    18d8:	08 95       	ret

000018da <free>:
    18da:	cf 93       	push	r28
    18dc:	df 93       	push	r29
    18de:	00 97       	sbiw	r24, 0x00	; 0
    18e0:	09 f4       	brne	.+2      	; 0x18e4 <free+0xa>
    18e2:	87 c0       	rjmp	.+270    	; 0x19f2 <free+0x118>
    18e4:	fc 01       	movw	r30, r24
    18e6:	32 97       	sbiw	r30, 0x02	; 2
    18e8:	13 82       	std	Z+3, r1	; 0x03
    18ea:	12 82       	std	Z+2, r1	; 0x02
    18ec:	c0 91 c3 02 	lds	r28, 0x02C3
    18f0:	d0 91 c4 02 	lds	r29, 0x02C4
    18f4:	20 97       	sbiw	r28, 0x00	; 0
    18f6:	81 f4       	brne	.+32     	; 0x1918 <free+0x3e>
    18f8:	20 81       	ld	r18, Z
    18fa:	31 81       	ldd	r19, Z+1	; 0x01
    18fc:	28 0f       	add	r18, r24
    18fe:	39 1f       	adc	r19, r25
    1900:	80 91 c1 02 	lds	r24, 0x02C1
    1904:	90 91 c2 02 	lds	r25, 0x02C2
    1908:	82 17       	cp	r24, r18
    190a:	93 07       	cpc	r25, r19
    190c:	79 f5       	brne	.+94     	; 0x196c <free+0x92>
    190e:	f0 93 c2 02 	sts	0x02C2, r31
    1912:	e0 93 c1 02 	sts	0x02C1, r30
    1916:	6d c0       	rjmp	.+218    	; 0x19f2 <free+0x118>
    1918:	de 01       	movw	r26, r28
    191a:	20 e0       	ldi	r18, 0x00	; 0
    191c:	30 e0       	ldi	r19, 0x00	; 0
    191e:	ae 17       	cp	r26, r30
    1920:	bf 07       	cpc	r27, r31
    1922:	50 f4       	brcc	.+20     	; 0x1938 <free+0x5e>
    1924:	12 96       	adiw	r26, 0x02	; 2
    1926:	4d 91       	ld	r20, X+
    1928:	5c 91       	ld	r21, X
    192a:	13 97       	sbiw	r26, 0x03	; 3
    192c:	9d 01       	movw	r18, r26
    192e:	41 15       	cp	r20, r1
    1930:	51 05       	cpc	r21, r1
    1932:	09 f1       	breq	.+66     	; 0x1976 <free+0x9c>
    1934:	da 01       	movw	r26, r20
    1936:	f3 cf       	rjmp	.-26     	; 0x191e <free+0x44>
    1938:	b3 83       	std	Z+3, r27	; 0x03
    193a:	a2 83       	std	Z+2, r26	; 0x02
    193c:	40 81       	ld	r20, Z
    193e:	51 81       	ldd	r21, Z+1	; 0x01
    1940:	84 0f       	add	r24, r20
    1942:	95 1f       	adc	r25, r21
    1944:	8a 17       	cp	r24, r26
    1946:	9b 07       	cpc	r25, r27
    1948:	71 f4       	brne	.+28     	; 0x1966 <free+0x8c>
    194a:	8d 91       	ld	r24, X+
    194c:	9c 91       	ld	r25, X
    194e:	11 97       	sbiw	r26, 0x01	; 1
    1950:	84 0f       	add	r24, r20
    1952:	95 1f       	adc	r25, r21
    1954:	02 96       	adiw	r24, 0x02	; 2
    1956:	91 83       	std	Z+1, r25	; 0x01
    1958:	80 83       	st	Z, r24
    195a:	12 96       	adiw	r26, 0x02	; 2
    195c:	8d 91       	ld	r24, X+
    195e:	9c 91       	ld	r25, X
    1960:	13 97       	sbiw	r26, 0x03	; 3
    1962:	93 83       	std	Z+3, r25	; 0x03
    1964:	82 83       	std	Z+2, r24	; 0x02
    1966:	21 15       	cp	r18, r1
    1968:	31 05       	cpc	r19, r1
    196a:	29 f4       	brne	.+10     	; 0x1976 <free+0x9c>
    196c:	f0 93 c4 02 	sts	0x02C4, r31
    1970:	e0 93 c3 02 	sts	0x02C3, r30
    1974:	3e c0       	rjmp	.+124    	; 0x19f2 <free+0x118>
    1976:	d9 01       	movw	r26, r18
    1978:	13 96       	adiw	r26, 0x03	; 3
    197a:	fc 93       	st	X, r31
    197c:	ee 93       	st	-X, r30
    197e:	12 97       	sbiw	r26, 0x02	; 2
    1980:	4d 91       	ld	r20, X+
    1982:	5d 91       	ld	r21, X+
    1984:	a4 0f       	add	r26, r20
    1986:	b5 1f       	adc	r27, r21
    1988:	ea 17       	cp	r30, r26
    198a:	fb 07       	cpc	r31, r27
    198c:	79 f4       	brne	.+30     	; 0x19ac <free+0xd2>
    198e:	80 81       	ld	r24, Z
    1990:	91 81       	ldd	r25, Z+1	; 0x01
    1992:	84 0f       	add	r24, r20
    1994:	95 1f       	adc	r25, r21
    1996:	02 96       	adiw	r24, 0x02	; 2
    1998:	d9 01       	movw	r26, r18
    199a:	11 96       	adiw	r26, 0x01	; 1
    199c:	9c 93       	st	X, r25
    199e:	8e 93       	st	-X, r24
    19a0:	82 81       	ldd	r24, Z+2	; 0x02
    19a2:	93 81       	ldd	r25, Z+3	; 0x03
    19a4:	13 96       	adiw	r26, 0x03	; 3
    19a6:	9c 93       	st	X, r25
    19a8:	8e 93       	st	-X, r24
    19aa:	12 97       	sbiw	r26, 0x02	; 2
    19ac:	e0 e0       	ldi	r30, 0x00	; 0
    19ae:	f0 e0       	ldi	r31, 0x00	; 0
    19b0:	8a 81       	ldd	r24, Y+2	; 0x02
    19b2:	9b 81       	ldd	r25, Y+3	; 0x03
    19b4:	00 97       	sbiw	r24, 0x00	; 0
    19b6:	19 f0       	breq	.+6      	; 0x19be <free+0xe4>
    19b8:	fe 01       	movw	r30, r28
    19ba:	ec 01       	movw	r28, r24
    19bc:	f9 cf       	rjmp	.-14     	; 0x19b0 <free+0xd6>
    19be:	ce 01       	movw	r24, r28
    19c0:	02 96       	adiw	r24, 0x02	; 2
    19c2:	28 81       	ld	r18, Y
    19c4:	39 81       	ldd	r19, Y+1	; 0x01
    19c6:	82 0f       	add	r24, r18
    19c8:	93 1f       	adc	r25, r19
    19ca:	20 91 c1 02 	lds	r18, 0x02C1
    19ce:	30 91 c2 02 	lds	r19, 0x02C2
    19d2:	28 17       	cp	r18, r24
    19d4:	39 07       	cpc	r19, r25
    19d6:	69 f4       	brne	.+26     	; 0x19f2 <free+0x118>
    19d8:	30 97       	sbiw	r30, 0x00	; 0
    19da:	29 f4       	brne	.+10     	; 0x19e6 <free+0x10c>
    19dc:	10 92 c4 02 	sts	0x02C4, r1
    19e0:	10 92 c3 02 	sts	0x02C3, r1
    19e4:	02 c0       	rjmp	.+4      	; 0x19ea <free+0x110>
    19e6:	13 82       	std	Z+3, r1	; 0x03
    19e8:	12 82       	std	Z+2, r1	; 0x02
    19ea:	d0 93 c2 02 	sts	0x02C2, r29
    19ee:	c0 93 c1 02 	sts	0x02C1, r28
    19f2:	df 91       	pop	r29
    19f4:	cf 91       	pop	r28
    19f6:	08 95       	ret

000019f8 <strnlen_P>:
    19f8:	fc 01       	movw	r30, r24
    19fa:	05 90       	lpm	r0, Z+
    19fc:	61 50       	subi	r22, 0x01	; 1
    19fe:	70 40       	sbci	r23, 0x00	; 0
    1a00:	01 10       	cpse	r0, r1
    1a02:	d8 f7       	brcc	.-10     	; 0x19fa <strnlen_P+0x2>
    1a04:	80 95       	com	r24
    1a06:	90 95       	com	r25
    1a08:	8e 0f       	add	r24, r30
    1a0a:	9f 1f       	adc	r25, r31
    1a0c:	08 95       	ret

00001a0e <memset>:
    1a0e:	dc 01       	movw	r26, r24
    1a10:	01 c0       	rjmp	.+2      	; 0x1a14 <memset+0x6>
    1a12:	6d 93       	st	X+, r22
    1a14:	41 50       	subi	r20, 0x01	; 1
    1a16:	50 40       	sbci	r21, 0x00	; 0
    1a18:	e0 f7       	brcc	.-8      	; 0x1a12 <memset+0x4>
    1a1a:	08 95       	ret

00001a1c <strnlen>:
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	61 50       	subi	r22, 0x01	; 1
    1a20:	70 40       	sbci	r23, 0x00	; 0
    1a22:	01 90       	ld	r0, Z+
    1a24:	01 10       	cpse	r0, r1
    1a26:	d8 f7       	brcc	.-10     	; 0x1a1e <strnlen+0x2>
    1a28:	80 95       	com	r24
    1a2a:	90 95       	com	r25
    1a2c:	8e 0f       	add	r24, r30
    1a2e:	9f 1f       	adc	r25, r31
    1a30:	08 95       	ret

00001a32 <fputc>:
    1a32:	0f 93       	push	r16
    1a34:	1f 93       	push	r17
    1a36:	cf 93       	push	r28
    1a38:	df 93       	push	r29
    1a3a:	18 2f       	mov	r17, r24
    1a3c:	09 2f       	mov	r16, r25
    1a3e:	eb 01       	movw	r28, r22
    1a40:	8b 81       	ldd	r24, Y+3	; 0x03
    1a42:	81 fd       	sbrc	r24, 1
    1a44:	03 c0       	rjmp	.+6      	; 0x1a4c <fputc+0x1a>
    1a46:	8f ef       	ldi	r24, 0xFF	; 255
    1a48:	9f ef       	ldi	r25, 0xFF	; 255
    1a4a:	20 c0       	rjmp	.+64     	; 0x1a8c <fputc+0x5a>
    1a4c:	82 ff       	sbrs	r24, 2
    1a4e:	10 c0       	rjmp	.+32     	; 0x1a70 <fputc+0x3e>
    1a50:	4e 81       	ldd	r20, Y+6	; 0x06
    1a52:	5f 81       	ldd	r21, Y+7	; 0x07
    1a54:	2c 81       	ldd	r18, Y+4	; 0x04
    1a56:	3d 81       	ldd	r19, Y+5	; 0x05
    1a58:	42 17       	cp	r20, r18
    1a5a:	53 07       	cpc	r21, r19
    1a5c:	7c f4       	brge	.+30     	; 0x1a7c <fputc+0x4a>
    1a5e:	e8 81       	ld	r30, Y
    1a60:	f9 81       	ldd	r31, Y+1	; 0x01
    1a62:	9f 01       	movw	r18, r30
    1a64:	2f 5f       	subi	r18, 0xFF	; 255
    1a66:	3f 4f       	sbci	r19, 0xFF	; 255
    1a68:	39 83       	std	Y+1, r19	; 0x01
    1a6a:	28 83       	st	Y, r18
    1a6c:	10 83       	st	Z, r17
    1a6e:	06 c0       	rjmp	.+12     	; 0x1a7c <fputc+0x4a>
    1a70:	e8 85       	ldd	r30, Y+8	; 0x08
    1a72:	f9 85       	ldd	r31, Y+9	; 0x09
    1a74:	81 2f       	mov	r24, r17
    1a76:	19 95       	eicall
    1a78:	89 2b       	or	r24, r25
    1a7a:	29 f7       	brne	.-54     	; 0x1a46 <fputc+0x14>
    1a7c:	2e 81       	ldd	r18, Y+6	; 0x06
    1a7e:	3f 81       	ldd	r19, Y+7	; 0x07
    1a80:	2f 5f       	subi	r18, 0xFF	; 255
    1a82:	3f 4f       	sbci	r19, 0xFF	; 255
    1a84:	3f 83       	std	Y+7, r19	; 0x07
    1a86:	2e 83       	std	Y+6, r18	; 0x06
    1a88:	81 2f       	mov	r24, r17
    1a8a:	90 2f       	mov	r25, r16
    1a8c:	df 91       	pop	r29
    1a8e:	cf 91       	pop	r28
    1a90:	1f 91       	pop	r17
    1a92:	0f 91       	pop	r16
    1a94:	08 95       	ret

00001a96 <__ultoa_invert>:
    1a96:	fa 01       	movw	r30, r20
    1a98:	aa 27       	eor	r26, r26
    1a9a:	28 30       	cpi	r18, 0x08	; 8
    1a9c:	51 f1       	breq	.+84     	; 0x1af2 <__ultoa_invert+0x5c>
    1a9e:	20 31       	cpi	r18, 0x10	; 16
    1aa0:	81 f1       	breq	.+96     	; 0x1b02 <__ultoa_invert+0x6c>
    1aa2:	e8 94       	clt
    1aa4:	6f 93       	push	r22
    1aa6:	6e 7f       	andi	r22, 0xFE	; 254
    1aa8:	6e 5f       	subi	r22, 0xFE	; 254
    1aaa:	7f 4f       	sbci	r23, 0xFF	; 255
    1aac:	8f 4f       	sbci	r24, 0xFF	; 255
    1aae:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab0:	af 4f       	sbci	r26, 0xFF	; 255
    1ab2:	b1 e0       	ldi	r27, 0x01	; 1
    1ab4:	3e d0       	rcall	.+124    	; 0x1b32 <__ultoa_invert+0x9c>
    1ab6:	b4 e0       	ldi	r27, 0x04	; 4
    1ab8:	3c d0       	rcall	.+120    	; 0x1b32 <__ultoa_invert+0x9c>
    1aba:	67 0f       	add	r22, r23
    1abc:	78 1f       	adc	r23, r24
    1abe:	89 1f       	adc	r24, r25
    1ac0:	9a 1f       	adc	r25, r26
    1ac2:	a1 1d       	adc	r26, r1
    1ac4:	68 0f       	add	r22, r24
    1ac6:	79 1f       	adc	r23, r25
    1ac8:	8a 1f       	adc	r24, r26
    1aca:	91 1d       	adc	r25, r1
    1acc:	a1 1d       	adc	r26, r1
    1ace:	6a 0f       	add	r22, r26
    1ad0:	71 1d       	adc	r23, r1
    1ad2:	81 1d       	adc	r24, r1
    1ad4:	91 1d       	adc	r25, r1
    1ad6:	a1 1d       	adc	r26, r1
    1ad8:	20 d0       	rcall	.+64     	; 0x1b1a <__ultoa_invert+0x84>
    1ada:	09 f4       	brne	.+2      	; 0x1ade <__ultoa_invert+0x48>
    1adc:	68 94       	set
    1ade:	3f 91       	pop	r19
    1ae0:	2a e0       	ldi	r18, 0x0A	; 10
    1ae2:	26 9f       	mul	r18, r22
    1ae4:	11 24       	eor	r1, r1
    1ae6:	30 19       	sub	r19, r0
    1ae8:	30 5d       	subi	r19, 0xD0	; 208
    1aea:	31 93       	st	Z+, r19
    1aec:	de f6       	brtc	.-74     	; 0x1aa4 <__ultoa_invert+0xe>
    1aee:	cf 01       	movw	r24, r30
    1af0:	08 95       	ret
    1af2:	46 2f       	mov	r20, r22
    1af4:	47 70       	andi	r20, 0x07	; 7
    1af6:	40 5d       	subi	r20, 0xD0	; 208
    1af8:	41 93       	st	Z+, r20
    1afa:	b3 e0       	ldi	r27, 0x03	; 3
    1afc:	0f d0       	rcall	.+30     	; 0x1b1c <__ultoa_invert+0x86>
    1afe:	c9 f7       	brne	.-14     	; 0x1af2 <__ultoa_invert+0x5c>
    1b00:	f6 cf       	rjmp	.-20     	; 0x1aee <__ultoa_invert+0x58>
    1b02:	46 2f       	mov	r20, r22
    1b04:	4f 70       	andi	r20, 0x0F	; 15
    1b06:	40 5d       	subi	r20, 0xD0	; 208
    1b08:	4a 33       	cpi	r20, 0x3A	; 58
    1b0a:	18 f0       	brcs	.+6      	; 0x1b12 <__ultoa_invert+0x7c>
    1b0c:	49 5d       	subi	r20, 0xD9	; 217
    1b0e:	31 fd       	sbrc	r19, 1
    1b10:	40 52       	subi	r20, 0x20	; 32
    1b12:	41 93       	st	Z+, r20
    1b14:	02 d0       	rcall	.+4      	; 0x1b1a <__ultoa_invert+0x84>
    1b16:	a9 f7       	brne	.-22     	; 0x1b02 <__ultoa_invert+0x6c>
    1b18:	ea cf       	rjmp	.-44     	; 0x1aee <__ultoa_invert+0x58>
    1b1a:	b4 e0       	ldi	r27, 0x04	; 4
    1b1c:	a6 95       	lsr	r26
    1b1e:	97 95       	ror	r25
    1b20:	87 95       	ror	r24
    1b22:	77 95       	ror	r23
    1b24:	67 95       	ror	r22
    1b26:	ba 95       	dec	r27
    1b28:	c9 f7       	brne	.-14     	; 0x1b1c <__ultoa_invert+0x86>
    1b2a:	00 97       	sbiw	r24, 0x00	; 0
    1b2c:	61 05       	cpc	r22, r1
    1b2e:	71 05       	cpc	r23, r1
    1b30:	08 95       	ret
    1b32:	9b 01       	movw	r18, r22
    1b34:	ac 01       	movw	r20, r24
    1b36:	0a 2e       	mov	r0, r26
    1b38:	06 94       	lsr	r0
    1b3a:	57 95       	ror	r21
    1b3c:	47 95       	ror	r20
    1b3e:	37 95       	ror	r19
    1b40:	27 95       	ror	r18
    1b42:	ba 95       	dec	r27
    1b44:	c9 f7       	brne	.-14     	; 0x1b38 <__ultoa_invert+0xa2>
    1b46:	62 0f       	add	r22, r18
    1b48:	73 1f       	adc	r23, r19
    1b4a:	84 1f       	adc	r24, r20
    1b4c:	95 1f       	adc	r25, r21
    1b4e:	a0 1d       	adc	r26, r0
    1b50:	08 95       	ret

00001b52 <_exit>:
    1b52:	f8 94       	cli

00001b54 <__stop_program>:
    1b54:	ff cf       	rjmp	.-2      	; 0x1b54 <__stop_program>
