
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b4  00800200  00001ba8  00001c3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ba8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002b4  008002b4  00001cf0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cf0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000220  00000000  00000000  00001d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001fb4  00000000  00000000  00001f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ec4  00000000  00000000  00003f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001351  00000000  00000000  00004de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000568  00000000  00000000  00006138  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000785  00000000  00000000  000066a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000017c8  00000000  00000000  00006e25  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000190  00000000  00000000  000085ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5b c6       	rjmp	.+3254   	; 0xd54 <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	c5 06       	cpc	r12, r21
      e6:	17 07       	cpc	r17, r23
      e8:	17 07       	cpc	r17, r23
      ea:	17 07       	cpc	r17, r23
      ec:	17 07       	cpc	r17, r23
      ee:	17 07       	cpc	r17, r23
      f0:	17 07       	cpc	r17, r23
      f2:	17 07       	cpc	r17, r23
      f4:	c5 06       	cpc	r12, r21
      f6:	17 07       	cpc	r17, r23
      f8:	17 07       	cpc	r17, r23
      fa:	17 07       	cpc	r17, r23
      fc:	17 07       	cpc	r17, r23
      fe:	17 07       	cpc	r17, r23
     100:	17 07       	cpc	r17, r23
     102:	17 07       	cpc	r17, r23
     104:	c7 06       	cpc	r12, r23
     106:	17 07       	cpc	r17, r23
     108:	17 07       	cpc	r17, r23
     10a:	17 07       	cpc	r17, r23
     10c:	17 07       	cpc	r17, r23
     10e:	17 07       	cpc	r17, r23
     110:	17 07       	cpc	r17, r23
     112:	17 07       	cpc	r17, r23
     114:	17 07       	cpc	r17, r23
     116:	17 07       	cpc	r17, r23
     118:	17 07       	cpc	r17, r23
     11a:	17 07       	cpc	r17, r23
     11c:	17 07       	cpc	r17, r23
     11e:	17 07       	cpc	r17, r23
     120:	17 07       	cpc	r17, r23
     122:	17 07       	cpc	r17, r23
     124:	c7 06       	cpc	r12, r23
     126:	17 07       	cpc	r17, r23
     128:	17 07       	cpc	r17, r23
     12a:	17 07       	cpc	r17, r23
     12c:	17 07       	cpc	r17, r23
     12e:	17 07       	cpc	r17, r23
     130:	17 07       	cpc	r17, r23
     132:	17 07       	cpc	r17, r23
     134:	17 07       	cpc	r17, r23
     136:	17 07       	cpc	r17, r23
     138:	17 07       	cpc	r17, r23
     13a:	17 07       	cpc	r17, r23
     13c:	17 07       	cpc	r17, r23
     13e:	17 07       	cpc	r17, r23
     140:	17 07       	cpc	r17, r23
     142:	17 07       	cpc	r17, r23
     144:	13 07       	cpc	r17, r19
     146:	17 07       	cpc	r17, r23
     148:	17 07       	cpc	r17, r23
     14a:	17 07       	cpc	r17, r23
     14c:	17 07       	cpc	r17, r23
     14e:	17 07       	cpc	r17, r23
     150:	17 07       	cpc	r17, r23
     152:	17 07       	cpc	r17, r23
     154:	f0 06       	cpc	r15, r16
     156:	17 07       	cpc	r17, r23
     158:	17 07       	cpc	r17, r23
     15a:	17 07       	cpc	r17, r23
     15c:	17 07       	cpc	r17, r23
     15e:	17 07       	cpc	r17, r23
     160:	17 07       	cpc	r17, r23
     162:	17 07       	cpc	r17, r23
     164:	17 07       	cpc	r17, r23
     166:	17 07       	cpc	r17, r23
     168:	17 07       	cpc	r17, r23
     16a:	17 07       	cpc	r17, r23
     16c:	17 07       	cpc	r17, r23
     16e:	17 07       	cpc	r17, r23
     170:	17 07       	cpc	r17, r23
     172:	17 07       	cpc	r17, r23
     174:	e4 06       	cpc	r14, r20
     176:	17 07       	cpc	r17, r23
     178:	17 07       	cpc	r17, r23
     17a:	17 07       	cpc	r17, r23
     17c:	17 07       	cpc	r17, r23
     17e:	17 07       	cpc	r17, r23
     180:	17 07       	cpc	r17, r23
     182:	17 07       	cpc	r17, r23
     184:	02 07       	cpc	r16, r18

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e8 ea       	ldi	r30, 0xA8	; 168
     19e:	fb e1       	ldi	r31, 0x1B	; 27
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a4 3b       	cpi	r26, 0xB4	; 180
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a4 eb       	ldi	r26, 0xB4	; 180
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	a9 3c       	cpi	r26, 0xC9	; 201
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	46 d1       	rcall	.+652    	; 0x44e <main>
     1c2:	0c 94 d2 0d 	jmp	0x1ba4	; 0x1ba4 <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <adc_init>:
     1c8:	ea e7       	ldi	r30, 0x7A	; 122
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	87 60       	ori	r24, 0x07	; 7
     1d0:	80 83       	st	Z, r24
     1d2:	80 81       	ld	r24, Z
     1d4:	80 68       	ori	r24, 0x80	; 128
     1d6:	80 83       	st	Z, r24
     1d8:	08 95       	ret

000001da <adc_read>:
     1da:	ec e7       	ldi	r30, 0x7C	; 124
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	80 68       	ori	r24, 0x80	; 128
     1e2:	80 83       	st	Z, r24
     1e4:	ea e7       	ldi	r30, 0x7A	; 122
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	80 64       	ori	r24, 0x40	; 64
     1ec:	80 83       	st	Z, r24
     1ee:	80 81       	ld	r24, Z
     1f0:	86 fd       	sbrc	r24, 6
     1f2:	fd cf       	rjmp	.-6      	; 0x1ee <adc_read+0x14>
     1f4:	20 91 78 00 	lds	r18, 0x0078
     1f8:	30 91 79 00 	lds	r19, 0x0079
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	24 36       	cpi	r18, 0x64	; 100
     202:	31 05       	cpc	r19, r1
     204:	10 f4       	brcc	.+4      	; 0x20a <adc_read+0x30>
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	08 95       	ret

0000020c <can_init>:
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	cd b7       	in	r28, 0x3d	; 61
     212:	de b7       	in	r29, 0x3e	; 62
     214:	2a 97       	sbiw	r28, 0x0a	; 10
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	f9 d1       	rcall	.+1010   	; 0x614 <mcp2515_init>
     222:	41 e0       	ldi	r20, 0x01	; 1
     224:	60 e6       	ldi	r22, 0x60	; 96
     226:	80 e6       	ldi	r24, 0x60	; 96
     228:	17 d2       	rcall	.+1070   	; 0x658 <mcp2515_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     22a:	8f ef       	ldi	r24, 0xFF	; 255
     22c:	9f e8       	ldi	r25, 0x8F	; 143
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <can_init+0x22>
     232:	00 c0       	rjmp	.+0      	; 0x234 <can_init+0x28>
     234:	00 00       	nop
     236:	41 e0       	ldi	r20, 0x01	; 1
     238:	61 e0       	ldi	r22, 0x01	; 1
     23a:	8b e2       	ldi	r24, 0x2B	; 43
     23c:	33 d2       	rcall	.+1126   	; 0x6a4 <mcp2515_bit_modify>
     23e:	8f ef       	ldi	r24, 0xFF	; 255
     240:	9f e8       	ldi	r25, 0x8F	; 143
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <can_init+0x36>
     246:	00 c0       	rjmp	.+0      	; 0x248 <can_init+0x3c>
     248:	00 00       	nop
     24a:	40 e0       	ldi	r20, 0x00	; 0
     24c:	60 ee       	ldi	r22, 0xE0	; 224
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	29 d2       	rcall	.+1106   	; 0x6a4 <mcp2515_bit_modify>
     252:	8f ef       	ldi	r24, 0xFF	; 255
     254:	9f e8       	ldi	r25, 0x8F	; 143
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <can_init+0x4a>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <can_init+0x50>
     25c:	00 00       	nop
     25e:	4a e0       	ldi	r20, 0x0A	; 10
     260:	be 01       	movw	r22, r28
     262:	6f 5f       	subi	r22, 0xFF	; 255
     264:	7f 4f       	sbci	r23, 0xFF	; 255
     266:	8e e0       	ldi	r24, 0x0E	; 14
     268:	d8 d1       	rcall	.+944    	; 0x61a <mcp2515_read>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	80 7e       	andi	r24, 0xE0	; 224
     26e:	a9 f0       	breq	.+42     	; 0x29a <can_init+0x8e>
     270:	1f 92       	push	r1
     272:	8f 93       	push	r24
     274:	89 e1       	ldi	r24, 0x19	; 25
     276:	92 e0       	ldi	r25, 0x02	; 2
     278:	9f 93       	push	r25
     27a:	8f 93       	push	r24
     27c:	0e 94 b8 09 	call	0x1370	; 0x1370 <printf>
     280:	87 ea       	ldi	r24, 0xA7	; 167
     282:	92 e0       	ldi	r25, 0x02	; 2
     284:	9f 93       	push	r25
     286:	8f 93       	push	r24
     288:	0e 94 b8 09 	call	0x1370	; 0x1370 <printf>
     28c:	0f 90       	pop	r0
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	0f 90       	pop	r0
     296:	0f 90       	pop	r0
     298:	08 c0       	rjmp	.+16     	; 0x2aa <can_init+0x9e>
     29a:	8d e5       	ldi	r24, 0x5D	; 93
     29c:	92 e0       	ldi	r25, 0x02	; 2
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	0e 94 b8 09 	call	0x1370	; 0x1370 <printf>
     2a6:	0f 90       	pop	r0
     2a8:	0f 90       	pop	r0
     2aa:	2a 96       	adiw	r28, 0x0a	; 10
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <can_message_send>:
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	ec 01       	movw	r28, r24
     2c4:	41 e0       	ldi	r20, 0x01	; 1
     2c6:	6a 81       	ldd	r22, Y+2	; 0x02
     2c8:	85 e3       	ldi	r24, 0x35	; 53
     2ca:	c6 d1       	rcall	.+908    	; 0x658 <mcp2515_write>
     2cc:	41 e0       	ldi	r20, 0x01	; 1
     2ce:	68 81       	ld	r22, Y
     2d0:	81 e3       	ldi	r24, 0x31	; 49
     2d2:	c2 d1       	rcall	.+900    	; 0x658 <mcp2515_write>
     2d4:	41 e0       	ldi	r20, 0x01	; 1
     2d6:	68 81       	ld	r22, Y
     2d8:	82 e3       	ldi	r24, 0x32	; 50
     2da:	be d1       	rcall	.+892    	; 0x658 <mcp2515_write>
     2dc:	8a 81       	ldd	r24, Y+2	; 0x02
     2de:	88 23       	and	r24, r24
     2e0:	61 f0       	breq	.+24     	; 0x2fa <can_message_send+0x3e>
     2e2:	10 e0       	ldi	r17, 0x00	; 0
     2e4:	fe 01       	movw	r30, r28
     2e6:	e1 0f       	add	r30, r17
     2e8:	f1 1d       	adc	r31, r1
     2ea:	41 e0       	ldi	r20, 0x01	; 1
     2ec:	63 81       	ldd	r22, Z+3	; 0x03
     2ee:	86 e3       	ldi	r24, 0x36	; 54
     2f0:	b3 d1       	rcall	.+870    	; 0x658 <mcp2515_write>
     2f2:	1f 5f       	subi	r17, 0xFF	; 255
     2f4:	8a 81       	ldd	r24, Y+2	; 0x02
     2f6:	18 17       	cp	r17, r24
     2f8:	a8 f3       	brcs	.-22     	; 0x2e4 <can_message_send+0x28>
     2fa:	87 ea       	ldi	r24, 0xA7	; 167
     2fc:	92 e0       	ldi	r25, 0x02	; 2
     2fe:	9f 93       	push	r25
     300:	8f 93       	push	r24
     302:	0e 94 b8 09 	call	0x1370	; 0x1370 <printf>
     306:	81 e8       	ldi	r24, 0x81	; 129
     308:	bd d1       	rcall	.+890    	; 0x684 <mcp2515_request>
     30a:	0f 90       	pop	r0
     30c:	0f 90       	pop	r0
     30e:	df 91       	pop	r29
     310:	cf 91       	pop	r28
     312:	1f 91       	pop	r17
     314:	08 95       	ret

00000316 <can_data_receive>:
     316:	ff 92       	push	r15
     318:	0f 93       	push	r16
     31a:	1f 93       	push	r17
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	2a 97       	sbiw	r28, 0x0a	; 10
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	8c 01       	movw	r16, r24
     332:	f6 2e       	mov	r15, r22
     334:	41 e0       	ldi	r20, 0x01	; 1
     336:	be 01       	movw	r22, r28
     338:	6f 5f       	subi	r22, 0xFF	; 255
     33a:	7f 4f       	sbci	r23, 0xFF	; 255
     33c:	8c e2       	ldi	r24, 0x2C	; 44
     33e:	6d d1       	rcall	.+730    	; 0x61a <mcp2515_read>
     340:	89 81       	ldd	r24, Y+1	; 0x01
     342:	81 11       	cpse	r24, r1
     344:	0c c0       	rjmp	.+24     	; 0x35e <can_data_receive+0x48>
     346:	1f 92       	push	r1
     348:	1f 92       	push	r1
     34a:	2f e6       	ldi	r18, 0x6F	; 111
     34c:	32 e0       	ldi	r19, 0x02	; 2
     34e:	3f 93       	push	r19
     350:	2f 93       	push	r18
     352:	0e 94 b8 09 	call	0x1370	; 0x1370 <printf>
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
     35c:	0f 90       	pop	r0
     35e:	41 e0       	ldi	r20, 0x01	; 1
     360:	be 01       	movw	r22, r28
     362:	6f 5f       	subi	r22, 0xFF	; 255
     364:	7f 4f       	sbci	r23, 0xFF	; 255
     366:	85 e6       	ldi	r24, 0x65	; 101
     368:	8f 0d       	add	r24, r15
     36a:	57 d1       	rcall	.+686    	; 0x61a <mcp2515_read>
     36c:	89 81       	ldd	r24, Y+1	; 0x01
     36e:	f8 01       	movw	r30, r16
     370:	82 83       	std	Z+2, r24	; 0x02
     372:	41 e0       	ldi	r20, 0x01	; 1
     374:	be 01       	movw	r22, r28
     376:	6f 5f       	subi	r22, 0xFF	; 255
     378:	7f 4f       	sbci	r23, 0xFF	; 255
     37a:	81 e6       	ldi	r24, 0x61	; 97
     37c:	8f 0d       	add	r24, r15
     37e:	4d d1       	rcall	.+666    	; 0x61a <mcp2515_read>
     380:	29 81       	ldd	r18, Y+1	; 0x01
     382:	30 e0       	ldi	r19, 0x00	; 0
     384:	f8 01       	movw	r30, r16
     386:	31 83       	std	Z+1, r19	; 0x01
     388:	20 83       	st	Z, r18
     38a:	42 81       	ldd	r20, Z+2	; 0x02
     38c:	be 01       	movw	r22, r28
     38e:	6f 5f       	subi	r22, 0xFF	; 255
     390:	7f 4f       	sbci	r23, 0xFF	; 255
     392:	86 e6       	ldi	r24, 0x66	; 102
     394:	8f 0d       	add	r24, r15
     396:	41 d1       	rcall	.+642    	; 0x61a <mcp2515_read>
     398:	f8 01       	movw	r30, r16
     39a:	92 81       	ldd	r25, Z+2	; 0x02
     39c:	99 23       	and	r25, r25
     39e:	61 f0       	breq	.+24     	; 0x3b8 <can_data_receive+0xa2>
     3a0:	9e 01       	movw	r18, r28
     3a2:	2f 5f       	subi	r18, 0xFF	; 255
     3a4:	3f 4f       	sbci	r19, 0xFF	; 255
     3a6:	d8 01       	movw	r26, r16
     3a8:	13 96       	adiw	r26, 0x03	; 3
     3aa:	f9 01       	movw	r30, r18
     3ac:	81 91       	ld	r24, Z+
     3ae:	8d 93       	st	X+, r24
     3b0:	8e 2f       	mov	r24, r30
     3b2:	82 1b       	sub	r24, r18
     3b4:	89 17       	cp	r24, r25
     3b6:	d0 f3       	brcs	.-12     	; 0x3ac <can_data_receive+0x96>
     3b8:	40 e0       	ldi	r20, 0x00	; 0
     3ba:	61 e0       	ldi	r22, 0x01	; 1
     3bc:	8c e2       	ldi	r24, 0x2C	; 44
     3be:	72 d1       	rcall	.+740    	; 0x6a4 <mcp2515_bit_modify>
     3c0:	2a 96       	adiw	r28, 0x0a	; 10
     3c2:	0f b6       	in	r0, 0x3f	; 63
     3c4:	f8 94       	cli
     3c6:	de bf       	out	0x3e, r29	; 62
     3c8:	0f be       	out	0x3f, r0	; 63
     3ca:	cd bf       	out	0x3d, r28	; 61
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	1f 91       	pop	r17
     3d2:	0f 91       	pop	r16
     3d4:	ff 90       	pop	r15
     3d6:	08 95       	ret

000003d8 <can_get_message>:
     3d8:	0f 93       	push	r16
     3da:	1f 93       	push	r17
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	cd b7       	in	r28, 0x3d	; 61
     3e2:	de b7       	in	r29, 0x3e	; 62
     3e4:	2a 97       	sbiw	r28, 0x0a	; 10
     3e6:	0f b6       	in	r0, 0x3f	; 63
     3e8:	f8 94       	cli
     3ea:	de bf       	out	0x3e, r29	; 62
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	cd bf       	out	0x3d, r28	; 61
     3f0:	8c 01       	movw	r16, r24
     3f2:	41 e0       	ldi	r20, 0x01	; 1
     3f4:	be 01       	movw	r22, r28
     3f6:	6f 5f       	subi	r22, 0xFF	; 255
     3f8:	7f 4f       	sbci	r23, 0xFF	; 255
     3fa:	8c e2       	ldi	r24, 0x2C	; 44
     3fc:	0e d1       	rcall	.+540    	; 0x61a <mcp2515_read>
     3fe:	89 81       	ldd	r24, Y+1	; 0x01
     400:	80 ff       	sbrs	r24, 0
     402:	0b c0       	rjmp	.+22     	; 0x41a <can_get_message+0x42>
     404:	60 e0       	ldi	r22, 0x00	; 0
     406:	70 e0       	ldi	r23, 0x00	; 0
     408:	c8 01       	movw	r24, r16
     40a:	85 df       	rcall	.-246    	; 0x316 <can_data_receive>
     40c:	40 e0       	ldi	r20, 0x00	; 0
     40e:	61 e0       	ldi	r22, 0x01	; 1
     410:	8c e2       	ldi	r24, 0x2C	; 44
     412:	48 d1       	rcall	.+656    	; 0x6a4 <mcp2515_bit_modify>
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	0f c0       	rjmp	.+30     	; 0x438 <can_get_message+0x60>
     41a:	81 ff       	sbrs	r24, 1
     41c:	0b c0       	rjmp	.+22     	; 0x434 <can_get_message+0x5c>
     41e:	61 e0       	ldi	r22, 0x01	; 1
     420:	70 e0       	ldi	r23, 0x00	; 0
     422:	c8 01       	movw	r24, r16
     424:	78 df       	rcall	.-272    	; 0x316 <can_data_receive>
     426:	40 e0       	ldi	r20, 0x00	; 0
     428:	62 e0       	ldi	r22, 0x02	; 2
     42a:	8c e2       	ldi	r24, 0x2C	; 44
     42c:	3b d1       	rcall	.+630    	; 0x6a4 <mcp2515_bit_modify>
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	02 c0       	rjmp	.+4      	; 0x438 <can_get_message+0x60>
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	2a 96       	adiw	r28, 0x0a	; 10
     43a:	0f b6       	in	r0, 0x3f	; 63
     43c:	f8 94       	cli
     43e:	de bf       	out	0x3e, r29	; 62
     440:	0f be       	out	0x3f, r0	; 63
     442:	cd bf       	out	0x3d, r28	; 61
     444:	df 91       	pop	r29
     446:	cf 91       	pop	r28
     448:	1f 91       	pop	r17
     44a:	0f 91       	pop	r16
     44c:	08 95       	ret

0000044e <main>:
#include "pwm.h"
#include "adc.h"
#include "motor.h"


int main(void){
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	cd b7       	in	r28, 0x3d	; 61
     454:	de b7       	in	r29, 0x3e	; 62
     456:	a7 97       	sbiw	r28, 0x27	; 39
     458:	0f b6       	in	r0, 0x3f	; 63
     45a:	f8 94       	cli
     45c:	de bf       	out	0x3e, r29	; 62
     45e:	0f be       	out	0x3f, r0	; 63
     460:	cd bf       	out	0x3d, r28	; 61
	
	DDRD |= (1 << PD3);//init solenoid
     462:	53 9a       	sbi	0x0a, 3	; 10
	PORTD &= (1 << PD3);//init solenoid
     464:	8b b1       	in	r24, 0x0b	; 11
     466:	88 70       	andi	r24, 0x08	; 8
     468:	8b b9       	out	0x0b, r24	; 11
	
	USART_Init(MYUBRR);
     46a:	87 e6       	ldi	r24, 0x67	; 103
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	05 d5       	rcall	.+2570   	; 0xe7a <USART_Init>
	printf("start \n\r \n");
     470:	81 e8       	ldi	r24, 0x81	; 129
     472:	92 e0       	ldi	r25, 0x02	; 2
     474:	8e d7       	rcall	.+3868   	; 0x1392 <puts>
	
	can_init();
     476:	ca de       	rcall	.-620    	; 0x20c <can_init>
	
	struct can_message message_input;
	message_input.id = 1;
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	9a 83       	std	Y+2, r25	; 0x02
     47e:	89 83       	std	Y+1, r24	; 0x01
	message_input.length = 1;
     480:	21 e0       	ldi	r18, 0x01	; 1
     482:	2b 83       	std	Y+3, r18	; 0x03
	message_input.data[0] = (uint8_t) 0;
     484:	1c 82       	std	Y+4, r1	; 0x04
	
	struct can_message message_score;
	message_score.id = 1;
     486:	9f 87       	std	Y+15, r25	; 0x0f
     488:	8e 87       	std	Y+14, r24	; 0x0e
	message_score.length = 1;
     48a:	28 8b       	std	Y+16, r18	; 0x10
	message_score.data[0] = (uint8_t) 0;
     48c:	19 8a       	std	Y+17, r1	; 0x11
	
	struct can_message message_game_over;
	message_game_over.id = 2;
     48e:	82 e0       	ldi	r24, 0x02	; 2
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	9c 8f       	std	Y+28, r25	; 0x1c
     494:	8b 8f       	std	Y+27, r24	; 0x1b
	message_game_over.length = 1;
     496:	2d 8f       	std	Y+29, r18	; 0x1d
	message_game_over.data[0] = (uint8_t) 1;
     498:	2e 8f       	std	Y+30, r18	; 0x1e
	

	pwm_init();	
     49a:	7a d3       	rcall	.+1780   	; 0xb90 <pwm_init>
	adc_init();
     49c:	95 de       	rcall	.-726    	; 0x1c8 <adc_init>
	
	float pw = 1500;
	float x_val = 130;
	
	int old_val = adc_read();
     49e:	9d de       	rcall	.-710    	; 0x1da <adc_read>
     4a0:	8c 01       	movw	r16, r24
	int new_val = adc_read();
     4a2:	9b de       	rcall	.-714    	; 0x1da <adc_read>
	
	int succesfull_bounce = 0;
	sei();
     4a4:	78 94       	sei
	motor_init();
     4a6:	29 d1       	rcall	.+594    	; 0x6fa <motor_init>
	
	motor_reset_encoder();
     4a8:	87 d1       	rcall	.+782    	; 0x7b8 <motor_reset_encoder>
	motor_dac_write(0);
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	13 d1       	rcall	.+550    	; 0x6d4 <motor_dac_write>
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
	
	uint8_t gain_choise = 0;
     4ae:	71 2c       	mov	r7, r1
	
	motor_reset_encoder();
	motor_dac_write(0);
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
     4b0:	e1 2c       	mov	r14, r1
     4b2:	f1 2c       	mov	r15, r1
	float x_val = 130;
	
	int old_val = adc_read();
	int new_val = adc_read();
	
	int succesfull_bounce = 0;
     4b4:	c1 2c       	mov	r12, r1
     4b6:	d1 2c       	mov	r13, r1
			}
			else if(message_input.id == 2){
				motor_pid_controller(message_input.data[0]);
			}
			else if(message_input.id == 3){	
				printf("shot \n\r");			
     4b8:	0f 2e       	mov	r0, r31
     4ba:	fb e8       	ldi	r31, 0x8B	; 139
     4bc:	af 2e       	mov	r10, r31
     4be:	f2 e0       	ldi	r31, 0x02	; 2
     4c0:	bf 2e       	mov	r11, r31
     4c2:	f0 2d       	mov	r31, r0
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
				message_score.data[0] = succesfull_bounce;
				can_message_send(&message_score);
				enable_game_fail = 1;				
     4c4:	33 24       	eor	r3, r3
     4c6:	33 94       	inc	r3
     4c8:	41 2c       	mov	r4, r1
     4ca:	51 2c       	mov	r5, r1
     4cc:	61 2c       	mov	r6, r1
	int enable_game_fail = 0;
	
	uint8_t gain_choise = 0;

    while(1){
		if(can_get_message(&message_input)){
     4ce:	ce 01       	movw	r24, r28
     4d0:	01 96       	adiw	r24, 0x01	; 1
     4d2:	82 df       	rcall	.-252    	; 0x3d8 <can_get_message>
     4d4:	89 2b       	or	r24, r25
     4d6:	09 f4       	brne	.+2      	; 0x4da <main+0x8c>
     4d8:	57 c0       	rjmp	.+174    	; 0x588 <main+0x13a>
			if(message_input.id == 1){
     4da:	89 81       	ldd	r24, Y+1	; 0x01
     4dc:	9a 81       	ldd	r25, Y+2	; 0x02
     4de:	81 30       	cpi	r24, 0x01	; 1
     4e0:	91 05       	cpc	r25, r1
     4e2:	79 f4       	brne	.+30     	; 0x502 <main+0xb4>
				x_val = 255-(float) message_input.data[0];
     4e4:	6c 81       	ldd	r22, Y+4	; 0x04
     4e6:	70 e0       	ldi	r23, 0x00	; 0
     4e8:	80 e0       	ldi	r24, 0x00	; 0
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	d8 d5       	rcall	.+2992   	; 0x109e <__floatunsisf>
     4ee:	9b 01       	movw	r18, r22
     4f0:	ac 01       	movw	r20, r24
     4f2:	60 e0       	ldi	r22, 0x00	; 0
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	8f e7       	ldi	r24, 0x7F	; 127
     4f8:	93 e4       	ldi	r25, 0x43	; 67
     4fa:	cf d4       	rcall	.+2462   	; 0xe9a <__subsf3>
				pw = pwm_scale_joystick_val(x_val);
     4fc:	b1 d3       	rcall	.+1890   	; 0xc60 <pwm_scale_joystick_val>
				pwm_set_pulse_width(pw);
     4fe:	67 d3       	rcall	.+1742   	; 0xbce <pwm_set_pulse_width>
     500:	43 c0       	rjmp	.+134    	; 0x588 <main+0x13a>
				
			}
			else if(message_input.id == 2){
     502:	82 30       	cpi	r24, 0x02	; 2
     504:	91 05       	cpc	r25, r1
     506:	19 f4       	brne	.+6      	; 0x50e <main+0xc0>
				motor_pid_controller(message_input.data[0]);
     508:	8c 81       	ldd	r24, Y+4	; 0x04
     50a:	63 d1       	rcall	.+710    	; 0x7d2 <motor_pid_controller>
     50c:	3d c0       	rjmp	.+122    	; 0x588 <main+0x13a>
			}
			else if(message_input.id == 3){	
     50e:	83 30       	cpi	r24, 0x03	; 3
     510:	91 05       	cpc	r25, r1
     512:	f1 f4       	brne	.+60     	; 0x550 <main+0x102>
				printf("shot \n\r");			
     514:	bf 92       	push	r11
     516:	af 92       	push	r10
     518:	2b d7       	rcall	.+3670   	; 0x1370 <printf>
				PORTD |= (1 << PD3);
     51a:	5b 9a       	sbi	0x0b, 3	; 11
     51c:	2f ef       	ldi	r18, 0xFF	; 255
     51e:	81 ee       	ldi	r24, 0xE1	; 225
     520:	94 e0       	ldi	r25, 0x04	; 4
     522:	21 50       	subi	r18, 0x01	; 1
     524:	80 40       	sbci	r24, 0x00	; 0
     526:	90 40       	sbci	r25, 0x00	; 0
     528:	e1 f7       	brne	.-8      	; 0x522 <main+0xd4>
     52a:	00 c0       	rjmp	.+0      	; 0x52c <main+0xde>
     52c:	00 00       	nop
				_delay_ms(100);
				PORTD &= ~(1 << PD3);
     52e:	5b 98       	cbi	0x0b, 3	; 11
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	dd 20       	and	r13, r13
     536:	14 f4       	brge	.+4      	; 0x53c <main+0xee>
     538:	c5 2c       	mov	r12, r5
     53a:	d6 2c       	mov	r13, r6
				if (succesfull_bounce < 0)
				{
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
     53c:	af ef       	ldi	r26, 0xFF	; 255
     53e:	ca 1a       	sub	r12, r26
     540:	da 0a       	sbc	r13, r26
				message_score.data[0] = succesfull_bounce;
     542:	c9 8a       	std	Y+17, r12	; 0x11
				can_message_send(&message_score);
     544:	ce 01       	movw	r24, r28
     546:	0e 96       	adiw	r24, 0x0e	; 14
     548:	b9 de       	rcall	.-654    	; 0x2bc <can_message_send>
				enable_game_fail = 1;				
     54a:	e3 2c       	mov	r14, r3
     54c:	f4 2c       	mov	r15, r4
     54e:	1c c0       	rjmp	.+56     	; 0x588 <main+0x13a>
			}
			else if (message_input.id == 4){
     550:	84 30       	cpi	r24, 0x04	; 4
     552:	91 05       	cpc	r25, r1
     554:	29 f4       	brne	.+10     	; 0x560 <main+0x112>
				gain_choise = message_input.data[0];
     556:	7c 80       	ldd	r7, Y+4	; 0x04
				motor_set_gain(gain_choise);
     558:	87 2d       	mov	r24, r7
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	55 d2       	rcall	.+1194   	; 0xa08 <motor_set_gain>
     55e:	14 c0       	rjmp	.+40     	; 0x588 <main+0x13a>
			}else if (message_input.id == 5){
     560:	05 97       	sbiw	r24, 0x05	; 5
     562:	91 f4       	brne	.+36     	; 0x588 <main+0x13a>
				int gain_val = message_input.data[0];
     564:	8c 81       	ldd	r24, Y+4	; 0x04
     566:	88 2e       	mov	r8, r24
     568:	91 2c       	mov	r9, r1
				printf("kp  %d \n\r", gain_val);
     56a:	1f 92       	push	r1
     56c:	8f 93       	push	r24
     56e:	a3 e9       	ldi	r26, 0x93	; 147
     570:	b2 e0       	ldi	r27, 0x02	; 2
     572:	bf 93       	push	r27
     574:	af 93       	push	r26
     576:	fc d6       	rcall	.+3576   	; 0x1370 <printf>
				motor_tune_gain(gain_choise, gain_val);
     578:	b4 01       	movw	r22, r8
     57a:	87 2d       	mov	r24, r7
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	b5 d2       	rcall	.+1386   	; 0xaea <motor_tune_gain>
     580:	0f 90       	pop	r0
     582:	0f 90       	pop	r0
     584:	0f 90       	pop	r0
     586:	0f 90       	pop	r0
			}			
		}

		
		
		new_val = adc_read();
     588:	28 de       	rcall	.-944    	; 0x1da <adc_read>

		
		if( (old_val == 0) && (new_val == 1) )
     58a:	01 15       	cp	r16, r1
     58c:	11 05       	cpc	r17, r1
     58e:	79 f4       	brne	.+30     	; 0x5ae <main+0x160>
     590:	01 97       	sbiw	r24, 0x01	; 1
     592:	09 f0       	breq	.+2      	; 0x596 <main+0x148>
     594:	9c cf       	rjmp	.-200    	; 0x4ce <main+0x80>
     596:	8f ef       	ldi	r24, 0xFF	; 255
     598:	90 e7       	ldi	r25, 0x70	; 112
     59a:	a2 e0       	ldi	r26, 0x02	; 2
     59c:	81 50       	subi	r24, 0x01	; 1
     59e:	90 40       	sbci	r25, 0x00	; 0
     5a0:	a0 40       	sbci	r26, 0x00	; 0
     5a2:	e1 f7       	brne	.-8      	; 0x59c <main+0x14e>
     5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <main+0x158>
     5a6:	00 00       	nop
		{
			old_val = 1;
     5a8:	03 2d       	mov	r16, r3
     5aa:	14 2d       	mov	r17, r4
     5ac:	90 cf       	rjmp	.-224    	; 0x4ce <main+0x80>
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
     5ae:	01 30       	cpi	r16, 0x01	; 1
     5b0:	11 05       	cpc	r17, r1
     5b2:	09 f0       	breq	.+2      	; 0x5b6 <main+0x168>
     5b4:	8c cf       	rjmp	.-232    	; 0x4ce <main+0x80>
     5b6:	89 2b       	or	r24, r25
     5b8:	09 f0       	breq	.+2      	; 0x5bc <main+0x16e>
     5ba:	89 cf       	rjmp	.-238    	; 0x4ce <main+0x80>
     5bc:	e1 14       	cp	r14, r1
     5be:	f1 04       	cpc	r15, r1
     5c0:	09 f4       	brne	.+2      	; 0x5c4 <main+0x176>
     5c2:	85 cf       	rjmp	.-246    	; 0x4ce <main+0x80>
     5c4:	bf ef       	ldi	r27, 0xFF	; 255
     5c6:	20 e7       	ldi	r18, 0x70	; 112
     5c8:	82 e0       	ldi	r24, 0x02	; 2
     5ca:	b1 50       	subi	r27, 0x01	; 1
     5cc:	20 40       	sbci	r18, 0x00	; 0
     5ce:	80 40       	sbci	r24, 0x00	; 0
     5d0:	e1 f7       	brne	.-8      	; 0x5ca <main+0x17c>
     5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <main+0x186>
     5d4:	00 00       	nop
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
			message_score.data[0] = succesfull_bounce;
     5d6:	19 8a       	std	Y+17, r1	; 0x11
			can_message_send(&message_game_over);
     5d8:	ce 01       	movw	r24, r28
     5da:	4b 96       	adiw	r24, 0x1b	; 27
     5dc:	6f de       	rcall	.-802    	; 0x2bc <can_message_send>
			can_message_send(&message_score);
     5de:	ce 01       	movw	r24, r28
     5e0:	0e 96       	adiw	r24, 0x0e	; 14
     5e2:	6c de       	rcall	.-808    	; 0x2bc <can_message_send>
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
     5e4:	e5 2c       	mov	r14, r5
     5e6:	f6 2c       	mov	r15, r6
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
     5e8:	c5 2c       	mov	r12, r5
     5ea:	d6 2c       	mov	r13, r6
			old_val = 1;
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
     5ec:	05 2d       	mov	r16, r5
     5ee:	16 2d       	mov	r17, r6
     5f0:	6e cf       	rjmp	.-292    	; 0x4ce <main+0x80>

000005f2 <mcp2515_reset>:
     5f2:	cf 93       	push	r28
     5f4:	df 93       	push	r29
     5f6:	1f 92       	push	r1
     5f8:	cd b7       	in	r28, 0x3d	; 61
     5fa:	de b7       	in	r29, 0x3e	; 62
     5fc:	2f 98       	cbi	0x05, 7	; 5
     5fe:	80 ec       	ldi	r24, 0xC0	; 192
     600:	89 83       	std	Y+1, r24	; 0x01
     602:	61 e0       	ldi	r22, 0x01	; 1
     604:	ce 01       	movw	r24, r28
     606:	01 96       	adiw	r24, 0x01	; 1
     608:	65 d3       	rcall	.+1738   	; 0xcd4 <spi_write>
     60a:	2f 9a       	sbi	0x05, 7	; 5
     60c:	0f 90       	pop	r0
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	08 95       	ret

00000614 <mcp2515_init>:
     614:	30 d3       	rcall	.+1632   	; 0xc76 <spi_init>
     616:	ed cf       	rjmp	.-38     	; 0x5f2 <mcp2515_reset>
     618:	08 95       	ret

0000061a <mcp2515_read>:
     61a:	ff 92       	push	r15
     61c:	0f 93       	push	r16
     61e:	1f 93       	push	r17
     620:	cf 93       	push	r28
     622:	df 93       	push	r29
     624:	1f 92       	push	r1
     626:	1f 92       	push	r1
     628:	cd b7       	in	r28, 0x3d	; 61
     62a:	de b7       	in	r29, 0x3e	; 62
     62c:	8b 01       	movw	r16, r22
     62e:	f4 2e       	mov	r15, r20
     630:	2f 98       	cbi	0x05, 7	; 5
     632:	93 e0       	ldi	r25, 0x03	; 3
     634:	99 83       	std	Y+1, r25	; 0x01
     636:	8a 83       	std	Y+2, r24	; 0x02
     638:	62 e0       	ldi	r22, 0x02	; 2
     63a:	ce 01       	movw	r24, r28
     63c:	01 96       	adiw	r24, 0x01	; 1
     63e:	4a d3       	rcall	.+1684   	; 0xcd4 <spi_write>
     640:	6f 2d       	mov	r22, r15
     642:	c8 01       	movw	r24, r16
     644:	21 d3       	rcall	.+1602   	; 0xc88 <spi_read>
     646:	2f 9a       	sbi	0x05, 7	; 5
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	df 91       	pop	r29
     64e:	cf 91       	pop	r28
     650:	1f 91       	pop	r17
     652:	0f 91       	pop	r16
     654:	ff 90       	pop	r15
     656:	08 95       	ret

00000658 <mcp2515_write>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	00 d0       	rcall	.+0      	; 0x65e <mcp2515_write+0x6>
     65e:	cd b7       	in	r28, 0x3d	; 61
     660:	de b7       	in	r29, 0x3e	; 62
     662:	2f 98       	cbi	0x05, 7	; 5
     664:	92 e0       	ldi	r25, 0x02	; 2
     666:	99 83       	std	Y+1, r25	; 0x01
     668:	8a 83       	std	Y+2, r24	; 0x02
     66a:	6b 83       	std	Y+3, r22	; 0x03
     66c:	62 e0       	ldi	r22, 0x02	; 2
     66e:	64 0f       	add	r22, r20
     670:	ce 01       	movw	r24, r28
     672:	01 96       	adiw	r24, 0x01	; 1
     674:	2f d3       	rcall	.+1630   	; 0xcd4 <spi_write>
     676:	2f 9a       	sbi	0x05, 7	; 5
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	0f 90       	pop	r0
     67e:	df 91       	pop	r29
     680:	cf 91       	pop	r28
     682:	08 95       	ret

00000684 <mcp2515_request>:
     684:	cf 93       	push	r28
     686:	df 93       	push	r29
     688:	1f 92       	push	r1
     68a:	cd b7       	in	r28, 0x3d	; 61
     68c:	de b7       	in	r29, 0x3e	; 62
     68e:	2f 98       	cbi	0x05, 7	; 5
     690:	89 83       	std	Y+1, r24	; 0x01
     692:	61 e0       	ldi	r22, 0x01	; 1
     694:	ce 01       	movw	r24, r28
     696:	01 96       	adiw	r24, 0x01	; 1
     698:	1d d3       	rcall	.+1594   	; 0xcd4 <spi_write>
     69a:	2f 9a       	sbi	0x05, 7	; 5
     69c:	0f 90       	pop	r0
     69e:	df 91       	pop	r29
     6a0:	cf 91       	pop	r28
     6a2:	08 95       	ret

000006a4 <mcp2515_bit_modify>:
     6a4:	cf 93       	push	r28
     6a6:	df 93       	push	r29
     6a8:	00 d0       	rcall	.+0      	; 0x6aa <mcp2515_bit_modify+0x6>
     6aa:	1f 92       	push	r1
     6ac:	cd b7       	in	r28, 0x3d	; 61
     6ae:	de b7       	in	r29, 0x3e	; 62
     6b0:	2f 98       	cbi	0x05, 7	; 5
     6b2:	95 e0       	ldi	r25, 0x05	; 5
     6b4:	99 83       	std	Y+1, r25	; 0x01
     6b6:	8a 83       	std	Y+2, r24	; 0x02
     6b8:	6b 83       	std	Y+3, r22	; 0x03
     6ba:	4c 83       	std	Y+4, r20	; 0x04
     6bc:	64 e0       	ldi	r22, 0x04	; 4
     6be:	ce 01       	movw	r24, r28
     6c0:	01 96       	adiw	r24, 0x01	; 1
     6c2:	08 d3       	rcall	.+1552   	; 0xcd4 <spi_write>
     6c4:	2f 9a       	sbi	0x05, 7	; 5
     6c6:	0f 90       	pop	r0
     6c8:	0f 90       	pop	r0
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	08 95       	ret

000006d4 <motor_dac_write>:
	}
	else {
		motor_set_dir(1);
		motor_dac_write((slider_pos - 127) * 0.5);
	}
}
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	00 d0       	rcall	.+0      	; 0x6da <motor_dac_write+0x6>
     6da:	cd b7       	in	r28, 0x3d	; 61
     6dc:	de b7       	in	r29, 0x3e	; 62
     6de:	90 e5       	ldi	r25, 0x50	; 80
     6e0:	99 83       	std	Y+1, r25	; 0x01
     6e2:	1a 82       	std	Y+2, r1	; 0x02
     6e4:	8b 83       	std	Y+3, r24	; 0x03
     6e6:	64 e0       	ldi	r22, 0x04	; 4
     6e8:	ce 01       	movw	r24, r28
     6ea:	01 96       	adiw	r24, 0x01	; 1
     6ec:	11 d3       	rcall	.+1570   	; 0xd10 <TWI_Start_Transceiver_With_Data>
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	0f 90       	pop	r0
     6f4:	df 91       	pop	r29
     6f6:	cf 91       	pop	r28
     6f8:	08 95       	ret

000006fa <motor_init>:
     6fa:	00 d3       	rcall	.+1536   	; 0xcfc <TWI_Master_Initialise>
     6fc:	e1 e0       	ldi	r30, 0x01	; 1
     6fe:	f1 e0       	ldi	r31, 0x01	; 1
     700:	80 81       	ld	r24, Z
     702:	8a 67       	ori	r24, 0x7A	; 122
     704:	80 83       	st	Z, r24
     706:	e2 e0       	ldi	r30, 0x02	; 2
     708:	f1 e0       	ldi	r31, 0x01	; 1
     70a:	80 81       	ld	r24, Z
     70c:	82 60       	ori	r24, 0x02	; 2
     70e:	80 83       	st	Z, r24
     710:	80 81       	ld	r24, Z
     712:	80 61       	ori	r24, 0x10	; 16
     714:	80 83       	st	Z, r24
     716:	10 92 07 01 	sts	0x0107, r1
     71a:	80 e5       	ldi	r24, 0x50	; 80
     71c:	db df       	rcall	.-74     	; 0x6d4 <motor_dac_write>
     71e:	2f e7       	ldi	r18, 0x7F	; 127
     720:	8a e1       	ldi	r24, 0x1A	; 26
     722:	96 e0       	ldi	r25, 0x06	; 6
     724:	21 50       	subi	r18, 0x01	; 1
     726:	80 40       	sbci	r24, 0x00	; 0
     728:	90 40       	sbci	r25, 0x00	; 0
     72a:	e1 f7       	brne	.-8      	; 0x724 <motor_init+0x2a>
     72c:	00 c0       	rjmp	.+0      	; 0x72e <motor_init+0x34>
     72e:	00 00       	nop
     730:	08 95       	ret

00000732 <motor_set_dir>:
     732:	88 23       	and	r24, r24
     734:	31 f0       	breq	.+12     	; 0x742 <motor_set_dir+0x10>
     736:	e2 e0       	ldi	r30, 0x02	; 2
     738:	f1 e0       	ldi	r31, 0x01	; 1
     73a:	80 81       	ld	r24, Z
     73c:	82 60       	ori	r24, 0x02	; 2
     73e:	80 83       	st	Z, r24
     740:	08 95       	ret
     742:	e2 e0       	ldi	r30, 0x02	; 2
     744:	f1 e0       	ldi	r31, 0x01	; 1
     746:	80 81       	ld	r24, Z
     748:	8d 7f       	andi	r24, 0xFD	; 253
     74a:	80 83       	st	Z, r24
     74c:	08 95       	ret

0000074e <motor_read_encoder>:

int16_t motor_read_encoder(){
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	00 d0       	rcall	.+0      	; 0x754 <motor_read_encoder+0x6>
     754:	1f 92       	push	r1
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
	volatile int16_t encoder_val;
	volatile uint8_t lsb;
	volatile uint8_t msb;
	
	PORTH &= ~(1 << PH5); //set !OE low. enable output
     75a:	e2 e0       	ldi	r30, 0x02	; 2
     75c:	f1 e0       	ldi	r31, 0x01	; 1
     75e:	80 81       	ld	r24, Z
     760:	8f 7d       	andi	r24, 0xDF	; 223
     762:	80 83       	st	Z, r24
	PORTH &= ~(1 << PH3); //set SEL low to get high byte
     764:	80 81       	ld	r24, Z
     766:	87 7f       	andi	r24, 0xF7	; 247
     768:	80 83       	st	Z, r24
     76a:	87 e8       	ldi	r24, 0x87	; 135
     76c:	93 e1       	ldi	r25, 0x13	; 19
     76e:	01 97       	sbiw	r24, 0x01	; 1
     770:	f1 f7       	brne	.-4      	; 0x76e <motor_read_encoder+0x20>
     772:	00 c0       	rjmp	.+0      	; 0x774 <motor_read_encoder+0x26>
     774:	00 00       	nop
	
	_delay_ms(20);
	
	msb = PINK; // read msb
     776:	80 91 06 01 	lds	r24, 0x0106
     77a:	8c 83       	std	Y+4, r24	; 0x04
	//printf("msb  %d \n \r \n\r", msb);
	
	PORTH |= (1 << PH3); // set SEL high to get low byte
     77c:	80 81       	ld	r24, Z
     77e:	88 60       	ori	r24, 0x08	; 8
     780:	80 83       	st	Z, r24
     782:	87 e8       	ldi	r24, 0x87	; 135
     784:	93 e1       	ldi	r25, 0x13	; 19
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	f1 f7       	brne	.-4      	; 0x786 <motor_read_encoder+0x38>
     78a:	00 c0       	rjmp	.+0      	; 0x78c <motor_read_encoder+0x3e>
     78c:	00 00       	nop
	
	_delay_ms(20);
	
	lsb = PINK; // read lsb
     78e:	80 91 06 01 	lds	r24, 0x0106
     792:	8b 83       	std	Y+3, r24	; 0x03
	//printf("lsb  %d \n \r \n\r", lsb);
	
	PORTH |= (1 << PH5); // Disable encoder read
     794:	80 81       	ld	r24, Z
     796:	80 62       	ori	r24, 0x20	; 32
     798:	80 83       	st	Z, r24
	
	encoder_val = ((msb<<8) | lsb); //process data
     79a:	2c 81       	ldd	r18, Y+4	; 0x04
     79c:	8b 81       	ldd	r24, Y+3	; 0x03
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	92 2b       	or	r25, r18
     7a2:	9a 83       	std	Y+2, r25	; 0x02
     7a4:	89 83       	std	Y+1, r24	; 0x01
	return encoder_val;
     7a6:	89 81       	ldd	r24, Y+1	; 0x01
     7a8:	9a 81       	ldd	r25, Y+2	; 0x02
}
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	0f 90       	pop	r0
     7b0:	0f 90       	pop	r0
     7b2:	df 91       	pop	r29
     7b4:	cf 91       	pop	r28
     7b6:	08 95       	ret

000007b8 <motor_reset_encoder>:

void motor_reset_encoder() {
	PORTH &= ~(1<<PH6);
     7b8:	e2 e0       	ldi	r30, 0x02	; 2
     7ba:	f1 e0       	ldi	r31, 0x01	; 1
     7bc:	80 81       	ld	r24, Z
     7be:	8f 7b       	andi	r24, 0xBF	; 191
     7c0:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7c2:	82 e4       	ldi	r24, 0x42	; 66
     7c4:	8a 95       	dec	r24
     7c6:	f1 f7       	brne	.-4      	; 0x7c4 <motor_reset_encoder+0xc>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <motor_reset_encoder+0x12>
	_delay_us(200);
	PORTH |= (1<<PH6);
     7ca:	80 81       	ld	r24, Z
     7cc:	80 64       	ori	r24, 0x40	; 64
     7ce:	80 83       	st	Z, r24
     7d0:	08 95       	ret

000007d2 <motor_pid_controller>:
}

void motor_pid_controller(uint8_t reference){
     7d2:	2f 92       	push	r2
     7d4:	3f 92       	push	r3
     7d6:	4f 92       	push	r4
     7d8:	5f 92       	push	r5
     7da:	6f 92       	push	r6
     7dc:	7f 92       	push	r7
     7de:	8f 92       	push	r8
     7e0:	9f 92       	push	r9
     7e2:	af 92       	push	r10
     7e4:	bf 92       	push	r11
     7e6:	cf 92       	push	r12
     7e8:	df 92       	push	r13
     7ea:	ef 92       	push	r14
     7ec:	ff 92       	push	r15
     7ee:	0f 93       	push	r16
     7f0:	1f 93       	push	r17
     7f2:	cf 93       	push	r28
     7f4:	df 93       	push	r29
     7f6:	00 d0       	rcall	.+0      	; 0x7f8 <motor_pid_controller+0x26>
     7f8:	00 d0       	rcall	.+0      	; 0x7fa <motor_pid_controller+0x28>
     7fa:	cd b7       	in	r28, 0x3d	; 61
     7fc:	de b7       	in	r29, 0x3e	; 62
     7fe:	18 2f       	mov	r17, r24
	reference = -reference;
	int var = 1;
	
	uint16_t encoder = motor_read_encoder();
     800:	a6 df       	rcall	.-180    	; 0x74e <motor_read_encoder>
     802:	3c 01       	movw	r6, r24
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
     804:	40 90 08 02 	lds	r4, 0x0208
     808:	50 90 09 02 	lds	r5, 0x0209
	_delay_us(200);
	PORTH |= (1<<PH6);
}

void motor_pid_controller(uint8_t reference){
	reference = -reference;
     80c:	11 95       	neg	r17
	uint16_t encoder = motor_read_encoder();
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
	//var = (int) encoder_diff;
	double measured_val = encoder_diff * scalor;
	int error = reference - (int) measured_val;
     80e:	01 2f       	mov	r16, r17
     810:	10 e0       	ldi	r17, 0x00	; 0
	reference = -reference;
	int var = 1;
	
	uint16_t encoder = motor_read_encoder();
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
     812:	bc 01       	movw	r22, r24
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	42 d4       	rcall	.+2180   	; 0x109e <__floatunsisf>
     81a:	6b 01       	movw	r12, r22
     81c:	7c 01       	movw	r14, r24
     81e:	b2 01       	movw	r22, r4
     820:	80 e0       	ldi	r24, 0x00	; 0
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	3c d4       	rcall	.+2168   	; 0x109e <__floatunsisf>
     826:	9b 01       	movw	r18, r22
     828:	ac 01       	movw	r20, r24
     82a:	c7 01       	movw	r24, r14
     82c:	b6 01       	movw	r22, r12
     82e:	35 d3       	rcall	.+1642   	; 0xe9a <__subsf3>
	//var = (int) encoder_diff;
	double measured_val = encoder_diff * scalor;
     830:	24 e8       	ldi	r18, 0x84	; 132
     832:	3b e4       	ldi	r19, 0x4B	; 75
     834:	47 e0       	ldi	r20, 0x07	; 7
     836:	5d e3       	ldi	r21, 0x3D	; 61
     838:	e8 d4       	rcall	.+2512   	; 0x120a <__mulsf3>
	int error = reference - (int) measured_val;
     83a:	00 d4       	rcall	.+2048   	; 0x103c <__fixsfsi>
     83c:	98 01       	movw	r18, r16
     83e:	26 1b       	sub	r18, r22
     840:	37 0b       	sbc	r19, r23
     842:	3e 83       	std	Y+6, r19	; 0x06
     844:	2d 83       	std	Y+5, r18	; 0x05
	//int error = reference - (encoder - encoder_min) * 255 / (encoder_max - encoder_min); 
	sum_error += error;
     846:	00 91 b4 02 	lds	r16, 0x02B4
     84a:	10 91 b5 02 	lds	r17, 0x02B5
     84e:	02 0f       	add	r16, r18
     850:	13 1f       	adc	r17, r19
     852:	10 93 b5 02 	sts	0x02B5, r17
     856:	00 93 b4 02 	sts	0x02B4, r16
	int integral_part = ( ki * sum_error / freq );
     85a:	80 90 0c 02 	lds	r8, 0x020C
     85e:	90 90 0d 02 	lds	r9, 0x020D
     862:	a0 90 0e 02 	lds	r10, 0x020E
     866:	b0 90 0f 02 	lds	r11, 0x020F
     86a:	60 91 0a 02 	lds	r22, 0x020A
     86e:	70 91 0b 02 	lds	r23, 0x020B
	if (integral_part < -40){integral_part = -40;}
	else if (integral_part > 40){integral_part = 40;}
	int derivative_part = ( kd * (error - prev_error) * freq);
     872:	20 90 b6 02 	lds	r2, 0x02B6
     876:	30 90 b7 02 	lds	r3, 0x02B7
     87a:	80 91 10 02 	lds	r24, 0x0210
     87e:	90 91 11 02 	lds	r25, 0x0211
     882:	a0 91 12 02 	lds	r26, 0x0212
     886:	b0 91 13 02 	lds	r27, 0x0213
     88a:	89 83       	std	Y+1, r24	; 0x01
     88c:	9a 83       	std	Y+2, r25	; 0x02
     88e:	ab 83       	std	Y+3, r26	; 0x03
     890:	bc 83       	std	Y+4, r27	; 0x04
	if (derivative_part < -40){derivative_part = -40;}
	else if (derivative_part > 40){derivative_part = 40;}
	int u = ( kp * error ) + integral_part + derivative_part;
     892:	c0 90 14 02 	lds	r12, 0x0214
     896:	d0 90 15 02 	lds	r13, 0x0215
     89a:	e0 90 16 02 	lds	r14, 0x0216
     89e:	f0 90 17 02 	lds	r15, 0x0217
	prev_error = error;
     8a2:	30 93 b7 02 	sts	0x02B7, r19
     8a6:	20 93 b6 02 	sts	0x02B6, r18
	if (encoder < encoder_min){ u = 20; }
     8aa:	64 14       	cp	r6, r4
     8ac:	75 04       	cpc	r7, r5
     8ae:	08 f4       	brcc	.+2      	; 0x8b2 <motor_pid_controller+0xe0>
     8b0:	74 c0       	rjmp	.+232    	; 0x99a <motor_pid_controller+0x1c8>
	else if (encoder_max < encoder){ u = -20; }
     8b2:	80 91 06 02 	lds	r24, 0x0206
     8b6:	90 91 07 02 	lds	r25, 0x0207
     8ba:	86 15       	cp	r24, r6
     8bc:	97 05       	cpc	r25, r7
     8be:	08 f4       	brcc	.+2      	; 0x8c2 <motor_pid_controller+0xf0>
     8c0:	71 c0       	rjmp	.+226    	; 0x9a4 <motor_pid_controller+0x1d2>
	//var = (int) encoder_diff;
	double measured_val = encoder_diff * scalor;
	int error = reference - (int) measured_val;
	//int error = reference - (encoder - encoder_min) * 255 / (encoder_max - encoder_min); 
	sum_error += error;
	int integral_part = ( ki * sum_error / freq );
     8c2:	80 e0       	ldi	r24, 0x00	; 0
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	eb d3       	rcall	.+2006   	; 0x109e <__floatunsisf>
     8c8:	2b 01       	movw	r4, r22
     8ca:	3c 01       	movw	r6, r24
	if (integral_part < -40){integral_part = -40;}
	else if (integral_part > 40){integral_part = 40;}
	int derivative_part = ( kd * (error - prev_error) * freq);
     8cc:	6d 81       	ldd	r22, Y+5	; 0x05
     8ce:	7e 81       	ldd	r23, Y+6	; 0x06
     8d0:	62 19       	sub	r22, r2
     8d2:	73 09       	sbc	r23, r3
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	e2 d3       	rcall	.+1988   	; 0x109e <__floatunsisf>
     8da:	29 81       	ldd	r18, Y+1	; 0x01
     8dc:	3a 81       	ldd	r19, Y+2	; 0x02
     8de:	4b 81       	ldd	r20, Y+3	; 0x03
     8e0:	5c 81       	ldd	r21, Y+4	; 0x04
     8e2:	93 d4       	rcall	.+2342   	; 0x120a <__mulsf3>
     8e4:	9b 01       	movw	r18, r22
     8e6:	ac 01       	movw	r20, r24
     8e8:	c3 01       	movw	r24, r6
     8ea:	b2 01       	movw	r22, r4
     8ec:	8e d4       	rcall	.+2332   	; 0x120a <__mulsf3>
     8ee:	a6 d3       	rcall	.+1868   	; 0x103c <__fixsfsi>
     8f0:	1b 01       	movw	r2, r22
     8f2:	99 e2       	ldi	r25, 0x29	; 41
     8f4:	29 16       	cp	r2, r25
     8f6:	31 04       	cpc	r3, r1
     8f8:	2c f0       	brlt	.+10     	; 0x904 <motor_pid_controller+0x132>
     8fa:	0f 2e       	mov	r0, r31
     8fc:	f8 e2       	ldi	r31, 0x28	; 40
     8fe:	2f 2e       	mov	r2, r31
     900:	31 2c       	mov	r3, r1
     902:	f0 2d       	mov	r31, r0
	//var = (int) encoder_diff;
	double measured_val = encoder_diff * scalor;
	int error = reference - (int) measured_val;
	//int error = reference - (encoder - encoder_min) * 255 / (encoder_max - encoder_min); 
	sum_error += error;
	int integral_part = ( ki * sum_error / freq );
     904:	b8 01       	movw	r22, r16
     906:	88 27       	eor	r24, r24
     908:	77 fd       	sbrc	r23, 7
     90a:	80 95       	com	r24
     90c:	98 2f       	mov	r25, r24
     90e:	c9 d3       	rcall	.+1938   	; 0x10a2 <__floatsisf>
     910:	a5 01       	movw	r20, r10
     912:	94 01       	movw	r18, r8
     914:	7a d4       	rcall	.+2292   	; 0x120a <__mulsf3>
     916:	a3 01       	movw	r20, r6
     918:	92 01       	movw	r18, r4
     91a:	28 d3       	rcall	.+1616   	; 0xf6c <__divsf3>
     91c:	8f d3       	rcall	.+1822   	; 0x103c <__fixsfsi>
     91e:	8b 01       	movw	r16, r22
     920:	69 32       	cpi	r22, 0x29	; 41
     922:	71 05       	cpc	r23, r1
     924:	14 f0       	brlt	.+4      	; 0x92a <motor_pid_controller+0x158>
     926:	08 e2       	ldi	r16, 0x28	; 40
     928:	10 e0       	ldi	r17, 0x00	; 0
	if (integral_part < -40){integral_part = -40;}
	else if (integral_part > 40){integral_part = 40;}
	int derivative_part = ( kd * (error - prev_error) * freq);
	if (derivative_part < -40){derivative_part = -40;}
	else if (derivative_part > 40){derivative_part = 40;}
	int u = ( kp * error ) + integral_part + derivative_part;
     92a:	ad 81       	ldd	r26, Y+5	; 0x05
     92c:	be 81       	ldd	r27, Y+6	; 0x06
     92e:	bd 01       	movw	r22, r26
     930:	88 27       	eor	r24, r24
     932:	77 fd       	sbrc	r23, 7
     934:	80 95       	com	r24
     936:	98 2f       	mov	r25, r24
     938:	b4 d3       	rcall	.+1896   	; 0x10a2 <__floatsisf>
     93a:	a7 01       	movw	r20, r14
     93c:	96 01       	movw	r18, r12
     93e:	65 d4       	rcall	.+2250   	; 0x120a <__mulsf3>
     940:	6b 01       	movw	r12, r22
     942:	7c 01       	movw	r14, r24
     944:	b8 01       	movw	r22, r16
     946:	08 3d       	cpi	r16, 0xD8	; 216
     948:	bf ef       	ldi	r27, 0xFF	; 255
     94a:	1b 07       	cpc	r17, r27
     94c:	14 f4       	brge	.+4      	; 0x952 <motor_pid_controller+0x180>
     94e:	68 ed       	ldi	r22, 0xD8	; 216
     950:	7f ef       	ldi	r23, 0xFF	; 255
     952:	88 27       	eor	r24, r24
     954:	77 fd       	sbrc	r23, 7
     956:	80 95       	com	r24
     958:	98 2f       	mov	r25, r24
     95a:	a3 d3       	rcall	.+1862   	; 0x10a2 <__floatsisf>
     95c:	9b 01       	movw	r18, r22
     95e:	ac 01       	movw	r20, r24
     960:	c7 01       	movw	r24, r14
     962:	b6 01       	movw	r22, r12
     964:	9b d2       	rcall	.+1334   	; 0xe9c <__addsf3>
     966:	6b 01       	movw	r12, r22
     968:	7c 01       	movw	r14, r24
     96a:	b1 01       	movw	r22, r2
     96c:	e8 ed       	ldi	r30, 0xD8	; 216
     96e:	2e 16       	cp	r2, r30
     970:	ef ef       	ldi	r30, 0xFF	; 255
     972:	3e 06       	cpc	r3, r30
     974:	14 f4       	brge	.+4      	; 0x97a <motor_pid_controller+0x1a8>
     976:	68 ed       	ldi	r22, 0xD8	; 216
     978:	7f ef       	ldi	r23, 0xFF	; 255
     97a:	88 27       	eor	r24, r24
     97c:	77 fd       	sbrc	r23, 7
     97e:	80 95       	com	r24
     980:	98 2f       	mov	r25, r24
     982:	8f d3       	rcall	.+1822   	; 0x10a2 <__floatsisf>
     984:	9b 01       	movw	r18, r22
     986:	ac 01       	movw	r20, r24
     988:	c7 01       	movw	r24, r14
     98a:	b6 01       	movw	r22, r12
     98c:	87 d2       	rcall	.+1294   	; 0xe9c <__addsf3>
     98e:	56 d3       	rcall	.+1708   	; 0x103c <__fixsfsi>
     990:	8b 01       	movw	r16, r22
	prev_error = error;
	if (encoder < encoder_min){ u = 20; }
	else if (encoder_max < encoder){ u = -20; }
	if (u > 0){motor_set_dir(0);}
     992:	16 16       	cp	r1, r22
     994:	17 06       	cpc	r1, r23
     996:	1c f0       	brlt	.+6      	; 0x99e <motor_pid_controller+0x1cc>
     998:	07 c0       	rjmp	.+14     	; 0x9a8 <motor_pid_controller+0x1d6>
	int derivative_part = ( kd * (error - prev_error) * freq);
	if (derivative_part < -40){derivative_part = -40;}
	else if (derivative_part > 40){derivative_part = 40;}
	int u = ( kp * error ) + integral_part + derivative_part;
	prev_error = error;
	if (encoder < encoder_min){ u = 20; }
     99a:	04 e1       	ldi	r16, 0x14	; 20
     99c:	10 e0       	ldi	r17, 0x00	; 0
	else if (encoder_max < encoder){ u = -20; }
	if (u > 0){motor_set_dir(0);}
     99e:	80 e0       	ldi	r24, 0x00	; 0
     9a0:	c8 de       	rcall	.-624    	; 0x732 <motor_set_dir>
     9a2:	07 c0       	rjmp	.+14     	; 0x9b2 <motor_pid_controller+0x1e0>
	if (derivative_part < -40){derivative_part = -40;}
	else if (derivative_part > 40){derivative_part = 40;}
	int u = ( kp * error ) + integral_part + derivative_part;
	prev_error = error;
	if (encoder < encoder_min){ u = 20; }
	else if (encoder_max < encoder){ u = -20; }
     9a4:	0c ee       	ldi	r16, 0xEC	; 236
     9a6:	1f ef       	ldi	r17, 0xFF	; 255
	if (u > 0){motor_set_dir(0);}
	else {
		motor_set_dir(1);
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	c3 de       	rcall	.-634    	; 0x732 <motor_set_dir>
		u = -u;
     9ac:	11 95       	neg	r17
     9ae:	01 95       	neg	r16
     9b0:	11 09       	sbc	r17, r1
     9b2:	05 36       	cpi	r16, 0x65	; 101
     9b4:	11 05       	cpc	r17, r1
     9b6:	14 f0       	brlt	.+4      	; 0x9bc <motor_pid_controller+0x1ea>
     9b8:	04 e6       	ldi	r16, 0x64	; 100
     9ba:	10 e0       	ldi	r17, 0x00	; 0
	}
	if ( 100 < u ){ u = 100; };
	motor_dac_write(u);
     9bc:	80 2f       	mov	r24, r16
     9be:	8a de       	rcall	.-748    	; 0x6d4 <motor_dac_write>
 	printf("u  %d \n\r", u);
     9c0:	1f 93       	push	r17
     9c2:	0f 93       	push	r16
     9c4:	8a ea       	ldi	r24, 0xAA	; 170
     9c6:	92 e0       	ldi	r25, 0x02	; 2
     9c8:	9f 93       	push	r25
     9ca:	8f 93       	push	r24
     9cc:	d1 d4       	rcall	.+2466   	; 0x1370 <printf>
     9ce:	0f 90       	pop	r0
     9d0:	0f 90       	pop	r0
     9d2:	0f 90       	pop	r0
     9d4:	0f 90       	pop	r0
}
     9d6:	26 96       	adiw	r28, 0x06	; 6
     9d8:	0f b6       	in	r0, 0x3f	; 63
     9da:	f8 94       	cli
     9dc:	de bf       	out	0x3e, r29	; 62
     9de:	0f be       	out	0x3f, r0	; 63
     9e0:	cd bf       	out	0x3d, r28	; 61
     9e2:	df 91       	pop	r29
     9e4:	cf 91       	pop	r28
     9e6:	1f 91       	pop	r17
     9e8:	0f 91       	pop	r16
     9ea:	ff 90       	pop	r15
     9ec:	ef 90       	pop	r14
     9ee:	df 90       	pop	r13
     9f0:	cf 90       	pop	r12
     9f2:	bf 90       	pop	r11
     9f4:	af 90       	pop	r10
     9f6:	9f 90       	pop	r9
     9f8:	8f 90       	pop	r8
     9fa:	7f 90       	pop	r7
     9fc:	6f 90       	pop	r6
     9fe:	5f 90       	pop	r5
     a00:	4f 90       	pop	r4
     a02:	3f 90       	pop	r3
     a04:	2f 90       	pop	r2
     a06:	08 95       	ret

00000a08 <motor_set_gain>:

void motor_set_gain(int gain_choise){
	switch (gain_choise){
     a08:	81 30       	cpi	r24, 0x01	; 1
     a0a:	91 05       	cpc	r25, r1
     a0c:	61 f1       	breq	.+88     	; 0xa66 <motor_set_gain+0x5e>
     a0e:	82 30       	cpi	r24, 0x02	; 2
     a10:	91 05       	cpc	r25, r1
     a12:	09 f4       	brne	.+2      	; 0xa16 <motor_set_gain+0xe>
     a14:	4d c0       	rjmp	.+154    	; 0xab0 <motor_set_gain+0xa8>
     a16:	89 2b       	or	r24, r25
     a18:	09 f0       	breq	.+2      	; 0xa1c <motor_set_gain+0x14>
     a1a:	66 c0       	rjmp	.+204    	; 0xae8 <motor_set_gain+0xe0>
		case 0:
			kp = 1.2;
     a1c:	8a e9       	ldi	r24, 0x9A	; 154
     a1e:	99 e9       	ldi	r25, 0x99	; 153
     a20:	a9 e9       	ldi	r26, 0x99	; 153
     a22:	bf e3       	ldi	r27, 0x3F	; 63
     a24:	80 93 14 02 	sts	0x0214, r24
     a28:	90 93 15 02 	sts	0x0215, r25
     a2c:	a0 93 16 02 	sts	0x0216, r26
     a30:	b0 93 17 02 	sts	0x0217, r27
			kd = 0.2;
     a34:	8d ec       	ldi	r24, 0xCD	; 205
     a36:	9c ec       	ldi	r25, 0xCC	; 204
     a38:	ac e4       	ldi	r26, 0x4C	; 76
     a3a:	be e3       	ldi	r27, 0x3E	; 62
     a3c:	80 93 10 02 	sts	0x0210, r24
     a40:	90 93 11 02 	sts	0x0211, r25
     a44:	a0 93 12 02 	sts	0x0212, r26
     a48:	b0 93 13 02 	sts	0x0213, r27
			ki = 0.8;
     a4c:	8d ec       	ldi	r24, 0xCD	; 205
     a4e:	9c ec       	ldi	r25, 0xCC	; 204
     a50:	ac e4       	ldi	r26, 0x4C	; 76
     a52:	bf e3       	ldi	r27, 0x3F	; 63
     a54:	80 93 0c 02 	sts	0x020C, r24
     a58:	90 93 0d 02 	sts	0x020D, r25
     a5c:	a0 93 0e 02 	sts	0x020E, r26
     a60:	b0 93 0f 02 	sts	0x020F, r27
			break;
     a64:	08 95       	ret
		case 1:
			kp = 0.05;
     a66:	8d ec       	ldi	r24, 0xCD	; 205
     a68:	9c ec       	ldi	r25, 0xCC	; 204
     a6a:	ac e4       	ldi	r26, 0x4C	; 76
     a6c:	bd e3       	ldi	r27, 0x3D	; 61
     a6e:	80 93 14 02 	sts	0x0214, r24
     a72:	90 93 15 02 	sts	0x0215, r25
     a76:	a0 93 16 02 	sts	0x0216, r26
     a7a:	b0 93 17 02 	sts	0x0217, r27
			kd = 0.2;
     a7e:	8d ec       	ldi	r24, 0xCD	; 205
     a80:	9c ec       	ldi	r25, 0xCC	; 204
     a82:	ac e4       	ldi	r26, 0x4C	; 76
     a84:	be e3       	ldi	r27, 0x3E	; 62
     a86:	80 93 10 02 	sts	0x0210, r24
     a8a:	90 93 11 02 	sts	0x0211, r25
     a8e:	a0 93 12 02 	sts	0x0212, r26
     a92:	b0 93 13 02 	sts	0x0213, r27
			ki = 0.8;
     a96:	8d ec       	ldi	r24, 0xCD	; 205
     a98:	9c ec       	ldi	r25, 0xCC	; 204
     a9a:	ac e4       	ldi	r26, 0x4C	; 76
     a9c:	bf e3       	ldi	r27, 0x3F	; 63
     a9e:	80 93 0c 02 	sts	0x020C, r24
     aa2:	90 93 0d 02 	sts	0x020D, r25
     aa6:	a0 93 0e 02 	sts	0x020E, r26
     aaa:	b0 93 0f 02 	sts	0x020F, r27
			break;
     aae:	08 95       	ret
		case 2:
			kp = 2.0;
     ab0:	80 e0       	ldi	r24, 0x00	; 0
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	a0 e0       	ldi	r26, 0x00	; 0
     ab6:	b0 e4       	ldi	r27, 0x40	; 64
     ab8:	80 93 14 02 	sts	0x0214, r24
     abc:	90 93 15 02 	sts	0x0215, r25
     ac0:	a0 93 16 02 	sts	0x0216, r26
     ac4:	b0 93 17 02 	sts	0x0217, r27
			kd = 0.0;
     ac8:	10 92 10 02 	sts	0x0210, r1
     acc:	10 92 11 02 	sts	0x0211, r1
     ad0:	10 92 12 02 	sts	0x0212, r1
     ad4:	10 92 13 02 	sts	0x0213, r1
			ki = 0.0;
     ad8:	10 92 0c 02 	sts	0x020C, r1
     adc:	10 92 0d 02 	sts	0x020D, r1
     ae0:	10 92 0e 02 	sts	0x020E, r1
     ae4:	10 92 0f 02 	sts	0x020F, r1
     ae8:	08 95       	ret

00000aea <motor_tune_gain>:
			break;
	}
}

void motor_tune_gain(int gain_choise, int gain_val){
	switch(gain_choise){
     aea:	84 30       	cpi	r24, 0x04	; 4
     aec:	91 05       	cpc	r25, r1
     aee:	c1 f0       	breq	.+48     	; 0xb20 <motor_tune_gain+0x36>
     af0:	85 30       	cpi	r24, 0x05	; 5
     af2:	91 05       	cpc	r25, r1
     af4:	41 f1       	breq	.+80     	; 0xb46 <motor_tune_gain+0x5c>
     af6:	03 97       	sbiw	r24, 0x03	; 3
     af8:	c1 f5       	brne	.+112    	; 0xb6a <motor_tune_gain+0x80>
		case 3:
			kp = (float)(gain_val / 100.0);
     afa:	88 27       	eor	r24, r24
     afc:	77 fd       	sbrc	r23, 7
     afe:	80 95       	com	r24
     b00:	98 2f       	mov	r25, r24
     b02:	cf d2       	rcall	.+1438   	; 0x10a2 <__floatsisf>
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	48 ec       	ldi	r20, 0xC8	; 200
     b0a:	52 e4       	ldi	r21, 0x42	; 66
     b0c:	2f d2       	rcall	.+1118   	; 0xf6c <__divsf3>
     b0e:	60 93 14 02 	sts	0x0214, r22
     b12:	70 93 15 02 	sts	0x0215, r23
     b16:	80 93 16 02 	sts	0x0216, r24
     b1a:	90 93 17 02 	sts	0x0217, r25
			break;
     b1e:	08 95       	ret
		case 4:
			ki = (float)(gain_val / 100.0);
     b20:	88 27       	eor	r24, r24
     b22:	77 fd       	sbrc	r23, 7
     b24:	80 95       	com	r24
     b26:	98 2f       	mov	r25, r24
     b28:	bc d2       	rcall	.+1400   	; 0x10a2 <__floatsisf>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	48 ec       	ldi	r20, 0xC8	; 200
     b30:	52 e4       	ldi	r21, 0x42	; 66
     b32:	1c d2       	rcall	.+1080   	; 0xf6c <__divsf3>
     b34:	60 93 0c 02 	sts	0x020C, r22
     b38:	70 93 0d 02 	sts	0x020D, r23
     b3c:	80 93 0e 02 	sts	0x020E, r24
     b40:	90 93 0f 02 	sts	0x020F, r25
			break;
     b44:	08 95       	ret
		case 5:
			kd = (float)(gain_val / 100.0);
     b46:	88 27       	eor	r24, r24
     b48:	77 fd       	sbrc	r23, 7
     b4a:	80 95       	com	r24
     b4c:	98 2f       	mov	r25, r24
     b4e:	a9 d2       	rcall	.+1362   	; 0x10a2 <__floatsisf>
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	48 ec       	ldi	r20, 0xC8	; 200
     b56:	52 e4       	ldi	r21, 0x42	; 66
     b58:	09 d2       	rcall	.+1042   	; 0xf6c <__divsf3>
     b5a:	60 93 10 02 	sts	0x0210, r22
     b5e:	70 93 11 02 	sts	0x0211, r23
     b62:	80 93 12 02 	sts	0x0212, r24
     b66:	90 93 13 02 	sts	0x0213, r25
     b6a:	08 95       	ret

00000b6c <pwm_set_signal_period>:
     b6c:	e1 e8       	ldi	r30, 0x81	; 129
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	80 81       	ld	r24, Z
     b72:	82 60       	ori	r24, 0x02	; 2
     b74:	80 83       	st	Z, r24
     b76:	80 81       	ld	r24, Z
     b78:	8b 7f       	andi	r24, 0xFB	; 251
     b7a:	80 83       	st	Z, r24
     b7c:	80 81       	ld	r24, Z
     b7e:	8e 7f       	andi	r24, 0xFE	; 254
     b80:	80 83       	st	Z, r24
     b82:	80 e4       	ldi	r24, 0x40	; 64
     b84:	9c e9       	ldi	r25, 0x9C	; 156
     b86:	90 93 87 00 	sts	0x0087, r25
     b8a:	80 93 86 00 	sts	0x0086, r24
     b8e:	08 95       	ret

00000b90 <pwm_init>:
     b90:	e1 e8       	ldi	r30, 0x81	; 129
     b92:	f0 e0       	ldi	r31, 0x00	; 0
     b94:	80 81       	ld	r24, Z
     b96:	80 61       	ori	r24, 0x10	; 16
     b98:	80 83       	st	Z, r24
     b9a:	80 81       	ld	r24, Z
     b9c:	88 60       	ori	r24, 0x08	; 8
     b9e:	80 83       	st	Z, r24
     ba0:	e0 e8       	ldi	r30, 0x80	; 128
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	80 81       	ld	r24, Z
     ba6:	82 60       	ori	r24, 0x02	; 2
     ba8:	80 83       	st	Z, r24
     baa:	80 81       	ld	r24, Z
     bac:	8e 7f       	andi	r24, 0xFE	; 254
     bae:	80 83       	st	Z, r24
     bb0:	80 81       	ld	r24, Z
     bb2:	80 68       	ori	r24, 0x80	; 128
     bb4:	80 83       	st	Z, r24
     bb6:	80 81       	ld	r24, Z
     bb8:	8f 7b       	andi	r24, 0xBF	; 191
     bba:	80 83       	st	Z, r24
     bbc:	d7 df       	rcall	.-82     	; 0xb6c <pwm_set_signal_period>
     bbe:	25 9a       	sbi	0x04, 5	; 4
     bc0:	88 eb       	ldi	r24, 0xB8	; 184
     bc2:	9b e0       	ldi	r25, 0x0B	; 11
     bc4:	90 93 89 00 	sts	0x0089, r25
     bc8:	80 93 88 00 	sts	0x0088, r24
     bcc:	08 95       	ret

00000bce <pwm_set_pulse_width>:
     bce:	cf 92       	push	r12
     bd0:	df 92       	push	r13
     bd2:	ef 92       	push	r14
     bd4:	ff 92       	push	r15
     bd6:	6b 01       	movw	r12, r22
     bd8:	7c 01       	movw	r14, r24
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	41 e6       	ldi	r20, 0x61	; 97
     be0:	54 e4       	ldi	r21, 0x44	; 68
     be2:	c0 d1       	rcall	.+896    	; 0xf64 <__cmpsf2>
     be4:	88 23       	and	r24, r24
     be6:	54 f0       	brlt	.+20     	; 0xbfc <pwm_set_pulse_width+0x2e>
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e4       	ldi	r19, 0x40	; 64
     bec:	43 e0       	ldi	r20, 0x03	; 3
     bee:	55 e4       	ldi	r21, 0x45	; 69
     bf0:	c7 01       	movw	r24, r14
     bf2:	b6 01       	movw	r22, r12
     bf4:	06 d3       	rcall	.+1548   	; 0x1202 <__gesf2>
     bf6:	18 16       	cp	r1, r24
     bf8:	54 f0       	brlt	.+20     	; 0xc0e <pwm_set_pulse_width+0x40>
     bfa:	12 c0       	rjmp	.+36     	; 0xc20 <pwm_set_pulse_width+0x52>
     bfc:	0f 2e       	mov	r0, r31
     bfe:	c1 2c       	mov	r12, r1
     c00:	d1 2c       	mov	r13, r1
     c02:	f1 e6       	ldi	r31, 0x61	; 97
     c04:	ef 2e       	mov	r14, r31
     c06:	f4 e4       	ldi	r31, 0x44	; 68
     c08:	ff 2e       	mov	r15, r31
     c0a:	f0 2d       	mov	r31, r0
     c0c:	09 c0       	rjmp	.+18     	; 0xc20 <pwm_set_pulse_width+0x52>
     c0e:	0f 2e       	mov	r0, r31
     c10:	c1 2c       	mov	r12, r1
     c12:	f0 e4       	ldi	r31, 0x40	; 64
     c14:	df 2e       	mov	r13, r31
     c16:	f3 e0       	ldi	r31, 0x03	; 3
     c18:	ef 2e       	mov	r14, r31
     c1a:	f5 e4       	ldi	r31, 0x45	; 69
     c1c:	ff 2e       	mov	r15, r31
     c1e:	f0 2d       	mov	r31, r0
     c20:	20 e0       	ldi	r18, 0x00	; 0
     c22:	30 e4       	ldi	r19, 0x40	; 64
     c24:	4c e9       	ldi	r20, 0x9C	; 156
     c26:	56 e4       	ldi	r21, 0x46	; 70
     c28:	c7 01       	movw	r24, r14
     c2a:	b6 01       	movw	r22, r12
     c2c:	9f d1       	rcall	.+830    	; 0xf6c <__divsf3>
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	34 e2       	ldi	r19, 0x24	; 36
     c32:	44 e7       	ldi	r20, 0x74	; 116
     c34:	5b e4       	ldi	r21, 0x4B	; 75
     c36:	e9 d2       	rcall	.+1490   	; 0x120a <__mulsf3>
     c38:	20 e0       	ldi	r18, 0x00	; 0
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	40 e0       	ldi	r20, 0x00	; 0
     c3e:	5e e3       	ldi	r21, 0x3E	; 62
     c40:	e4 d2       	rcall	.+1480   	; 0x120a <__mulsf3>
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	48 e4       	ldi	r20, 0x48	; 72
     c48:	52 e4       	ldi	r21, 0x42	; 66
     c4a:	90 d1       	rcall	.+800    	; 0xf6c <__divsf3>
     c4c:	f7 d1       	rcall	.+1006   	; 0x103c <__fixsfsi>
     c4e:	70 93 89 00 	sts	0x0089, r23
     c52:	60 93 88 00 	sts	0x0088, r22
     c56:	ff 90       	pop	r15
     c58:	ef 90       	pop	r14
     c5a:	df 90       	pop	r13
     c5c:	cf 90       	pop	r12
     c5e:	08 95       	ret

00000c60 <pwm_scale_joystick_val>:
     c60:	2c eb       	ldi	r18, 0xBC	; 188
     c62:	36 e9       	ldi	r19, 0x96	; 150
     c64:	46 e9       	ldi	r20, 0x96	; 150
     c66:	50 e4       	ldi	r21, 0x40	; 64
     c68:	d0 d2       	rcall	.+1440   	; 0x120a <__mulsf3>
     c6a:	20 e0       	ldi	r18, 0x00	; 0
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	41 e6       	ldi	r20, 0x61	; 97
     c70:	54 e4       	ldi	r21, 0x44	; 68
     c72:	14 c1       	rjmp	.+552    	; 0xe9c <__addsf3>
     c74:	08 95       	ret

00000c76 <spi_init>:
     c76:	84 b1       	in	r24, 0x04	; 4
     c78:	87 68       	ori	r24, 0x87	; 135
     c7a:	84 b9       	out	0x04, r24	; 4
     c7c:	85 b1       	in	r24, 0x05	; 5
     c7e:	81 68       	ori	r24, 0x81	; 129
     c80:	85 b9       	out	0x05, r24	; 5
     c82:	81 e5       	ldi	r24, 0x51	; 81
     c84:	8c bd       	out	0x2c, r24	; 44
     c86:	08 95       	ret

00000c88 <spi_read>:
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	2a 97       	sbiw	r28, 0x0a	; 10
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	de bf       	out	0x3e, r29	; 62
     c98:	0f be       	out	0x3f, r0	; 63
     c9a:	cd bf       	out	0x3d, r28	; 61
     c9c:	66 23       	and	r22, r22
     c9e:	89 f0       	breq	.+34     	; 0xcc2 <spi_read+0x3a>
     ca0:	fe 01       	movw	r30, r28
     ca2:	31 96       	adiw	r30, 0x01	; 1
     ca4:	a8 2f       	mov	r26, r24
     ca6:	b9 2f       	mov	r27, r25
     ca8:	cf 01       	movw	r24, r30
     caa:	86 0f       	add	r24, r22
     cac:	91 1d       	adc	r25, r1
     cae:	21 91       	ld	r18, Z+
     cb0:	2e bd       	out	0x2e, r18	; 46
     cb2:	0d b4       	in	r0, 0x2d	; 45
     cb4:	07 fe       	sbrs	r0, 7
     cb6:	fd cf       	rjmp	.-6      	; 0xcb2 <spi_read+0x2a>
     cb8:	2e b5       	in	r18, 0x2e	; 46
     cba:	2d 93       	st	X+, r18
     cbc:	e8 17       	cp	r30, r24
     cbe:	f9 07       	cpc	r31, r25
     cc0:	b1 f7       	brne	.-20     	; 0xcae <spi_read+0x26>
     cc2:	2a 96       	adiw	r28, 0x0a	; 10
     cc4:	0f b6       	in	r0, 0x3f	; 63
     cc6:	f8 94       	cli
     cc8:	de bf       	out	0x3e, r29	; 62
     cca:	0f be       	out	0x3f, r0	; 63
     ccc:	cd bf       	out	0x3d, r28	; 61
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	08 95       	ret

00000cd4 <spi_write>:
     cd4:	26 2f       	mov	r18, r22
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	12 16       	cp	r1, r18
     cda:	13 06       	cpc	r1, r19
     cdc:	74 f4       	brge	.+28     	; 0xcfa <spi_write+0x26>
     cde:	e8 2f       	mov	r30, r24
     ce0:	f9 2f       	mov	r31, r25
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	41 91       	ld	r20, Z+
     ce8:	4e bd       	out	0x2e, r20	; 46
     cea:	0d b4       	in	r0, 0x2d	; 45
     cec:	07 fe       	sbrs	r0, 7
     cee:	fd cf       	rjmp	.-6      	; 0xcea <spi_write+0x16>
     cf0:	4e b5       	in	r20, 0x2e	; 46
     cf2:	01 96       	adiw	r24, 0x01	; 1
     cf4:	82 17       	cp	r24, r18
     cf6:	93 07       	cpc	r25, r19
     cf8:	b4 f3       	brlt	.-20     	; 0xce6 <spi_write+0x12>
     cfa:	08 95       	ret

00000cfc <TWI_Master_Initialise>:
     cfc:	8c e0       	ldi	r24, 0x0C	; 12
     cfe:	80 93 b8 00 	sts	0x00B8, r24
     d02:	8f ef       	ldi	r24, 0xFF	; 255
     d04:	80 93 bb 00 	sts	0x00BB, r24
     d08:	84 e0       	ldi	r24, 0x04	; 4
     d0a:	80 93 bc 00 	sts	0x00BC, r24
     d0e:	08 95       	ret

00000d10 <TWI_Start_Transceiver_With_Data>:
     d10:	ec eb       	ldi	r30, 0xBC	; 188
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	20 81       	ld	r18, Z
     d16:	20 fd       	sbrc	r18, 0
     d18:	fd cf       	rjmp	.-6      	; 0xd14 <TWI_Start_Transceiver_With_Data+0x4>
     d1a:	60 93 ba 02 	sts	0x02BA, r22
     d1e:	fc 01       	movw	r30, r24
     d20:	20 81       	ld	r18, Z
     d22:	20 93 bb 02 	sts	0x02BB, r18
     d26:	20 fd       	sbrc	r18, 0
     d28:	0c c0       	rjmp	.+24     	; 0xd42 <TWI_Start_Transceiver_With_Data+0x32>
     d2a:	62 30       	cpi	r22, 0x02	; 2
     d2c:	50 f0       	brcs	.+20     	; 0xd42 <TWI_Start_Transceiver_With_Data+0x32>
     d2e:	dc 01       	movw	r26, r24
     d30:	11 96       	adiw	r26, 0x01	; 1
     d32:	ec eb       	ldi	r30, 0xBC	; 188
     d34:	f2 e0       	ldi	r31, 0x02	; 2
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	9d 91       	ld	r25, X+
     d3a:	91 93       	st	Z+, r25
     d3c:	8f 5f       	subi	r24, 0xFF	; 255
     d3e:	86 13       	cpse	r24, r22
     d40:	fb cf       	rjmp	.-10     	; 0xd38 <TWI_Start_Transceiver_With_Data+0x28>
     d42:	10 92 b9 02 	sts	0x02B9, r1
     d46:	88 ef       	ldi	r24, 0xF8	; 248
     d48:	80 93 18 02 	sts	0x0218, r24
     d4c:	85 ea       	ldi	r24, 0xA5	; 165
     d4e:	80 93 bc 00 	sts	0x00BC, r24
     d52:	08 95       	ret

00000d54 <__vector_39>:
     d54:	1f 92       	push	r1
     d56:	0f 92       	push	r0
     d58:	0f b6       	in	r0, 0x3f	; 63
     d5a:	0f 92       	push	r0
     d5c:	11 24       	eor	r1, r1
     d5e:	0b b6       	in	r0, 0x3b	; 59
     d60:	0f 92       	push	r0
     d62:	2f 93       	push	r18
     d64:	3f 93       	push	r19
     d66:	8f 93       	push	r24
     d68:	9f 93       	push	r25
     d6a:	af 93       	push	r26
     d6c:	bf 93       	push	r27
     d6e:	ef 93       	push	r30
     d70:	ff 93       	push	r31
     d72:	80 91 b9 00 	lds	r24, 0x00B9
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	fc 01       	movw	r30, r24
     d7a:	38 97       	sbiw	r30, 0x08	; 8
     d7c:	e1 35       	cpi	r30, 0x51	; 81
     d7e:	f1 05       	cpc	r31, r1
     d80:	08 f0       	brcs	.+2      	; 0xd84 <__vector_39+0x30>
     d82:	55 c0       	rjmp	.+170    	; 0xe2e <__vector_39+0xda>
     d84:	ee 58       	subi	r30, 0x8E	; 142
     d86:	ff 4f       	sbci	r31, 0xFF	; 255
     d88:	a3 c2       	rjmp	.+1350   	; 0x12d0 <__tablejump2__>
     d8a:	10 92 b8 02 	sts	0x02B8, r1
     d8e:	e0 91 b8 02 	lds	r30, 0x02B8
     d92:	80 91 ba 02 	lds	r24, 0x02BA
     d96:	e8 17       	cp	r30, r24
     d98:	70 f4       	brcc	.+28     	; 0xdb6 <__vector_39+0x62>
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	8e 0f       	add	r24, r30
     d9e:	80 93 b8 02 	sts	0x02B8, r24
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	e5 54       	subi	r30, 0x45	; 69
     da6:	fd 4f       	sbci	r31, 0xFD	; 253
     da8:	80 81       	ld	r24, Z
     daa:	80 93 bb 00 	sts	0x00BB, r24
     dae:	85 e8       	ldi	r24, 0x85	; 133
     db0:	80 93 bc 00 	sts	0x00BC, r24
     db4:	43 c0       	rjmp	.+134    	; 0xe3c <__vector_39+0xe8>
     db6:	80 91 b9 02 	lds	r24, 0x02B9
     dba:	81 60       	ori	r24, 0x01	; 1
     dbc:	80 93 b9 02 	sts	0x02B9, r24
     dc0:	84 e9       	ldi	r24, 0x94	; 148
     dc2:	80 93 bc 00 	sts	0x00BC, r24
     dc6:	3a c0       	rjmp	.+116    	; 0xe3c <__vector_39+0xe8>
     dc8:	e0 91 b8 02 	lds	r30, 0x02B8
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	8e 0f       	add	r24, r30
     dd0:	80 93 b8 02 	sts	0x02B8, r24
     dd4:	80 91 bb 00 	lds	r24, 0x00BB
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	e5 54       	subi	r30, 0x45	; 69
     ddc:	fd 4f       	sbci	r31, 0xFD	; 253
     dde:	80 83       	st	Z, r24
     de0:	20 91 b8 02 	lds	r18, 0x02B8
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	80 91 ba 02 	lds	r24, 0x02BA
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	01 97       	sbiw	r24, 0x01	; 1
     dee:	28 17       	cp	r18, r24
     df0:	39 07       	cpc	r19, r25
     df2:	24 f4       	brge	.+8      	; 0xdfc <__vector_39+0xa8>
     df4:	85 ec       	ldi	r24, 0xC5	; 197
     df6:	80 93 bc 00 	sts	0x00BC, r24
     dfa:	20 c0       	rjmp	.+64     	; 0xe3c <__vector_39+0xe8>
     dfc:	85 e8       	ldi	r24, 0x85	; 133
     dfe:	80 93 bc 00 	sts	0x00BC, r24
     e02:	1c c0       	rjmp	.+56     	; 0xe3c <__vector_39+0xe8>
     e04:	80 91 bb 00 	lds	r24, 0x00BB
     e08:	e0 91 b8 02 	lds	r30, 0x02B8
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	e5 54       	subi	r30, 0x45	; 69
     e10:	fd 4f       	sbci	r31, 0xFD	; 253
     e12:	80 83       	st	Z, r24
     e14:	80 91 b9 02 	lds	r24, 0x02B9
     e18:	81 60       	ori	r24, 0x01	; 1
     e1a:	80 93 b9 02 	sts	0x02B9, r24
     e1e:	84 e9       	ldi	r24, 0x94	; 148
     e20:	80 93 bc 00 	sts	0x00BC, r24
     e24:	0b c0       	rjmp	.+22     	; 0xe3c <__vector_39+0xe8>
     e26:	85 ea       	ldi	r24, 0xA5	; 165
     e28:	80 93 bc 00 	sts	0x00BC, r24
     e2c:	07 c0       	rjmp	.+14     	; 0xe3c <__vector_39+0xe8>
     e2e:	80 91 b9 00 	lds	r24, 0x00B9
     e32:	80 93 18 02 	sts	0x0218, r24
     e36:	84 e0       	ldi	r24, 0x04	; 4
     e38:	80 93 bc 00 	sts	0x00BC, r24
     e3c:	ff 91       	pop	r31
     e3e:	ef 91       	pop	r30
     e40:	bf 91       	pop	r27
     e42:	af 91       	pop	r26
     e44:	9f 91       	pop	r25
     e46:	8f 91       	pop	r24
     e48:	3f 91       	pop	r19
     e4a:	2f 91       	pop	r18
     e4c:	0f 90       	pop	r0
     e4e:	0b be       	out	0x3b, r0	; 59
     e50:	0f 90       	pop	r0
     e52:	0f be       	out	0x3f, r0	; 63
     e54:	0f 90       	pop	r0
     e56:	1f 90       	pop	r1
     e58:	18 95       	reti

00000e5a <USART_Transmit>:
     e5a:	e0 ec       	ldi	r30, 0xC0	; 192
     e5c:	f0 e0       	ldi	r31, 0x00	; 0
     e5e:	90 81       	ld	r25, Z
     e60:	95 ff       	sbrs	r25, 5
     e62:	fd cf       	rjmp	.-6      	; 0xe5e <USART_Transmit+0x4>
     e64:	80 93 c6 00 	sts	0x00C6, r24
     e68:	08 95       	ret

00000e6a <USART_Receive>:
     e6a:	e0 ec       	ldi	r30, 0xC0	; 192
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
     e6e:	80 81       	ld	r24, Z
     e70:	88 23       	and	r24, r24
     e72:	ec f3       	brlt	.-6      	; 0xe6e <USART_Receive+0x4>
     e74:	80 91 c6 00 	lds	r24, 0x00C6
     e78:	08 95       	ret

00000e7a <USART_Init>:
     e7a:	90 93 c5 00 	sts	0x00C5, r25
     e7e:	80 93 c4 00 	sts	0x00C4, r24
     e82:	88 e1       	ldi	r24, 0x18	; 24
     e84:	80 93 c1 00 	sts	0x00C1, r24
     e88:	8e e0       	ldi	r24, 0x0E	; 14
     e8a:	80 93 c2 00 	sts	0x00C2, r24
     e8e:	65 e3       	ldi	r22, 0x35	; 53
     e90:	77 e0       	ldi	r23, 0x07	; 7
     e92:	8d e2       	ldi	r24, 0x2D	; 45
     e94:	97 e0       	ldi	r25, 0x07	; 7
     e96:	22 c2       	rjmp	.+1092   	; 0x12dc <fdevopen>
     e98:	08 95       	ret

00000e9a <__subsf3>:
     e9a:	50 58       	subi	r21, 0x80	; 128

00000e9c <__addsf3>:
     e9c:	bb 27       	eor	r27, r27
     e9e:	aa 27       	eor	r26, r26
     ea0:	0e d0       	rcall	.+28     	; 0xebe <__addsf3x>
     ea2:	75 c1       	rjmp	.+746    	; 0x118e <__fp_round>
     ea4:	66 d1       	rcall	.+716    	; 0x1172 <__fp_pscA>
     ea6:	30 f0       	brcs	.+12     	; 0xeb4 <__addsf3+0x18>
     ea8:	6b d1       	rcall	.+726    	; 0x1180 <__fp_pscB>
     eaa:	20 f0       	brcs	.+8      	; 0xeb4 <__addsf3+0x18>
     eac:	31 f4       	brne	.+12     	; 0xeba <__addsf3+0x1e>
     eae:	9f 3f       	cpi	r25, 0xFF	; 255
     eb0:	11 f4       	brne	.+4      	; 0xeb6 <__addsf3+0x1a>
     eb2:	1e f4       	brtc	.+6      	; 0xeba <__addsf3+0x1e>
     eb4:	5b c1       	rjmp	.+694    	; 0x116c <__fp_nan>
     eb6:	0e f4       	brtc	.+2      	; 0xeba <__addsf3+0x1e>
     eb8:	e0 95       	com	r30
     eba:	e7 fb       	bst	r30, 7
     ebc:	51 c1       	rjmp	.+674    	; 0x1160 <__fp_inf>

00000ebe <__addsf3x>:
     ebe:	e9 2f       	mov	r30, r25
     ec0:	77 d1       	rcall	.+750    	; 0x11b0 <__fp_split3>
     ec2:	80 f3       	brcs	.-32     	; 0xea4 <__addsf3+0x8>
     ec4:	ba 17       	cp	r27, r26
     ec6:	62 07       	cpc	r22, r18
     ec8:	73 07       	cpc	r23, r19
     eca:	84 07       	cpc	r24, r20
     ecc:	95 07       	cpc	r25, r21
     ece:	18 f0       	brcs	.+6      	; 0xed6 <__addsf3x+0x18>
     ed0:	71 f4       	brne	.+28     	; 0xeee <__addsf3x+0x30>
     ed2:	9e f5       	brtc	.+102    	; 0xf3a <__addsf3x+0x7c>
     ed4:	8f c1       	rjmp	.+798    	; 0x11f4 <__fp_zero>
     ed6:	0e f4       	brtc	.+2      	; 0xeda <__addsf3x+0x1c>
     ed8:	e0 95       	com	r30
     eda:	0b 2e       	mov	r0, r27
     edc:	ba 2f       	mov	r27, r26
     ede:	a0 2d       	mov	r26, r0
     ee0:	0b 01       	movw	r0, r22
     ee2:	b9 01       	movw	r22, r18
     ee4:	90 01       	movw	r18, r0
     ee6:	0c 01       	movw	r0, r24
     ee8:	ca 01       	movw	r24, r20
     eea:	a0 01       	movw	r20, r0
     eec:	11 24       	eor	r1, r1
     eee:	ff 27       	eor	r31, r31
     ef0:	59 1b       	sub	r21, r25
     ef2:	99 f0       	breq	.+38     	; 0xf1a <__addsf3x+0x5c>
     ef4:	59 3f       	cpi	r21, 0xF9	; 249
     ef6:	50 f4       	brcc	.+20     	; 0xf0c <__addsf3x+0x4e>
     ef8:	50 3e       	cpi	r21, 0xE0	; 224
     efa:	68 f1       	brcs	.+90     	; 0xf56 <__addsf3x+0x98>
     efc:	1a 16       	cp	r1, r26
     efe:	f0 40       	sbci	r31, 0x00	; 0
     f00:	a2 2f       	mov	r26, r18
     f02:	23 2f       	mov	r18, r19
     f04:	34 2f       	mov	r19, r20
     f06:	44 27       	eor	r20, r20
     f08:	58 5f       	subi	r21, 0xF8	; 248
     f0a:	f3 cf       	rjmp	.-26     	; 0xef2 <__addsf3x+0x34>
     f0c:	46 95       	lsr	r20
     f0e:	37 95       	ror	r19
     f10:	27 95       	ror	r18
     f12:	a7 95       	ror	r26
     f14:	f0 40       	sbci	r31, 0x00	; 0
     f16:	53 95       	inc	r21
     f18:	c9 f7       	brne	.-14     	; 0xf0c <__addsf3x+0x4e>
     f1a:	7e f4       	brtc	.+30     	; 0xf3a <__addsf3x+0x7c>
     f1c:	1f 16       	cp	r1, r31
     f1e:	ba 0b       	sbc	r27, r26
     f20:	62 0b       	sbc	r22, r18
     f22:	73 0b       	sbc	r23, r19
     f24:	84 0b       	sbc	r24, r20
     f26:	ba f0       	brmi	.+46     	; 0xf56 <__addsf3x+0x98>
     f28:	91 50       	subi	r25, 0x01	; 1
     f2a:	a1 f0       	breq	.+40     	; 0xf54 <__addsf3x+0x96>
     f2c:	ff 0f       	add	r31, r31
     f2e:	bb 1f       	adc	r27, r27
     f30:	66 1f       	adc	r22, r22
     f32:	77 1f       	adc	r23, r23
     f34:	88 1f       	adc	r24, r24
     f36:	c2 f7       	brpl	.-16     	; 0xf28 <__addsf3x+0x6a>
     f38:	0e c0       	rjmp	.+28     	; 0xf56 <__addsf3x+0x98>
     f3a:	ba 0f       	add	r27, r26
     f3c:	62 1f       	adc	r22, r18
     f3e:	73 1f       	adc	r23, r19
     f40:	84 1f       	adc	r24, r20
     f42:	48 f4       	brcc	.+18     	; 0xf56 <__addsf3x+0x98>
     f44:	87 95       	ror	r24
     f46:	77 95       	ror	r23
     f48:	67 95       	ror	r22
     f4a:	b7 95       	ror	r27
     f4c:	f7 95       	ror	r31
     f4e:	9e 3f       	cpi	r25, 0xFE	; 254
     f50:	08 f0       	brcs	.+2      	; 0xf54 <__addsf3x+0x96>
     f52:	b3 cf       	rjmp	.-154    	; 0xeba <__addsf3+0x1e>
     f54:	93 95       	inc	r25
     f56:	88 0f       	add	r24, r24
     f58:	08 f0       	brcs	.+2      	; 0xf5c <__addsf3x+0x9e>
     f5a:	99 27       	eor	r25, r25
     f5c:	ee 0f       	add	r30, r30
     f5e:	97 95       	ror	r25
     f60:	87 95       	ror	r24
     f62:	08 95       	ret

00000f64 <__cmpsf2>:
     f64:	d9 d0       	rcall	.+434    	; 0x1118 <__fp_cmp>
     f66:	08 f4       	brcc	.+2      	; 0xf6a <__cmpsf2+0x6>
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	08 95       	ret

00000f6c <__divsf3>:
     f6c:	0c d0       	rcall	.+24     	; 0xf86 <__divsf3x>
     f6e:	0f c1       	rjmp	.+542    	; 0x118e <__fp_round>
     f70:	07 d1       	rcall	.+526    	; 0x1180 <__fp_pscB>
     f72:	40 f0       	brcs	.+16     	; 0xf84 <__divsf3+0x18>
     f74:	fe d0       	rcall	.+508    	; 0x1172 <__fp_pscA>
     f76:	30 f0       	brcs	.+12     	; 0xf84 <__divsf3+0x18>
     f78:	21 f4       	brne	.+8      	; 0xf82 <__divsf3+0x16>
     f7a:	5f 3f       	cpi	r21, 0xFF	; 255
     f7c:	19 f0       	breq	.+6      	; 0xf84 <__divsf3+0x18>
     f7e:	f0 c0       	rjmp	.+480    	; 0x1160 <__fp_inf>
     f80:	51 11       	cpse	r21, r1
     f82:	39 c1       	rjmp	.+626    	; 0x11f6 <__fp_szero>
     f84:	f3 c0       	rjmp	.+486    	; 0x116c <__fp_nan>

00000f86 <__divsf3x>:
     f86:	14 d1       	rcall	.+552    	; 0x11b0 <__fp_split3>
     f88:	98 f3       	brcs	.-26     	; 0xf70 <__divsf3+0x4>

00000f8a <__divsf3_pse>:
     f8a:	99 23       	and	r25, r25
     f8c:	c9 f3       	breq	.-14     	; 0xf80 <__divsf3+0x14>
     f8e:	55 23       	and	r21, r21
     f90:	b1 f3       	breq	.-20     	; 0xf7e <__divsf3+0x12>
     f92:	95 1b       	sub	r25, r21
     f94:	55 0b       	sbc	r21, r21
     f96:	bb 27       	eor	r27, r27
     f98:	aa 27       	eor	r26, r26
     f9a:	62 17       	cp	r22, r18
     f9c:	73 07       	cpc	r23, r19
     f9e:	84 07       	cpc	r24, r20
     fa0:	38 f0       	brcs	.+14     	; 0xfb0 <__divsf3_pse+0x26>
     fa2:	9f 5f       	subi	r25, 0xFF	; 255
     fa4:	5f 4f       	sbci	r21, 0xFF	; 255
     fa6:	22 0f       	add	r18, r18
     fa8:	33 1f       	adc	r19, r19
     faa:	44 1f       	adc	r20, r20
     fac:	aa 1f       	adc	r26, r26
     fae:	a9 f3       	breq	.-22     	; 0xf9a <__divsf3_pse+0x10>
     fb0:	33 d0       	rcall	.+102    	; 0x1018 <__divsf3_pse+0x8e>
     fb2:	0e 2e       	mov	r0, r30
     fb4:	3a f0       	brmi	.+14     	; 0xfc4 <__divsf3_pse+0x3a>
     fb6:	e0 e8       	ldi	r30, 0x80	; 128
     fb8:	30 d0       	rcall	.+96     	; 0x101a <__divsf3_pse+0x90>
     fba:	91 50       	subi	r25, 0x01	; 1
     fbc:	50 40       	sbci	r21, 0x00	; 0
     fbe:	e6 95       	lsr	r30
     fc0:	00 1c       	adc	r0, r0
     fc2:	ca f7       	brpl	.-14     	; 0xfb6 <__divsf3_pse+0x2c>
     fc4:	29 d0       	rcall	.+82     	; 0x1018 <__divsf3_pse+0x8e>
     fc6:	fe 2f       	mov	r31, r30
     fc8:	27 d0       	rcall	.+78     	; 0x1018 <__divsf3_pse+0x8e>
     fca:	66 0f       	add	r22, r22
     fcc:	77 1f       	adc	r23, r23
     fce:	88 1f       	adc	r24, r24
     fd0:	bb 1f       	adc	r27, r27
     fd2:	26 17       	cp	r18, r22
     fd4:	37 07       	cpc	r19, r23
     fd6:	48 07       	cpc	r20, r24
     fd8:	ab 07       	cpc	r26, r27
     fda:	b0 e8       	ldi	r27, 0x80	; 128
     fdc:	09 f0       	breq	.+2      	; 0xfe0 <__divsf3_pse+0x56>
     fde:	bb 0b       	sbc	r27, r27
     fe0:	80 2d       	mov	r24, r0
     fe2:	bf 01       	movw	r22, r30
     fe4:	ff 27       	eor	r31, r31
     fe6:	93 58       	subi	r25, 0x83	; 131
     fe8:	5f 4f       	sbci	r21, 0xFF	; 255
     fea:	2a f0       	brmi	.+10     	; 0xff6 <__divsf3_pse+0x6c>
     fec:	9e 3f       	cpi	r25, 0xFE	; 254
     fee:	51 05       	cpc	r21, r1
     ff0:	68 f0       	brcs	.+26     	; 0x100c <__divsf3_pse+0x82>
     ff2:	b6 c0       	rjmp	.+364    	; 0x1160 <__fp_inf>
     ff4:	00 c1       	rjmp	.+512    	; 0x11f6 <__fp_szero>
     ff6:	5f 3f       	cpi	r21, 0xFF	; 255
     ff8:	ec f3       	brlt	.-6      	; 0xff4 <__divsf3_pse+0x6a>
     ffa:	98 3e       	cpi	r25, 0xE8	; 232
     ffc:	dc f3       	brlt	.-10     	; 0xff4 <__divsf3_pse+0x6a>
     ffe:	86 95       	lsr	r24
    1000:	77 95       	ror	r23
    1002:	67 95       	ror	r22
    1004:	b7 95       	ror	r27
    1006:	f7 95       	ror	r31
    1008:	9f 5f       	subi	r25, 0xFF	; 255
    100a:	c9 f7       	brne	.-14     	; 0xffe <__divsf3_pse+0x74>
    100c:	88 0f       	add	r24, r24
    100e:	91 1d       	adc	r25, r1
    1010:	96 95       	lsr	r25
    1012:	87 95       	ror	r24
    1014:	97 f9       	bld	r25, 7
    1016:	08 95       	ret
    1018:	e1 e0       	ldi	r30, 0x01	; 1
    101a:	66 0f       	add	r22, r22
    101c:	77 1f       	adc	r23, r23
    101e:	88 1f       	adc	r24, r24
    1020:	bb 1f       	adc	r27, r27
    1022:	62 17       	cp	r22, r18
    1024:	73 07       	cpc	r23, r19
    1026:	84 07       	cpc	r24, r20
    1028:	ba 07       	cpc	r27, r26
    102a:	20 f0       	brcs	.+8      	; 0x1034 <__divsf3_pse+0xaa>
    102c:	62 1b       	sub	r22, r18
    102e:	73 0b       	sbc	r23, r19
    1030:	84 0b       	sbc	r24, r20
    1032:	ba 0b       	sbc	r27, r26
    1034:	ee 1f       	adc	r30, r30
    1036:	88 f7       	brcc	.-30     	; 0x101a <__divsf3_pse+0x90>
    1038:	e0 95       	com	r30
    103a:	08 95       	ret

0000103c <__fixsfsi>:
    103c:	04 d0       	rcall	.+8      	; 0x1046 <__fixunssfsi>
    103e:	68 94       	set
    1040:	b1 11       	cpse	r27, r1
    1042:	d9 c0       	rjmp	.+434    	; 0x11f6 <__fp_szero>
    1044:	08 95       	ret

00001046 <__fixunssfsi>:
    1046:	bc d0       	rcall	.+376    	; 0x11c0 <__fp_splitA>
    1048:	88 f0       	brcs	.+34     	; 0x106c <__fixunssfsi+0x26>
    104a:	9f 57       	subi	r25, 0x7F	; 127
    104c:	90 f0       	brcs	.+36     	; 0x1072 <__fixunssfsi+0x2c>
    104e:	b9 2f       	mov	r27, r25
    1050:	99 27       	eor	r25, r25
    1052:	b7 51       	subi	r27, 0x17	; 23
    1054:	a0 f0       	brcs	.+40     	; 0x107e <__fixunssfsi+0x38>
    1056:	d1 f0       	breq	.+52     	; 0x108c <__fixunssfsi+0x46>
    1058:	66 0f       	add	r22, r22
    105a:	77 1f       	adc	r23, r23
    105c:	88 1f       	adc	r24, r24
    105e:	99 1f       	adc	r25, r25
    1060:	1a f0       	brmi	.+6      	; 0x1068 <__fixunssfsi+0x22>
    1062:	ba 95       	dec	r27
    1064:	c9 f7       	brne	.-14     	; 0x1058 <__fixunssfsi+0x12>
    1066:	12 c0       	rjmp	.+36     	; 0x108c <__fixunssfsi+0x46>
    1068:	b1 30       	cpi	r27, 0x01	; 1
    106a:	81 f0       	breq	.+32     	; 0x108c <__fixunssfsi+0x46>
    106c:	c3 d0       	rcall	.+390    	; 0x11f4 <__fp_zero>
    106e:	b1 e0       	ldi	r27, 0x01	; 1
    1070:	08 95       	ret
    1072:	c0 c0       	rjmp	.+384    	; 0x11f4 <__fp_zero>
    1074:	67 2f       	mov	r22, r23
    1076:	78 2f       	mov	r23, r24
    1078:	88 27       	eor	r24, r24
    107a:	b8 5f       	subi	r27, 0xF8	; 248
    107c:	39 f0       	breq	.+14     	; 0x108c <__fixunssfsi+0x46>
    107e:	b9 3f       	cpi	r27, 0xF9	; 249
    1080:	cc f3       	brlt	.-14     	; 0x1074 <__fixunssfsi+0x2e>
    1082:	86 95       	lsr	r24
    1084:	77 95       	ror	r23
    1086:	67 95       	ror	r22
    1088:	b3 95       	inc	r27
    108a:	d9 f7       	brne	.-10     	; 0x1082 <__fixunssfsi+0x3c>
    108c:	3e f4       	brtc	.+14     	; 0x109c <__fixunssfsi+0x56>
    108e:	90 95       	com	r25
    1090:	80 95       	com	r24
    1092:	70 95       	com	r23
    1094:	61 95       	neg	r22
    1096:	7f 4f       	sbci	r23, 0xFF	; 255
    1098:	8f 4f       	sbci	r24, 0xFF	; 255
    109a:	9f 4f       	sbci	r25, 0xFF	; 255
    109c:	08 95       	ret

0000109e <__floatunsisf>:
    109e:	e8 94       	clt
    10a0:	09 c0       	rjmp	.+18     	; 0x10b4 <__floatsisf+0x12>

000010a2 <__floatsisf>:
    10a2:	97 fb       	bst	r25, 7
    10a4:	3e f4       	brtc	.+14     	; 0x10b4 <__floatsisf+0x12>
    10a6:	90 95       	com	r25
    10a8:	80 95       	com	r24
    10aa:	70 95       	com	r23
    10ac:	61 95       	neg	r22
    10ae:	7f 4f       	sbci	r23, 0xFF	; 255
    10b0:	8f 4f       	sbci	r24, 0xFF	; 255
    10b2:	9f 4f       	sbci	r25, 0xFF	; 255
    10b4:	99 23       	and	r25, r25
    10b6:	a9 f0       	breq	.+42     	; 0x10e2 <__floatsisf+0x40>
    10b8:	f9 2f       	mov	r31, r25
    10ba:	96 e9       	ldi	r25, 0x96	; 150
    10bc:	bb 27       	eor	r27, r27
    10be:	93 95       	inc	r25
    10c0:	f6 95       	lsr	r31
    10c2:	87 95       	ror	r24
    10c4:	77 95       	ror	r23
    10c6:	67 95       	ror	r22
    10c8:	b7 95       	ror	r27
    10ca:	f1 11       	cpse	r31, r1
    10cc:	f8 cf       	rjmp	.-16     	; 0x10be <__floatsisf+0x1c>
    10ce:	fa f4       	brpl	.+62     	; 0x110e <__floatsisf+0x6c>
    10d0:	bb 0f       	add	r27, r27
    10d2:	11 f4       	brne	.+4      	; 0x10d8 <__floatsisf+0x36>
    10d4:	60 ff       	sbrs	r22, 0
    10d6:	1b c0       	rjmp	.+54     	; 0x110e <__floatsisf+0x6c>
    10d8:	6f 5f       	subi	r22, 0xFF	; 255
    10da:	7f 4f       	sbci	r23, 0xFF	; 255
    10dc:	8f 4f       	sbci	r24, 0xFF	; 255
    10de:	9f 4f       	sbci	r25, 0xFF	; 255
    10e0:	16 c0       	rjmp	.+44     	; 0x110e <__floatsisf+0x6c>
    10e2:	88 23       	and	r24, r24
    10e4:	11 f0       	breq	.+4      	; 0x10ea <__floatsisf+0x48>
    10e6:	96 e9       	ldi	r25, 0x96	; 150
    10e8:	11 c0       	rjmp	.+34     	; 0x110c <__floatsisf+0x6a>
    10ea:	77 23       	and	r23, r23
    10ec:	21 f0       	breq	.+8      	; 0x10f6 <__floatsisf+0x54>
    10ee:	9e e8       	ldi	r25, 0x8E	; 142
    10f0:	87 2f       	mov	r24, r23
    10f2:	76 2f       	mov	r23, r22
    10f4:	05 c0       	rjmp	.+10     	; 0x1100 <__floatsisf+0x5e>
    10f6:	66 23       	and	r22, r22
    10f8:	71 f0       	breq	.+28     	; 0x1116 <__floatsisf+0x74>
    10fa:	96 e8       	ldi	r25, 0x86	; 134
    10fc:	86 2f       	mov	r24, r22
    10fe:	70 e0       	ldi	r23, 0x00	; 0
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	2a f0       	brmi	.+10     	; 0x110e <__floatsisf+0x6c>
    1104:	9a 95       	dec	r25
    1106:	66 0f       	add	r22, r22
    1108:	77 1f       	adc	r23, r23
    110a:	88 1f       	adc	r24, r24
    110c:	da f7       	brpl	.-10     	; 0x1104 <__floatsisf+0x62>
    110e:	88 0f       	add	r24, r24
    1110:	96 95       	lsr	r25
    1112:	87 95       	ror	r24
    1114:	97 f9       	bld	r25, 7
    1116:	08 95       	ret

00001118 <__fp_cmp>:
    1118:	99 0f       	add	r25, r25
    111a:	00 08       	sbc	r0, r0
    111c:	55 0f       	add	r21, r21
    111e:	aa 0b       	sbc	r26, r26
    1120:	e0 e8       	ldi	r30, 0x80	; 128
    1122:	fe ef       	ldi	r31, 0xFE	; 254
    1124:	16 16       	cp	r1, r22
    1126:	17 06       	cpc	r1, r23
    1128:	e8 07       	cpc	r30, r24
    112a:	f9 07       	cpc	r31, r25
    112c:	c0 f0       	brcs	.+48     	; 0x115e <__fp_cmp+0x46>
    112e:	12 16       	cp	r1, r18
    1130:	13 06       	cpc	r1, r19
    1132:	e4 07       	cpc	r30, r20
    1134:	f5 07       	cpc	r31, r21
    1136:	98 f0       	brcs	.+38     	; 0x115e <__fp_cmp+0x46>
    1138:	62 1b       	sub	r22, r18
    113a:	73 0b       	sbc	r23, r19
    113c:	84 0b       	sbc	r24, r20
    113e:	95 0b       	sbc	r25, r21
    1140:	39 f4       	brne	.+14     	; 0x1150 <__fp_cmp+0x38>
    1142:	0a 26       	eor	r0, r26
    1144:	61 f0       	breq	.+24     	; 0x115e <__fp_cmp+0x46>
    1146:	23 2b       	or	r18, r19
    1148:	24 2b       	or	r18, r20
    114a:	25 2b       	or	r18, r21
    114c:	21 f4       	brne	.+8      	; 0x1156 <__fp_cmp+0x3e>
    114e:	08 95       	ret
    1150:	0a 26       	eor	r0, r26
    1152:	09 f4       	brne	.+2      	; 0x1156 <__fp_cmp+0x3e>
    1154:	a1 40       	sbci	r26, 0x01	; 1
    1156:	a6 95       	lsr	r26
    1158:	8f ef       	ldi	r24, 0xFF	; 255
    115a:	81 1d       	adc	r24, r1
    115c:	81 1d       	adc	r24, r1
    115e:	08 95       	ret

00001160 <__fp_inf>:
    1160:	97 f9       	bld	r25, 7
    1162:	9f 67       	ori	r25, 0x7F	; 127
    1164:	80 e8       	ldi	r24, 0x80	; 128
    1166:	70 e0       	ldi	r23, 0x00	; 0
    1168:	60 e0       	ldi	r22, 0x00	; 0
    116a:	08 95       	ret

0000116c <__fp_nan>:
    116c:	9f ef       	ldi	r25, 0xFF	; 255
    116e:	80 ec       	ldi	r24, 0xC0	; 192
    1170:	08 95       	ret

00001172 <__fp_pscA>:
    1172:	00 24       	eor	r0, r0
    1174:	0a 94       	dec	r0
    1176:	16 16       	cp	r1, r22
    1178:	17 06       	cpc	r1, r23
    117a:	18 06       	cpc	r1, r24
    117c:	09 06       	cpc	r0, r25
    117e:	08 95       	ret

00001180 <__fp_pscB>:
    1180:	00 24       	eor	r0, r0
    1182:	0a 94       	dec	r0
    1184:	12 16       	cp	r1, r18
    1186:	13 06       	cpc	r1, r19
    1188:	14 06       	cpc	r1, r20
    118a:	05 06       	cpc	r0, r21
    118c:	08 95       	ret

0000118e <__fp_round>:
    118e:	09 2e       	mov	r0, r25
    1190:	03 94       	inc	r0
    1192:	00 0c       	add	r0, r0
    1194:	11 f4       	brne	.+4      	; 0x119a <__fp_round+0xc>
    1196:	88 23       	and	r24, r24
    1198:	52 f0       	brmi	.+20     	; 0x11ae <__fp_round+0x20>
    119a:	bb 0f       	add	r27, r27
    119c:	40 f4       	brcc	.+16     	; 0x11ae <__fp_round+0x20>
    119e:	bf 2b       	or	r27, r31
    11a0:	11 f4       	brne	.+4      	; 0x11a6 <__fp_round+0x18>
    11a2:	60 ff       	sbrs	r22, 0
    11a4:	04 c0       	rjmp	.+8      	; 0x11ae <__fp_round+0x20>
    11a6:	6f 5f       	subi	r22, 0xFF	; 255
    11a8:	7f 4f       	sbci	r23, 0xFF	; 255
    11aa:	8f 4f       	sbci	r24, 0xFF	; 255
    11ac:	9f 4f       	sbci	r25, 0xFF	; 255
    11ae:	08 95       	ret

000011b0 <__fp_split3>:
    11b0:	57 fd       	sbrc	r21, 7
    11b2:	90 58       	subi	r25, 0x80	; 128
    11b4:	44 0f       	add	r20, r20
    11b6:	55 1f       	adc	r21, r21
    11b8:	59 f0       	breq	.+22     	; 0x11d0 <__fp_splitA+0x10>
    11ba:	5f 3f       	cpi	r21, 0xFF	; 255
    11bc:	71 f0       	breq	.+28     	; 0x11da <__fp_splitA+0x1a>
    11be:	47 95       	ror	r20

000011c0 <__fp_splitA>:
    11c0:	88 0f       	add	r24, r24
    11c2:	97 fb       	bst	r25, 7
    11c4:	99 1f       	adc	r25, r25
    11c6:	61 f0       	breq	.+24     	; 0x11e0 <__fp_splitA+0x20>
    11c8:	9f 3f       	cpi	r25, 0xFF	; 255
    11ca:	79 f0       	breq	.+30     	; 0x11ea <__fp_splitA+0x2a>
    11cc:	87 95       	ror	r24
    11ce:	08 95       	ret
    11d0:	12 16       	cp	r1, r18
    11d2:	13 06       	cpc	r1, r19
    11d4:	14 06       	cpc	r1, r20
    11d6:	55 1f       	adc	r21, r21
    11d8:	f2 cf       	rjmp	.-28     	; 0x11be <__fp_split3+0xe>
    11da:	46 95       	lsr	r20
    11dc:	f1 df       	rcall	.-30     	; 0x11c0 <__fp_splitA>
    11de:	08 c0       	rjmp	.+16     	; 0x11f0 <__fp_splitA+0x30>
    11e0:	16 16       	cp	r1, r22
    11e2:	17 06       	cpc	r1, r23
    11e4:	18 06       	cpc	r1, r24
    11e6:	99 1f       	adc	r25, r25
    11e8:	f1 cf       	rjmp	.-30     	; 0x11cc <__fp_splitA+0xc>
    11ea:	86 95       	lsr	r24
    11ec:	71 05       	cpc	r23, r1
    11ee:	61 05       	cpc	r22, r1
    11f0:	08 94       	sec
    11f2:	08 95       	ret

000011f4 <__fp_zero>:
    11f4:	e8 94       	clt

000011f6 <__fp_szero>:
    11f6:	bb 27       	eor	r27, r27
    11f8:	66 27       	eor	r22, r22
    11fa:	77 27       	eor	r23, r23
    11fc:	cb 01       	movw	r24, r22
    11fe:	97 f9       	bld	r25, 7
    1200:	08 95       	ret

00001202 <__gesf2>:
    1202:	8a df       	rcall	.-236    	; 0x1118 <__fp_cmp>
    1204:	08 f4       	brcc	.+2      	; 0x1208 <__gesf2+0x6>
    1206:	8f ef       	ldi	r24, 0xFF	; 255
    1208:	08 95       	ret

0000120a <__mulsf3>:
    120a:	0b d0       	rcall	.+22     	; 0x1222 <__mulsf3x>
    120c:	c0 cf       	rjmp	.-128    	; 0x118e <__fp_round>
    120e:	b1 df       	rcall	.-158    	; 0x1172 <__fp_pscA>
    1210:	28 f0       	brcs	.+10     	; 0x121c <__mulsf3+0x12>
    1212:	b6 df       	rcall	.-148    	; 0x1180 <__fp_pscB>
    1214:	18 f0       	brcs	.+6      	; 0x121c <__mulsf3+0x12>
    1216:	95 23       	and	r25, r21
    1218:	09 f0       	breq	.+2      	; 0x121c <__mulsf3+0x12>
    121a:	a2 cf       	rjmp	.-188    	; 0x1160 <__fp_inf>
    121c:	a7 cf       	rjmp	.-178    	; 0x116c <__fp_nan>
    121e:	11 24       	eor	r1, r1
    1220:	ea cf       	rjmp	.-44     	; 0x11f6 <__fp_szero>

00001222 <__mulsf3x>:
    1222:	c6 df       	rcall	.-116    	; 0x11b0 <__fp_split3>
    1224:	a0 f3       	brcs	.-24     	; 0x120e <__mulsf3+0x4>

00001226 <__mulsf3_pse>:
    1226:	95 9f       	mul	r25, r21
    1228:	d1 f3       	breq	.-12     	; 0x121e <__mulsf3+0x14>
    122a:	95 0f       	add	r25, r21
    122c:	50 e0       	ldi	r21, 0x00	; 0
    122e:	55 1f       	adc	r21, r21
    1230:	62 9f       	mul	r22, r18
    1232:	f0 01       	movw	r30, r0
    1234:	72 9f       	mul	r23, r18
    1236:	bb 27       	eor	r27, r27
    1238:	f0 0d       	add	r31, r0
    123a:	b1 1d       	adc	r27, r1
    123c:	63 9f       	mul	r22, r19
    123e:	aa 27       	eor	r26, r26
    1240:	f0 0d       	add	r31, r0
    1242:	b1 1d       	adc	r27, r1
    1244:	aa 1f       	adc	r26, r26
    1246:	64 9f       	mul	r22, r20
    1248:	66 27       	eor	r22, r22
    124a:	b0 0d       	add	r27, r0
    124c:	a1 1d       	adc	r26, r1
    124e:	66 1f       	adc	r22, r22
    1250:	82 9f       	mul	r24, r18
    1252:	22 27       	eor	r18, r18
    1254:	b0 0d       	add	r27, r0
    1256:	a1 1d       	adc	r26, r1
    1258:	62 1f       	adc	r22, r18
    125a:	73 9f       	mul	r23, r19
    125c:	b0 0d       	add	r27, r0
    125e:	a1 1d       	adc	r26, r1
    1260:	62 1f       	adc	r22, r18
    1262:	83 9f       	mul	r24, r19
    1264:	a0 0d       	add	r26, r0
    1266:	61 1d       	adc	r22, r1
    1268:	22 1f       	adc	r18, r18
    126a:	74 9f       	mul	r23, r20
    126c:	33 27       	eor	r19, r19
    126e:	a0 0d       	add	r26, r0
    1270:	61 1d       	adc	r22, r1
    1272:	23 1f       	adc	r18, r19
    1274:	84 9f       	mul	r24, r20
    1276:	60 0d       	add	r22, r0
    1278:	21 1d       	adc	r18, r1
    127a:	82 2f       	mov	r24, r18
    127c:	76 2f       	mov	r23, r22
    127e:	6a 2f       	mov	r22, r26
    1280:	11 24       	eor	r1, r1
    1282:	9f 57       	subi	r25, 0x7F	; 127
    1284:	50 40       	sbci	r21, 0x00	; 0
    1286:	8a f0       	brmi	.+34     	; 0x12aa <__mulsf3_pse+0x84>
    1288:	e1 f0       	breq	.+56     	; 0x12c2 <__mulsf3_pse+0x9c>
    128a:	88 23       	and	r24, r24
    128c:	4a f0       	brmi	.+18     	; 0x12a0 <__mulsf3_pse+0x7a>
    128e:	ee 0f       	add	r30, r30
    1290:	ff 1f       	adc	r31, r31
    1292:	bb 1f       	adc	r27, r27
    1294:	66 1f       	adc	r22, r22
    1296:	77 1f       	adc	r23, r23
    1298:	88 1f       	adc	r24, r24
    129a:	91 50       	subi	r25, 0x01	; 1
    129c:	50 40       	sbci	r21, 0x00	; 0
    129e:	a9 f7       	brne	.-22     	; 0x128a <__mulsf3_pse+0x64>
    12a0:	9e 3f       	cpi	r25, 0xFE	; 254
    12a2:	51 05       	cpc	r21, r1
    12a4:	70 f0       	brcs	.+28     	; 0x12c2 <__mulsf3_pse+0x9c>
    12a6:	5c cf       	rjmp	.-328    	; 0x1160 <__fp_inf>
    12a8:	a6 cf       	rjmp	.-180    	; 0x11f6 <__fp_szero>
    12aa:	5f 3f       	cpi	r21, 0xFF	; 255
    12ac:	ec f3       	brlt	.-6      	; 0x12a8 <__mulsf3_pse+0x82>
    12ae:	98 3e       	cpi	r25, 0xE8	; 232
    12b0:	dc f3       	brlt	.-10     	; 0x12a8 <__mulsf3_pse+0x82>
    12b2:	86 95       	lsr	r24
    12b4:	77 95       	ror	r23
    12b6:	67 95       	ror	r22
    12b8:	b7 95       	ror	r27
    12ba:	f7 95       	ror	r31
    12bc:	e7 95       	ror	r30
    12be:	9f 5f       	subi	r25, 0xFF	; 255
    12c0:	c1 f7       	brne	.-16     	; 0x12b2 <__mulsf3_pse+0x8c>
    12c2:	fe 2b       	or	r31, r30
    12c4:	88 0f       	add	r24, r24
    12c6:	91 1d       	adc	r25, r1
    12c8:	96 95       	lsr	r25
    12ca:	87 95       	ror	r24
    12cc:	97 f9       	bld	r25, 7
    12ce:	08 95       	ret

000012d0 <__tablejump2__>:
    12d0:	ee 0f       	add	r30, r30
    12d2:	ff 1f       	adc	r31, r31

000012d4 <__tablejump__>:
    12d4:	05 90       	lpm	r0, Z+
    12d6:	f4 91       	lpm	r31, Z
    12d8:	e0 2d       	mov	r30, r0
    12da:	19 94       	eijmp

000012dc <fdevopen>:
    12dc:	0f 93       	push	r16
    12de:	1f 93       	push	r17
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	ec 01       	movw	r28, r24
    12e6:	8b 01       	movw	r16, r22
    12e8:	00 97       	sbiw	r24, 0x00	; 0
    12ea:	31 f4       	brne	.+12     	; 0x12f8 <fdevopen+0x1c>
    12ec:	61 15       	cp	r22, r1
    12ee:	71 05       	cpc	r23, r1
    12f0:	19 f4       	brne	.+6      	; 0x12f8 <fdevopen+0x1c>
    12f2:	80 e0       	ldi	r24, 0x00	; 0
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	37 c0       	rjmp	.+110    	; 0x1366 <fdevopen+0x8a>
    12f8:	6e e0       	ldi	r22, 0x0E	; 14
    12fa:	70 e0       	ldi	r23, 0x00	; 0
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	63 d2       	rcall	.+1222   	; 0x17c8 <calloc>
    1302:	fc 01       	movw	r30, r24
    1304:	00 97       	sbiw	r24, 0x00	; 0
    1306:	a9 f3       	breq	.-22     	; 0x12f2 <fdevopen+0x16>
    1308:	80 e8       	ldi	r24, 0x80	; 128
    130a:	83 83       	std	Z+3, r24	; 0x03
    130c:	01 15       	cp	r16, r1
    130e:	11 05       	cpc	r17, r1
    1310:	71 f0       	breq	.+28     	; 0x132e <fdevopen+0x52>
    1312:	13 87       	std	Z+11, r17	; 0x0b
    1314:	02 87       	std	Z+10, r16	; 0x0a
    1316:	81 e8       	ldi	r24, 0x81	; 129
    1318:	83 83       	std	Z+3, r24	; 0x03
    131a:	80 91 bf 02 	lds	r24, 0x02BF
    131e:	90 91 c0 02 	lds	r25, 0x02C0
    1322:	89 2b       	or	r24, r25
    1324:	21 f4       	brne	.+8      	; 0x132e <fdevopen+0x52>
    1326:	f0 93 c0 02 	sts	0x02C0, r31
    132a:	e0 93 bf 02 	sts	0x02BF, r30
    132e:	20 97       	sbiw	r28, 0x00	; 0
    1330:	c9 f0       	breq	.+50     	; 0x1364 <fdevopen+0x88>
    1332:	d1 87       	std	Z+9, r29	; 0x09
    1334:	c0 87       	std	Z+8, r28	; 0x08
    1336:	83 81       	ldd	r24, Z+3	; 0x03
    1338:	82 60       	ori	r24, 0x02	; 2
    133a:	83 83       	std	Z+3, r24	; 0x03
    133c:	80 91 c1 02 	lds	r24, 0x02C1
    1340:	90 91 c2 02 	lds	r25, 0x02C2
    1344:	89 2b       	or	r24, r25
    1346:	71 f4       	brne	.+28     	; 0x1364 <fdevopen+0x88>
    1348:	f0 93 c2 02 	sts	0x02C2, r31
    134c:	e0 93 c1 02 	sts	0x02C1, r30
    1350:	80 91 c3 02 	lds	r24, 0x02C3
    1354:	90 91 c4 02 	lds	r25, 0x02C4
    1358:	89 2b       	or	r24, r25
    135a:	21 f4       	brne	.+8      	; 0x1364 <fdevopen+0x88>
    135c:	f0 93 c4 02 	sts	0x02C4, r31
    1360:	e0 93 c3 02 	sts	0x02C3, r30
    1364:	cf 01       	movw	r24, r30
    1366:	df 91       	pop	r29
    1368:	cf 91       	pop	r28
    136a:	1f 91       	pop	r17
    136c:	0f 91       	pop	r16
    136e:	08 95       	ret

00001370 <printf>:
    1370:	cf 93       	push	r28
    1372:	df 93       	push	r29
    1374:	cd b7       	in	r28, 0x3d	; 61
    1376:	de b7       	in	r29, 0x3e	; 62
    1378:	fe 01       	movw	r30, r28
    137a:	36 96       	adiw	r30, 0x06	; 6
    137c:	61 91       	ld	r22, Z+
    137e:	71 91       	ld	r23, Z+
    1380:	af 01       	movw	r20, r30
    1382:	80 91 c1 02 	lds	r24, 0x02C1
    1386:	90 91 c2 02 	lds	r25, 0x02C2
    138a:	30 d0       	rcall	.+96     	; 0x13ec <vfprintf>
    138c:	df 91       	pop	r29
    138e:	cf 91       	pop	r28
    1390:	08 95       	ret

00001392 <puts>:
    1392:	0f 93       	push	r16
    1394:	1f 93       	push	r17
    1396:	cf 93       	push	r28
    1398:	df 93       	push	r29
    139a:	e0 91 c1 02 	lds	r30, 0x02C1
    139e:	f0 91 c2 02 	lds	r31, 0x02C2
    13a2:	23 81       	ldd	r18, Z+3	; 0x03
    13a4:	21 ff       	sbrs	r18, 1
    13a6:	1b c0       	rjmp	.+54     	; 0x13de <puts+0x4c>
    13a8:	ec 01       	movw	r28, r24
    13aa:	00 e0       	ldi	r16, 0x00	; 0
    13ac:	10 e0       	ldi	r17, 0x00	; 0
    13ae:	89 91       	ld	r24, Y+
    13b0:	60 91 c1 02 	lds	r22, 0x02C1
    13b4:	70 91 c2 02 	lds	r23, 0x02C2
    13b8:	db 01       	movw	r26, r22
    13ba:	18 96       	adiw	r26, 0x08	; 8
    13bc:	ed 91       	ld	r30, X+
    13be:	fc 91       	ld	r31, X
    13c0:	19 97       	sbiw	r26, 0x09	; 9
    13c2:	88 23       	and	r24, r24
    13c4:	31 f0       	breq	.+12     	; 0x13d2 <puts+0x40>
    13c6:	19 95       	eicall
    13c8:	89 2b       	or	r24, r25
    13ca:	89 f3       	breq	.-30     	; 0x13ae <puts+0x1c>
    13cc:	0f ef       	ldi	r16, 0xFF	; 255
    13ce:	1f ef       	ldi	r17, 0xFF	; 255
    13d0:	ee cf       	rjmp	.-36     	; 0x13ae <puts+0x1c>
    13d2:	8a e0       	ldi	r24, 0x0A	; 10
    13d4:	19 95       	eicall
    13d6:	89 2b       	or	r24, r25
    13d8:	11 f4       	brne	.+4      	; 0x13de <puts+0x4c>
    13da:	c8 01       	movw	r24, r16
    13dc:	02 c0       	rjmp	.+4      	; 0x13e2 <puts+0x50>
    13de:	8f ef       	ldi	r24, 0xFF	; 255
    13e0:	9f ef       	ldi	r25, 0xFF	; 255
    13e2:	df 91       	pop	r29
    13e4:	cf 91       	pop	r28
    13e6:	1f 91       	pop	r17
    13e8:	0f 91       	pop	r16
    13ea:	08 95       	ret

000013ec <vfprintf>:
    13ec:	2f 92       	push	r2
    13ee:	3f 92       	push	r3
    13f0:	4f 92       	push	r4
    13f2:	5f 92       	push	r5
    13f4:	6f 92       	push	r6
    13f6:	7f 92       	push	r7
    13f8:	8f 92       	push	r8
    13fa:	9f 92       	push	r9
    13fc:	af 92       	push	r10
    13fe:	bf 92       	push	r11
    1400:	cf 92       	push	r12
    1402:	df 92       	push	r13
    1404:	ef 92       	push	r14
    1406:	ff 92       	push	r15
    1408:	0f 93       	push	r16
    140a:	1f 93       	push	r17
    140c:	cf 93       	push	r28
    140e:	df 93       	push	r29
    1410:	cd b7       	in	r28, 0x3d	; 61
    1412:	de b7       	in	r29, 0x3e	; 62
    1414:	2c 97       	sbiw	r28, 0x0c	; 12
    1416:	0f b6       	in	r0, 0x3f	; 63
    1418:	f8 94       	cli
    141a:	de bf       	out	0x3e, r29	; 62
    141c:	0f be       	out	0x3f, r0	; 63
    141e:	cd bf       	out	0x3d, r28	; 61
    1420:	7c 01       	movw	r14, r24
    1422:	6b 01       	movw	r12, r22
    1424:	8a 01       	movw	r16, r20
    1426:	fc 01       	movw	r30, r24
    1428:	17 82       	std	Z+7, r1	; 0x07
    142a:	16 82       	std	Z+6, r1	; 0x06
    142c:	83 81       	ldd	r24, Z+3	; 0x03
    142e:	81 ff       	sbrs	r24, 1
    1430:	b0 c1       	rjmp	.+864    	; 0x1792 <vfprintf+0x3a6>
    1432:	ce 01       	movw	r24, r28
    1434:	01 96       	adiw	r24, 0x01	; 1
    1436:	4c 01       	movw	r8, r24
    1438:	f7 01       	movw	r30, r14
    143a:	93 81       	ldd	r25, Z+3	; 0x03
    143c:	f6 01       	movw	r30, r12
    143e:	93 fd       	sbrc	r25, 3
    1440:	85 91       	lpm	r24, Z+
    1442:	93 ff       	sbrs	r25, 3
    1444:	81 91       	ld	r24, Z+
    1446:	6f 01       	movw	r12, r30
    1448:	88 23       	and	r24, r24
    144a:	09 f4       	brne	.+2      	; 0x144e <vfprintf+0x62>
    144c:	9e c1       	rjmp	.+828    	; 0x178a <vfprintf+0x39e>
    144e:	85 32       	cpi	r24, 0x25	; 37
    1450:	39 f4       	brne	.+14     	; 0x1460 <vfprintf+0x74>
    1452:	93 fd       	sbrc	r25, 3
    1454:	85 91       	lpm	r24, Z+
    1456:	93 ff       	sbrs	r25, 3
    1458:	81 91       	ld	r24, Z+
    145a:	6f 01       	movw	r12, r30
    145c:	85 32       	cpi	r24, 0x25	; 37
    145e:	21 f4       	brne	.+8      	; 0x1468 <vfprintf+0x7c>
    1460:	b7 01       	movw	r22, r14
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	0f d3       	rcall	.+1566   	; 0x1a84 <fputc>
    1466:	e8 cf       	rjmp	.-48     	; 0x1438 <vfprintf+0x4c>
    1468:	51 2c       	mov	r5, r1
    146a:	31 2c       	mov	r3, r1
    146c:	20 e0       	ldi	r18, 0x00	; 0
    146e:	20 32       	cpi	r18, 0x20	; 32
    1470:	a0 f4       	brcc	.+40     	; 0x149a <vfprintf+0xae>
    1472:	8b 32       	cpi	r24, 0x2B	; 43
    1474:	69 f0       	breq	.+26     	; 0x1490 <vfprintf+0xa4>
    1476:	30 f4       	brcc	.+12     	; 0x1484 <vfprintf+0x98>
    1478:	80 32       	cpi	r24, 0x20	; 32
    147a:	59 f0       	breq	.+22     	; 0x1492 <vfprintf+0xa6>
    147c:	83 32       	cpi	r24, 0x23	; 35
    147e:	69 f4       	brne	.+26     	; 0x149a <vfprintf+0xae>
    1480:	20 61       	ori	r18, 0x10	; 16
    1482:	2c c0       	rjmp	.+88     	; 0x14dc <vfprintf+0xf0>
    1484:	8d 32       	cpi	r24, 0x2D	; 45
    1486:	39 f0       	breq	.+14     	; 0x1496 <vfprintf+0xaa>
    1488:	80 33       	cpi	r24, 0x30	; 48
    148a:	39 f4       	brne	.+14     	; 0x149a <vfprintf+0xae>
    148c:	21 60       	ori	r18, 0x01	; 1
    148e:	26 c0       	rjmp	.+76     	; 0x14dc <vfprintf+0xf0>
    1490:	22 60       	ori	r18, 0x02	; 2
    1492:	24 60       	ori	r18, 0x04	; 4
    1494:	23 c0       	rjmp	.+70     	; 0x14dc <vfprintf+0xf0>
    1496:	28 60       	ori	r18, 0x08	; 8
    1498:	21 c0       	rjmp	.+66     	; 0x14dc <vfprintf+0xf0>
    149a:	27 fd       	sbrc	r18, 7
    149c:	27 c0       	rjmp	.+78     	; 0x14ec <vfprintf+0x100>
    149e:	30 ed       	ldi	r19, 0xD0	; 208
    14a0:	38 0f       	add	r19, r24
    14a2:	3a 30       	cpi	r19, 0x0A	; 10
    14a4:	78 f4       	brcc	.+30     	; 0x14c4 <vfprintf+0xd8>
    14a6:	26 ff       	sbrs	r18, 6
    14a8:	06 c0       	rjmp	.+12     	; 0x14b6 <vfprintf+0xca>
    14aa:	fa e0       	ldi	r31, 0x0A	; 10
    14ac:	5f 9e       	mul	r5, r31
    14ae:	30 0d       	add	r19, r0
    14b0:	11 24       	eor	r1, r1
    14b2:	53 2e       	mov	r5, r19
    14b4:	13 c0       	rjmp	.+38     	; 0x14dc <vfprintf+0xf0>
    14b6:	8a e0       	ldi	r24, 0x0A	; 10
    14b8:	38 9e       	mul	r3, r24
    14ba:	30 0d       	add	r19, r0
    14bc:	11 24       	eor	r1, r1
    14be:	33 2e       	mov	r3, r19
    14c0:	20 62       	ori	r18, 0x20	; 32
    14c2:	0c c0       	rjmp	.+24     	; 0x14dc <vfprintf+0xf0>
    14c4:	8e 32       	cpi	r24, 0x2E	; 46
    14c6:	21 f4       	brne	.+8      	; 0x14d0 <vfprintf+0xe4>
    14c8:	26 fd       	sbrc	r18, 6
    14ca:	5f c1       	rjmp	.+702    	; 0x178a <vfprintf+0x39e>
    14cc:	20 64       	ori	r18, 0x40	; 64
    14ce:	06 c0       	rjmp	.+12     	; 0x14dc <vfprintf+0xf0>
    14d0:	8c 36       	cpi	r24, 0x6C	; 108
    14d2:	11 f4       	brne	.+4      	; 0x14d8 <vfprintf+0xec>
    14d4:	20 68       	ori	r18, 0x80	; 128
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <vfprintf+0xf0>
    14d8:	88 36       	cpi	r24, 0x68	; 104
    14da:	41 f4       	brne	.+16     	; 0x14ec <vfprintf+0x100>
    14dc:	f6 01       	movw	r30, r12
    14de:	93 fd       	sbrc	r25, 3
    14e0:	85 91       	lpm	r24, Z+
    14e2:	93 ff       	sbrs	r25, 3
    14e4:	81 91       	ld	r24, Z+
    14e6:	6f 01       	movw	r12, r30
    14e8:	81 11       	cpse	r24, r1
    14ea:	c1 cf       	rjmp	.-126    	; 0x146e <vfprintf+0x82>
    14ec:	98 2f       	mov	r25, r24
    14ee:	9f 7d       	andi	r25, 0xDF	; 223
    14f0:	95 54       	subi	r25, 0x45	; 69
    14f2:	93 30       	cpi	r25, 0x03	; 3
    14f4:	28 f4       	brcc	.+10     	; 0x1500 <vfprintf+0x114>
    14f6:	0c 5f       	subi	r16, 0xFC	; 252
    14f8:	1f 4f       	sbci	r17, 0xFF	; 255
    14fa:	ff e3       	ldi	r31, 0x3F	; 63
    14fc:	f9 83       	std	Y+1, r31	; 0x01
    14fe:	0d c0       	rjmp	.+26     	; 0x151a <vfprintf+0x12e>
    1500:	83 36       	cpi	r24, 0x63	; 99
    1502:	31 f0       	breq	.+12     	; 0x1510 <vfprintf+0x124>
    1504:	83 37       	cpi	r24, 0x73	; 115
    1506:	71 f0       	breq	.+28     	; 0x1524 <vfprintf+0x138>
    1508:	83 35       	cpi	r24, 0x53	; 83
    150a:	09 f0       	breq	.+2      	; 0x150e <vfprintf+0x122>
    150c:	57 c0       	rjmp	.+174    	; 0x15bc <vfprintf+0x1d0>
    150e:	21 c0       	rjmp	.+66     	; 0x1552 <vfprintf+0x166>
    1510:	f8 01       	movw	r30, r16
    1512:	80 81       	ld	r24, Z
    1514:	89 83       	std	Y+1, r24	; 0x01
    1516:	0e 5f       	subi	r16, 0xFE	; 254
    1518:	1f 4f       	sbci	r17, 0xFF	; 255
    151a:	44 24       	eor	r4, r4
    151c:	43 94       	inc	r4
    151e:	51 2c       	mov	r5, r1
    1520:	54 01       	movw	r10, r8
    1522:	14 c0       	rjmp	.+40     	; 0x154c <vfprintf+0x160>
    1524:	38 01       	movw	r6, r16
    1526:	f2 e0       	ldi	r31, 0x02	; 2
    1528:	6f 0e       	add	r6, r31
    152a:	71 1c       	adc	r7, r1
    152c:	f8 01       	movw	r30, r16
    152e:	a0 80       	ld	r10, Z
    1530:	b1 80       	ldd	r11, Z+1	; 0x01
    1532:	26 ff       	sbrs	r18, 6
    1534:	03 c0       	rjmp	.+6      	; 0x153c <vfprintf+0x150>
    1536:	65 2d       	mov	r22, r5
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	02 c0       	rjmp	.+4      	; 0x1540 <vfprintf+0x154>
    153c:	6f ef       	ldi	r22, 0xFF	; 255
    153e:	7f ef       	ldi	r23, 0xFF	; 255
    1540:	c5 01       	movw	r24, r10
    1542:	2c 87       	std	Y+12, r18	; 0x0c
    1544:	94 d2       	rcall	.+1320   	; 0x1a6e <strnlen>
    1546:	2c 01       	movw	r4, r24
    1548:	83 01       	movw	r16, r6
    154a:	2c 85       	ldd	r18, Y+12	; 0x0c
    154c:	2f 77       	andi	r18, 0x7F	; 127
    154e:	22 2e       	mov	r2, r18
    1550:	16 c0       	rjmp	.+44     	; 0x157e <vfprintf+0x192>
    1552:	38 01       	movw	r6, r16
    1554:	f2 e0       	ldi	r31, 0x02	; 2
    1556:	6f 0e       	add	r6, r31
    1558:	71 1c       	adc	r7, r1
    155a:	f8 01       	movw	r30, r16
    155c:	a0 80       	ld	r10, Z
    155e:	b1 80       	ldd	r11, Z+1	; 0x01
    1560:	26 ff       	sbrs	r18, 6
    1562:	03 c0       	rjmp	.+6      	; 0x156a <vfprintf+0x17e>
    1564:	65 2d       	mov	r22, r5
    1566:	70 e0       	ldi	r23, 0x00	; 0
    1568:	02 c0       	rjmp	.+4      	; 0x156e <vfprintf+0x182>
    156a:	6f ef       	ldi	r22, 0xFF	; 255
    156c:	7f ef       	ldi	r23, 0xFF	; 255
    156e:	c5 01       	movw	r24, r10
    1570:	2c 87       	std	Y+12, r18	; 0x0c
    1572:	6b d2       	rcall	.+1238   	; 0x1a4a <strnlen_P>
    1574:	2c 01       	movw	r4, r24
    1576:	2c 85       	ldd	r18, Y+12	; 0x0c
    1578:	20 68       	ori	r18, 0x80	; 128
    157a:	22 2e       	mov	r2, r18
    157c:	83 01       	movw	r16, r6
    157e:	23 fc       	sbrc	r2, 3
    1580:	19 c0       	rjmp	.+50     	; 0x15b4 <vfprintf+0x1c8>
    1582:	83 2d       	mov	r24, r3
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	48 16       	cp	r4, r24
    1588:	59 06       	cpc	r5, r25
    158a:	a0 f4       	brcc	.+40     	; 0x15b4 <vfprintf+0x1c8>
    158c:	b7 01       	movw	r22, r14
    158e:	80 e2       	ldi	r24, 0x20	; 32
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	78 d2       	rcall	.+1264   	; 0x1a84 <fputc>
    1594:	3a 94       	dec	r3
    1596:	f5 cf       	rjmp	.-22     	; 0x1582 <vfprintf+0x196>
    1598:	f5 01       	movw	r30, r10
    159a:	27 fc       	sbrc	r2, 7
    159c:	85 91       	lpm	r24, Z+
    159e:	27 fe       	sbrs	r2, 7
    15a0:	81 91       	ld	r24, Z+
    15a2:	5f 01       	movw	r10, r30
    15a4:	b7 01       	movw	r22, r14
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	6d d2       	rcall	.+1242   	; 0x1a84 <fputc>
    15aa:	31 10       	cpse	r3, r1
    15ac:	3a 94       	dec	r3
    15ae:	f1 e0       	ldi	r31, 0x01	; 1
    15b0:	4f 1a       	sub	r4, r31
    15b2:	51 08       	sbc	r5, r1
    15b4:	41 14       	cp	r4, r1
    15b6:	51 04       	cpc	r5, r1
    15b8:	79 f7       	brne	.-34     	; 0x1598 <vfprintf+0x1ac>
    15ba:	de c0       	rjmp	.+444    	; 0x1778 <vfprintf+0x38c>
    15bc:	84 36       	cpi	r24, 0x64	; 100
    15be:	11 f0       	breq	.+4      	; 0x15c4 <vfprintf+0x1d8>
    15c0:	89 36       	cpi	r24, 0x69	; 105
    15c2:	31 f5       	brne	.+76     	; 0x1610 <vfprintf+0x224>
    15c4:	f8 01       	movw	r30, r16
    15c6:	27 ff       	sbrs	r18, 7
    15c8:	07 c0       	rjmp	.+14     	; 0x15d8 <vfprintf+0x1ec>
    15ca:	60 81       	ld	r22, Z
    15cc:	71 81       	ldd	r23, Z+1	; 0x01
    15ce:	82 81       	ldd	r24, Z+2	; 0x02
    15d0:	93 81       	ldd	r25, Z+3	; 0x03
    15d2:	0c 5f       	subi	r16, 0xFC	; 252
    15d4:	1f 4f       	sbci	r17, 0xFF	; 255
    15d6:	08 c0       	rjmp	.+16     	; 0x15e8 <vfprintf+0x1fc>
    15d8:	60 81       	ld	r22, Z
    15da:	71 81       	ldd	r23, Z+1	; 0x01
    15dc:	88 27       	eor	r24, r24
    15de:	77 fd       	sbrc	r23, 7
    15e0:	80 95       	com	r24
    15e2:	98 2f       	mov	r25, r24
    15e4:	0e 5f       	subi	r16, 0xFE	; 254
    15e6:	1f 4f       	sbci	r17, 0xFF	; 255
    15e8:	2f 76       	andi	r18, 0x6F	; 111
    15ea:	b2 2e       	mov	r11, r18
    15ec:	97 ff       	sbrs	r25, 7
    15ee:	09 c0       	rjmp	.+18     	; 0x1602 <vfprintf+0x216>
    15f0:	90 95       	com	r25
    15f2:	80 95       	com	r24
    15f4:	70 95       	com	r23
    15f6:	61 95       	neg	r22
    15f8:	7f 4f       	sbci	r23, 0xFF	; 255
    15fa:	8f 4f       	sbci	r24, 0xFF	; 255
    15fc:	9f 4f       	sbci	r25, 0xFF	; 255
    15fe:	20 68       	ori	r18, 0x80	; 128
    1600:	b2 2e       	mov	r11, r18
    1602:	2a e0       	ldi	r18, 0x0A	; 10
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	a4 01       	movw	r20, r8
    1608:	6f d2       	rcall	.+1246   	; 0x1ae8 <__ultoa_invert>
    160a:	a8 2e       	mov	r10, r24
    160c:	a8 18       	sub	r10, r8
    160e:	43 c0       	rjmp	.+134    	; 0x1696 <vfprintf+0x2aa>
    1610:	85 37       	cpi	r24, 0x75	; 117
    1612:	29 f4       	brne	.+10     	; 0x161e <vfprintf+0x232>
    1614:	2f 7e       	andi	r18, 0xEF	; 239
    1616:	b2 2e       	mov	r11, r18
    1618:	2a e0       	ldi	r18, 0x0A	; 10
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	25 c0       	rjmp	.+74     	; 0x1668 <vfprintf+0x27c>
    161e:	f2 2f       	mov	r31, r18
    1620:	f9 7f       	andi	r31, 0xF9	; 249
    1622:	bf 2e       	mov	r11, r31
    1624:	8f 36       	cpi	r24, 0x6F	; 111
    1626:	c1 f0       	breq	.+48     	; 0x1658 <vfprintf+0x26c>
    1628:	18 f4       	brcc	.+6      	; 0x1630 <vfprintf+0x244>
    162a:	88 35       	cpi	r24, 0x58	; 88
    162c:	79 f0       	breq	.+30     	; 0x164c <vfprintf+0x260>
    162e:	ad c0       	rjmp	.+346    	; 0x178a <vfprintf+0x39e>
    1630:	80 37       	cpi	r24, 0x70	; 112
    1632:	19 f0       	breq	.+6      	; 0x163a <vfprintf+0x24e>
    1634:	88 37       	cpi	r24, 0x78	; 120
    1636:	21 f0       	breq	.+8      	; 0x1640 <vfprintf+0x254>
    1638:	a8 c0       	rjmp	.+336    	; 0x178a <vfprintf+0x39e>
    163a:	2f 2f       	mov	r18, r31
    163c:	20 61       	ori	r18, 0x10	; 16
    163e:	b2 2e       	mov	r11, r18
    1640:	b4 fe       	sbrs	r11, 4
    1642:	0d c0       	rjmp	.+26     	; 0x165e <vfprintf+0x272>
    1644:	8b 2d       	mov	r24, r11
    1646:	84 60       	ori	r24, 0x04	; 4
    1648:	b8 2e       	mov	r11, r24
    164a:	09 c0       	rjmp	.+18     	; 0x165e <vfprintf+0x272>
    164c:	24 ff       	sbrs	r18, 4
    164e:	0a c0       	rjmp	.+20     	; 0x1664 <vfprintf+0x278>
    1650:	9f 2f       	mov	r25, r31
    1652:	96 60       	ori	r25, 0x06	; 6
    1654:	b9 2e       	mov	r11, r25
    1656:	06 c0       	rjmp	.+12     	; 0x1664 <vfprintf+0x278>
    1658:	28 e0       	ldi	r18, 0x08	; 8
    165a:	30 e0       	ldi	r19, 0x00	; 0
    165c:	05 c0       	rjmp	.+10     	; 0x1668 <vfprintf+0x27c>
    165e:	20 e1       	ldi	r18, 0x10	; 16
    1660:	30 e0       	ldi	r19, 0x00	; 0
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <vfprintf+0x27c>
    1664:	20 e1       	ldi	r18, 0x10	; 16
    1666:	32 e0       	ldi	r19, 0x02	; 2
    1668:	f8 01       	movw	r30, r16
    166a:	b7 fe       	sbrs	r11, 7
    166c:	07 c0       	rjmp	.+14     	; 0x167c <vfprintf+0x290>
    166e:	60 81       	ld	r22, Z
    1670:	71 81       	ldd	r23, Z+1	; 0x01
    1672:	82 81       	ldd	r24, Z+2	; 0x02
    1674:	93 81       	ldd	r25, Z+3	; 0x03
    1676:	0c 5f       	subi	r16, 0xFC	; 252
    1678:	1f 4f       	sbci	r17, 0xFF	; 255
    167a:	06 c0       	rjmp	.+12     	; 0x1688 <vfprintf+0x29c>
    167c:	60 81       	ld	r22, Z
    167e:	71 81       	ldd	r23, Z+1	; 0x01
    1680:	80 e0       	ldi	r24, 0x00	; 0
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	0e 5f       	subi	r16, 0xFE	; 254
    1686:	1f 4f       	sbci	r17, 0xFF	; 255
    1688:	a4 01       	movw	r20, r8
    168a:	2e d2       	rcall	.+1116   	; 0x1ae8 <__ultoa_invert>
    168c:	a8 2e       	mov	r10, r24
    168e:	a8 18       	sub	r10, r8
    1690:	fb 2d       	mov	r31, r11
    1692:	ff 77       	andi	r31, 0x7F	; 127
    1694:	bf 2e       	mov	r11, r31
    1696:	b6 fe       	sbrs	r11, 6
    1698:	0b c0       	rjmp	.+22     	; 0x16b0 <vfprintf+0x2c4>
    169a:	2b 2d       	mov	r18, r11
    169c:	2e 7f       	andi	r18, 0xFE	; 254
    169e:	a5 14       	cp	r10, r5
    16a0:	50 f4       	brcc	.+20     	; 0x16b6 <vfprintf+0x2ca>
    16a2:	b4 fe       	sbrs	r11, 4
    16a4:	0a c0       	rjmp	.+20     	; 0x16ba <vfprintf+0x2ce>
    16a6:	b2 fc       	sbrc	r11, 2
    16a8:	08 c0       	rjmp	.+16     	; 0x16ba <vfprintf+0x2ce>
    16aa:	2b 2d       	mov	r18, r11
    16ac:	2e 7e       	andi	r18, 0xEE	; 238
    16ae:	05 c0       	rjmp	.+10     	; 0x16ba <vfprintf+0x2ce>
    16b0:	7a 2c       	mov	r7, r10
    16b2:	2b 2d       	mov	r18, r11
    16b4:	03 c0       	rjmp	.+6      	; 0x16bc <vfprintf+0x2d0>
    16b6:	7a 2c       	mov	r7, r10
    16b8:	01 c0       	rjmp	.+2      	; 0x16bc <vfprintf+0x2d0>
    16ba:	75 2c       	mov	r7, r5
    16bc:	24 ff       	sbrs	r18, 4
    16be:	0d c0       	rjmp	.+26     	; 0x16da <vfprintf+0x2ee>
    16c0:	fe 01       	movw	r30, r28
    16c2:	ea 0d       	add	r30, r10
    16c4:	f1 1d       	adc	r31, r1
    16c6:	80 81       	ld	r24, Z
    16c8:	80 33       	cpi	r24, 0x30	; 48
    16ca:	11 f4       	brne	.+4      	; 0x16d0 <vfprintf+0x2e4>
    16cc:	29 7e       	andi	r18, 0xE9	; 233
    16ce:	09 c0       	rjmp	.+18     	; 0x16e2 <vfprintf+0x2f6>
    16d0:	22 ff       	sbrs	r18, 2
    16d2:	06 c0       	rjmp	.+12     	; 0x16e0 <vfprintf+0x2f4>
    16d4:	73 94       	inc	r7
    16d6:	73 94       	inc	r7
    16d8:	04 c0       	rjmp	.+8      	; 0x16e2 <vfprintf+0x2f6>
    16da:	82 2f       	mov	r24, r18
    16dc:	86 78       	andi	r24, 0x86	; 134
    16de:	09 f0       	breq	.+2      	; 0x16e2 <vfprintf+0x2f6>
    16e0:	73 94       	inc	r7
    16e2:	23 fd       	sbrc	r18, 3
    16e4:	12 c0       	rjmp	.+36     	; 0x170a <vfprintf+0x31e>
    16e6:	20 ff       	sbrs	r18, 0
    16e8:	06 c0       	rjmp	.+12     	; 0x16f6 <vfprintf+0x30a>
    16ea:	5a 2c       	mov	r5, r10
    16ec:	73 14       	cp	r7, r3
    16ee:	18 f4       	brcc	.+6      	; 0x16f6 <vfprintf+0x30a>
    16f0:	53 0c       	add	r5, r3
    16f2:	57 18       	sub	r5, r7
    16f4:	73 2c       	mov	r7, r3
    16f6:	73 14       	cp	r7, r3
    16f8:	60 f4       	brcc	.+24     	; 0x1712 <vfprintf+0x326>
    16fa:	b7 01       	movw	r22, r14
    16fc:	80 e2       	ldi	r24, 0x20	; 32
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	2c 87       	std	Y+12, r18	; 0x0c
    1702:	c0 d1       	rcall	.+896    	; 0x1a84 <fputc>
    1704:	73 94       	inc	r7
    1706:	2c 85       	ldd	r18, Y+12	; 0x0c
    1708:	f6 cf       	rjmp	.-20     	; 0x16f6 <vfprintf+0x30a>
    170a:	73 14       	cp	r7, r3
    170c:	10 f4       	brcc	.+4      	; 0x1712 <vfprintf+0x326>
    170e:	37 18       	sub	r3, r7
    1710:	01 c0       	rjmp	.+2      	; 0x1714 <vfprintf+0x328>
    1712:	31 2c       	mov	r3, r1
    1714:	24 ff       	sbrs	r18, 4
    1716:	11 c0       	rjmp	.+34     	; 0x173a <vfprintf+0x34e>
    1718:	b7 01       	movw	r22, r14
    171a:	80 e3       	ldi	r24, 0x30	; 48
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	2c 87       	std	Y+12, r18	; 0x0c
    1720:	b1 d1       	rcall	.+866    	; 0x1a84 <fputc>
    1722:	2c 85       	ldd	r18, Y+12	; 0x0c
    1724:	22 ff       	sbrs	r18, 2
    1726:	16 c0       	rjmp	.+44     	; 0x1754 <vfprintf+0x368>
    1728:	21 ff       	sbrs	r18, 1
    172a:	03 c0       	rjmp	.+6      	; 0x1732 <vfprintf+0x346>
    172c:	88 e5       	ldi	r24, 0x58	; 88
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	02 c0       	rjmp	.+4      	; 0x1736 <vfprintf+0x34a>
    1732:	88 e7       	ldi	r24, 0x78	; 120
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	b7 01       	movw	r22, r14
    1738:	0c c0       	rjmp	.+24     	; 0x1752 <vfprintf+0x366>
    173a:	82 2f       	mov	r24, r18
    173c:	86 78       	andi	r24, 0x86	; 134
    173e:	51 f0       	breq	.+20     	; 0x1754 <vfprintf+0x368>
    1740:	21 fd       	sbrc	r18, 1
    1742:	02 c0       	rjmp	.+4      	; 0x1748 <vfprintf+0x35c>
    1744:	80 e2       	ldi	r24, 0x20	; 32
    1746:	01 c0       	rjmp	.+2      	; 0x174a <vfprintf+0x35e>
    1748:	8b e2       	ldi	r24, 0x2B	; 43
    174a:	27 fd       	sbrc	r18, 7
    174c:	8d e2       	ldi	r24, 0x2D	; 45
    174e:	b7 01       	movw	r22, r14
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	98 d1       	rcall	.+816    	; 0x1a84 <fputc>
    1754:	a5 14       	cp	r10, r5
    1756:	30 f4       	brcc	.+12     	; 0x1764 <vfprintf+0x378>
    1758:	b7 01       	movw	r22, r14
    175a:	80 e3       	ldi	r24, 0x30	; 48
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	92 d1       	rcall	.+804    	; 0x1a84 <fputc>
    1760:	5a 94       	dec	r5
    1762:	f8 cf       	rjmp	.-16     	; 0x1754 <vfprintf+0x368>
    1764:	aa 94       	dec	r10
    1766:	f4 01       	movw	r30, r8
    1768:	ea 0d       	add	r30, r10
    176a:	f1 1d       	adc	r31, r1
    176c:	80 81       	ld	r24, Z
    176e:	b7 01       	movw	r22, r14
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	88 d1       	rcall	.+784    	; 0x1a84 <fputc>
    1774:	a1 10       	cpse	r10, r1
    1776:	f6 cf       	rjmp	.-20     	; 0x1764 <vfprintf+0x378>
    1778:	33 20       	and	r3, r3
    177a:	09 f4       	brne	.+2      	; 0x177e <vfprintf+0x392>
    177c:	5d ce       	rjmp	.-838    	; 0x1438 <vfprintf+0x4c>
    177e:	b7 01       	movw	r22, r14
    1780:	80 e2       	ldi	r24, 0x20	; 32
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	7f d1       	rcall	.+766    	; 0x1a84 <fputc>
    1786:	3a 94       	dec	r3
    1788:	f7 cf       	rjmp	.-18     	; 0x1778 <vfprintf+0x38c>
    178a:	f7 01       	movw	r30, r14
    178c:	86 81       	ldd	r24, Z+6	; 0x06
    178e:	97 81       	ldd	r25, Z+7	; 0x07
    1790:	02 c0       	rjmp	.+4      	; 0x1796 <vfprintf+0x3aa>
    1792:	8f ef       	ldi	r24, 0xFF	; 255
    1794:	9f ef       	ldi	r25, 0xFF	; 255
    1796:	2c 96       	adiw	r28, 0x0c	; 12
    1798:	0f b6       	in	r0, 0x3f	; 63
    179a:	f8 94       	cli
    179c:	de bf       	out	0x3e, r29	; 62
    179e:	0f be       	out	0x3f, r0	; 63
    17a0:	cd bf       	out	0x3d, r28	; 61
    17a2:	df 91       	pop	r29
    17a4:	cf 91       	pop	r28
    17a6:	1f 91       	pop	r17
    17a8:	0f 91       	pop	r16
    17aa:	ff 90       	pop	r15
    17ac:	ef 90       	pop	r14
    17ae:	df 90       	pop	r13
    17b0:	cf 90       	pop	r12
    17b2:	bf 90       	pop	r11
    17b4:	af 90       	pop	r10
    17b6:	9f 90       	pop	r9
    17b8:	8f 90       	pop	r8
    17ba:	7f 90       	pop	r7
    17bc:	6f 90       	pop	r6
    17be:	5f 90       	pop	r5
    17c0:	4f 90       	pop	r4
    17c2:	3f 90       	pop	r3
    17c4:	2f 90       	pop	r2
    17c6:	08 95       	ret

000017c8 <calloc>:
    17c8:	0f 93       	push	r16
    17ca:	1f 93       	push	r17
    17cc:	cf 93       	push	r28
    17ce:	df 93       	push	r29
    17d0:	86 9f       	mul	r24, r22
    17d2:	80 01       	movw	r16, r0
    17d4:	87 9f       	mul	r24, r23
    17d6:	10 0d       	add	r17, r0
    17d8:	96 9f       	mul	r25, r22
    17da:	10 0d       	add	r17, r0
    17dc:	11 24       	eor	r1, r1
    17de:	c8 01       	movw	r24, r16
    17e0:	0d d0       	rcall	.+26     	; 0x17fc <malloc>
    17e2:	ec 01       	movw	r28, r24
    17e4:	00 97       	sbiw	r24, 0x00	; 0
    17e6:	21 f0       	breq	.+8      	; 0x17f0 <calloc+0x28>
    17e8:	a8 01       	movw	r20, r16
    17ea:	60 e0       	ldi	r22, 0x00	; 0
    17ec:	70 e0       	ldi	r23, 0x00	; 0
    17ee:	38 d1       	rcall	.+624    	; 0x1a60 <memset>
    17f0:	ce 01       	movw	r24, r28
    17f2:	df 91       	pop	r29
    17f4:	cf 91       	pop	r28
    17f6:	1f 91       	pop	r17
    17f8:	0f 91       	pop	r16
    17fa:	08 95       	ret

000017fc <malloc>:
    17fc:	cf 93       	push	r28
    17fe:	df 93       	push	r29
    1800:	82 30       	cpi	r24, 0x02	; 2
    1802:	91 05       	cpc	r25, r1
    1804:	10 f4       	brcc	.+4      	; 0x180a <malloc+0xe>
    1806:	82 e0       	ldi	r24, 0x02	; 2
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	e0 91 c7 02 	lds	r30, 0x02C7
    180e:	f0 91 c8 02 	lds	r31, 0x02C8
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	30 e0       	ldi	r19, 0x00	; 0
    1816:	a0 e0       	ldi	r26, 0x00	; 0
    1818:	b0 e0       	ldi	r27, 0x00	; 0
    181a:	30 97       	sbiw	r30, 0x00	; 0
    181c:	39 f1       	breq	.+78     	; 0x186c <malloc+0x70>
    181e:	40 81       	ld	r20, Z
    1820:	51 81       	ldd	r21, Z+1	; 0x01
    1822:	48 17       	cp	r20, r24
    1824:	59 07       	cpc	r21, r25
    1826:	b8 f0       	brcs	.+46     	; 0x1856 <malloc+0x5a>
    1828:	48 17       	cp	r20, r24
    182a:	59 07       	cpc	r21, r25
    182c:	71 f4       	brne	.+28     	; 0x184a <malloc+0x4e>
    182e:	82 81       	ldd	r24, Z+2	; 0x02
    1830:	93 81       	ldd	r25, Z+3	; 0x03
    1832:	10 97       	sbiw	r26, 0x00	; 0
    1834:	29 f0       	breq	.+10     	; 0x1840 <malloc+0x44>
    1836:	13 96       	adiw	r26, 0x03	; 3
    1838:	9c 93       	st	X, r25
    183a:	8e 93       	st	-X, r24
    183c:	12 97       	sbiw	r26, 0x02	; 2
    183e:	2c c0       	rjmp	.+88     	; 0x1898 <malloc+0x9c>
    1840:	90 93 c8 02 	sts	0x02C8, r25
    1844:	80 93 c7 02 	sts	0x02C7, r24
    1848:	27 c0       	rjmp	.+78     	; 0x1898 <malloc+0x9c>
    184a:	21 15       	cp	r18, r1
    184c:	31 05       	cpc	r19, r1
    184e:	31 f0       	breq	.+12     	; 0x185c <malloc+0x60>
    1850:	42 17       	cp	r20, r18
    1852:	53 07       	cpc	r21, r19
    1854:	18 f0       	brcs	.+6      	; 0x185c <malloc+0x60>
    1856:	a9 01       	movw	r20, r18
    1858:	db 01       	movw	r26, r22
    185a:	01 c0       	rjmp	.+2      	; 0x185e <malloc+0x62>
    185c:	ef 01       	movw	r28, r30
    185e:	9a 01       	movw	r18, r20
    1860:	bd 01       	movw	r22, r26
    1862:	df 01       	movw	r26, r30
    1864:	02 80       	ldd	r0, Z+2	; 0x02
    1866:	f3 81       	ldd	r31, Z+3	; 0x03
    1868:	e0 2d       	mov	r30, r0
    186a:	d7 cf       	rjmp	.-82     	; 0x181a <malloc+0x1e>
    186c:	21 15       	cp	r18, r1
    186e:	31 05       	cpc	r19, r1
    1870:	f9 f0       	breq	.+62     	; 0x18b0 <malloc+0xb4>
    1872:	28 1b       	sub	r18, r24
    1874:	39 0b       	sbc	r19, r25
    1876:	24 30       	cpi	r18, 0x04	; 4
    1878:	31 05       	cpc	r19, r1
    187a:	80 f4       	brcc	.+32     	; 0x189c <malloc+0xa0>
    187c:	8a 81       	ldd	r24, Y+2	; 0x02
    187e:	9b 81       	ldd	r25, Y+3	; 0x03
    1880:	61 15       	cp	r22, r1
    1882:	71 05       	cpc	r23, r1
    1884:	21 f0       	breq	.+8      	; 0x188e <malloc+0x92>
    1886:	fb 01       	movw	r30, r22
    1888:	93 83       	std	Z+3, r25	; 0x03
    188a:	82 83       	std	Z+2, r24	; 0x02
    188c:	04 c0       	rjmp	.+8      	; 0x1896 <malloc+0x9a>
    188e:	90 93 c8 02 	sts	0x02C8, r25
    1892:	80 93 c7 02 	sts	0x02C7, r24
    1896:	fe 01       	movw	r30, r28
    1898:	32 96       	adiw	r30, 0x02	; 2
    189a:	44 c0       	rjmp	.+136    	; 0x1924 <malloc+0x128>
    189c:	fe 01       	movw	r30, r28
    189e:	e2 0f       	add	r30, r18
    18a0:	f3 1f       	adc	r31, r19
    18a2:	81 93       	st	Z+, r24
    18a4:	91 93       	st	Z+, r25
    18a6:	22 50       	subi	r18, 0x02	; 2
    18a8:	31 09       	sbc	r19, r1
    18aa:	39 83       	std	Y+1, r19	; 0x01
    18ac:	28 83       	st	Y, r18
    18ae:	3a c0       	rjmp	.+116    	; 0x1924 <malloc+0x128>
    18b0:	20 91 c5 02 	lds	r18, 0x02C5
    18b4:	30 91 c6 02 	lds	r19, 0x02C6
    18b8:	23 2b       	or	r18, r19
    18ba:	41 f4       	brne	.+16     	; 0x18cc <malloc+0xd0>
    18bc:	20 91 02 02 	lds	r18, 0x0202
    18c0:	30 91 03 02 	lds	r19, 0x0203
    18c4:	30 93 c6 02 	sts	0x02C6, r19
    18c8:	20 93 c5 02 	sts	0x02C5, r18
    18cc:	20 91 00 02 	lds	r18, 0x0200
    18d0:	30 91 01 02 	lds	r19, 0x0201
    18d4:	21 15       	cp	r18, r1
    18d6:	31 05       	cpc	r19, r1
    18d8:	41 f4       	brne	.+16     	; 0x18ea <malloc+0xee>
    18da:	2d b7       	in	r18, 0x3d	; 61
    18dc:	3e b7       	in	r19, 0x3e	; 62
    18de:	40 91 04 02 	lds	r20, 0x0204
    18e2:	50 91 05 02 	lds	r21, 0x0205
    18e6:	24 1b       	sub	r18, r20
    18e8:	35 0b       	sbc	r19, r21
    18ea:	e0 91 c5 02 	lds	r30, 0x02C5
    18ee:	f0 91 c6 02 	lds	r31, 0x02C6
    18f2:	e2 17       	cp	r30, r18
    18f4:	f3 07       	cpc	r31, r19
    18f6:	a0 f4       	brcc	.+40     	; 0x1920 <malloc+0x124>
    18f8:	2e 1b       	sub	r18, r30
    18fa:	3f 0b       	sbc	r19, r31
    18fc:	28 17       	cp	r18, r24
    18fe:	39 07       	cpc	r19, r25
    1900:	78 f0       	brcs	.+30     	; 0x1920 <malloc+0x124>
    1902:	ac 01       	movw	r20, r24
    1904:	4e 5f       	subi	r20, 0xFE	; 254
    1906:	5f 4f       	sbci	r21, 0xFF	; 255
    1908:	24 17       	cp	r18, r20
    190a:	35 07       	cpc	r19, r21
    190c:	48 f0       	brcs	.+18     	; 0x1920 <malloc+0x124>
    190e:	4e 0f       	add	r20, r30
    1910:	5f 1f       	adc	r21, r31
    1912:	50 93 c6 02 	sts	0x02C6, r21
    1916:	40 93 c5 02 	sts	0x02C5, r20
    191a:	81 93       	st	Z+, r24
    191c:	91 93       	st	Z+, r25
    191e:	02 c0       	rjmp	.+4      	; 0x1924 <malloc+0x128>
    1920:	e0 e0       	ldi	r30, 0x00	; 0
    1922:	f0 e0       	ldi	r31, 0x00	; 0
    1924:	cf 01       	movw	r24, r30
    1926:	df 91       	pop	r29
    1928:	cf 91       	pop	r28
    192a:	08 95       	ret

0000192c <free>:
    192c:	cf 93       	push	r28
    192e:	df 93       	push	r29
    1930:	00 97       	sbiw	r24, 0x00	; 0
    1932:	09 f4       	brne	.+2      	; 0x1936 <free+0xa>
    1934:	87 c0       	rjmp	.+270    	; 0x1a44 <free+0x118>
    1936:	fc 01       	movw	r30, r24
    1938:	32 97       	sbiw	r30, 0x02	; 2
    193a:	13 82       	std	Z+3, r1	; 0x03
    193c:	12 82       	std	Z+2, r1	; 0x02
    193e:	c0 91 c7 02 	lds	r28, 0x02C7
    1942:	d0 91 c8 02 	lds	r29, 0x02C8
    1946:	20 97       	sbiw	r28, 0x00	; 0
    1948:	81 f4       	brne	.+32     	; 0x196a <free+0x3e>
    194a:	20 81       	ld	r18, Z
    194c:	31 81       	ldd	r19, Z+1	; 0x01
    194e:	28 0f       	add	r18, r24
    1950:	39 1f       	adc	r19, r25
    1952:	80 91 c5 02 	lds	r24, 0x02C5
    1956:	90 91 c6 02 	lds	r25, 0x02C6
    195a:	82 17       	cp	r24, r18
    195c:	93 07       	cpc	r25, r19
    195e:	79 f5       	brne	.+94     	; 0x19be <free+0x92>
    1960:	f0 93 c6 02 	sts	0x02C6, r31
    1964:	e0 93 c5 02 	sts	0x02C5, r30
    1968:	6d c0       	rjmp	.+218    	; 0x1a44 <free+0x118>
    196a:	de 01       	movw	r26, r28
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	30 e0       	ldi	r19, 0x00	; 0
    1970:	ae 17       	cp	r26, r30
    1972:	bf 07       	cpc	r27, r31
    1974:	50 f4       	brcc	.+20     	; 0x198a <free+0x5e>
    1976:	12 96       	adiw	r26, 0x02	; 2
    1978:	4d 91       	ld	r20, X+
    197a:	5c 91       	ld	r21, X
    197c:	13 97       	sbiw	r26, 0x03	; 3
    197e:	9d 01       	movw	r18, r26
    1980:	41 15       	cp	r20, r1
    1982:	51 05       	cpc	r21, r1
    1984:	09 f1       	breq	.+66     	; 0x19c8 <free+0x9c>
    1986:	da 01       	movw	r26, r20
    1988:	f3 cf       	rjmp	.-26     	; 0x1970 <free+0x44>
    198a:	b3 83       	std	Z+3, r27	; 0x03
    198c:	a2 83       	std	Z+2, r26	; 0x02
    198e:	40 81       	ld	r20, Z
    1990:	51 81       	ldd	r21, Z+1	; 0x01
    1992:	84 0f       	add	r24, r20
    1994:	95 1f       	adc	r25, r21
    1996:	8a 17       	cp	r24, r26
    1998:	9b 07       	cpc	r25, r27
    199a:	71 f4       	brne	.+28     	; 0x19b8 <free+0x8c>
    199c:	8d 91       	ld	r24, X+
    199e:	9c 91       	ld	r25, X
    19a0:	11 97       	sbiw	r26, 0x01	; 1
    19a2:	84 0f       	add	r24, r20
    19a4:	95 1f       	adc	r25, r21
    19a6:	02 96       	adiw	r24, 0x02	; 2
    19a8:	91 83       	std	Z+1, r25	; 0x01
    19aa:	80 83       	st	Z, r24
    19ac:	12 96       	adiw	r26, 0x02	; 2
    19ae:	8d 91       	ld	r24, X+
    19b0:	9c 91       	ld	r25, X
    19b2:	13 97       	sbiw	r26, 0x03	; 3
    19b4:	93 83       	std	Z+3, r25	; 0x03
    19b6:	82 83       	std	Z+2, r24	; 0x02
    19b8:	21 15       	cp	r18, r1
    19ba:	31 05       	cpc	r19, r1
    19bc:	29 f4       	brne	.+10     	; 0x19c8 <free+0x9c>
    19be:	f0 93 c8 02 	sts	0x02C8, r31
    19c2:	e0 93 c7 02 	sts	0x02C7, r30
    19c6:	3e c0       	rjmp	.+124    	; 0x1a44 <free+0x118>
    19c8:	d9 01       	movw	r26, r18
    19ca:	13 96       	adiw	r26, 0x03	; 3
    19cc:	fc 93       	st	X, r31
    19ce:	ee 93       	st	-X, r30
    19d0:	12 97       	sbiw	r26, 0x02	; 2
    19d2:	4d 91       	ld	r20, X+
    19d4:	5d 91       	ld	r21, X+
    19d6:	a4 0f       	add	r26, r20
    19d8:	b5 1f       	adc	r27, r21
    19da:	ea 17       	cp	r30, r26
    19dc:	fb 07       	cpc	r31, r27
    19de:	79 f4       	brne	.+30     	; 0x19fe <free+0xd2>
    19e0:	80 81       	ld	r24, Z
    19e2:	91 81       	ldd	r25, Z+1	; 0x01
    19e4:	84 0f       	add	r24, r20
    19e6:	95 1f       	adc	r25, r21
    19e8:	02 96       	adiw	r24, 0x02	; 2
    19ea:	d9 01       	movw	r26, r18
    19ec:	11 96       	adiw	r26, 0x01	; 1
    19ee:	9c 93       	st	X, r25
    19f0:	8e 93       	st	-X, r24
    19f2:	82 81       	ldd	r24, Z+2	; 0x02
    19f4:	93 81       	ldd	r25, Z+3	; 0x03
    19f6:	13 96       	adiw	r26, 0x03	; 3
    19f8:	9c 93       	st	X, r25
    19fa:	8e 93       	st	-X, r24
    19fc:	12 97       	sbiw	r26, 0x02	; 2
    19fe:	e0 e0       	ldi	r30, 0x00	; 0
    1a00:	f0 e0       	ldi	r31, 0x00	; 0
    1a02:	8a 81       	ldd	r24, Y+2	; 0x02
    1a04:	9b 81       	ldd	r25, Y+3	; 0x03
    1a06:	00 97       	sbiw	r24, 0x00	; 0
    1a08:	19 f0       	breq	.+6      	; 0x1a10 <free+0xe4>
    1a0a:	fe 01       	movw	r30, r28
    1a0c:	ec 01       	movw	r28, r24
    1a0e:	f9 cf       	rjmp	.-14     	; 0x1a02 <free+0xd6>
    1a10:	ce 01       	movw	r24, r28
    1a12:	02 96       	adiw	r24, 0x02	; 2
    1a14:	28 81       	ld	r18, Y
    1a16:	39 81       	ldd	r19, Y+1	; 0x01
    1a18:	82 0f       	add	r24, r18
    1a1a:	93 1f       	adc	r25, r19
    1a1c:	20 91 c5 02 	lds	r18, 0x02C5
    1a20:	30 91 c6 02 	lds	r19, 0x02C6
    1a24:	28 17       	cp	r18, r24
    1a26:	39 07       	cpc	r19, r25
    1a28:	69 f4       	brne	.+26     	; 0x1a44 <free+0x118>
    1a2a:	30 97       	sbiw	r30, 0x00	; 0
    1a2c:	29 f4       	brne	.+10     	; 0x1a38 <free+0x10c>
    1a2e:	10 92 c8 02 	sts	0x02C8, r1
    1a32:	10 92 c7 02 	sts	0x02C7, r1
    1a36:	02 c0       	rjmp	.+4      	; 0x1a3c <free+0x110>
    1a38:	13 82       	std	Z+3, r1	; 0x03
    1a3a:	12 82       	std	Z+2, r1	; 0x02
    1a3c:	d0 93 c6 02 	sts	0x02C6, r29
    1a40:	c0 93 c5 02 	sts	0x02C5, r28
    1a44:	df 91       	pop	r29
    1a46:	cf 91       	pop	r28
    1a48:	08 95       	ret

00001a4a <strnlen_P>:
    1a4a:	fc 01       	movw	r30, r24
    1a4c:	05 90       	lpm	r0, Z+
    1a4e:	61 50       	subi	r22, 0x01	; 1
    1a50:	70 40       	sbci	r23, 0x00	; 0
    1a52:	01 10       	cpse	r0, r1
    1a54:	d8 f7       	brcc	.-10     	; 0x1a4c <strnlen_P+0x2>
    1a56:	80 95       	com	r24
    1a58:	90 95       	com	r25
    1a5a:	8e 0f       	add	r24, r30
    1a5c:	9f 1f       	adc	r25, r31
    1a5e:	08 95       	ret

00001a60 <memset>:
    1a60:	dc 01       	movw	r26, r24
    1a62:	01 c0       	rjmp	.+2      	; 0x1a66 <memset+0x6>
    1a64:	6d 93       	st	X+, r22
    1a66:	41 50       	subi	r20, 0x01	; 1
    1a68:	50 40       	sbci	r21, 0x00	; 0
    1a6a:	e0 f7       	brcc	.-8      	; 0x1a64 <memset+0x4>
    1a6c:	08 95       	ret

00001a6e <strnlen>:
    1a6e:	fc 01       	movw	r30, r24
    1a70:	61 50       	subi	r22, 0x01	; 1
    1a72:	70 40       	sbci	r23, 0x00	; 0
    1a74:	01 90       	ld	r0, Z+
    1a76:	01 10       	cpse	r0, r1
    1a78:	d8 f7       	brcc	.-10     	; 0x1a70 <strnlen+0x2>
    1a7a:	80 95       	com	r24
    1a7c:	90 95       	com	r25
    1a7e:	8e 0f       	add	r24, r30
    1a80:	9f 1f       	adc	r25, r31
    1a82:	08 95       	ret

00001a84 <fputc>:
    1a84:	0f 93       	push	r16
    1a86:	1f 93       	push	r17
    1a88:	cf 93       	push	r28
    1a8a:	df 93       	push	r29
    1a8c:	18 2f       	mov	r17, r24
    1a8e:	09 2f       	mov	r16, r25
    1a90:	eb 01       	movw	r28, r22
    1a92:	8b 81       	ldd	r24, Y+3	; 0x03
    1a94:	81 fd       	sbrc	r24, 1
    1a96:	03 c0       	rjmp	.+6      	; 0x1a9e <fputc+0x1a>
    1a98:	8f ef       	ldi	r24, 0xFF	; 255
    1a9a:	9f ef       	ldi	r25, 0xFF	; 255
    1a9c:	20 c0       	rjmp	.+64     	; 0x1ade <fputc+0x5a>
    1a9e:	82 ff       	sbrs	r24, 2
    1aa0:	10 c0       	rjmp	.+32     	; 0x1ac2 <fputc+0x3e>
    1aa2:	4e 81       	ldd	r20, Y+6	; 0x06
    1aa4:	5f 81       	ldd	r21, Y+7	; 0x07
    1aa6:	2c 81       	ldd	r18, Y+4	; 0x04
    1aa8:	3d 81       	ldd	r19, Y+5	; 0x05
    1aaa:	42 17       	cp	r20, r18
    1aac:	53 07       	cpc	r21, r19
    1aae:	7c f4       	brge	.+30     	; 0x1ace <fputc+0x4a>
    1ab0:	e8 81       	ld	r30, Y
    1ab2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ab4:	9f 01       	movw	r18, r30
    1ab6:	2f 5f       	subi	r18, 0xFF	; 255
    1ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aba:	39 83       	std	Y+1, r19	; 0x01
    1abc:	28 83       	st	Y, r18
    1abe:	10 83       	st	Z, r17
    1ac0:	06 c0       	rjmp	.+12     	; 0x1ace <fputc+0x4a>
    1ac2:	e8 85       	ldd	r30, Y+8	; 0x08
    1ac4:	f9 85       	ldd	r31, Y+9	; 0x09
    1ac6:	81 2f       	mov	r24, r17
    1ac8:	19 95       	eicall
    1aca:	89 2b       	or	r24, r25
    1acc:	29 f7       	brne	.-54     	; 0x1a98 <fputc+0x14>
    1ace:	2e 81       	ldd	r18, Y+6	; 0x06
    1ad0:	3f 81       	ldd	r19, Y+7	; 0x07
    1ad2:	2f 5f       	subi	r18, 0xFF	; 255
    1ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad6:	3f 83       	std	Y+7, r19	; 0x07
    1ad8:	2e 83       	std	Y+6, r18	; 0x06
    1ada:	81 2f       	mov	r24, r17
    1adc:	90 2f       	mov	r25, r16
    1ade:	df 91       	pop	r29
    1ae0:	cf 91       	pop	r28
    1ae2:	1f 91       	pop	r17
    1ae4:	0f 91       	pop	r16
    1ae6:	08 95       	ret

00001ae8 <__ultoa_invert>:
    1ae8:	fa 01       	movw	r30, r20
    1aea:	aa 27       	eor	r26, r26
    1aec:	28 30       	cpi	r18, 0x08	; 8
    1aee:	51 f1       	breq	.+84     	; 0x1b44 <__ultoa_invert+0x5c>
    1af0:	20 31       	cpi	r18, 0x10	; 16
    1af2:	81 f1       	breq	.+96     	; 0x1b54 <__ultoa_invert+0x6c>
    1af4:	e8 94       	clt
    1af6:	6f 93       	push	r22
    1af8:	6e 7f       	andi	r22, 0xFE	; 254
    1afa:	6e 5f       	subi	r22, 0xFE	; 254
    1afc:	7f 4f       	sbci	r23, 0xFF	; 255
    1afe:	8f 4f       	sbci	r24, 0xFF	; 255
    1b00:	9f 4f       	sbci	r25, 0xFF	; 255
    1b02:	af 4f       	sbci	r26, 0xFF	; 255
    1b04:	b1 e0       	ldi	r27, 0x01	; 1
    1b06:	3e d0       	rcall	.+124    	; 0x1b84 <__ultoa_invert+0x9c>
    1b08:	b4 e0       	ldi	r27, 0x04	; 4
    1b0a:	3c d0       	rcall	.+120    	; 0x1b84 <__ultoa_invert+0x9c>
    1b0c:	67 0f       	add	r22, r23
    1b0e:	78 1f       	adc	r23, r24
    1b10:	89 1f       	adc	r24, r25
    1b12:	9a 1f       	adc	r25, r26
    1b14:	a1 1d       	adc	r26, r1
    1b16:	68 0f       	add	r22, r24
    1b18:	79 1f       	adc	r23, r25
    1b1a:	8a 1f       	adc	r24, r26
    1b1c:	91 1d       	adc	r25, r1
    1b1e:	a1 1d       	adc	r26, r1
    1b20:	6a 0f       	add	r22, r26
    1b22:	71 1d       	adc	r23, r1
    1b24:	81 1d       	adc	r24, r1
    1b26:	91 1d       	adc	r25, r1
    1b28:	a1 1d       	adc	r26, r1
    1b2a:	20 d0       	rcall	.+64     	; 0x1b6c <__ultoa_invert+0x84>
    1b2c:	09 f4       	brne	.+2      	; 0x1b30 <__ultoa_invert+0x48>
    1b2e:	68 94       	set
    1b30:	3f 91       	pop	r19
    1b32:	2a e0       	ldi	r18, 0x0A	; 10
    1b34:	26 9f       	mul	r18, r22
    1b36:	11 24       	eor	r1, r1
    1b38:	30 19       	sub	r19, r0
    1b3a:	30 5d       	subi	r19, 0xD0	; 208
    1b3c:	31 93       	st	Z+, r19
    1b3e:	de f6       	brtc	.-74     	; 0x1af6 <__ultoa_invert+0xe>
    1b40:	cf 01       	movw	r24, r30
    1b42:	08 95       	ret
    1b44:	46 2f       	mov	r20, r22
    1b46:	47 70       	andi	r20, 0x07	; 7
    1b48:	40 5d       	subi	r20, 0xD0	; 208
    1b4a:	41 93       	st	Z+, r20
    1b4c:	b3 e0       	ldi	r27, 0x03	; 3
    1b4e:	0f d0       	rcall	.+30     	; 0x1b6e <__ultoa_invert+0x86>
    1b50:	c9 f7       	brne	.-14     	; 0x1b44 <__ultoa_invert+0x5c>
    1b52:	f6 cf       	rjmp	.-20     	; 0x1b40 <__ultoa_invert+0x58>
    1b54:	46 2f       	mov	r20, r22
    1b56:	4f 70       	andi	r20, 0x0F	; 15
    1b58:	40 5d       	subi	r20, 0xD0	; 208
    1b5a:	4a 33       	cpi	r20, 0x3A	; 58
    1b5c:	18 f0       	brcs	.+6      	; 0x1b64 <__ultoa_invert+0x7c>
    1b5e:	49 5d       	subi	r20, 0xD9	; 217
    1b60:	31 fd       	sbrc	r19, 1
    1b62:	40 52       	subi	r20, 0x20	; 32
    1b64:	41 93       	st	Z+, r20
    1b66:	02 d0       	rcall	.+4      	; 0x1b6c <__ultoa_invert+0x84>
    1b68:	a9 f7       	brne	.-22     	; 0x1b54 <__ultoa_invert+0x6c>
    1b6a:	ea cf       	rjmp	.-44     	; 0x1b40 <__ultoa_invert+0x58>
    1b6c:	b4 e0       	ldi	r27, 0x04	; 4
    1b6e:	a6 95       	lsr	r26
    1b70:	97 95       	ror	r25
    1b72:	87 95       	ror	r24
    1b74:	77 95       	ror	r23
    1b76:	67 95       	ror	r22
    1b78:	ba 95       	dec	r27
    1b7a:	c9 f7       	brne	.-14     	; 0x1b6e <__ultoa_invert+0x86>
    1b7c:	00 97       	sbiw	r24, 0x00	; 0
    1b7e:	61 05       	cpc	r22, r1
    1b80:	71 05       	cpc	r23, r1
    1b82:	08 95       	ret
    1b84:	9b 01       	movw	r18, r22
    1b86:	ac 01       	movw	r20, r24
    1b88:	0a 2e       	mov	r0, r26
    1b8a:	06 94       	lsr	r0
    1b8c:	57 95       	ror	r21
    1b8e:	47 95       	ror	r20
    1b90:	37 95       	ror	r19
    1b92:	27 95       	ror	r18
    1b94:	ba 95       	dec	r27
    1b96:	c9 f7       	brne	.-14     	; 0x1b8a <__ultoa_invert+0xa2>
    1b98:	62 0f       	add	r22, r18
    1b9a:	73 1f       	adc	r23, r19
    1b9c:	84 1f       	adc	r24, r20
    1b9e:	95 1f       	adc	r25, r21
    1ba0:	a0 1d       	adc	r26, r0
    1ba2:	08 95       	ret

00001ba4 <_exit>:
    1ba4:	f8 94       	cli

00001ba6 <__stop_program>:
    1ba6:	ff cf       	rjmp	.-2      	; 0x1ba6 <__stop_program>
