
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800200  000013a8  0000143c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002a2  008002a2  000014de  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014de  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000170  00000000  00000000  0000153a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001593  00000000  00000000  000016aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a3f  00000000  00000000  00002c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bef  00000000  00000000  0000367c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000390  00000000  00000000  0000426c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a3  00000000  00000000  000045fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c6d  00000000  00000000  00004a9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  0000570c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 ea       	ldi	r30, 0xA8	; 168
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 3a       	cpi	r26, 0xA2	; 162
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a2 ea       	ldi	r26, 0xA2	; 162
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ac 3a       	cpi	r26, 0xAC	; 172
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	15 d1       	rcall	.+554    	; 0x34a <main>
     120:	0c 94 d2 09 	jmp	0x13a4	; 0x13a4 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <adc_init>:
 */ 
#include "adc.h"
#include <avr/io.h>

void adc_init(){
	ADCSRA |= (1 << ADPS0 | 1 << ADPS1 | 1 << ADPS2);	
     126:	ea e7       	ldi	r30, 0x7A	; 122
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	80 81       	ld	r24, Z
     12c:	87 60       	ori	r24, 0x07	; 7
     12e:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);
     130:	80 81       	ld	r24, Z
     132:	80 68       	ori	r24, 0x80	; 128
     134:	80 83       	st	Z, r24
     136:	08 95       	ret

00000138 <adc_read>:
}

int adc_read(){
	ADMUX |= (1 << REFS1);
     138:	ec e7       	ldi	r30, 0x7C	; 124
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	80 81       	ld	r24, Z
     13e:	80 68       	ori	r24, 0x80	; 128
     140:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);
     142:	ea e7       	ldi	r30, 0x7A	; 122
     144:	f0 e0       	ldi	r31, 0x00	; 0
     146:	80 81       	ld	r24, Z
     148:	80 64       	ori	r24, 0x40	; 64
     14a:	80 83       	st	Z, r24
	
	while (ADCSRA & (1 << ADSC));
     14c:	80 81       	ld	r24, Z
     14e:	86 fd       	sbrc	r24, 6
     150:	fd cf       	rjmp	.-6      	; 0x14c <adc_read+0x14>
	
	if(ADC < THRESHOLD){
     152:	20 91 78 00 	lds	r18, 0x0078
     156:	30 91 79 00 	lds	r19, 0x0079
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	24 36       	cpi	r18, 0x64	; 100
     160:	31 05       	cpc	r19, r1
     162:	10 f4       	brcc	.+4      	; 0x168 <adc_read+0x30>
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	90 e0       	ldi	r25, 0x00	; 0
		return 0;
	}
	return 1;
}
     168:	08 95       	ret

0000016a <can_init>:
		printf("can message send %d", msg->data[i]);
	}
	printf("\n\r");
	mcp2515_request(MCP_RTS_TX0);
	//Do something...
}
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	cd b7       	in	r28, 0x3d	; 61
     170:	de b7       	in	r29, 0x3e	; 62
     172:	2a 97       	sbiw	r28, 0x0a	; 10
     174:	0f b6       	in	r0, 0x3f	; 63
     176:	f8 94       	cli
     178:	de bf       	out	0x3e, r29	; 62
     17a:	0f be       	out	0x3f, r0	; 63
     17c:	cd bf       	out	0x3d, r28	; 61
     17e:	5b d1       	rcall	.+694    	; 0x436 <mcp2515_init>
     180:	41 e0       	ldi	r20, 0x01	; 1
     182:	60 e6       	ldi	r22, 0x60	; 96
     184:	80 e6       	ldi	r24, 0x60	; 96
     186:	79 d1       	rcall	.+754    	; 0x47a <mcp2515_write>
     188:	8f ef       	ldi	r24, 0xFF	; 255
     18a:	9f e8       	ldi	r25, 0x8F	; 143
     18c:	01 97       	sbiw	r24, 0x01	; 1
     18e:	f1 f7       	brne	.-4      	; 0x18c <can_init+0x22>
     190:	00 c0       	rjmp	.+0      	; 0x192 <can_init+0x28>
     192:	00 00       	nop
     194:	41 e0       	ldi	r20, 0x01	; 1
     196:	61 e0       	ldi	r22, 0x01	; 1
     198:	8b e2       	ldi	r24, 0x2B	; 43
     19a:	85 d1       	rcall	.+778    	; 0x4a6 <mcp2515_bit_modify>
     19c:	8f ef       	ldi	r24, 0xFF	; 255
     19e:	9f e8       	ldi	r25, 0x8F	; 143
     1a0:	01 97       	sbiw	r24, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <can_init+0x36>
     1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <can_init+0x3c>
     1a6:	00 00       	nop
     1a8:	40 e0       	ldi	r20, 0x00	; 0
     1aa:	60 ee       	ldi	r22, 0xE0	; 224
     1ac:	8f e0       	ldi	r24, 0x0F	; 15
     1ae:	7b d1       	rcall	.+758    	; 0x4a6 <mcp2515_bit_modify>
     1b0:	8f ef       	ldi	r24, 0xFF	; 255
     1b2:	9f e8       	ldi	r25, 0x8F	; 143
     1b4:	01 97       	sbiw	r24, 0x01	; 1
     1b6:	f1 f7       	brne	.-4      	; 0x1b4 <can_init+0x4a>
     1b8:	00 c0       	rjmp	.+0      	; 0x1ba <can_init+0x50>
     1ba:	00 00       	nop
     1bc:	4a e0       	ldi	r20, 0x0A	; 10
     1be:	be 01       	movw	r22, r28
     1c0:	6f 5f       	subi	r22, 0xFF	; 255
     1c2:	7f 4f       	sbci	r23, 0xFF	; 255
     1c4:	8e e0       	ldi	r24, 0x0E	; 14
     1c6:	3a d1       	rcall	.+628    	; 0x43c <mcp2515_read>
     1c8:	89 81       	ldd	r24, Y+1	; 0x01
     1ca:	80 7e       	andi	r24, 0xE0	; 224
     1cc:	99 f0       	breq	.+38     	; 0x1f4 <can_init+0x8a>
     1ce:	1f 92       	push	r1
     1d0:	8f 93       	push	r24
     1d2:	86 e0       	ldi	r24, 0x06	; 6
     1d4:	92 e0       	ldi	r25, 0x02	; 2
     1d6:	9f 93       	push	r25
     1d8:	8f 93       	push	r24
     1da:	ca d4       	rcall	.+2452   	; 0xb70 <printf>
     1dc:	8f e7       	ldi	r24, 0x7F	; 127
     1de:	92 e0       	ldi	r25, 0x02	; 2
     1e0:	9f 93       	push	r25
     1e2:	8f 93       	push	r24
     1e4:	c5 d4       	rcall	.+2442   	; 0xb70 <printf>
     1e6:	0f 90       	pop	r0
     1e8:	0f 90       	pop	r0
     1ea:	0f 90       	pop	r0
     1ec:	0f 90       	pop	r0
     1ee:	0f 90       	pop	r0
     1f0:	0f 90       	pop	r0
     1f2:	07 c0       	rjmp	.+14     	; 0x202 <can_init+0x98>
     1f4:	8a e4       	ldi	r24, 0x4A	; 74
     1f6:	92 e0       	ldi	r25, 0x02	; 2
     1f8:	9f 93       	push	r25
     1fa:	8f 93       	push	r24
     1fc:	b9 d4       	rcall	.+2418   	; 0xb70 <printf>
     1fe:	0f 90       	pop	r0
     200:	0f 90       	pop	r0
     202:	2a 96       	adiw	r28, 0x0a	; 10
     204:	0f b6       	in	r0, 0x3f	; 63
     206:	f8 94       	cli
     208:	de bf       	out	0x3e, r29	; 62
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	cd bf       	out	0x3d, r28	; 61
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	08 95       	ret

00000214 <can_data_receive>:
{
	
}
*/
void can_data_receive(struct can_message* msg, int buffer)
{
     214:	ff 92       	push	r15
     216:	0f 93       	push	r16
     218:	1f 93       	push	r17
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
     21e:	cd b7       	in	r28, 0x3d	; 61
     220:	de b7       	in	r29, 0x3e	; 62
     222:	2a 97       	sbiw	r28, 0x0a	; 10
     224:	0f b6       	in	r0, 0x3f	; 63
     226:	f8 94       	cli
     228:	de bf       	out	0x3e, r29	; 62
     22a:	0f be       	out	0x3f, r0	; 63
     22c:	cd bf       	out	0x3d, r28	; 61
     22e:	8c 01       	movw	r16, r24
     230:	f6 2e       	mov	r15, r22
	uint8_t result[MAX_CAN_LENGTH];
	
		
	mcp2515_read(MCP_CANINTF, result, 1);
     232:	41 e0       	ldi	r20, 0x01	; 1
     234:	be 01       	movw	r22, r28
     236:	6f 5f       	subi	r22, 0xFF	; 255
     238:	7f 4f       	sbci	r23, 0xFF	; 255
     23a:	8c e2       	ldi	r24, 0x2C	; 44
     23c:	ff d0       	rcall	.+510    	; 0x43c <mcp2515_read>

	if (!result[0]){
     23e:	89 81       	ldd	r24, Y+1	; 0x01
     240:	81 11       	cpse	r24, r1
     242:	0b c0       	rjmp	.+22     	; 0x25a <can_data_receive+0x46>
		printf("CANINTF out %d \n\r", result[0] & 0b1);
     244:	1f 92       	push	r1
     246:	1f 92       	push	r1
     248:	20 e7       	ldi	r18, 0x70	; 112
     24a:	32 e0       	ldi	r19, 0x02	; 2
     24c:	3f 93       	push	r19
     24e:	2f 93       	push	r18
     250:	8f d4       	rcall	.+2334   	; 0xb70 <printf>
     252:	0f 90       	pop	r0
     254:	0f 90       	pop	r0
     256:	0f 90       	pop	r0
     258:	0f 90       	pop	r0
	}
	
	uint8_t i;
	
	mcp2515_read(MCP_RXB0DLC + buffer, result, 1);
     25a:	41 e0       	ldi	r20, 0x01	; 1
     25c:	be 01       	movw	r22, r28
     25e:	6f 5f       	subi	r22, 0xFF	; 255
     260:	7f 4f       	sbci	r23, 0xFF	; 255
     262:	85 e6       	ldi	r24, 0x65	; 101
     264:	8f 0d       	add	r24, r15
     266:	ea d0       	rcall	.+468    	; 0x43c <mcp2515_read>
	msg->length = result[0];
     268:	89 81       	ldd	r24, Y+1	; 0x01
     26a:	f8 01       	movw	r30, r16
     26c:	82 83       	std	Z+2, r24	; 0x02
	
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
     26e:	41 e0       	ldi	r20, 0x01	; 1
     270:	be 01       	movw	r22, r28
     272:	6f 5f       	subi	r22, 0xFF	; 255
     274:	7f 4f       	sbci	r23, 0xFF	; 255
     276:	81 e6       	ldi	r24, 0x61	; 97
     278:	8f 0d       	add	r24, r15
     27a:	e0 d0       	rcall	.+448    	; 0x43c <mcp2515_read>
	msg->id = result[0];
     27c:	29 81       	ldd	r18, Y+1	; 0x01
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	f8 01       	movw	r30, r16
     282:	31 83       	std	Z+1, r19	; 0x01
     284:	20 83       	st	Z, r18
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
     286:	42 81       	ldd	r20, Z+2	; 0x02
     288:	be 01       	movw	r22, r28
     28a:	6f 5f       	subi	r22, 0xFF	; 255
     28c:	7f 4f       	sbci	r23, 0xFF	; 255
     28e:	86 e6       	ldi	r24, 0x66	; 102
     290:	8f 0d       	add	r24, r15
     292:	d4 d0       	rcall	.+424    	; 0x43c <mcp2515_read>
	
	for (i = 0; i < msg->length; i++)
     294:	f8 01       	movw	r30, r16
     296:	92 81       	ldd	r25, Z+2	; 0x02
     298:	99 23       	and	r25, r25
     29a:	61 f0       	breq	.+24     	; 0x2b4 <can_data_receive+0xa0>
     29c:	9e 01       	movw	r18, r28
     29e:	2f 5f       	subi	r18, 0xFF	; 255
     2a0:	3f 4f       	sbci	r19, 0xFF	; 255
     2a2:	d8 01       	movw	r26, r16
     2a4:	13 96       	adiw	r26, 0x03	; 3
     2a6:	f9 01       	movw	r30, r18
	{
		msg->data[i] = result[i];
     2a8:	81 91       	ld	r24, Z+
     2aa:	8d 93       	st	X+, r24
     2ac:	8e 2f       	mov	r24, r30
     2ae:	82 1b       	sub	r24, r18
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
	msg->id = result[0];
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
	
	for (i = 0; i < msg->length; i++)
     2b0:	89 17       	cp	r24, r25
     2b2:	d0 f3       	brcs	.-12     	; 0x2a8 <can_data_receive+0x94>
		msg->data[i] = result[i];
		//printf("can messsage received %c", msg->data[i]);
	}
	//printf("\n\r");
	
	mcp2515_bit_modify(MCP_CANINTF, 0x01, 0x00);
     2b4:	40 e0       	ldi	r20, 0x00	; 0
     2b6:	61 e0       	ldi	r22, 0x01	; 1
     2b8:	8c e2       	ldi	r24, 0x2C	; 44
     2ba:	f5 d0       	rcall	.+490    	; 0x4a6 <mcp2515_bit_modify>
}
     2bc:	2a 96       	adiw	r28, 0x0a	; 10
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	f8 94       	cli
     2c2:	de bf       	out	0x3e, r29	; 62
     2c4:	0f be       	out	0x3f, r0	; 63
     2c6:	cd bf       	out	0x3d, r28	; 61
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	1f 91       	pop	r17
     2ce:	0f 91       	pop	r16
     2d0:	ff 90       	pop	r15
     2d2:	08 95       	ret

000002d4 <can_get_message>:

int can_get_message(struct can_message* message)
{
     2d4:	0f 93       	push	r16
     2d6:	1f 93       	push	r17
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	cd b7       	in	r28, 0x3d	; 61
     2de:	de b7       	in	r29, 0x3e	; 62
     2e0:	2a 97       	sbiw	r28, 0x0a	; 10
     2e2:	0f b6       	in	r0, 0x3f	; 63
     2e4:	f8 94       	cli
     2e6:	de bf       	out	0x3e, r29	; 62
     2e8:	0f be       	out	0x3f, r0	; 63
     2ea:	cd bf       	out	0x3d, r28	; 61
     2ec:	8c 01       	movw	r16, r24
	uint8_t result[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANINTF, result, 1);
     2ee:	41 e0       	ldi	r20, 0x01	; 1
     2f0:	be 01       	movw	r22, r28
     2f2:	6f 5f       	subi	r22, 0xFF	; 255
     2f4:	7f 4f       	sbci	r23, 0xFF	; 255
     2f6:	8c e2       	ldi	r24, 0x2C	; 44
     2f8:	a1 d0       	rcall	.+322    	; 0x43c <mcp2515_read>

	
	if ((result[0] & 0x01) == 0x01)
     2fa:	89 81       	ldd	r24, Y+1	; 0x01
     2fc:	80 ff       	sbrs	r24, 0
     2fe:	0b c0       	rjmp	.+22     	; 0x316 <can_get_message+0x42>
	{
		can_data_receive(message,0);
     300:	60 e0       	ldi	r22, 0x00	; 0
     302:	70 e0       	ldi	r23, 0x00	; 0
     304:	c8 01       	movw	r24, r16
     306:	86 df       	rcall	.-244    	; 0x214 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     308:	40 e0       	ldi	r20, 0x00	; 0
     30a:	61 e0       	ldi	r22, 0x01	; 1
     30c:	8c e2       	ldi	r24, 0x2C	; 44
     30e:	cb d0       	rcall	.+406    	; 0x4a6 <mcp2515_bit_modify>
		return 1;
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0f c0       	rjmp	.+30     	; 0x334 <can_get_message+0x60>
	}
	else if ((result[0] & 0x02) == 0x02)
     316:	81 ff       	sbrs	r24, 1
     318:	0b c0       	rjmp	.+22     	; 0x330 <can_get_message+0x5c>
	{
		can_data_receive(message,1);
     31a:	61 e0       	ldi	r22, 0x01	; 1
     31c:	70 e0       	ldi	r23, 0x00	; 0
     31e:	c8 01       	movw	r24, r16
     320:	79 df       	rcall	.-270    	; 0x214 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
     322:	40 e0       	ldi	r20, 0x00	; 0
     324:	62 e0       	ldi	r22, 0x02	; 2
     326:	8c e2       	ldi	r24, 0x2C	; 44
     328:	be d0       	rcall	.+380    	; 0x4a6 <mcp2515_bit_modify>
		return 1;
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	02 c0       	rjmp	.+4      	; 0x334 <can_get_message+0x60>
	}
	else
	{
		return 0;
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     334:	2a 96       	adiw	r28, 0x0a	; 10
     336:	0f b6       	in	r0, 0x3f	; 63
     338:	f8 94       	cli
     33a:	de bf       	out	0x3e, r29	; 62
     33c:	0f be       	out	0x3f, r0	; 63
     33e:	cd bf       	out	0x3d, r28	; 61
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	08 95       	ret

0000034a <main>:
#include "spi.h"
#include "pwm.h"
#include "adc.h"


int main(void){
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	2d 97       	sbiw	r28, 0x0d	; 13
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	f8 94       	cli
     358:	de bf       	out	0x3e, r29	; 62
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	cd bf       	out	0x3d, r28	; 61
	
	USART_Init(MYUBRR);
     35e:	87 e6       	ldi	r24, 0x67	; 103
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	91 d1       	rcall	.+802    	; 0x686 <USART_Init>
	printf("start \n\r \n");
     364:	82 e8       	ldi	r24, 0x82	; 130
     366:	92 e0       	ldi	r25, 0x02	; 2
     368:	14 d4       	rcall	.+2088   	; 0xb92 <puts>
	
	can_init();
     36a:	ff de       	rcall	.-514    	; 0x16a <can_init>
	message.length = 1;
	message.data[0] = (uint8_t) 'c';
	
	
	struct can_message message2;
	message2.id = 3;
     36c:	83 e0       	ldi	r24, 0x03	; 3
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	9a 83       	std	Y+2, r25	; 0x02
     372:	89 83       	std	Y+1, r24	; 0x01
	message2.length = 1;
     374:	81 e0       	ldi	r24, 0x01	; 1
     376:	8b 83       	std	Y+3, r24	; 0x03
	
	printf("In the main received %c \n\r \n\r", message2.data[0]);
	*/

	
	pwm_init();	
     378:	c0 d0       	rcall	.+384    	; 0x4fa <pwm_init>
	adc_init();
     37a:	d5 de       	rcall	.-598    	; 0x126 <adc_init>
	
	//pwm_set_pulse_width(50000);	
	float pw = 1500;
	float x_val = 130;
	
	int old_val = adc_read();
     37c:	dd de       	rcall	.-582    	; 0x138 <adc_read>
     37e:	8c 01       	movw	r16, r24
	int new_val = adc_read();
     380:	db de       	rcall	.-586    	; 0x138 <adc_read>
	
	int loose_counter = 0;
     382:	e1 2c       	mov	r14, r1
     384:	f1 2c       	mov	r15, r1
		}
		else if( (old_val == 1) && (new_val == 0) )
		{
			// traitement sur front descendant
			loose_counter++;
			printf("You lost %d times \n\r", loose_counter);
     386:	0f 2e       	mov	r0, r31
     388:	fc e8       	ldi	r31, 0x8C	; 140
     38a:	cf 2e       	mov	r12, r31
     38c:	f2 e0       	ldi	r31, 0x02	; 2
     38e:	df 2e       	mov	r13, r31
     390:	f0 2d       	mov	r31, r0
			old_val = 0;
     392:	a1 2c       	mov	r10, r1
     394:	b1 2c       	mov	r11, r1
		
		
		if( (old_val == 0) && (new_val == 1) )
		{
			// traitement sur front montant
			old_val = 1;
     396:	88 24       	eor	r8, r8
     398:	83 94       	inc	r8
     39a:	91 2c       	mov	r9, r1
	int new_val = adc_read();
	
	int loose_counter = 0;
    while(1)
    {
		if(can_get_message(&message2)){
     39c:	ce 01       	movw	r24, r28
     39e:	01 96       	adiw	r24, 0x01	; 1
     3a0:	99 df       	rcall	.-206    	; 0x2d4 <can_get_message>
     3a2:	89 2b       	or	r24, r25
     3a4:	71 f0       	breq	.+28     	; 0x3c2 <main+0x78>
			
			//printf("Atmega2560 received a new message %d \n \r \n\r", message2.data[0]);
			
				
			x_val = 255-(float) message2.data[0];
     3a6:	6c 81       	ldd	r22, Y+4	; 0x04
     3a8:	70 e0       	ldi	r23, 0x00	; 0
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	7d d2       	rcall	.+1274   	; 0x8aa <__floatunsisf>
     3b0:	9b 01       	movw	r18, r22
     3b2:	ac 01       	movw	r20, r24
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	8f e7       	ldi	r24, 0x7F	; 127
     3ba:	93 e4       	ldi	r25, 0x43	; 67
     3bc:	74 d1       	rcall	.+744    	; 0x6a6 <__subsf3>
			a = (int) pw;
			//printf("ow b: %d\n\r",  a);
			//pw = pwm_follow_joystick_val(pw, x_val);
			//a = (int) pw;
			//printf("pw not scaled: %d\n\r",  a);
			pw = pwm_scale_joystick_val(x_val);
     3be:	05 d1       	rcall	.+522    	; 0x5ca <pwm_scale_joystick_val>
			a = (int) pw;
			//printf("pw scaled: %d\n\r",  a);
			pwm_set_pulse_width(pw);
     3c0:	bb d0       	rcall	.+374    	; 0x538 <pwm_set_pulse_width>
			
			
		}
		
		new_val = adc_read();
     3c2:	ba de       	rcall	.-652    	; 0x138 <adc_read>
		
		
		if( (old_val == 0) && (new_val == 1) )
     3c4:	01 15       	cp	r16, r1
     3c6:	11 05       	cpc	r17, r1
     3c8:	59 f4       	brne	.+22     	; 0x3e0 <main+0x96>
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	39 f7       	brne	.-50     	; 0x39c <main+0x52>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ce:	83 ed       	ldi	r24, 0xD3	; 211
     3d0:	90 e3       	ldi	r25, 0x30	; 48
     3d2:	01 97       	sbiw	r24, 0x01	; 1
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <main+0x88>
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <main+0x8e>
     3d8:	00 00       	nop
		{
			// traitement sur front montant
			old_val = 1;
     3da:	08 2d       	mov	r16, r8
     3dc:	19 2d       	mov	r17, r9
     3de:	de cf       	rjmp	.-68     	; 0x39c <main+0x52>
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) )
     3e0:	01 30       	cpi	r16, 0x01	; 1
     3e2:	11 05       	cpc	r17, r1
     3e4:	d9 f6       	brne	.-74     	; 0x39c <main+0x52>
     3e6:	89 2b       	or	r24, r25
     3e8:	c9 f6       	brne	.-78     	; 0x39c <main+0x52>
		{
			// traitement sur front descendant
			loose_counter++;
     3ea:	9f ef       	ldi	r25, 0xFF	; 255
     3ec:	e9 1a       	sub	r14, r25
     3ee:	f9 0a       	sbc	r15, r25
			printf("You lost %d times \n\r", loose_counter);
     3f0:	ff 92       	push	r15
     3f2:	ef 92       	push	r14
     3f4:	df 92       	push	r13
     3f6:	cf 92       	push	r12
     3f8:	bb d3       	rcall	.+1910   	; 0xb70 <printf>
     3fa:	83 ed       	ldi	r24, 0xD3	; 211
     3fc:	90 e3       	ldi	r25, 0x30	; 48
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	f1 f7       	brne	.-4      	; 0x3fe <main+0xb4>
     402:	00 c0       	rjmp	.+0      	; 0x404 <main+0xba>
     404:	00 00       	nop
     406:	0f 90       	pop	r0
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	0f 90       	pop	r0
			old_val = 0;
     40e:	0a 2d       	mov	r16, r10
     410:	1b 2d       	mov	r17, r11
     412:	c4 cf       	rjmp	.-120    	; 0x39c <main+0x52>

00000414 <mcp2515_reset>:
		
	uint8_t cmd[] = {rqs};
	spi_write(cmd, 1);		
	
	PORTB |= (1<<PB7); // Deselect CAN-controller
}
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	1f 92       	push	r1
     41a:	cd b7       	in	r28, 0x3d	; 61
     41c:	de b7       	in	r29, 0x3e	; 62
     41e:	2f 98       	cbi	0x05, 7	; 5
     420:	80 ec       	ldi	r24, 0xC0	; 192
     422:	89 83       	std	Y+1, r24	; 0x01
     424:	61 e0       	ldi	r22, 0x01	; 1
     426:	ce 01       	movw	r24, r28
     428:	01 96       	adiw	r24, 0x01	; 1
     42a:	09 d1       	rcall	.+530    	; 0x63e <spi_write>
     42c:	2f 9a       	sbi	0x05, 7	; 5
     42e:	0f 90       	pop	r0
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	08 95       	ret

00000436 <mcp2515_init>:
     436:	d4 d0       	rcall	.+424    	; 0x5e0 <spi_init>
     438:	ed cf       	rjmp	.-38     	; 0x414 <mcp2515_reset>
     43a:	08 95       	ret

0000043c <mcp2515_read>:
     43c:	ff 92       	push	r15
     43e:	0f 93       	push	r16
     440:	1f 93       	push	r17
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
     446:	1f 92       	push	r1
     448:	1f 92       	push	r1
     44a:	cd b7       	in	r28, 0x3d	; 61
     44c:	de b7       	in	r29, 0x3e	; 62
     44e:	8b 01       	movw	r16, r22
     450:	f4 2e       	mov	r15, r20
     452:	2f 98       	cbi	0x05, 7	; 5
     454:	93 e0       	ldi	r25, 0x03	; 3
     456:	99 83       	std	Y+1, r25	; 0x01
     458:	8a 83       	std	Y+2, r24	; 0x02
     45a:	62 e0       	ldi	r22, 0x02	; 2
     45c:	ce 01       	movw	r24, r28
     45e:	01 96       	adiw	r24, 0x01	; 1
     460:	ee d0       	rcall	.+476    	; 0x63e <spi_write>
     462:	6f 2d       	mov	r22, r15
     464:	c8 01       	movw	r24, r16
     466:	c5 d0       	rcall	.+394    	; 0x5f2 <spi_read>
     468:	2f 9a       	sbi	0x05, 7	; 5
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	1f 91       	pop	r17
     474:	0f 91       	pop	r16
     476:	ff 90       	pop	r15
     478:	08 95       	ret

0000047a <mcp2515_write>:
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	00 d0       	rcall	.+0      	; 0x480 <mcp2515_write+0x6>
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62
     484:	2f 98       	cbi	0x05, 7	; 5
     486:	92 e0       	ldi	r25, 0x02	; 2
     488:	99 83       	std	Y+1, r25	; 0x01
     48a:	8a 83       	std	Y+2, r24	; 0x02
     48c:	6b 83       	std	Y+3, r22	; 0x03
     48e:	62 e0       	ldi	r22, 0x02	; 2
     490:	64 0f       	add	r22, r20
     492:	ce 01       	movw	r24, r28
     494:	01 96       	adiw	r24, 0x01	; 1
     496:	d3 d0       	rcall	.+422    	; 0x63e <spi_write>
     498:	2f 9a       	sbi	0x05, 7	; 5
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
     49e:	0f 90       	pop	r0
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	08 95       	ret

000004a6 <mcp2515_bit_modify>:

// Modify bits in the register / See datasheet 12.10
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data) 
{
     4a6:	cf 93       	push	r28
     4a8:	df 93       	push	r29
     4aa:	00 d0       	rcall	.+0      	; 0x4ac <mcp2515_bit_modify+0x6>
     4ac:	1f 92       	push	r1
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PB7); // Select CAN-controller
     4b2:	2f 98       	cbi	0x05, 7	; 5
	//SPSR &= ~(1 << SPIF);	

	uint8_t bit_list[] = {MCP_BITMOD, address, mask, data};
     4b4:	95 e0       	ldi	r25, 0x05	; 5
     4b6:	99 83       	std	Y+1, r25	; 0x01
     4b8:	8a 83       	std	Y+2, r24	; 0x02
     4ba:	6b 83       	std	Y+3, r22	; 0x03
     4bc:	4c 83       	std	Y+4, r20	; 0x04
	spi_write(bit_list, 4);	
     4be:	64 e0       	ldi	r22, 0x04	; 4
     4c0:	ce 01       	movw	r24, r28
     4c2:	01 96       	adiw	r24, 0x01	; 1
     4c4:	bc d0       	rcall	.+376    	; 0x63e <spi_write>
	
	PORTB |= (1<<PB7); //Deselect CAN-controller
     4c6:	2f 9a       	sbi	0x05, 7	; 5

}
     4c8:	0f 90       	pop	r0
     4ca:	0f 90       	pop	r0
     4cc:	0f 90       	pop	r0
     4ce:	0f 90       	pop	r0
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	08 95       	ret

000004d6 <pwm_set_signal_period>:
	
}

void pwm_set_signal_period(){
	//prescale
	set_bit(TCCR1B, CS11);
     4d6:	e1 e8       	ldi	r30, 0x81	; 129
     4d8:	f0 e0       	ldi	r31, 0x00	; 0
     4da:	80 81       	ld	r24, Z
     4dc:	82 60       	ori	r24, 0x02	; 2
     4de:	80 83       	st	Z, r24
	clear_bit(TCCR1B, CS12);
     4e0:	80 81       	ld	r24, Z
     4e2:	8b 7f       	andi	r24, 0xFB	; 251
     4e4:	80 83       	st	Z, r24
	clear_bit(TCCR1B, CS10);
     4e6:	80 81       	ld	r24, Z
     4e8:	8e 7f       	andi	r24, 0xFE	; 254
     4ea:	80 83       	st	Z, r24
	
	ICR1 = TOP_VALUE;	//set period to 20ms
     4ec:	80 e4       	ldi	r24, 0x40	; 64
     4ee:	9c e9       	ldi	r25, 0x9C	; 156
     4f0:	90 93 87 00 	sts	0x0087, r25
     4f4:	80 93 86 00 	sts	0x0086, r24
     4f8:	08 95       	ret

000004fa <pwm_init>:
#define  TOP_VALUE FOSC/8/50


void pwm_init(){
	// set mode to fast pwm
	set_bit(TCCR1B, WGM13);
     4fa:	e1 e8       	ldi	r30, 0x81	; 129
     4fc:	f0 e0       	ldi	r31, 0x00	; 0
     4fe:	80 81       	ld	r24, Z
     500:	80 61       	ori	r24, 0x10	; 16
     502:	80 83       	st	Z, r24
	set_bit(TCCR1B, WGM12);
     504:	80 81       	ld	r24, Z
     506:	88 60       	ori	r24, 0x08	; 8
     508:	80 83       	st	Z, r24
	set_bit(TCCR1A, WGM11);
     50a:	e0 e8       	ldi	r30, 0x80	; 128
     50c:	f0 e0       	ldi	r31, 0x00	; 0
     50e:	80 81       	ld	r24, Z
     510:	82 60       	ori	r24, 0x02	; 2
     512:	80 83       	st	Z, r24
	clear_bit(TCCR1A, WGM10);
     514:	80 81       	ld	r24, Z
     516:	8e 7f       	andi	r24, 0xFE	; 254
     518:	80 83       	st	Z, r24
	
	//set output on PB5 to compare
	set_bit(TCCR1A, COM1A1);
     51a:	80 81       	ld	r24, Z
     51c:	80 68       	ori	r24, 0x80	; 128
     51e:	80 83       	st	Z, r24
	clear_bit(TCCR1A, COM1A0);
     520:	80 81       	ld	r24, Z
     522:	8f 7b       	andi	r24, 0xBF	; 191
     524:	80 83       	st	Z, r24
	pwm_set_signal_period();
     526:	d7 df       	rcall	.-82     	; 0x4d6 <pwm_set_signal_period>
	
	//set PB5 to output mode
	set_bit(DDRB, PB5);
     528:	25 9a       	sbi	0x04, 5	; 4
void pwm_set_pulse_width(float pulse_width){
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
	if (pulse_width>2100.0){pulse_width=2100.0;}	
	int pulse = (int) (pulse_width/20000*TOP_VALUE);	//pw*2
	OCR1A = pulse;
     52a:	88 eb       	ldi	r24, 0xB8	; 184
     52c:	9b e0       	ldi	r25, 0x0B	; 11
     52e:	90 93 89 00 	sts	0x0089, r25
     532:	80 93 88 00 	sts	0x0088, r24
     536:	08 95       	ret

00000538 <pwm_set_pulse_width>:
	
	ICR1 = TOP_VALUE;	//set period to 20ms
	//ICR1 = 1250;
}

void pwm_set_pulse_width(float pulse_width){
     538:	cf 92       	push	r12
     53a:	df 92       	push	r13
     53c:	ef 92       	push	r14
     53e:	ff 92       	push	r15
     540:	6b 01       	movw	r12, r22
     542:	7c 01       	movw	r14, r24
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	41 e6       	ldi	r20, 0x61	; 97
     54a:	54 e4       	ldi	r21, 0x44	; 68
     54c:	11 d1       	rcall	.+546    	; 0x770 <__cmpsf2>
     54e:	88 23       	and	r24, r24
     550:	54 f0       	brlt	.+20     	; 0x566 <pwm_set_pulse_width+0x2e>
	if (pulse_width>2100.0){pulse_width=2100.0;}	
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e4       	ldi	r19, 0x40	; 64
     556:	43 e0       	ldi	r20, 0x03	; 3
     558:	55 e4       	ldi	r21, 0x45	; 69
     55a:	c7 01       	movw	r24, r14
     55c:	b6 01       	movw	r22, r12
     55e:	57 d2       	rcall	.+1198   	; 0xa0e <__gesf2>
     560:	18 16       	cp	r1, r24
     562:	54 f0       	brlt	.+20     	; 0x578 <pwm_set_pulse_width+0x40>
     564:	12 c0       	rjmp	.+36     	; 0x58a <pwm_set_pulse_width+0x52>
	//ICR1 = 1250;
}

void pwm_set_pulse_width(float pulse_width){
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
     566:	0f 2e       	mov	r0, r31
     568:	c1 2c       	mov	r12, r1
     56a:	d1 2c       	mov	r13, r1
     56c:	f1 e6       	ldi	r31, 0x61	; 97
     56e:	ef 2e       	mov	r14, r31
     570:	f4 e4       	ldi	r31, 0x44	; 68
     572:	ff 2e       	mov	r15, r31
     574:	f0 2d       	mov	r31, r0
     576:	09 c0       	rjmp	.+18     	; 0x58a <pwm_set_pulse_width+0x52>
	if (pulse_width>2100.0){pulse_width=2100.0;}	
     578:	0f 2e       	mov	r0, r31
     57a:	c1 2c       	mov	r12, r1
     57c:	f0 e4       	ldi	r31, 0x40	; 64
     57e:	df 2e       	mov	r13, r31
     580:	f3 e0       	ldi	r31, 0x03	; 3
     582:	ef 2e       	mov	r14, r31
     584:	f5 e4       	ldi	r31, 0x45	; 69
     586:	ff 2e       	mov	r15, r31
     588:	f0 2d       	mov	r31, r0
	int pulse = (int) (pulse_width/20000*TOP_VALUE);	//pw*2
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e4       	ldi	r19, 0x40	; 64
     58e:	4c e9       	ldi	r20, 0x9C	; 156
     590:	56 e4       	ldi	r21, 0x46	; 70
     592:	c7 01       	movw	r24, r14
     594:	b6 01       	movw	r22, r12
     596:	f0 d0       	rcall	.+480    	; 0x778 <__divsf3>
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	34 e2       	ldi	r19, 0x24	; 36
     59c:	44 e7       	ldi	r20, 0x74	; 116
     59e:	5b e4       	ldi	r21, 0x4B	; 75
     5a0:	3a d2       	rcall	.+1140   	; 0xa16 <__mulsf3>
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	30 e0       	ldi	r19, 0x00	; 0
     5a6:	40 e0       	ldi	r20, 0x00	; 0
     5a8:	5e e3       	ldi	r21, 0x3E	; 62
     5aa:	35 d2       	rcall	.+1130   	; 0xa16 <__mulsf3>
     5ac:	20 e0       	ldi	r18, 0x00	; 0
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	48 e4       	ldi	r20, 0x48	; 72
     5b2:	52 e4       	ldi	r21, 0x42	; 66
     5b4:	e1 d0       	rcall	.+450    	; 0x778 <__divsf3>
     5b6:	48 d1       	rcall	.+656    	; 0x848 <__fixsfsi>
	OCR1A = pulse;
     5b8:	70 93 89 00 	sts	0x0089, r23
     5bc:	60 93 88 00 	sts	0x0088, r22
	
	//printf("OCR1A: %d\n\r",  OCR1A);
	
	//OCR1A = 1150;
}
     5c0:	ff 90       	pop	r15
     5c2:	ef 90       	pop	r14
     5c4:	df 90       	pop	r13
     5c6:	cf 90       	pop	r12
     5c8:	08 95       	ret

000005ca <pwm_scale_joystick_val>:

float pwm_scale_joystick_val(float x_val){
		return (x_val*4.7059+900);	
     5ca:	2c eb       	ldi	r18, 0xBC	; 188
     5cc:	36 e9       	ldi	r19, 0x96	; 150
     5ce:	46 e9       	ldi	r20, 0x96	; 150
     5d0:	50 e4       	ldi	r21, 0x40	; 64
     5d2:	21 d2       	rcall	.+1090   	; 0xa16 <__mulsf3>
     5d4:	20 e0       	ldi	r18, 0x00	; 0
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	41 e6       	ldi	r20, 0x61	; 97
     5da:	54 e4       	ldi	r21, 0x44	; 68
     5dc:	65 c0       	rjmp	.+202    	; 0x6a8 <__addsf3>
}
     5de:	08 95       	ret

000005e0 <spi_init>:
#define MISO_PIN PB3

void spi_init() {

  /* Set MOSI and SCK and CS output, all others input */
  DDRB |= (1 << MOSI_PIN) | (1 << SCK_PIN) | (1 << SS_PIN) | (1 << PB0);
     5e0:	84 b1       	in	r24, 0x04	; 4
     5e2:	87 68       	ori	r24, 0x87	; 135
     5e4:	84 b9       	out	0x04, r24	; 4
  PORTB |= (1 << SS_PIN) | (1 << PB0); // Set Master mode
     5e6:	85 b1       	in	r24, 0x05	; 5
     5e8:	81 68       	ori	r24, 0x81	; 129
     5ea:	85 b9       	out	0x05, r24	; 5
  /* Enable interrupt */
  // SPSR = (1<<SPIF);

  /* Enable SPI interrupt, SPI, Master, set clock rate fck/16 , SPI mode 0 by
   * default*/
  SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     5ec:	81 e5       	ldi	r24, 0x51	; 81
     5ee:	8c bd       	out	0x2c, r24	; 44
     5f0:	08 95       	ret

000005f2 <spi_read>:
}

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
     5f2:	cf 93       	push	r28
     5f4:	df 93       	push	r29
     5f6:	cd b7       	in	r28, 0x3d	; 61
     5f8:	de b7       	in	r29, 0x3e	; 62
     5fa:	2a 97       	sbiw	r28, 0x0a	; 10
     5fc:	0f b6       	in	r0, 0x3f	; 63
     5fe:	f8 94       	cli
     600:	de bf       	out	0x3e, r29	; 62
     602:	0f be       	out	0x3f, r0	; 63
     604:	cd bf       	out	0x3d, r28	; 61
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     606:	66 23       	and	r22, r22
     608:	89 f0       	breq	.+34     	; 0x62c <spi_read+0x3a>
     60a:	fe 01       	movw	r30, r28
     60c:	31 96       	adiw	r30, 0x01	; 1
     60e:	a8 2f       	mov	r26, r24
     610:	b9 2f       	mov	r27, r25
     612:	cf 01       	movw	r24, r30
     614:	86 0f       	add	r24, r22
     616:	91 1d       	adc	r25, r1
	{
		SPDR = dummy_data[i];
     618:	21 91       	ld	r18, Z+
     61a:	2e bd       	out	0x2e, r18	; 46
		int j = 0;
		while (!(SPSR & (1 << SPIF))){
     61c:	0d b4       	in	r0, 0x2d	; 45
     61e:	07 fe       	sbrs	r0, 7
     620:	fd cf       	rjmp	.-6      	; 0x61c <spi_read+0x2a>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
     622:	2e b5       	in	r18, 0x2e	; 46
     624:	2d 93       	st	X+, r18

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     626:	e8 17       	cp	r30, r24
     628:	f9 07       	cpc	r31, r25
     62a:	b1 f7       	brne	.-20     	; 0x618 <spi_read+0x26>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
	}
	
}
     62c:	2a 96       	adiw	r28, 0x0a	; 10
     62e:	0f b6       	in	r0, 0x3f	; 63
     630:	f8 94       	cli
     632:	de bf       	out	0x3e, r29	; 62
     634:	0f be       	out	0x3f, r0	; 63
     636:	cd bf       	out	0x3d, r28	; 61
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <spi_write>:

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     63e:	26 2f       	mov	r18, r22
     640:	30 e0       	ldi	r19, 0x00	; 0
     642:	12 16       	cp	r1, r18
     644:	13 06       	cpc	r1, r19
     646:	74 f4       	brge	.+28     	; 0x664 <spi_write+0x26>
     648:	e8 2f       	mov	r30, r24
     64a:	f9 2f       	mov	r31, r25
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	90 e0       	ldi	r25, 0x00	; 0
	{
		SPDR = send_data[i];
     650:	41 91       	ld	r20, Z+
     652:	4e bd       	out	0x2e, r20	; 46
		while (!(SPSR & (1 << SPIF)));
     654:	0d b4       	in	r0, 0x2d	; 45
     656:	07 fe       	sbrs	r0, 7
     658:	fd cf       	rjmp	.-6      	; 0x654 <spi_write+0x16>
		dummy_data[i] = SPDR;
     65a:	4e b5       	in	r20, 0x2e	; 46
}

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     65c:	01 96       	adiw	r24, 0x01	; 1
     65e:	82 17       	cp	r24, r18
     660:	93 07       	cpc	r25, r19
     662:	b4 f3       	brlt	.-20     	; 0x650 <spi_write+0x12>
     664:	08 95       	ret

00000666 <USART_Transmit>:
     666:	e0 ec       	ldi	r30, 0xC0	; 192
     668:	f0 e0       	ldi	r31, 0x00	; 0
     66a:	90 81       	ld	r25, Z
     66c:	95 ff       	sbrs	r25, 5
     66e:	fd cf       	rjmp	.-6      	; 0x66a <USART_Transmit+0x4>
     670:	80 93 c6 00 	sts	0x00C6, r24
     674:	08 95       	ret

00000676 <USART_Receive>:
     676:	e0 ec       	ldi	r30, 0xC0	; 192
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	80 81       	ld	r24, Z
     67c:	88 23       	and	r24, r24
     67e:	ec f3       	brlt	.-6      	; 0x67a <USART_Receive+0x4>
     680:	80 91 c6 00 	lds	r24, 0x00C6
     684:	08 95       	ret

00000686 <USART_Init>:
     686:	90 93 c5 00 	sts	0x00C5, r25
     68a:	80 93 c4 00 	sts	0x00C4, r24
     68e:	88 e1       	ldi	r24, 0x18	; 24
     690:	80 93 c1 00 	sts	0x00C1, r24
     694:	8e e0       	ldi	r24, 0x0E	; 14
     696:	80 93 c2 00 	sts	0x00C2, r24
     69a:	6b e3       	ldi	r22, 0x3B	; 59
     69c:	73 e0       	ldi	r23, 0x03	; 3
     69e:	83 e3       	ldi	r24, 0x33	; 51
     6a0:	93 e0       	ldi	r25, 0x03	; 3
     6a2:	1c c2       	rjmp	.+1080   	; 0xadc <fdevopen>
     6a4:	08 95       	ret

000006a6 <__subsf3>:
     6a6:	50 58       	subi	r21, 0x80	; 128

000006a8 <__addsf3>:
     6a8:	bb 27       	eor	r27, r27
     6aa:	aa 27       	eor	r26, r26
     6ac:	0e d0       	rcall	.+28     	; 0x6ca <__addsf3x>
     6ae:	75 c1       	rjmp	.+746    	; 0x99a <__fp_round>
     6b0:	66 d1       	rcall	.+716    	; 0x97e <__fp_pscA>
     6b2:	30 f0       	brcs	.+12     	; 0x6c0 <__addsf3+0x18>
     6b4:	6b d1       	rcall	.+726    	; 0x98c <__fp_pscB>
     6b6:	20 f0       	brcs	.+8      	; 0x6c0 <__addsf3+0x18>
     6b8:	31 f4       	brne	.+12     	; 0x6c6 <__addsf3+0x1e>
     6ba:	9f 3f       	cpi	r25, 0xFF	; 255
     6bc:	11 f4       	brne	.+4      	; 0x6c2 <__addsf3+0x1a>
     6be:	1e f4       	brtc	.+6      	; 0x6c6 <__addsf3+0x1e>
     6c0:	5b c1       	rjmp	.+694    	; 0x978 <__fp_nan>
     6c2:	0e f4       	brtc	.+2      	; 0x6c6 <__addsf3+0x1e>
     6c4:	e0 95       	com	r30
     6c6:	e7 fb       	bst	r30, 7
     6c8:	51 c1       	rjmp	.+674    	; 0x96c <__fp_inf>

000006ca <__addsf3x>:
     6ca:	e9 2f       	mov	r30, r25
     6cc:	77 d1       	rcall	.+750    	; 0x9bc <__fp_split3>
     6ce:	80 f3       	brcs	.-32     	; 0x6b0 <__addsf3+0x8>
     6d0:	ba 17       	cp	r27, r26
     6d2:	62 07       	cpc	r22, r18
     6d4:	73 07       	cpc	r23, r19
     6d6:	84 07       	cpc	r24, r20
     6d8:	95 07       	cpc	r25, r21
     6da:	18 f0       	brcs	.+6      	; 0x6e2 <__addsf3x+0x18>
     6dc:	71 f4       	brne	.+28     	; 0x6fa <__addsf3x+0x30>
     6de:	9e f5       	brtc	.+102    	; 0x746 <__addsf3x+0x7c>
     6e0:	8f c1       	rjmp	.+798    	; 0xa00 <__fp_zero>
     6e2:	0e f4       	brtc	.+2      	; 0x6e6 <__addsf3x+0x1c>
     6e4:	e0 95       	com	r30
     6e6:	0b 2e       	mov	r0, r27
     6e8:	ba 2f       	mov	r27, r26
     6ea:	a0 2d       	mov	r26, r0
     6ec:	0b 01       	movw	r0, r22
     6ee:	b9 01       	movw	r22, r18
     6f0:	90 01       	movw	r18, r0
     6f2:	0c 01       	movw	r0, r24
     6f4:	ca 01       	movw	r24, r20
     6f6:	a0 01       	movw	r20, r0
     6f8:	11 24       	eor	r1, r1
     6fa:	ff 27       	eor	r31, r31
     6fc:	59 1b       	sub	r21, r25
     6fe:	99 f0       	breq	.+38     	; 0x726 <__addsf3x+0x5c>
     700:	59 3f       	cpi	r21, 0xF9	; 249
     702:	50 f4       	brcc	.+20     	; 0x718 <__addsf3x+0x4e>
     704:	50 3e       	cpi	r21, 0xE0	; 224
     706:	68 f1       	brcs	.+90     	; 0x762 <__addsf3x+0x98>
     708:	1a 16       	cp	r1, r26
     70a:	f0 40       	sbci	r31, 0x00	; 0
     70c:	a2 2f       	mov	r26, r18
     70e:	23 2f       	mov	r18, r19
     710:	34 2f       	mov	r19, r20
     712:	44 27       	eor	r20, r20
     714:	58 5f       	subi	r21, 0xF8	; 248
     716:	f3 cf       	rjmp	.-26     	; 0x6fe <__addsf3x+0x34>
     718:	46 95       	lsr	r20
     71a:	37 95       	ror	r19
     71c:	27 95       	ror	r18
     71e:	a7 95       	ror	r26
     720:	f0 40       	sbci	r31, 0x00	; 0
     722:	53 95       	inc	r21
     724:	c9 f7       	brne	.-14     	; 0x718 <__addsf3x+0x4e>
     726:	7e f4       	brtc	.+30     	; 0x746 <__addsf3x+0x7c>
     728:	1f 16       	cp	r1, r31
     72a:	ba 0b       	sbc	r27, r26
     72c:	62 0b       	sbc	r22, r18
     72e:	73 0b       	sbc	r23, r19
     730:	84 0b       	sbc	r24, r20
     732:	ba f0       	brmi	.+46     	; 0x762 <__addsf3x+0x98>
     734:	91 50       	subi	r25, 0x01	; 1
     736:	a1 f0       	breq	.+40     	; 0x760 <__addsf3x+0x96>
     738:	ff 0f       	add	r31, r31
     73a:	bb 1f       	adc	r27, r27
     73c:	66 1f       	adc	r22, r22
     73e:	77 1f       	adc	r23, r23
     740:	88 1f       	adc	r24, r24
     742:	c2 f7       	brpl	.-16     	; 0x734 <__addsf3x+0x6a>
     744:	0e c0       	rjmp	.+28     	; 0x762 <__addsf3x+0x98>
     746:	ba 0f       	add	r27, r26
     748:	62 1f       	adc	r22, r18
     74a:	73 1f       	adc	r23, r19
     74c:	84 1f       	adc	r24, r20
     74e:	48 f4       	brcc	.+18     	; 0x762 <__addsf3x+0x98>
     750:	87 95       	ror	r24
     752:	77 95       	ror	r23
     754:	67 95       	ror	r22
     756:	b7 95       	ror	r27
     758:	f7 95       	ror	r31
     75a:	9e 3f       	cpi	r25, 0xFE	; 254
     75c:	08 f0       	brcs	.+2      	; 0x760 <__addsf3x+0x96>
     75e:	b3 cf       	rjmp	.-154    	; 0x6c6 <__addsf3+0x1e>
     760:	93 95       	inc	r25
     762:	88 0f       	add	r24, r24
     764:	08 f0       	brcs	.+2      	; 0x768 <__addsf3x+0x9e>
     766:	99 27       	eor	r25, r25
     768:	ee 0f       	add	r30, r30
     76a:	97 95       	ror	r25
     76c:	87 95       	ror	r24
     76e:	08 95       	ret

00000770 <__cmpsf2>:
     770:	d9 d0       	rcall	.+434    	; 0x924 <__fp_cmp>
     772:	08 f4       	brcc	.+2      	; 0x776 <__cmpsf2+0x6>
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	08 95       	ret

00000778 <__divsf3>:
     778:	0c d0       	rcall	.+24     	; 0x792 <__divsf3x>
     77a:	0f c1       	rjmp	.+542    	; 0x99a <__fp_round>
     77c:	07 d1       	rcall	.+526    	; 0x98c <__fp_pscB>
     77e:	40 f0       	brcs	.+16     	; 0x790 <__divsf3+0x18>
     780:	fe d0       	rcall	.+508    	; 0x97e <__fp_pscA>
     782:	30 f0       	brcs	.+12     	; 0x790 <__divsf3+0x18>
     784:	21 f4       	brne	.+8      	; 0x78e <__divsf3+0x16>
     786:	5f 3f       	cpi	r21, 0xFF	; 255
     788:	19 f0       	breq	.+6      	; 0x790 <__divsf3+0x18>
     78a:	f0 c0       	rjmp	.+480    	; 0x96c <__fp_inf>
     78c:	51 11       	cpse	r21, r1
     78e:	39 c1       	rjmp	.+626    	; 0xa02 <__fp_szero>
     790:	f3 c0       	rjmp	.+486    	; 0x978 <__fp_nan>

00000792 <__divsf3x>:
     792:	14 d1       	rcall	.+552    	; 0x9bc <__fp_split3>
     794:	98 f3       	brcs	.-26     	; 0x77c <__divsf3+0x4>

00000796 <__divsf3_pse>:
     796:	99 23       	and	r25, r25
     798:	c9 f3       	breq	.-14     	; 0x78c <__divsf3+0x14>
     79a:	55 23       	and	r21, r21
     79c:	b1 f3       	breq	.-20     	; 0x78a <__divsf3+0x12>
     79e:	95 1b       	sub	r25, r21
     7a0:	55 0b       	sbc	r21, r21
     7a2:	bb 27       	eor	r27, r27
     7a4:	aa 27       	eor	r26, r26
     7a6:	62 17       	cp	r22, r18
     7a8:	73 07       	cpc	r23, r19
     7aa:	84 07       	cpc	r24, r20
     7ac:	38 f0       	brcs	.+14     	; 0x7bc <__divsf3_pse+0x26>
     7ae:	9f 5f       	subi	r25, 0xFF	; 255
     7b0:	5f 4f       	sbci	r21, 0xFF	; 255
     7b2:	22 0f       	add	r18, r18
     7b4:	33 1f       	adc	r19, r19
     7b6:	44 1f       	adc	r20, r20
     7b8:	aa 1f       	adc	r26, r26
     7ba:	a9 f3       	breq	.-22     	; 0x7a6 <__divsf3_pse+0x10>
     7bc:	33 d0       	rcall	.+102    	; 0x824 <__divsf3_pse+0x8e>
     7be:	0e 2e       	mov	r0, r30
     7c0:	3a f0       	brmi	.+14     	; 0x7d0 <__divsf3_pse+0x3a>
     7c2:	e0 e8       	ldi	r30, 0x80	; 128
     7c4:	30 d0       	rcall	.+96     	; 0x826 <__divsf3_pse+0x90>
     7c6:	91 50       	subi	r25, 0x01	; 1
     7c8:	50 40       	sbci	r21, 0x00	; 0
     7ca:	e6 95       	lsr	r30
     7cc:	00 1c       	adc	r0, r0
     7ce:	ca f7       	brpl	.-14     	; 0x7c2 <__divsf3_pse+0x2c>
     7d0:	29 d0       	rcall	.+82     	; 0x824 <__divsf3_pse+0x8e>
     7d2:	fe 2f       	mov	r31, r30
     7d4:	27 d0       	rcall	.+78     	; 0x824 <__divsf3_pse+0x8e>
     7d6:	66 0f       	add	r22, r22
     7d8:	77 1f       	adc	r23, r23
     7da:	88 1f       	adc	r24, r24
     7dc:	bb 1f       	adc	r27, r27
     7de:	26 17       	cp	r18, r22
     7e0:	37 07       	cpc	r19, r23
     7e2:	48 07       	cpc	r20, r24
     7e4:	ab 07       	cpc	r26, r27
     7e6:	b0 e8       	ldi	r27, 0x80	; 128
     7e8:	09 f0       	breq	.+2      	; 0x7ec <__divsf3_pse+0x56>
     7ea:	bb 0b       	sbc	r27, r27
     7ec:	80 2d       	mov	r24, r0
     7ee:	bf 01       	movw	r22, r30
     7f0:	ff 27       	eor	r31, r31
     7f2:	93 58       	subi	r25, 0x83	; 131
     7f4:	5f 4f       	sbci	r21, 0xFF	; 255
     7f6:	2a f0       	brmi	.+10     	; 0x802 <__divsf3_pse+0x6c>
     7f8:	9e 3f       	cpi	r25, 0xFE	; 254
     7fa:	51 05       	cpc	r21, r1
     7fc:	68 f0       	brcs	.+26     	; 0x818 <__divsf3_pse+0x82>
     7fe:	b6 c0       	rjmp	.+364    	; 0x96c <__fp_inf>
     800:	00 c1       	rjmp	.+512    	; 0xa02 <__fp_szero>
     802:	5f 3f       	cpi	r21, 0xFF	; 255
     804:	ec f3       	brlt	.-6      	; 0x800 <__divsf3_pse+0x6a>
     806:	98 3e       	cpi	r25, 0xE8	; 232
     808:	dc f3       	brlt	.-10     	; 0x800 <__divsf3_pse+0x6a>
     80a:	86 95       	lsr	r24
     80c:	77 95       	ror	r23
     80e:	67 95       	ror	r22
     810:	b7 95       	ror	r27
     812:	f7 95       	ror	r31
     814:	9f 5f       	subi	r25, 0xFF	; 255
     816:	c9 f7       	brne	.-14     	; 0x80a <__divsf3_pse+0x74>
     818:	88 0f       	add	r24, r24
     81a:	91 1d       	adc	r25, r1
     81c:	96 95       	lsr	r25
     81e:	87 95       	ror	r24
     820:	97 f9       	bld	r25, 7
     822:	08 95       	ret
     824:	e1 e0       	ldi	r30, 0x01	; 1
     826:	66 0f       	add	r22, r22
     828:	77 1f       	adc	r23, r23
     82a:	88 1f       	adc	r24, r24
     82c:	bb 1f       	adc	r27, r27
     82e:	62 17       	cp	r22, r18
     830:	73 07       	cpc	r23, r19
     832:	84 07       	cpc	r24, r20
     834:	ba 07       	cpc	r27, r26
     836:	20 f0       	brcs	.+8      	; 0x840 <__divsf3_pse+0xaa>
     838:	62 1b       	sub	r22, r18
     83a:	73 0b       	sbc	r23, r19
     83c:	84 0b       	sbc	r24, r20
     83e:	ba 0b       	sbc	r27, r26
     840:	ee 1f       	adc	r30, r30
     842:	88 f7       	brcc	.-30     	; 0x826 <__divsf3_pse+0x90>
     844:	e0 95       	com	r30
     846:	08 95       	ret

00000848 <__fixsfsi>:
     848:	04 d0       	rcall	.+8      	; 0x852 <__fixunssfsi>
     84a:	68 94       	set
     84c:	b1 11       	cpse	r27, r1
     84e:	d9 c0       	rjmp	.+434    	; 0xa02 <__fp_szero>
     850:	08 95       	ret

00000852 <__fixunssfsi>:
     852:	bc d0       	rcall	.+376    	; 0x9cc <__fp_splitA>
     854:	88 f0       	brcs	.+34     	; 0x878 <__fixunssfsi+0x26>
     856:	9f 57       	subi	r25, 0x7F	; 127
     858:	90 f0       	brcs	.+36     	; 0x87e <__fixunssfsi+0x2c>
     85a:	b9 2f       	mov	r27, r25
     85c:	99 27       	eor	r25, r25
     85e:	b7 51       	subi	r27, 0x17	; 23
     860:	a0 f0       	brcs	.+40     	; 0x88a <__fixunssfsi+0x38>
     862:	d1 f0       	breq	.+52     	; 0x898 <__fixunssfsi+0x46>
     864:	66 0f       	add	r22, r22
     866:	77 1f       	adc	r23, r23
     868:	88 1f       	adc	r24, r24
     86a:	99 1f       	adc	r25, r25
     86c:	1a f0       	brmi	.+6      	; 0x874 <__fixunssfsi+0x22>
     86e:	ba 95       	dec	r27
     870:	c9 f7       	brne	.-14     	; 0x864 <__fixunssfsi+0x12>
     872:	12 c0       	rjmp	.+36     	; 0x898 <__fixunssfsi+0x46>
     874:	b1 30       	cpi	r27, 0x01	; 1
     876:	81 f0       	breq	.+32     	; 0x898 <__fixunssfsi+0x46>
     878:	c3 d0       	rcall	.+390    	; 0xa00 <__fp_zero>
     87a:	b1 e0       	ldi	r27, 0x01	; 1
     87c:	08 95       	ret
     87e:	c0 c0       	rjmp	.+384    	; 0xa00 <__fp_zero>
     880:	67 2f       	mov	r22, r23
     882:	78 2f       	mov	r23, r24
     884:	88 27       	eor	r24, r24
     886:	b8 5f       	subi	r27, 0xF8	; 248
     888:	39 f0       	breq	.+14     	; 0x898 <__fixunssfsi+0x46>
     88a:	b9 3f       	cpi	r27, 0xF9	; 249
     88c:	cc f3       	brlt	.-14     	; 0x880 <__fixunssfsi+0x2e>
     88e:	86 95       	lsr	r24
     890:	77 95       	ror	r23
     892:	67 95       	ror	r22
     894:	b3 95       	inc	r27
     896:	d9 f7       	brne	.-10     	; 0x88e <__fixunssfsi+0x3c>
     898:	3e f4       	brtc	.+14     	; 0x8a8 <__fixunssfsi+0x56>
     89a:	90 95       	com	r25
     89c:	80 95       	com	r24
     89e:	70 95       	com	r23
     8a0:	61 95       	neg	r22
     8a2:	7f 4f       	sbci	r23, 0xFF	; 255
     8a4:	8f 4f       	sbci	r24, 0xFF	; 255
     8a6:	9f 4f       	sbci	r25, 0xFF	; 255
     8a8:	08 95       	ret

000008aa <__floatunsisf>:
     8aa:	e8 94       	clt
     8ac:	09 c0       	rjmp	.+18     	; 0x8c0 <__floatsisf+0x12>

000008ae <__floatsisf>:
     8ae:	97 fb       	bst	r25, 7
     8b0:	3e f4       	brtc	.+14     	; 0x8c0 <__floatsisf+0x12>
     8b2:	90 95       	com	r25
     8b4:	80 95       	com	r24
     8b6:	70 95       	com	r23
     8b8:	61 95       	neg	r22
     8ba:	7f 4f       	sbci	r23, 0xFF	; 255
     8bc:	8f 4f       	sbci	r24, 0xFF	; 255
     8be:	9f 4f       	sbci	r25, 0xFF	; 255
     8c0:	99 23       	and	r25, r25
     8c2:	a9 f0       	breq	.+42     	; 0x8ee <__floatsisf+0x40>
     8c4:	f9 2f       	mov	r31, r25
     8c6:	96 e9       	ldi	r25, 0x96	; 150
     8c8:	bb 27       	eor	r27, r27
     8ca:	93 95       	inc	r25
     8cc:	f6 95       	lsr	r31
     8ce:	87 95       	ror	r24
     8d0:	77 95       	ror	r23
     8d2:	67 95       	ror	r22
     8d4:	b7 95       	ror	r27
     8d6:	f1 11       	cpse	r31, r1
     8d8:	f8 cf       	rjmp	.-16     	; 0x8ca <__floatsisf+0x1c>
     8da:	fa f4       	brpl	.+62     	; 0x91a <__floatsisf+0x6c>
     8dc:	bb 0f       	add	r27, r27
     8de:	11 f4       	brne	.+4      	; 0x8e4 <__floatsisf+0x36>
     8e0:	60 ff       	sbrs	r22, 0
     8e2:	1b c0       	rjmp	.+54     	; 0x91a <__floatsisf+0x6c>
     8e4:	6f 5f       	subi	r22, 0xFF	; 255
     8e6:	7f 4f       	sbci	r23, 0xFF	; 255
     8e8:	8f 4f       	sbci	r24, 0xFF	; 255
     8ea:	9f 4f       	sbci	r25, 0xFF	; 255
     8ec:	16 c0       	rjmp	.+44     	; 0x91a <__floatsisf+0x6c>
     8ee:	88 23       	and	r24, r24
     8f0:	11 f0       	breq	.+4      	; 0x8f6 <__floatsisf+0x48>
     8f2:	96 e9       	ldi	r25, 0x96	; 150
     8f4:	11 c0       	rjmp	.+34     	; 0x918 <__floatsisf+0x6a>
     8f6:	77 23       	and	r23, r23
     8f8:	21 f0       	breq	.+8      	; 0x902 <__floatsisf+0x54>
     8fa:	9e e8       	ldi	r25, 0x8E	; 142
     8fc:	87 2f       	mov	r24, r23
     8fe:	76 2f       	mov	r23, r22
     900:	05 c0       	rjmp	.+10     	; 0x90c <__floatsisf+0x5e>
     902:	66 23       	and	r22, r22
     904:	71 f0       	breq	.+28     	; 0x922 <__floatsisf+0x74>
     906:	96 e8       	ldi	r25, 0x86	; 134
     908:	86 2f       	mov	r24, r22
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	60 e0       	ldi	r22, 0x00	; 0
     90e:	2a f0       	brmi	.+10     	; 0x91a <__floatsisf+0x6c>
     910:	9a 95       	dec	r25
     912:	66 0f       	add	r22, r22
     914:	77 1f       	adc	r23, r23
     916:	88 1f       	adc	r24, r24
     918:	da f7       	brpl	.-10     	; 0x910 <__floatsisf+0x62>
     91a:	88 0f       	add	r24, r24
     91c:	96 95       	lsr	r25
     91e:	87 95       	ror	r24
     920:	97 f9       	bld	r25, 7
     922:	08 95       	ret

00000924 <__fp_cmp>:
     924:	99 0f       	add	r25, r25
     926:	00 08       	sbc	r0, r0
     928:	55 0f       	add	r21, r21
     92a:	aa 0b       	sbc	r26, r26
     92c:	e0 e8       	ldi	r30, 0x80	; 128
     92e:	fe ef       	ldi	r31, 0xFE	; 254
     930:	16 16       	cp	r1, r22
     932:	17 06       	cpc	r1, r23
     934:	e8 07       	cpc	r30, r24
     936:	f9 07       	cpc	r31, r25
     938:	c0 f0       	brcs	.+48     	; 0x96a <__fp_cmp+0x46>
     93a:	12 16       	cp	r1, r18
     93c:	13 06       	cpc	r1, r19
     93e:	e4 07       	cpc	r30, r20
     940:	f5 07       	cpc	r31, r21
     942:	98 f0       	brcs	.+38     	; 0x96a <__fp_cmp+0x46>
     944:	62 1b       	sub	r22, r18
     946:	73 0b       	sbc	r23, r19
     948:	84 0b       	sbc	r24, r20
     94a:	95 0b       	sbc	r25, r21
     94c:	39 f4       	brne	.+14     	; 0x95c <__fp_cmp+0x38>
     94e:	0a 26       	eor	r0, r26
     950:	61 f0       	breq	.+24     	; 0x96a <__fp_cmp+0x46>
     952:	23 2b       	or	r18, r19
     954:	24 2b       	or	r18, r20
     956:	25 2b       	or	r18, r21
     958:	21 f4       	brne	.+8      	; 0x962 <__fp_cmp+0x3e>
     95a:	08 95       	ret
     95c:	0a 26       	eor	r0, r26
     95e:	09 f4       	brne	.+2      	; 0x962 <__fp_cmp+0x3e>
     960:	a1 40       	sbci	r26, 0x01	; 1
     962:	a6 95       	lsr	r26
     964:	8f ef       	ldi	r24, 0xFF	; 255
     966:	81 1d       	adc	r24, r1
     968:	81 1d       	adc	r24, r1
     96a:	08 95       	ret

0000096c <__fp_inf>:
     96c:	97 f9       	bld	r25, 7
     96e:	9f 67       	ori	r25, 0x7F	; 127
     970:	80 e8       	ldi	r24, 0x80	; 128
     972:	70 e0       	ldi	r23, 0x00	; 0
     974:	60 e0       	ldi	r22, 0x00	; 0
     976:	08 95       	ret

00000978 <__fp_nan>:
     978:	9f ef       	ldi	r25, 0xFF	; 255
     97a:	80 ec       	ldi	r24, 0xC0	; 192
     97c:	08 95       	ret

0000097e <__fp_pscA>:
     97e:	00 24       	eor	r0, r0
     980:	0a 94       	dec	r0
     982:	16 16       	cp	r1, r22
     984:	17 06       	cpc	r1, r23
     986:	18 06       	cpc	r1, r24
     988:	09 06       	cpc	r0, r25
     98a:	08 95       	ret

0000098c <__fp_pscB>:
     98c:	00 24       	eor	r0, r0
     98e:	0a 94       	dec	r0
     990:	12 16       	cp	r1, r18
     992:	13 06       	cpc	r1, r19
     994:	14 06       	cpc	r1, r20
     996:	05 06       	cpc	r0, r21
     998:	08 95       	ret

0000099a <__fp_round>:
     99a:	09 2e       	mov	r0, r25
     99c:	03 94       	inc	r0
     99e:	00 0c       	add	r0, r0
     9a0:	11 f4       	brne	.+4      	; 0x9a6 <__fp_round+0xc>
     9a2:	88 23       	and	r24, r24
     9a4:	52 f0       	brmi	.+20     	; 0x9ba <__fp_round+0x20>
     9a6:	bb 0f       	add	r27, r27
     9a8:	40 f4       	brcc	.+16     	; 0x9ba <__fp_round+0x20>
     9aa:	bf 2b       	or	r27, r31
     9ac:	11 f4       	brne	.+4      	; 0x9b2 <__fp_round+0x18>
     9ae:	60 ff       	sbrs	r22, 0
     9b0:	04 c0       	rjmp	.+8      	; 0x9ba <__fp_round+0x20>
     9b2:	6f 5f       	subi	r22, 0xFF	; 255
     9b4:	7f 4f       	sbci	r23, 0xFF	; 255
     9b6:	8f 4f       	sbci	r24, 0xFF	; 255
     9b8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ba:	08 95       	ret

000009bc <__fp_split3>:
     9bc:	57 fd       	sbrc	r21, 7
     9be:	90 58       	subi	r25, 0x80	; 128
     9c0:	44 0f       	add	r20, r20
     9c2:	55 1f       	adc	r21, r21
     9c4:	59 f0       	breq	.+22     	; 0x9dc <__fp_splitA+0x10>
     9c6:	5f 3f       	cpi	r21, 0xFF	; 255
     9c8:	71 f0       	breq	.+28     	; 0x9e6 <__fp_splitA+0x1a>
     9ca:	47 95       	ror	r20

000009cc <__fp_splitA>:
     9cc:	88 0f       	add	r24, r24
     9ce:	97 fb       	bst	r25, 7
     9d0:	99 1f       	adc	r25, r25
     9d2:	61 f0       	breq	.+24     	; 0x9ec <__fp_splitA+0x20>
     9d4:	9f 3f       	cpi	r25, 0xFF	; 255
     9d6:	79 f0       	breq	.+30     	; 0x9f6 <__fp_splitA+0x2a>
     9d8:	87 95       	ror	r24
     9da:	08 95       	ret
     9dc:	12 16       	cp	r1, r18
     9de:	13 06       	cpc	r1, r19
     9e0:	14 06       	cpc	r1, r20
     9e2:	55 1f       	adc	r21, r21
     9e4:	f2 cf       	rjmp	.-28     	; 0x9ca <__fp_split3+0xe>
     9e6:	46 95       	lsr	r20
     9e8:	f1 df       	rcall	.-30     	; 0x9cc <__fp_splitA>
     9ea:	08 c0       	rjmp	.+16     	; 0x9fc <__fp_splitA+0x30>
     9ec:	16 16       	cp	r1, r22
     9ee:	17 06       	cpc	r1, r23
     9f0:	18 06       	cpc	r1, r24
     9f2:	99 1f       	adc	r25, r25
     9f4:	f1 cf       	rjmp	.-30     	; 0x9d8 <__fp_splitA+0xc>
     9f6:	86 95       	lsr	r24
     9f8:	71 05       	cpc	r23, r1
     9fa:	61 05       	cpc	r22, r1
     9fc:	08 94       	sec
     9fe:	08 95       	ret

00000a00 <__fp_zero>:
     a00:	e8 94       	clt

00000a02 <__fp_szero>:
     a02:	bb 27       	eor	r27, r27
     a04:	66 27       	eor	r22, r22
     a06:	77 27       	eor	r23, r23
     a08:	cb 01       	movw	r24, r22
     a0a:	97 f9       	bld	r25, 7
     a0c:	08 95       	ret

00000a0e <__gesf2>:
     a0e:	8a df       	rcall	.-236    	; 0x924 <__fp_cmp>
     a10:	08 f4       	brcc	.+2      	; 0xa14 <__gesf2+0x6>
     a12:	8f ef       	ldi	r24, 0xFF	; 255
     a14:	08 95       	ret

00000a16 <__mulsf3>:
     a16:	0b d0       	rcall	.+22     	; 0xa2e <__mulsf3x>
     a18:	c0 cf       	rjmp	.-128    	; 0x99a <__fp_round>
     a1a:	b1 df       	rcall	.-158    	; 0x97e <__fp_pscA>
     a1c:	28 f0       	brcs	.+10     	; 0xa28 <__mulsf3+0x12>
     a1e:	b6 df       	rcall	.-148    	; 0x98c <__fp_pscB>
     a20:	18 f0       	brcs	.+6      	; 0xa28 <__mulsf3+0x12>
     a22:	95 23       	and	r25, r21
     a24:	09 f0       	breq	.+2      	; 0xa28 <__mulsf3+0x12>
     a26:	a2 cf       	rjmp	.-188    	; 0x96c <__fp_inf>
     a28:	a7 cf       	rjmp	.-178    	; 0x978 <__fp_nan>
     a2a:	11 24       	eor	r1, r1
     a2c:	ea cf       	rjmp	.-44     	; 0xa02 <__fp_szero>

00000a2e <__mulsf3x>:
     a2e:	c6 df       	rcall	.-116    	; 0x9bc <__fp_split3>
     a30:	a0 f3       	brcs	.-24     	; 0xa1a <__mulsf3+0x4>

00000a32 <__mulsf3_pse>:
     a32:	95 9f       	mul	r25, r21
     a34:	d1 f3       	breq	.-12     	; 0xa2a <__mulsf3+0x14>
     a36:	95 0f       	add	r25, r21
     a38:	50 e0       	ldi	r21, 0x00	; 0
     a3a:	55 1f       	adc	r21, r21
     a3c:	62 9f       	mul	r22, r18
     a3e:	f0 01       	movw	r30, r0
     a40:	72 9f       	mul	r23, r18
     a42:	bb 27       	eor	r27, r27
     a44:	f0 0d       	add	r31, r0
     a46:	b1 1d       	adc	r27, r1
     a48:	63 9f       	mul	r22, r19
     a4a:	aa 27       	eor	r26, r26
     a4c:	f0 0d       	add	r31, r0
     a4e:	b1 1d       	adc	r27, r1
     a50:	aa 1f       	adc	r26, r26
     a52:	64 9f       	mul	r22, r20
     a54:	66 27       	eor	r22, r22
     a56:	b0 0d       	add	r27, r0
     a58:	a1 1d       	adc	r26, r1
     a5a:	66 1f       	adc	r22, r22
     a5c:	82 9f       	mul	r24, r18
     a5e:	22 27       	eor	r18, r18
     a60:	b0 0d       	add	r27, r0
     a62:	a1 1d       	adc	r26, r1
     a64:	62 1f       	adc	r22, r18
     a66:	73 9f       	mul	r23, r19
     a68:	b0 0d       	add	r27, r0
     a6a:	a1 1d       	adc	r26, r1
     a6c:	62 1f       	adc	r22, r18
     a6e:	83 9f       	mul	r24, r19
     a70:	a0 0d       	add	r26, r0
     a72:	61 1d       	adc	r22, r1
     a74:	22 1f       	adc	r18, r18
     a76:	74 9f       	mul	r23, r20
     a78:	33 27       	eor	r19, r19
     a7a:	a0 0d       	add	r26, r0
     a7c:	61 1d       	adc	r22, r1
     a7e:	23 1f       	adc	r18, r19
     a80:	84 9f       	mul	r24, r20
     a82:	60 0d       	add	r22, r0
     a84:	21 1d       	adc	r18, r1
     a86:	82 2f       	mov	r24, r18
     a88:	76 2f       	mov	r23, r22
     a8a:	6a 2f       	mov	r22, r26
     a8c:	11 24       	eor	r1, r1
     a8e:	9f 57       	subi	r25, 0x7F	; 127
     a90:	50 40       	sbci	r21, 0x00	; 0
     a92:	8a f0       	brmi	.+34     	; 0xab6 <__mulsf3_pse+0x84>
     a94:	e1 f0       	breq	.+56     	; 0xace <__mulsf3_pse+0x9c>
     a96:	88 23       	and	r24, r24
     a98:	4a f0       	brmi	.+18     	; 0xaac <__mulsf3_pse+0x7a>
     a9a:	ee 0f       	add	r30, r30
     a9c:	ff 1f       	adc	r31, r31
     a9e:	bb 1f       	adc	r27, r27
     aa0:	66 1f       	adc	r22, r22
     aa2:	77 1f       	adc	r23, r23
     aa4:	88 1f       	adc	r24, r24
     aa6:	91 50       	subi	r25, 0x01	; 1
     aa8:	50 40       	sbci	r21, 0x00	; 0
     aaa:	a9 f7       	brne	.-22     	; 0xa96 <__mulsf3_pse+0x64>
     aac:	9e 3f       	cpi	r25, 0xFE	; 254
     aae:	51 05       	cpc	r21, r1
     ab0:	70 f0       	brcs	.+28     	; 0xace <__mulsf3_pse+0x9c>
     ab2:	5c cf       	rjmp	.-328    	; 0x96c <__fp_inf>
     ab4:	a6 cf       	rjmp	.-180    	; 0xa02 <__fp_szero>
     ab6:	5f 3f       	cpi	r21, 0xFF	; 255
     ab8:	ec f3       	brlt	.-6      	; 0xab4 <__mulsf3_pse+0x82>
     aba:	98 3e       	cpi	r25, 0xE8	; 232
     abc:	dc f3       	brlt	.-10     	; 0xab4 <__mulsf3_pse+0x82>
     abe:	86 95       	lsr	r24
     ac0:	77 95       	ror	r23
     ac2:	67 95       	ror	r22
     ac4:	b7 95       	ror	r27
     ac6:	f7 95       	ror	r31
     ac8:	e7 95       	ror	r30
     aca:	9f 5f       	subi	r25, 0xFF	; 255
     acc:	c1 f7       	brne	.-16     	; 0xabe <__mulsf3_pse+0x8c>
     ace:	fe 2b       	or	r31, r30
     ad0:	88 0f       	add	r24, r24
     ad2:	91 1d       	adc	r25, r1
     ad4:	96 95       	lsr	r25
     ad6:	87 95       	ror	r24
     ad8:	97 f9       	bld	r25, 7
     ada:	08 95       	ret

00000adc <fdevopen>:
     adc:	0f 93       	push	r16
     ade:	1f 93       	push	r17
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
     ae4:	ec 01       	movw	r28, r24
     ae6:	8b 01       	movw	r16, r22
     ae8:	00 97       	sbiw	r24, 0x00	; 0
     aea:	31 f4       	brne	.+12     	; 0xaf8 <fdevopen+0x1c>
     aec:	61 15       	cp	r22, r1
     aee:	71 05       	cpc	r23, r1
     af0:	19 f4       	brne	.+6      	; 0xaf8 <fdevopen+0x1c>
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	37 c0       	rjmp	.+110    	; 0xb66 <fdevopen+0x8a>
     af8:	6e e0       	ldi	r22, 0x0E	; 14
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	63 d2       	rcall	.+1222   	; 0xfc8 <calloc>
     b02:	fc 01       	movw	r30, r24
     b04:	00 97       	sbiw	r24, 0x00	; 0
     b06:	a9 f3       	breq	.-22     	; 0xaf2 <fdevopen+0x16>
     b08:	80 e8       	ldi	r24, 0x80	; 128
     b0a:	83 83       	std	Z+3, r24	; 0x03
     b0c:	01 15       	cp	r16, r1
     b0e:	11 05       	cpc	r17, r1
     b10:	71 f0       	breq	.+28     	; 0xb2e <fdevopen+0x52>
     b12:	13 87       	std	Z+11, r17	; 0x0b
     b14:	02 87       	std	Z+10, r16	; 0x0a
     b16:	81 e8       	ldi	r24, 0x81	; 129
     b18:	83 83       	std	Z+3, r24	; 0x03
     b1a:	80 91 a2 02 	lds	r24, 0x02A2
     b1e:	90 91 a3 02 	lds	r25, 0x02A3
     b22:	89 2b       	or	r24, r25
     b24:	21 f4       	brne	.+8      	; 0xb2e <fdevopen+0x52>
     b26:	f0 93 a3 02 	sts	0x02A3, r31
     b2a:	e0 93 a2 02 	sts	0x02A2, r30
     b2e:	20 97       	sbiw	r28, 0x00	; 0
     b30:	c9 f0       	breq	.+50     	; 0xb64 <fdevopen+0x88>
     b32:	d1 87       	std	Z+9, r29	; 0x09
     b34:	c0 87       	std	Z+8, r28	; 0x08
     b36:	83 81       	ldd	r24, Z+3	; 0x03
     b38:	82 60       	ori	r24, 0x02	; 2
     b3a:	83 83       	std	Z+3, r24	; 0x03
     b3c:	80 91 a4 02 	lds	r24, 0x02A4
     b40:	90 91 a5 02 	lds	r25, 0x02A5
     b44:	89 2b       	or	r24, r25
     b46:	71 f4       	brne	.+28     	; 0xb64 <fdevopen+0x88>
     b48:	f0 93 a5 02 	sts	0x02A5, r31
     b4c:	e0 93 a4 02 	sts	0x02A4, r30
     b50:	80 91 a6 02 	lds	r24, 0x02A6
     b54:	90 91 a7 02 	lds	r25, 0x02A7
     b58:	89 2b       	or	r24, r25
     b5a:	21 f4       	brne	.+8      	; 0xb64 <fdevopen+0x88>
     b5c:	f0 93 a7 02 	sts	0x02A7, r31
     b60:	e0 93 a6 02 	sts	0x02A6, r30
     b64:	cf 01       	movw	r24, r30
     b66:	df 91       	pop	r29
     b68:	cf 91       	pop	r28
     b6a:	1f 91       	pop	r17
     b6c:	0f 91       	pop	r16
     b6e:	08 95       	ret

00000b70 <printf>:
     b70:	cf 93       	push	r28
     b72:	df 93       	push	r29
     b74:	cd b7       	in	r28, 0x3d	; 61
     b76:	de b7       	in	r29, 0x3e	; 62
     b78:	fe 01       	movw	r30, r28
     b7a:	36 96       	adiw	r30, 0x06	; 6
     b7c:	61 91       	ld	r22, Z+
     b7e:	71 91       	ld	r23, Z+
     b80:	af 01       	movw	r20, r30
     b82:	80 91 a4 02 	lds	r24, 0x02A4
     b86:	90 91 a5 02 	lds	r25, 0x02A5
     b8a:	30 d0       	rcall	.+96     	; 0xbec <vfprintf>
     b8c:	df 91       	pop	r29
     b8e:	cf 91       	pop	r28
     b90:	08 95       	ret

00000b92 <puts>:
     b92:	0f 93       	push	r16
     b94:	1f 93       	push	r17
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
     b9a:	e0 91 a4 02 	lds	r30, 0x02A4
     b9e:	f0 91 a5 02 	lds	r31, 0x02A5
     ba2:	23 81       	ldd	r18, Z+3	; 0x03
     ba4:	21 ff       	sbrs	r18, 1
     ba6:	1b c0       	rjmp	.+54     	; 0xbde <puts+0x4c>
     ba8:	ec 01       	movw	r28, r24
     baa:	00 e0       	ldi	r16, 0x00	; 0
     bac:	10 e0       	ldi	r17, 0x00	; 0
     bae:	89 91       	ld	r24, Y+
     bb0:	60 91 a4 02 	lds	r22, 0x02A4
     bb4:	70 91 a5 02 	lds	r23, 0x02A5
     bb8:	db 01       	movw	r26, r22
     bba:	18 96       	adiw	r26, 0x08	; 8
     bbc:	ed 91       	ld	r30, X+
     bbe:	fc 91       	ld	r31, X
     bc0:	19 97       	sbiw	r26, 0x09	; 9
     bc2:	88 23       	and	r24, r24
     bc4:	31 f0       	breq	.+12     	; 0xbd2 <puts+0x40>
     bc6:	19 95       	eicall
     bc8:	89 2b       	or	r24, r25
     bca:	89 f3       	breq	.-30     	; 0xbae <puts+0x1c>
     bcc:	0f ef       	ldi	r16, 0xFF	; 255
     bce:	1f ef       	ldi	r17, 0xFF	; 255
     bd0:	ee cf       	rjmp	.-36     	; 0xbae <puts+0x1c>
     bd2:	8a e0       	ldi	r24, 0x0A	; 10
     bd4:	19 95       	eicall
     bd6:	89 2b       	or	r24, r25
     bd8:	11 f4       	brne	.+4      	; 0xbde <puts+0x4c>
     bda:	c8 01       	movw	r24, r16
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <puts+0x50>
     bde:	8f ef       	ldi	r24, 0xFF	; 255
     be0:	9f ef       	ldi	r25, 0xFF	; 255
     be2:	df 91       	pop	r29
     be4:	cf 91       	pop	r28
     be6:	1f 91       	pop	r17
     be8:	0f 91       	pop	r16
     bea:	08 95       	ret

00000bec <vfprintf>:
     bec:	2f 92       	push	r2
     bee:	3f 92       	push	r3
     bf0:	4f 92       	push	r4
     bf2:	5f 92       	push	r5
     bf4:	6f 92       	push	r6
     bf6:	7f 92       	push	r7
     bf8:	8f 92       	push	r8
     bfa:	9f 92       	push	r9
     bfc:	af 92       	push	r10
     bfe:	bf 92       	push	r11
     c00:	cf 92       	push	r12
     c02:	df 92       	push	r13
     c04:	ef 92       	push	r14
     c06:	ff 92       	push	r15
     c08:	0f 93       	push	r16
     c0a:	1f 93       	push	r17
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	cd b7       	in	r28, 0x3d	; 61
     c12:	de b7       	in	r29, 0x3e	; 62
     c14:	2c 97       	sbiw	r28, 0x0c	; 12
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	f8 94       	cli
     c1a:	de bf       	out	0x3e, r29	; 62
     c1c:	0f be       	out	0x3f, r0	; 63
     c1e:	cd bf       	out	0x3d, r28	; 61
     c20:	7c 01       	movw	r14, r24
     c22:	6b 01       	movw	r12, r22
     c24:	8a 01       	movw	r16, r20
     c26:	fc 01       	movw	r30, r24
     c28:	17 82       	std	Z+7, r1	; 0x07
     c2a:	16 82       	std	Z+6, r1	; 0x06
     c2c:	83 81       	ldd	r24, Z+3	; 0x03
     c2e:	81 ff       	sbrs	r24, 1
     c30:	b0 c1       	rjmp	.+864    	; 0xf92 <vfprintf+0x3a6>
     c32:	ce 01       	movw	r24, r28
     c34:	01 96       	adiw	r24, 0x01	; 1
     c36:	4c 01       	movw	r8, r24
     c38:	f7 01       	movw	r30, r14
     c3a:	93 81       	ldd	r25, Z+3	; 0x03
     c3c:	f6 01       	movw	r30, r12
     c3e:	93 fd       	sbrc	r25, 3
     c40:	85 91       	lpm	r24, Z+
     c42:	93 ff       	sbrs	r25, 3
     c44:	81 91       	ld	r24, Z+
     c46:	6f 01       	movw	r12, r30
     c48:	88 23       	and	r24, r24
     c4a:	09 f4       	brne	.+2      	; 0xc4e <vfprintf+0x62>
     c4c:	9e c1       	rjmp	.+828    	; 0xf8a <vfprintf+0x39e>
     c4e:	85 32       	cpi	r24, 0x25	; 37
     c50:	39 f4       	brne	.+14     	; 0xc60 <vfprintf+0x74>
     c52:	93 fd       	sbrc	r25, 3
     c54:	85 91       	lpm	r24, Z+
     c56:	93 ff       	sbrs	r25, 3
     c58:	81 91       	ld	r24, Z+
     c5a:	6f 01       	movw	r12, r30
     c5c:	85 32       	cpi	r24, 0x25	; 37
     c5e:	21 f4       	brne	.+8      	; 0xc68 <vfprintf+0x7c>
     c60:	b7 01       	movw	r22, r14
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	0f d3       	rcall	.+1566   	; 0x1284 <fputc>
     c66:	e8 cf       	rjmp	.-48     	; 0xc38 <vfprintf+0x4c>
     c68:	51 2c       	mov	r5, r1
     c6a:	31 2c       	mov	r3, r1
     c6c:	20 e0       	ldi	r18, 0x00	; 0
     c6e:	20 32       	cpi	r18, 0x20	; 32
     c70:	a0 f4       	brcc	.+40     	; 0xc9a <vfprintf+0xae>
     c72:	8b 32       	cpi	r24, 0x2B	; 43
     c74:	69 f0       	breq	.+26     	; 0xc90 <vfprintf+0xa4>
     c76:	30 f4       	brcc	.+12     	; 0xc84 <vfprintf+0x98>
     c78:	80 32       	cpi	r24, 0x20	; 32
     c7a:	59 f0       	breq	.+22     	; 0xc92 <vfprintf+0xa6>
     c7c:	83 32       	cpi	r24, 0x23	; 35
     c7e:	69 f4       	brne	.+26     	; 0xc9a <vfprintf+0xae>
     c80:	20 61       	ori	r18, 0x10	; 16
     c82:	2c c0       	rjmp	.+88     	; 0xcdc <vfprintf+0xf0>
     c84:	8d 32       	cpi	r24, 0x2D	; 45
     c86:	39 f0       	breq	.+14     	; 0xc96 <vfprintf+0xaa>
     c88:	80 33       	cpi	r24, 0x30	; 48
     c8a:	39 f4       	brne	.+14     	; 0xc9a <vfprintf+0xae>
     c8c:	21 60       	ori	r18, 0x01	; 1
     c8e:	26 c0       	rjmp	.+76     	; 0xcdc <vfprintf+0xf0>
     c90:	22 60       	ori	r18, 0x02	; 2
     c92:	24 60       	ori	r18, 0x04	; 4
     c94:	23 c0       	rjmp	.+70     	; 0xcdc <vfprintf+0xf0>
     c96:	28 60       	ori	r18, 0x08	; 8
     c98:	21 c0       	rjmp	.+66     	; 0xcdc <vfprintf+0xf0>
     c9a:	27 fd       	sbrc	r18, 7
     c9c:	27 c0       	rjmp	.+78     	; 0xcec <vfprintf+0x100>
     c9e:	30 ed       	ldi	r19, 0xD0	; 208
     ca0:	38 0f       	add	r19, r24
     ca2:	3a 30       	cpi	r19, 0x0A	; 10
     ca4:	78 f4       	brcc	.+30     	; 0xcc4 <vfprintf+0xd8>
     ca6:	26 ff       	sbrs	r18, 6
     ca8:	06 c0       	rjmp	.+12     	; 0xcb6 <vfprintf+0xca>
     caa:	fa e0       	ldi	r31, 0x0A	; 10
     cac:	5f 9e       	mul	r5, r31
     cae:	30 0d       	add	r19, r0
     cb0:	11 24       	eor	r1, r1
     cb2:	53 2e       	mov	r5, r19
     cb4:	13 c0       	rjmp	.+38     	; 0xcdc <vfprintf+0xf0>
     cb6:	8a e0       	ldi	r24, 0x0A	; 10
     cb8:	38 9e       	mul	r3, r24
     cba:	30 0d       	add	r19, r0
     cbc:	11 24       	eor	r1, r1
     cbe:	33 2e       	mov	r3, r19
     cc0:	20 62       	ori	r18, 0x20	; 32
     cc2:	0c c0       	rjmp	.+24     	; 0xcdc <vfprintf+0xf0>
     cc4:	8e 32       	cpi	r24, 0x2E	; 46
     cc6:	21 f4       	brne	.+8      	; 0xcd0 <vfprintf+0xe4>
     cc8:	26 fd       	sbrc	r18, 6
     cca:	5f c1       	rjmp	.+702    	; 0xf8a <vfprintf+0x39e>
     ccc:	20 64       	ori	r18, 0x40	; 64
     cce:	06 c0       	rjmp	.+12     	; 0xcdc <vfprintf+0xf0>
     cd0:	8c 36       	cpi	r24, 0x6C	; 108
     cd2:	11 f4       	brne	.+4      	; 0xcd8 <vfprintf+0xec>
     cd4:	20 68       	ori	r18, 0x80	; 128
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <vfprintf+0xf0>
     cd8:	88 36       	cpi	r24, 0x68	; 104
     cda:	41 f4       	brne	.+16     	; 0xcec <vfprintf+0x100>
     cdc:	f6 01       	movw	r30, r12
     cde:	93 fd       	sbrc	r25, 3
     ce0:	85 91       	lpm	r24, Z+
     ce2:	93 ff       	sbrs	r25, 3
     ce4:	81 91       	ld	r24, Z+
     ce6:	6f 01       	movw	r12, r30
     ce8:	81 11       	cpse	r24, r1
     cea:	c1 cf       	rjmp	.-126    	; 0xc6e <vfprintf+0x82>
     cec:	98 2f       	mov	r25, r24
     cee:	9f 7d       	andi	r25, 0xDF	; 223
     cf0:	95 54       	subi	r25, 0x45	; 69
     cf2:	93 30       	cpi	r25, 0x03	; 3
     cf4:	28 f4       	brcc	.+10     	; 0xd00 <vfprintf+0x114>
     cf6:	0c 5f       	subi	r16, 0xFC	; 252
     cf8:	1f 4f       	sbci	r17, 0xFF	; 255
     cfa:	ff e3       	ldi	r31, 0x3F	; 63
     cfc:	f9 83       	std	Y+1, r31	; 0x01
     cfe:	0d c0       	rjmp	.+26     	; 0xd1a <vfprintf+0x12e>
     d00:	83 36       	cpi	r24, 0x63	; 99
     d02:	31 f0       	breq	.+12     	; 0xd10 <vfprintf+0x124>
     d04:	83 37       	cpi	r24, 0x73	; 115
     d06:	71 f0       	breq	.+28     	; 0xd24 <vfprintf+0x138>
     d08:	83 35       	cpi	r24, 0x53	; 83
     d0a:	09 f0       	breq	.+2      	; 0xd0e <vfprintf+0x122>
     d0c:	57 c0       	rjmp	.+174    	; 0xdbc <vfprintf+0x1d0>
     d0e:	21 c0       	rjmp	.+66     	; 0xd52 <vfprintf+0x166>
     d10:	f8 01       	movw	r30, r16
     d12:	80 81       	ld	r24, Z
     d14:	89 83       	std	Y+1, r24	; 0x01
     d16:	0e 5f       	subi	r16, 0xFE	; 254
     d18:	1f 4f       	sbci	r17, 0xFF	; 255
     d1a:	44 24       	eor	r4, r4
     d1c:	43 94       	inc	r4
     d1e:	51 2c       	mov	r5, r1
     d20:	54 01       	movw	r10, r8
     d22:	14 c0       	rjmp	.+40     	; 0xd4c <vfprintf+0x160>
     d24:	38 01       	movw	r6, r16
     d26:	f2 e0       	ldi	r31, 0x02	; 2
     d28:	6f 0e       	add	r6, r31
     d2a:	71 1c       	adc	r7, r1
     d2c:	f8 01       	movw	r30, r16
     d2e:	a0 80       	ld	r10, Z
     d30:	b1 80       	ldd	r11, Z+1	; 0x01
     d32:	26 ff       	sbrs	r18, 6
     d34:	03 c0       	rjmp	.+6      	; 0xd3c <vfprintf+0x150>
     d36:	65 2d       	mov	r22, r5
     d38:	70 e0       	ldi	r23, 0x00	; 0
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <vfprintf+0x154>
     d3c:	6f ef       	ldi	r22, 0xFF	; 255
     d3e:	7f ef       	ldi	r23, 0xFF	; 255
     d40:	c5 01       	movw	r24, r10
     d42:	2c 87       	std	Y+12, r18	; 0x0c
     d44:	94 d2       	rcall	.+1320   	; 0x126e <strnlen>
     d46:	2c 01       	movw	r4, r24
     d48:	83 01       	movw	r16, r6
     d4a:	2c 85       	ldd	r18, Y+12	; 0x0c
     d4c:	2f 77       	andi	r18, 0x7F	; 127
     d4e:	22 2e       	mov	r2, r18
     d50:	16 c0       	rjmp	.+44     	; 0xd7e <vfprintf+0x192>
     d52:	38 01       	movw	r6, r16
     d54:	f2 e0       	ldi	r31, 0x02	; 2
     d56:	6f 0e       	add	r6, r31
     d58:	71 1c       	adc	r7, r1
     d5a:	f8 01       	movw	r30, r16
     d5c:	a0 80       	ld	r10, Z
     d5e:	b1 80       	ldd	r11, Z+1	; 0x01
     d60:	26 ff       	sbrs	r18, 6
     d62:	03 c0       	rjmp	.+6      	; 0xd6a <vfprintf+0x17e>
     d64:	65 2d       	mov	r22, r5
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	02 c0       	rjmp	.+4      	; 0xd6e <vfprintf+0x182>
     d6a:	6f ef       	ldi	r22, 0xFF	; 255
     d6c:	7f ef       	ldi	r23, 0xFF	; 255
     d6e:	c5 01       	movw	r24, r10
     d70:	2c 87       	std	Y+12, r18	; 0x0c
     d72:	6b d2       	rcall	.+1238   	; 0x124a <strnlen_P>
     d74:	2c 01       	movw	r4, r24
     d76:	2c 85       	ldd	r18, Y+12	; 0x0c
     d78:	20 68       	ori	r18, 0x80	; 128
     d7a:	22 2e       	mov	r2, r18
     d7c:	83 01       	movw	r16, r6
     d7e:	23 fc       	sbrc	r2, 3
     d80:	19 c0       	rjmp	.+50     	; 0xdb4 <vfprintf+0x1c8>
     d82:	83 2d       	mov	r24, r3
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	48 16       	cp	r4, r24
     d88:	59 06       	cpc	r5, r25
     d8a:	a0 f4       	brcc	.+40     	; 0xdb4 <vfprintf+0x1c8>
     d8c:	b7 01       	movw	r22, r14
     d8e:	80 e2       	ldi	r24, 0x20	; 32
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	78 d2       	rcall	.+1264   	; 0x1284 <fputc>
     d94:	3a 94       	dec	r3
     d96:	f5 cf       	rjmp	.-22     	; 0xd82 <vfprintf+0x196>
     d98:	f5 01       	movw	r30, r10
     d9a:	27 fc       	sbrc	r2, 7
     d9c:	85 91       	lpm	r24, Z+
     d9e:	27 fe       	sbrs	r2, 7
     da0:	81 91       	ld	r24, Z+
     da2:	5f 01       	movw	r10, r30
     da4:	b7 01       	movw	r22, r14
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	6d d2       	rcall	.+1242   	; 0x1284 <fputc>
     daa:	31 10       	cpse	r3, r1
     dac:	3a 94       	dec	r3
     dae:	f1 e0       	ldi	r31, 0x01	; 1
     db0:	4f 1a       	sub	r4, r31
     db2:	51 08       	sbc	r5, r1
     db4:	41 14       	cp	r4, r1
     db6:	51 04       	cpc	r5, r1
     db8:	79 f7       	brne	.-34     	; 0xd98 <vfprintf+0x1ac>
     dba:	de c0       	rjmp	.+444    	; 0xf78 <vfprintf+0x38c>
     dbc:	84 36       	cpi	r24, 0x64	; 100
     dbe:	11 f0       	breq	.+4      	; 0xdc4 <vfprintf+0x1d8>
     dc0:	89 36       	cpi	r24, 0x69	; 105
     dc2:	31 f5       	brne	.+76     	; 0xe10 <vfprintf+0x224>
     dc4:	f8 01       	movw	r30, r16
     dc6:	27 ff       	sbrs	r18, 7
     dc8:	07 c0       	rjmp	.+14     	; 0xdd8 <vfprintf+0x1ec>
     dca:	60 81       	ld	r22, Z
     dcc:	71 81       	ldd	r23, Z+1	; 0x01
     dce:	82 81       	ldd	r24, Z+2	; 0x02
     dd0:	93 81       	ldd	r25, Z+3	; 0x03
     dd2:	0c 5f       	subi	r16, 0xFC	; 252
     dd4:	1f 4f       	sbci	r17, 0xFF	; 255
     dd6:	08 c0       	rjmp	.+16     	; 0xde8 <vfprintf+0x1fc>
     dd8:	60 81       	ld	r22, Z
     dda:	71 81       	ldd	r23, Z+1	; 0x01
     ddc:	88 27       	eor	r24, r24
     dde:	77 fd       	sbrc	r23, 7
     de0:	80 95       	com	r24
     de2:	98 2f       	mov	r25, r24
     de4:	0e 5f       	subi	r16, 0xFE	; 254
     de6:	1f 4f       	sbci	r17, 0xFF	; 255
     de8:	2f 76       	andi	r18, 0x6F	; 111
     dea:	b2 2e       	mov	r11, r18
     dec:	97 ff       	sbrs	r25, 7
     dee:	09 c0       	rjmp	.+18     	; 0xe02 <vfprintf+0x216>
     df0:	90 95       	com	r25
     df2:	80 95       	com	r24
     df4:	70 95       	com	r23
     df6:	61 95       	neg	r22
     df8:	7f 4f       	sbci	r23, 0xFF	; 255
     dfa:	8f 4f       	sbci	r24, 0xFF	; 255
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	20 68       	ori	r18, 0x80	; 128
     e00:	b2 2e       	mov	r11, r18
     e02:	2a e0       	ldi	r18, 0x0A	; 10
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	a4 01       	movw	r20, r8
     e08:	6f d2       	rcall	.+1246   	; 0x12e8 <__ultoa_invert>
     e0a:	a8 2e       	mov	r10, r24
     e0c:	a8 18       	sub	r10, r8
     e0e:	43 c0       	rjmp	.+134    	; 0xe96 <vfprintf+0x2aa>
     e10:	85 37       	cpi	r24, 0x75	; 117
     e12:	29 f4       	brne	.+10     	; 0xe1e <vfprintf+0x232>
     e14:	2f 7e       	andi	r18, 0xEF	; 239
     e16:	b2 2e       	mov	r11, r18
     e18:	2a e0       	ldi	r18, 0x0A	; 10
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	25 c0       	rjmp	.+74     	; 0xe68 <vfprintf+0x27c>
     e1e:	f2 2f       	mov	r31, r18
     e20:	f9 7f       	andi	r31, 0xF9	; 249
     e22:	bf 2e       	mov	r11, r31
     e24:	8f 36       	cpi	r24, 0x6F	; 111
     e26:	c1 f0       	breq	.+48     	; 0xe58 <vfprintf+0x26c>
     e28:	18 f4       	brcc	.+6      	; 0xe30 <vfprintf+0x244>
     e2a:	88 35       	cpi	r24, 0x58	; 88
     e2c:	79 f0       	breq	.+30     	; 0xe4c <vfprintf+0x260>
     e2e:	ad c0       	rjmp	.+346    	; 0xf8a <vfprintf+0x39e>
     e30:	80 37       	cpi	r24, 0x70	; 112
     e32:	19 f0       	breq	.+6      	; 0xe3a <vfprintf+0x24e>
     e34:	88 37       	cpi	r24, 0x78	; 120
     e36:	21 f0       	breq	.+8      	; 0xe40 <vfprintf+0x254>
     e38:	a8 c0       	rjmp	.+336    	; 0xf8a <vfprintf+0x39e>
     e3a:	2f 2f       	mov	r18, r31
     e3c:	20 61       	ori	r18, 0x10	; 16
     e3e:	b2 2e       	mov	r11, r18
     e40:	b4 fe       	sbrs	r11, 4
     e42:	0d c0       	rjmp	.+26     	; 0xe5e <vfprintf+0x272>
     e44:	8b 2d       	mov	r24, r11
     e46:	84 60       	ori	r24, 0x04	; 4
     e48:	b8 2e       	mov	r11, r24
     e4a:	09 c0       	rjmp	.+18     	; 0xe5e <vfprintf+0x272>
     e4c:	24 ff       	sbrs	r18, 4
     e4e:	0a c0       	rjmp	.+20     	; 0xe64 <vfprintf+0x278>
     e50:	9f 2f       	mov	r25, r31
     e52:	96 60       	ori	r25, 0x06	; 6
     e54:	b9 2e       	mov	r11, r25
     e56:	06 c0       	rjmp	.+12     	; 0xe64 <vfprintf+0x278>
     e58:	28 e0       	ldi	r18, 0x08	; 8
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	05 c0       	rjmp	.+10     	; 0xe68 <vfprintf+0x27c>
     e5e:	20 e1       	ldi	r18, 0x10	; 16
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <vfprintf+0x27c>
     e64:	20 e1       	ldi	r18, 0x10	; 16
     e66:	32 e0       	ldi	r19, 0x02	; 2
     e68:	f8 01       	movw	r30, r16
     e6a:	b7 fe       	sbrs	r11, 7
     e6c:	07 c0       	rjmp	.+14     	; 0xe7c <vfprintf+0x290>
     e6e:	60 81       	ld	r22, Z
     e70:	71 81       	ldd	r23, Z+1	; 0x01
     e72:	82 81       	ldd	r24, Z+2	; 0x02
     e74:	93 81       	ldd	r25, Z+3	; 0x03
     e76:	0c 5f       	subi	r16, 0xFC	; 252
     e78:	1f 4f       	sbci	r17, 0xFF	; 255
     e7a:	06 c0       	rjmp	.+12     	; 0xe88 <vfprintf+0x29c>
     e7c:	60 81       	ld	r22, Z
     e7e:	71 81       	ldd	r23, Z+1	; 0x01
     e80:	80 e0       	ldi	r24, 0x00	; 0
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 5f       	subi	r16, 0xFE	; 254
     e86:	1f 4f       	sbci	r17, 0xFF	; 255
     e88:	a4 01       	movw	r20, r8
     e8a:	2e d2       	rcall	.+1116   	; 0x12e8 <__ultoa_invert>
     e8c:	a8 2e       	mov	r10, r24
     e8e:	a8 18       	sub	r10, r8
     e90:	fb 2d       	mov	r31, r11
     e92:	ff 77       	andi	r31, 0x7F	; 127
     e94:	bf 2e       	mov	r11, r31
     e96:	b6 fe       	sbrs	r11, 6
     e98:	0b c0       	rjmp	.+22     	; 0xeb0 <vfprintf+0x2c4>
     e9a:	2b 2d       	mov	r18, r11
     e9c:	2e 7f       	andi	r18, 0xFE	; 254
     e9e:	a5 14       	cp	r10, r5
     ea0:	50 f4       	brcc	.+20     	; 0xeb6 <vfprintf+0x2ca>
     ea2:	b4 fe       	sbrs	r11, 4
     ea4:	0a c0       	rjmp	.+20     	; 0xeba <vfprintf+0x2ce>
     ea6:	b2 fc       	sbrc	r11, 2
     ea8:	08 c0       	rjmp	.+16     	; 0xeba <vfprintf+0x2ce>
     eaa:	2b 2d       	mov	r18, r11
     eac:	2e 7e       	andi	r18, 0xEE	; 238
     eae:	05 c0       	rjmp	.+10     	; 0xeba <vfprintf+0x2ce>
     eb0:	7a 2c       	mov	r7, r10
     eb2:	2b 2d       	mov	r18, r11
     eb4:	03 c0       	rjmp	.+6      	; 0xebc <vfprintf+0x2d0>
     eb6:	7a 2c       	mov	r7, r10
     eb8:	01 c0       	rjmp	.+2      	; 0xebc <vfprintf+0x2d0>
     eba:	75 2c       	mov	r7, r5
     ebc:	24 ff       	sbrs	r18, 4
     ebe:	0d c0       	rjmp	.+26     	; 0xeda <vfprintf+0x2ee>
     ec0:	fe 01       	movw	r30, r28
     ec2:	ea 0d       	add	r30, r10
     ec4:	f1 1d       	adc	r31, r1
     ec6:	80 81       	ld	r24, Z
     ec8:	80 33       	cpi	r24, 0x30	; 48
     eca:	11 f4       	brne	.+4      	; 0xed0 <vfprintf+0x2e4>
     ecc:	29 7e       	andi	r18, 0xE9	; 233
     ece:	09 c0       	rjmp	.+18     	; 0xee2 <vfprintf+0x2f6>
     ed0:	22 ff       	sbrs	r18, 2
     ed2:	06 c0       	rjmp	.+12     	; 0xee0 <vfprintf+0x2f4>
     ed4:	73 94       	inc	r7
     ed6:	73 94       	inc	r7
     ed8:	04 c0       	rjmp	.+8      	; 0xee2 <vfprintf+0x2f6>
     eda:	82 2f       	mov	r24, r18
     edc:	86 78       	andi	r24, 0x86	; 134
     ede:	09 f0       	breq	.+2      	; 0xee2 <vfprintf+0x2f6>
     ee0:	73 94       	inc	r7
     ee2:	23 fd       	sbrc	r18, 3
     ee4:	12 c0       	rjmp	.+36     	; 0xf0a <vfprintf+0x31e>
     ee6:	20 ff       	sbrs	r18, 0
     ee8:	06 c0       	rjmp	.+12     	; 0xef6 <vfprintf+0x30a>
     eea:	5a 2c       	mov	r5, r10
     eec:	73 14       	cp	r7, r3
     eee:	18 f4       	brcc	.+6      	; 0xef6 <vfprintf+0x30a>
     ef0:	53 0c       	add	r5, r3
     ef2:	57 18       	sub	r5, r7
     ef4:	73 2c       	mov	r7, r3
     ef6:	73 14       	cp	r7, r3
     ef8:	60 f4       	brcc	.+24     	; 0xf12 <vfprintf+0x326>
     efa:	b7 01       	movw	r22, r14
     efc:	80 e2       	ldi	r24, 0x20	; 32
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	2c 87       	std	Y+12, r18	; 0x0c
     f02:	c0 d1       	rcall	.+896    	; 0x1284 <fputc>
     f04:	73 94       	inc	r7
     f06:	2c 85       	ldd	r18, Y+12	; 0x0c
     f08:	f6 cf       	rjmp	.-20     	; 0xef6 <vfprintf+0x30a>
     f0a:	73 14       	cp	r7, r3
     f0c:	10 f4       	brcc	.+4      	; 0xf12 <vfprintf+0x326>
     f0e:	37 18       	sub	r3, r7
     f10:	01 c0       	rjmp	.+2      	; 0xf14 <vfprintf+0x328>
     f12:	31 2c       	mov	r3, r1
     f14:	24 ff       	sbrs	r18, 4
     f16:	11 c0       	rjmp	.+34     	; 0xf3a <vfprintf+0x34e>
     f18:	b7 01       	movw	r22, r14
     f1a:	80 e3       	ldi	r24, 0x30	; 48
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	2c 87       	std	Y+12, r18	; 0x0c
     f20:	b1 d1       	rcall	.+866    	; 0x1284 <fputc>
     f22:	2c 85       	ldd	r18, Y+12	; 0x0c
     f24:	22 ff       	sbrs	r18, 2
     f26:	16 c0       	rjmp	.+44     	; 0xf54 <vfprintf+0x368>
     f28:	21 ff       	sbrs	r18, 1
     f2a:	03 c0       	rjmp	.+6      	; 0xf32 <vfprintf+0x346>
     f2c:	88 e5       	ldi	r24, 0x58	; 88
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	02 c0       	rjmp	.+4      	; 0xf36 <vfprintf+0x34a>
     f32:	88 e7       	ldi	r24, 0x78	; 120
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	b7 01       	movw	r22, r14
     f38:	0c c0       	rjmp	.+24     	; 0xf52 <vfprintf+0x366>
     f3a:	82 2f       	mov	r24, r18
     f3c:	86 78       	andi	r24, 0x86	; 134
     f3e:	51 f0       	breq	.+20     	; 0xf54 <vfprintf+0x368>
     f40:	21 fd       	sbrc	r18, 1
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <vfprintf+0x35c>
     f44:	80 e2       	ldi	r24, 0x20	; 32
     f46:	01 c0       	rjmp	.+2      	; 0xf4a <vfprintf+0x35e>
     f48:	8b e2       	ldi	r24, 0x2B	; 43
     f4a:	27 fd       	sbrc	r18, 7
     f4c:	8d e2       	ldi	r24, 0x2D	; 45
     f4e:	b7 01       	movw	r22, r14
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	98 d1       	rcall	.+816    	; 0x1284 <fputc>
     f54:	a5 14       	cp	r10, r5
     f56:	30 f4       	brcc	.+12     	; 0xf64 <vfprintf+0x378>
     f58:	b7 01       	movw	r22, r14
     f5a:	80 e3       	ldi	r24, 0x30	; 48
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	92 d1       	rcall	.+804    	; 0x1284 <fputc>
     f60:	5a 94       	dec	r5
     f62:	f8 cf       	rjmp	.-16     	; 0xf54 <vfprintf+0x368>
     f64:	aa 94       	dec	r10
     f66:	f4 01       	movw	r30, r8
     f68:	ea 0d       	add	r30, r10
     f6a:	f1 1d       	adc	r31, r1
     f6c:	80 81       	ld	r24, Z
     f6e:	b7 01       	movw	r22, r14
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	88 d1       	rcall	.+784    	; 0x1284 <fputc>
     f74:	a1 10       	cpse	r10, r1
     f76:	f6 cf       	rjmp	.-20     	; 0xf64 <vfprintf+0x378>
     f78:	33 20       	and	r3, r3
     f7a:	09 f4       	brne	.+2      	; 0xf7e <vfprintf+0x392>
     f7c:	5d ce       	rjmp	.-838    	; 0xc38 <vfprintf+0x4c>
     f7e:	b7 01       	movw	r22, r14
     f80:	80 e2       	ldi	r24, 0x20	; 32
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	7f d1       	rcall	.+766    	; 0x1284 <fputc>
     f86:	3a 94       	dec	r3
     f88:	f7 cf       	rjmp	.-18     	; 0xf78 <vfprintf+0x38c>
     f8a:	f7 01       	movw	r30, r14
     f8c:	86 81       	ldd	r24, Z+6	; 0x06
     f8e:	97 81       	ldd	r25, Z+7	; 0x07
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <vfprintf+0x3aa>
     f92:	8f ef       	ldi	r24, 0xFF	; 255
     f94:	9f ef       	ldi	r25, 0xFF	; 255
     f96:	2c 96       	adiw	r28, 0x0c	; 12
     f98:	0f b6       	in	r0, 0x3f	; 63
     f9a:	f8 94       	cli
     f9c:	de bf       	out	0x3e, r29	; 62
     f9e:	0f be       	out	0x3f, r0	; 63
     fa0:	cd bf       	out	0x3d, r28	; 61
     fa2:	df 91       	pop	r29
     fa4:	cf 91       	pop	r28
     fa6:	1f 91       	pop	r17
     fa8:	0f 91       	pop	r16
     faa:	ff 90       	pop	r15
     fac:	ef 90       	pop	r14
     fae:	df 90       	pop	r13
     fb0:	cf 90       	pop	r12
     fb2:	bf 90       	pop	r11
     fb4:	af 90       	pop	r10
     fb6:	9f 90       	pop	r9
     fb8:	8f 90       	pop	r8
     fba:	7f 90       	pop	r7
     fbc:	6f 90       	pop	r6
     fbe:	5f 90       	pop	r5
     fc0:	4f 90       	pop	r4
     fc2:	3f 90       	pop	r3
     fc4:	2f 90       	pop	r2
     fc6:	08 95       	ret

00000fc8 <calloc>:
     fc8:	0f 93       	push	r16
     fca:	1f 93       	push	r17
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	86 9f       	mul	r24, r22
     fd2:	80 01       	movw	r16, r0
     fd4:	87 9f       	mul	r24, r23
     fd6:	10 0d       	add	r17, r0
     fd8:	96 9f       	mul	r25, r22
     fda:	10 0d       	add	r17, r0
     fdc:	11 24       	eor	r1, r1
     fde:	c8 01       	movw	r24, r16
     fe0:	0d d0       	rcall	.+26     	; 0xffc <malloc>
     fe2:	ec 01       	movw	r28, r24
     fe4:	00 97       	sbiw	r24, 0x00	; 0
     fe6:	21 f0       	breq	.+8      	; 0xff0 <calloc+0x28>
     fe8:	a8 01       	movw	r20, r16
     fea:	60 e0       	ldi	r22, 0x00	; 0
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	38 d1       	rcall	.+624    	; 0x1260 <memset>
     ff0:	ce 01       	movw	r24, r28
     ff2:	df 91       	pop	r29
     ff4:	cf 91       	pop	r28
     ff6:	1f 91       	pop	r17
     ff8:	0f 91       	pop	r16
     ffa:	08 95       	ret

00000ffc <malloc>:
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	82 30       	cpi	r24, 0x02	; 2
    1002:	91 05       	cpc	r25, r1
    1004:	10 f4       	brcc	.+4      	; 0x100a <malloc+0xe>
    1006:	82 e0       	ldi	r24, 0x02	; 2
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	e0 91 aa 02 	lds	r30, 0x02AA
    100e:	f0 91 ab 02 	lds	r31, 0x02AB
    1012:	20 e0       	ldi	r18, 0x00	; 0
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	a0 e0       	ldi	r26, 0x00	; 0
    1018:	b0 e0       	ldi	r27, 0x00	; 0
    101a:	30 97       	sbiw	r30, 0x00	; 0
    101c:	39 f1       	breq	.+78     	; 0x106c <malloc+0x70>
    101e:	40 81       	ld	r20, Z
    1020:	51 81       	ldd	r21, Z+1	; 0x01
    1022:	48 17       	cp	r20, r24
    1024:	59 07       	cpc	r21, r25
    1026:	b8 f0       	brcs	.+46     	; 0x1056 <malloc+0x5a>
    1028:	48 17       	cp	r20, r24
    102a:	59 07       	cpc	r21, r25
    102c:	71 f4       	brne	.+28     	; 0x104a <malloc+0x4e>
    102e:	82 81       	ldd	r24, Z+2	; 0x02
    1030:	93 81       	ldd	r25, Z+3	; 0x03
    1032:	10 97       	sbiw	r26, 0x00	; 0
    1034:	29 f0       	breq	.+10     	; 0x1040 <malloc+0x44>
    1036:	13 96       	adiw	r26, 0x03	; 3
    1038:	9c 93       	st	X, r25
    103a:	8e 93       	st	-X, r24
    103c:	12 97       	sbiw	r26, 0x02	; 2
    103e:	2c c0       	rjmp	.+88     	; 0x1098 <malloc+0x9c>
    1040:	90 93 ab 02 	sts	0x02AB, r25
    1044:	80 93 aa 02 	sts	0x02AA, r24
    1048:	27 c0       	rjmp	.+78     	; 0x1098 <malloc+0x9c>
    104a:	21 15       	cp	r18, r1
    104c:	31 05       	cpc	r19, r1
    104e:	31 f0       	breq	.+12     	; 0x105c <malloc+0x60>
    1050:	42 17       	cp	r20, r18
    1052:	53 07       	cpc	r21, r19
    1054:	18 f0       	brcs	.+6      	; 0x105c <malloc+0x60>
    1056:	a9 01       	movw	r20, r18
    1058:	db 01       	movw	r26, r22
    105a:	01 c0       	rjmp	.+2      	; 0x105e <malloc+0x62>
    105c:	ef 01       	movw	r28, r30
    105e:	9a 01       	movw	r18, r20
    1060:	bd 01       	movw	r22, r26
    1062:	df 01       	movw	r26, r30
    1064:	02 80       	ldd	r0, Z+2	; 0x02
    1066:	f3 81       	ldd	r31, Z+3	; 0x03
    1068:	e0 2d       	mov	r30, r0
    106a:	d7 cf       	rjmp	.-82     	; 0x101a <malloc+0x1e>
    106c:	21 15       	cp	r18, r1
    106e:	31 05       	cpc	r19, r1
    1070:	f9 f0       	breq	.+62     	; 0x10b0 <malloc+0xb4>
    1072:	28 1b       	sub	r18, r24
    1074:	39 0b       	sbc	r19, r25
    1076:	24 30       	cpi	r18, 0x04	; 4
    1078:	31 05       	cpc	r19, r1
    107a:	80 f4       	brcc	.+32     	; 0x109c <malloc+0xa0>
    107c:	8a 81       	ldd	r24, Y+2	; 0x02
    107e:	9b 81       	ldd	r25, Y+3	; 0x03
    1080:	61 15       	cp	r22, r1
    1082:	71 05       	cpc	r23, r1
    1084:	21 f0       	breq	.+8      	; 0x108e <malloc+0x92>
    1086:	fb 01       	movw	r30, r22
    1088:	93 83       	std	Z+3, r25	; 0x03
    108a:	82 83       	std	Z+2, r24	; 0x02
    108c:	04 c0       	rjmp	.+8      	; 0x1096 <malloc+0x9a>
    108e:	90 93 ab 02 	sts	0x02AB, r25
    1092:	80 93 aa 02 	sts	0x02AA, r24
    1096:	fe 01       	movw	r30, r28
    1098:	32 96       	adiw	r30, 0x02	; 2
    109a:	44 c0       	rjmp	.+136    	; 0x1124 <malloc+0x128>
    109c:	fe 01       	movw	r30, r28
    109e:	e2 0f       	add	r30, r18
    10a0:	f3 1f       	adc	r31, r19
    10a2:	81 93       	st	Z+, r24
    10a4:	91 93       	st	Z+, r25
    10a6:	22 50       	subi	r18, 0x02	; 2
    10a8:	31 09       	sbc	r19, r1
    10aa:	39 83       	std	Y+1, r19	; 0x01
    10ac:	28 83       	st	Y, r18
    10ae:	3a c0       	rjmp	.+116    	; 0x1124 <malloc+0x128>
    10b0:	20 91 a8 02 	lds	r18, 0x02A8
    10b4:	30 91 a9 02 	lds	r19, 0x02A9
    10b8:	23 2b       	or	r18, r19
    10ba:	41 f4       	brne	.+16     	; 0x10cc <malloc+0xd0>
    10bc:	20 91 02 02 	lds	r18, 0x0202
    10c0:	30 91 03 02 	lds	r19, 0x0203
    10c4:	30 93 a9 02 	sts	0x02A9, r19
    10c8:	20 93 a8 02 	sts	0x02A8, r18
    10cc:	20 91 00 02 	lds	r18, 0x0200
    10d0:	30 91 01 02 	lds	r19, 0x0201
    10d4:	21 15       	cp	r18, r1
    10d6:	31 05       	cpc	r19, r1
    10d8:	41 f4       	brne	.+16     	; 0x10ea <malloc+0xee>
    10da:	2d b7       	in	r18, 0x3d	; 61
    10dc:	3e b7       	in	r19, 0x3e	; 62
    10de:	40 91 04 02 	lds	r20, 0x0204
    10e2:	50 91 05 02 	lds	r21, 0x0205
    10e6:	24 1b       	sub	r18, r20
    10e8:	35 0b       	sbc	r19, r21
    10ea:	e0 91 a8 02 	lds	r30, 0x02A8
    10ee:	f0 91 a9 02 	lds	r31, 0x02A9
    10f2:	e2 17       	cp	r30, r18
    10f4:	f3 07       	cpc	r31, r19
    10f6:	a0 f4       	brcc	.+40     	; 0x1120 <malloc+0x124>
    10f8:	2e 1b       	sub	r18, r30
    10fa:	3f 0b       	sbc	r19, r31
    10fc:	28 17       	cp	r18, r24
    10fe:	39 07       	cpc	r19, r25
    1100:	78 f0       	brcs	.+30     	; 0x1120 <malloc+0x124>
    1102:	ac 01       	movw	r20, r24
    1104:	4e 5f       	subi	r20, 0xFE	; 254
    1106:	5f 4f       	sbci	r21, 0xFF	; 255
    1108:	24 17       	cp	r18, r20
    110a:	35 07       	cpc	r19, r21
    110c:	48 f0       	brcs	.+18     	; 0x1120 <malloc+0x124>
    110e:	4e 0f       	add	r20, r30
    1110:	5f 1f       	adc	r21, r31
    1112:	50 93 a9 02 	sts	0x02A9, r21
    1116:	40 93 a8 02 	sts	0x02A8, r20
    111a:	81 93       	st	Z+, r24
    111c:	91 93       	st	Z+, r25
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <malloc+0x128>
    1120:	e0 e0       	ldi	r30, 0x00	; 0
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	cf 01       	movw	r24, r30
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	08 95       	ret

0000112c <free>:
    112c:	cf 93       	push	r28
    112e:	df 93       	push	r29
    1130:	00 97       	sbiw	r24, 0x00	; 0
    1132:	09 f4       	brne	.+2      	; 0x1136 <free+0xa>
    1134:	87 c0       	rjmp	.+270    	; 0x1244 <free+0x118>
    1136:	fc 01       	movw	r30, r24
    1138:	32 97       	sbiw	r30, 0x02	; 2
    113a:	13 82       	std	Z+3, r1	; 0x03
    113c:	12 82       	std	Z+2, r1	; 0x02
    113e:	c0 91 aa 02 	lds	r28, 0x02AA
    1142:	d0 91 ab 02 	lds	r29, 0x02AB
    1146:	20 97       	sbiw	r28, 0x00	; 0
    1148:	81 f4       	brne	.+32     	; 0x116a <free+0x3e>
    114a:	20 81       	ld	r18, Z
    114c:	31 81       	ldd	r19, Z+1	; 0x01
    114e:	28 0f       	add	r18, r24
    1150:	39 1f       	adc	r19, r25
    1152:	80 91 a8 02 	lds	r24, 0x02A8
    1156:	90 91 a9 02 	lds	r25, 0x02A9
    115a:	82 17       	cp	r24, r18
    115c:	93 07       	cpc	r25, r19
    115e:	79 f5       	brne	.+94     	; 0x11be <free+0x92>
    1160:	f0 93 a9 02 	sts	0x02A9, r31
    1164:	e0 93 a8 02 	sts	0x02A8, r30
    1168:	6d c0       	rjmp	.+218    	; 0x1244 <free+0x118>
    116a:	de 01       	movw	r26, r28
    116c:	20 e0       	ldi	r18, 0x00	; 0
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	ae 17       	cp	r26, r30
    1172:	bf 07       	cpc	r27, r31
    1174:	50 f4       	brcc	.+20     	; 0x118a <free+0x5e>
    1176:	12 96       	adiw	r26, 0x02	; 2
    1178:	4d 91       	ld	r20, X+
    117a:	5c 91       	ld	r21, X
    117c:	13 97       	sbiw	r26, 0x03	; 3
    117e:	9d 01       	movw	r18, r26
    1180:	41 15       	cp	r20, r1
    1182:	51 05       	cpc	r21, r1
    1184:	09 f1       	breq	.+66     	; 0x11c8 <free+0x9c>
    1186:	da 01       	movw	r26, r20
    1188:	f3 cf       	rjmp	.-26     	; 0x1170 <free+0x44>
    118a:	b3 83       	std	Z+3, r27	; 0x03
    118c:	a2 83       	std	Z+2, r26	; 0x02
    118e:	40 81       	ld	r20, Z
    1190:	51 81       	ldd	r21, Z+1	; 0x01
    1192:	84 0f       	add	r24, r20
    1194:	95 1f       	adc	r25, r21
    1196:	8a 17       	cp	r24, r26
    1198:	9b 07       	cpc	r25, r27
    119a:	71 f4       	brne	.+28     	; 0x11b8 <free+0x8c>
    119c:	8d 91       	ld	r24, X+
    119e:	9c 91       	ld	r25, X
    11a0:	11 97       	sbiw	r26, 0x01	; 1
    11a2:	84 0f       	add	r24, r20
    11a4:	95 1f       	adc	r25, r21
    11a6:	02 96       	adiw	r24, 0x02	; 2
    11a8:	91 83       	std	Z+1, r25	; 0x01
    11aa:	80 83       	st	Z, r24
    11ac:	12 96       	adiw	r26, 0x02	; 2
    11ae:	8d 91       	ld	r24, X+
    11b0:	9c 91       	ld	r25, X
    11b2:	13 97       	sbiw	r26, 0x03	; 3
    11b4:	93 83       	std	Z+3, r25	; 0x03
    11b6:	82 83       	std	Z+2, r24	; 0x02
    11b8:	21 15       	cp	r18, r1
    11ba:	31 05       	cpc	r19, r1
    11bc:	29 f4       	brne	.+10     	; 0x11c8 <free+0x9c>
    11be:	f0 93 ab 02 	sts	0x02AB, r31
    11c2:	e0 93 aa 02 	sts	0x02AA, r30
    11c6:	3e c0       	rjmp	.+124    	; 0x1244 <free+0x118>
    11c8:	d9 01       	movw	r26, r18
    11ca:	13 96       	adiw	r26, 0x03	; 3
    11cc:	fc 93       	st	X, r31
    11ce:	ee 93       	st	-X, r30
    11d0:	12 97       	sbiw	r26, 0x02	; 2
    11d2:	4d 91       	ld	r20, X+
    11d4:	5d 91       	ld	r21, X+
    11d6:	a4 0f       	add	r26, r20
    11d8:	b5 1f       	adc	r27, r21
    11da:	ea 17       	cp	r30, r26
    11dc:	fb 07       	cpc	r31, r27
    11de:	79 f4       	brne	.+30     	; 0x11fe <free+0xd2>
    11e0:	80 81       	ld	r24, Z
    11e2:	91 81       	ldd	r25, Z+1	; 0x01
    11e4:	84 0f       	add	r24, r20
    11e6:	95 1f       	adc	r25, r21
    11e8:	02 96       	adiw	r24, 0x02	; 2
    11ea:	d9 01       	movw	r26, r18
    11ec:	11 96       	adiw	r26, 0x01	; 1
    11ee:	9c 93       	st	X, r25
    11f0:	8e 93       	st	-X, r24
    11f2:	82 81       	ldd	r24, Z+2	; 0x02
    11f4:	93 81       	ldd	r25, Z+3	; 0x03
    11f6:	13 96       	adiw	r26, 0x03	; 3
    11f8:	9c 93       	st	X, r25
    11fa:	8e 93       	st	-X, r24
    11fc:	12 97       	sbiw	r26, 0x02	; 2
    11fe:	e0 e0       	ldi	r30, 0x00	; 0
    1200:	f0 e0       	ldi	r31, 0x00	; 0
    1202:	8a 81       	ldd	r24, Y+2	; 0x02
    1204:	9b 81       	ldd	r25, Y+3	; 0x03
    1206:	00 97       	sbiw	r24, 0x00	; 0
    1208:	19 f0       	breq	.+6      	; 0x1210 <free+0xe4>
    120a:	fe 01       	movw	r30, r28
    120c:	ec 01       	movw	r28, r24
    120e:	f9 cf       	rjmp	.-14     	; 0x1202 <free+0xd6>
    1210:	ce 01       	movw	r24, r28
    1212:	02 96       	adiw	r24, 0x02	; 2
    1214:	28 81       	ld	r18, Y
    1216:	39 81       	ldd	r19, Y+1	; 0x01
    1218:	82 0f       	add	r24, r18
    121a:	93 1f       	adc	r25, r19
    121c:	20 91 a8 02 	lds	r18, 0x02A8
    1220:	30 91 a9 02 	lds	r19, 0x02A9
    1224:	28 17       	cp	r18, r24
    1226:	39 07       	cpc	r19, r25
    1228:	69 f4       	brne	.+26     	; 0x1244 <free+0x118>
    122a:	30 97       	sbiw	r30, 0x00	; 0
    122c:	29 f4       	brne	.+10     	; 0x1238 <free+0x10c>
    122e:	10 92 ab 02 	sts	0x02AB, r1
    1232:	10 92 aa 02 	sts	0x02AA, r1
    1236:	02 c0       	rjmp	.+4      	; 0x123c <free+0x110>
    1238:	13 82       	std	Z+3, r1	; 0x03
    123a:	12 82       	std	Z+2, r1	; 0x02
    123c:	d0 93 a9 02 	sts	0x02A9, r29
    1240:	c0 93 a8 02 	sts	0x02A8, r28
    1244:	df 91       	pop	r29
    1246:	cf 91       	pop	r28
    1248:	08 95       	ret

0000124a <strnlen_P>:
    124a:	fc 01       	movw	r30, r24
    124c:	05 90       	lpm	r0, Z+
    124e:	61 50       	subi	r22, 0x01	; 1
    1250:	70 40       	sbci	r23, 0x00	; 0
    1252:	01 10       	cpse	r0, r1
    1254:	d8 f7       	brcc	.-10     	; 0x124c <strnlen_P+0x2>
    1256:	80 95       	com	r24
    1258:	90 95       	com	r25
    125a:	8e 0f       	add	r24, r30
    125c:	9f 1f       	adc	r25, r31
    125e:	08 95       	ret

00001260 <memset>:
    1260:	dc 01       	movw	r26, r24
    1262:	01 c0       	rjmp	.+2      	; 0x1266 <memset+0x6>
    1264:	6d 93       	st	X+, r22
    1266:	41 50       	subi	r20, 0x01	; 1
    1268:	50 40       	sbci	r21, 0x00	; 0
    126a:	e0 f7       	brcc	.-8      	; 0x1264 <memset+0x4>
    126c:	08 95       	ret

0000126e <strnlen>:
    126e:	fc 01       	movw	r30, r24
    1270:	61 50       	subi	r22, 0x01	; 1
    1272:	70 40       	sbci	r23, 0x00	; 0
    1274:	01 90       	ld	r0, Z+
    1276:	01 10       	cpse	r0, r1
    1278:	d8 f7       	brcc	.-10     	; 0x1270 <strnlen+0x2>
    127a:	80 95       	com	r24
    127c:	90 95       	com	r25
    127e:	8e 0f       	add	r24, r30
    1280:	9f 1f       	adc	r25, r31
    1282:	08 95       	ret

00001284 <fputc>:
    1284:	0f 93       	push	r16
    1286:	1f 93       	push	r17
    1288:	cf 93       	push	r28
    128a:	df 93       	push	r29
    128c:	18 2f       	mov	r17, r24
    128e:	09 2f       	mov	r16, r25
    1290:	eb 01       	movw	r28, r22
    1292:	8b 81       	ldd	r24, Y+3	; 0x03
    1294:	81 fd       	sbrc	r24, 1
    1296:	03 c0       	rjmp	.+6      	; 0x129e <fputc+0x1a>
    1298:	8f ef       	ldi	r24, 0xFF	; 255
    129a:	9f ef       	ldi	r25, 0xFF	; 255
    129c:	20 c0       	rjmp	.+64     	; 0x12de <fputc+0x5a>
    129e:	82 ff       	sbrs	r24, 2
    12a0:	10 c0       	rjmp	.+32     	; 0x12c2 <fputc+0x3e>
    12a2:	4e 81       	ldd	r20, Y+6	; 0x06
    12a4:	5f 81       	ldd	r21, Y+7	; 0x07
    12a6:	2c 81       	ldd	r18, Y+4	; 0x04
    12a8:	3d 81       	ldd	r19, Y+5	; 0x05
    12aa:	42 17       	cp	r20, r18
    12ac:	53 07       	cpc	r21, r19
    12ae:	7c f4       	brge	.+30     	; 0x12ce <fputc+0x4a>
    12b0:	e8 81       	ld	r30, Y
    12b2:	f9 81       	ldd	r31, Y+1	; 0x01
    12b4:	9f 01       	movw	r18, r30
    12b6:	2f 5f       	subi	r18, 0xFF	; 255
    12b8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ba:	39 83       	std	Y+1, r19	; 0x01
    12bc:	28 83       	st	Y, r18
    12be:	10 83       	st	Z, r17
    12c0:	06 c0       	rjmp	.+12     	; 0x12ce <fputc+0x4a>
    12c2:	e8 85       	ldd	r30, Y+8	; 0x08
    12c4:	f9 85       	ldd	r31, Y+9	; 0x09
    12c6:	81 2f       	mov	r24, r17
    12c8:	19 95       	eicall
    12ca:	89 2b       	or	r24, r25
    12cc:	29 f7       	brne	.-54     	; 0x1298 <fputc+0x14>
    12ce:	2e 81       	ldd	r18, Y+6	; 0x06
    12d0:	3f 81       	ldd	r19, Y+7	; 0x07
    12d2:	2f 5f       	subi	r18, 0xFF	; 255
    12d4:	3f 4f       	sbci	r19, 0xFF	; 255
    12d6:	3f 83       	std	Y+7, r19	; 0x07
    12d8:	2e 83       	std	Y+6, r18	; 0x06
    12da:	81 2f       	mov	r24, r17
    12dc:	90 2f       	mov	r25, r16
    12de:	df 91       	pop	r29
    12e0:	cf 91       	pop	r28
    12e2:	1f 91       	pop	r17
    12e4:	0f 91       	pop	r16
    12e6:	08 95       	ret

000012e8 <__ultoa_invert>:
    12e8:	fa 01       	movw	r30, r20
    12ea:	aa 27       	eor	r26, r26
    12ec:	28 30       	cpi	r18, 0x08	; 8
    12ee:	51 f1       	breq	.+84     	; 0x1344 <__ultoa_invert+0x5c>
    12f0:	20 31       	cpi	r18, 0x10	; 16
    12f2:	81 f1       	breq	.+96     	; 0x1354 <__ultoa_invert+0x6c>
    12f4:	e8 94       	clt
    12f6:	6f 93       	push	r22
    12f8:	6e 7f       	andi	r22, 0xFE	; 254
    12fa:	6e 5f       	subi	r22, 0xFE	; 254
    12fc:	7f 4f       	sbci	r23, 0xFF	; 255
    12fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1300:	9f 4f       	sbci	r25, 0xFF	; 255
    1302:	af 4f       	sbci	r26, 0xFF	; 255
    1304:	b1 e0       	ldi	r27, 0x01	; 1
    1306:	3e d0       	rcall	.+124    	; 0x1384 <__ultoa_invert+0x9c>
    1308:	b4 e0       	ldi	r27, 0x04	; 4
    130a:	3c d0       	rcall	.+120    	; 0x1384 <__ultoa_invert+0x9c>
    130c:	67 0f       	add	r22, r23
    130e:	78 1f       	adc	r23, r24
    1310:	89 1f       	adc	r24, r25
    1312:	9a 1f       	adc	r25, r26
    1314:	a1 1d       	adc	r26, r1
    1316:	68 0f       	add	r22, r24
    1318:	79 1f       	adc	r23, r25
    131a:	8a 1f       	adc	r24, r26
    131c:	91 1d       	adc	r25, r1
    131e:	a1 1d       	adc	r26, r1
    1320:	6a 0f       	add	r22, r26
    1322:	71 1d       	adc	r23, r1
    1324:	81 1d       	adc	r24, r1
    1326:	91 1d       	adc	r25, r1
    1328:	a1 1d       	adc	r26, r1
    132a:	20 d0       	rcall	.+64     	; 0x136c <__ultoa_invert+0x84>
    132c:	09 f4       	brne	.+2      	; 0x1330 <__ultoa_invert+0x48>
    132e:	68 94       	set
    1330:	3f 91       	pop	r19
    1332:	2a e0       	ldi	r18, 0x0A	; 10
    1334:	26 9f       	mul	r18, r22
    1336:	11 24       	eor	r1, r1
    1338:	30 19       	sub	r19, r0
    133a:	30 5d       	subi	r19, 0xD0	; 208
    133c:	31 93       	st	Z+, r19
    133e:	de f6       	brtc	.-74     	; 0x12f6 <__ultoa_invert+0xe>
    1340:	cf 01       	movw	r24, r30
    1342:	08 95       	ret
    1344:	46 2f       	mov	r20, r22
    1346:	47 70       	andi	r20, 0x07	; 7
    1348:	40 5d       	subi	r20, 0xD0	; 208
    134a:	41 93       	st	Z+, r20
    134c:	b3 e0       	ldi	r27, 0x03	; 3
    134e:	0f d0       	rcall	.+30     	; 0x136e <__ultoa_invert+0x86>
    1350:	c9 f7       	brne	.-14     	; 0x1344 <__ultoa_invert+0x5c>
    1352:	f6 cf       	rjmp	.-20     	; 0x1340 <__ultoa_invert+0x58>
    1354:	46 2f       	mov	r20, r22
    1356:	4f 70       	andi	r20, 0x0F	; 15
    1358:	40 5d       	subi	r20, 0xD0	; 208
    135a:	4a 33       	cpi	r20, 0x3A	; 58
    135c:	18 f0       	brcs	.+6      	; 0x1364 <__ultoa_invert+0x7c>
    135e:	49 5d       	subi	r20, 0xD9	; 217
    1360:	31 fd       	sbrc	r19, 1
    1362:	40 52       	subi	r20, 0x20	; 32
    1364:	41 93       	st	Z+, r20
    1366:	02 d0       	rcall	.+4      	; 0x136c <__ultoa_invert+0x84>
    1368:	a9 f7       	brne	.-22     	; 0x1354 <__ultoa_invert+0x6c>
    136a:	ea cf       	rjmp	.-44     	; 0x1340 <__ultoa_invert+0x58>
    136c:	b4 e0       	ldi	r27, 0x04	; 4
    136e:	a6 95       	lsr	r26
    1370:	97 95       	ror	r25
    1372:	87 95       	ror	r24
    1374:	77 95       	ror	r23
    1376:	67 95       	ror	r22
    1378:	ba 95       	dec	r27
    137a:	c9 f7       	brne	.-14     	; 0x136e <__ultoa_invert+0x86>
    137c:	00 97       	sbiw	r24, 0x00	; 0
    137e:	61 05       	cpc	r22, r1
    1380:	71 05       	cpc	r23, r1
    1382:	08 95       	ret
    1384:	9b 01       	movw	r18, r22
    1386:	ac 01       	movw	r20, r24
    1388:	0a 2e       	mov	r0, r26
    138a:	06 94       	lsr	r0
    138c:	57 95       	ror	r21
    138e:	47 95       	ror	r20
    1390:	37 95       	ror	r19
    1392:	27 95       	ror	r18
    1394:	ba 95       	dec	r27
    1396:	c9 f7       	brne	.-14     	; 0x138a <__ultoa_invert+0xa2>
    1398:	62 0f       	add	r22, r18
    139a:	73 1f       	adc	r23, r19
    139c:	84 1f       	adc	r24, r20
    139e:	95 1f       	adc	r25, r21
    13a0:	a0 1d       	adc	r26, r0
    13a2:	08 95       	ret

000013a4 <_exit>:
    13a4:	f8 94       	cli

000013a6 <__stop_program>:
    13a6:	ff cf       	rjmp	.-2      	; 0x13a6 <__stop_program>
