
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a8  00800200  0000134a  000013de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000134a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002a8  008002a8  00001486  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001486  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000148  00000000  00000000  000014e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001423  00000000  00000000  0000162a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000967  00000000  00000000  00002a4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a34  00000000  00000000  000033b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000035c  00000000  00000000  00003de8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000478  00000000  00000000  00004144  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ba2  00000000  00000000  000045bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  0000515e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ea e4       	ldi	r30, 0x4A	; 74
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 3a       	cpi	r26, 0xA8	; 168
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a8 ea       	ldi	r26, 0xA8	; 168
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 3b       	cpi	r26, 0xB2	; 178
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	f3 d0       	rcall	.+486    	; 0x306 <main>
     120:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <can_init>:
		printf("can message send %d", msg->data[i]);
	}
	printf("\n\r");
	mcp2515_request(MCP_RTS_TX0);
	//Do something...
}
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	2a 97       	sbiw	r28, 0x0a	; 10
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
     13a:	4e d1       	rcall	.+668    	; 0x3d8 <mcp2515_init>
     13c:	41 e0       	ldi	r20, 0x01	; 1
     13e:	60 e6       	ldi	r22, 0x60	; 96
     140:	80 e6       	ldi	r24, 0x60	; 96
     142:	6c d1       	rcall	.+728    	; 0x41c <mcp2515_write>
     144:	8f ef       	ldi	r24, 0xFF	; 255
     146:	9f e8       	ldi	r25, 0x8F	; 143
     148:	01 97       	sbiw	r24, 0x01	; 1
     14a:	f1 f7       	brne	.-4      	; 0x148 <can_init+0x22>
     14c:	00 c0       	rjmp	.+0      	; 0x14e <can_init+0x28>
     14e:	00 00       	nop
     150:	41 e0       	ldi	r20, 0x01	; 1
     152:	61 e0       	ldi	r22, 0x01	; 1
     154:	8b e2       	ldi	r24, 0x2B	; 43
     156:	78 d1       	rcall	.+752    	; 0x448 <mcp2515_bit_modify>
     158:	8f ef       	ldi	r24, 0xFF	; 255
     15a:	9f e8       	ldi	r25, 0x8F	; 143
     15c:	01 97       	sbiw	r24, 0x01	; 1
     15e:	f1 f7       	brne	.-4      	; 0x15c <can_init+0x36>
     160:	00 c0       	rjmp	.+0      	; 0x162 <can_init+0x3c>
     162:	00 00       	nop
     164:	40 e0       	ldi	r20, 0x00	; 0
     166:	60 ee       	ldi	r22, 0xE0	; 224
     168:	8f e0       	ldi	r24, 0x0F	; 15
     16a:	6e d1       	rcall	.+732    	; 0x448 <mcp2515_bit_modify>
     16c:	8f ef       	ldi	r24, 0xFF	; 255
     16e:	9f e8       	ldi	r25, 0x8F	; 143
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <can_init+0x4a>
     174:	00 c0       	rjmp	.+0      	; 0x176 <can_init+0x50>
     176:	00 00       	nop
     178:	4a e0       	ldi	r20, 0x0A	; 10
     17a:	be 01       	movw	r22, r28
     17c:	6f 5f       	subi	r22, 0xFF	; 255
     17e:	7f 4f       	sbci	r23, 0xFF	; 255
     180:	8e e0       	ldi	r24, 0x0E	; 14
     182:	2d d1       	rcall	.+602    	; 0x3de <mcp2515_read>
     184:	89 81       	ldd	r24, Y+1	; 0x01
     186:	80 7e       	andi	r24, 0xE0	; 224
     188:	99 f0       	breq	.+38     	; 0x1b0 <can_init+0x8a>
     18a:	1f 92       	push	r1
     18c:	8f 93       	push	r24
     18e:	86 e0       	ldi	r24, 0x06	; 6
     190:	92 e0       	ldi	r25, 0x02	; 2
     192:	9f 93       	push	r25
     194:	8f 93       	push	r24
     196:	bd d4       	rcall	.+2426   	; 0xb12 <printf>
     198:	8f e7       	ldi	r24, 0x7F	; 127
     19a:	92 e0       	ldi	r25, 0x02	; 2
     19c:	9f 93       	push	r25
     19e:	8f 93       	push	r24
     1a0:	b8 d4       	rcall	.+2416   	; 0xb12 <printf>
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	0f 90       	pop	r0
     1ae:	07 c0       	rjmp	.+14     	; 0x1be <can_init+0x98>
     1b0:	8a e4       	ldi	r24, 0x4A	; 74
     1b2:	92 e0       	ldi	r25, 0x02	; 2
     1b4:	9f 93       	push	r25
     1b6:	8f 93       	push	r24
     1b8:	ac d4       	rcall	.+2392   	; 0xb12 <printf>
     1ba:	0f 90       	pop	r0
     1bc:	0f 90       	pop	r0
     1be:	2a 96       	adiw	r28, 0x0a	; 10
     1c0:	0f b6       	in	r0, 0x3f	; 63
     1c2:	f8 94       	cli
     1c4:	de bf       	out	0x3e, r29	; 62
     1c6:	0f be       	out	0x3f, r0	; 63
     1c8:	cd bf       	out	0x3d, r28	; 61
     1ca:	df 91       	pop	r29
     1cc:	cf 91       	pop	r28
     1ce:	08 95       	ret

000001d0 <can_data_receive>:
{
	
}
*/
void can_data_receive(struct can_message* msg, int buffer)
{
     1d0:	ff 92       	push	r15
     1d2:	0f 93       	push	r16
     1d4:	1f 93       	push	r17
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
     1de:	2a 97       	sbiw	r28, 0x0a	; 10
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	8c 01       	movw	r16, r24
     1ec:	f6 2e       	mov	r15, r22
	uint8_t result[MAX_CAN_LENGTH];
	
		
	mcp2515_read(MCP_CANINTF, result, 1);
     1ee:	41 e0       	ldi	r20, 0x01	; 1
     1f0:	be 01       	movw	r22, r28
     1f2:	6f 5f       	subi	r22, 0xFF	; 255
     1f4:	7f 4f       	sbci	r23, 0xFF	; 255
     1f6:	8c e2       	ldi	r24, 0x2C	; 44
     1f8:	f2 d0       	rcall	.+484    	; 0x3de <mcp2515_read>

	if (!result[0]){
     1fa:	89 81       	ldd	r24, Y+1	; 0x01
     1fc:	81 11       	cpse	r24, r1
     1fe:	0b c0       	rjmp	.+22     	; 0x216 <can_data_receive+0x46>
		printf("CANINTF out %d \n\r", result[0] & 0b1);
     200:	1f 92       	push	r1
     202:	1f 92       	push	r1
     204:	20 e7       	ldi	r18, 0x70	; 112
     206:	32 e0       	ldi	r19, 0x02	; 2
     208:	3f 93       	push	r19
     20a:	2f 93       	push	r18
     20c:	82 d4       	rcall	.+2308   	; 0xb12 <printf>
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	0f 90       	pop	r0
     214:	0f 90       	pop	r0
	}
	
	uint8_t i;
	
	mcp2515_read(MCP_RXB0DLC + buffer, result, 1);
     216:	41 e0       	ldi	r20, 0x01	; 1
     218:	be 01       	movw	r22, r28
     21a:	6f 5f       	subi	r22, 0xFF	; 255
     21c:	7f 4f       	sbci	r23, 0xFF	; 255
     21e:	85 e6       	ldi	r24, 0x65	; 101
     220:	8f 0d       	add	r24, r15
     222:	dd d0       	rcall	.+442    	; 0x3de <mcp2515_read>
	msg->length = result[0];
     224:	89 81       	ldd	r24, Y+1	; 0x01
     226:	f8 01       	movw	r30, r16
     228:	82 83       	std	Z+2, r24	; 0x02
	
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
     22a:	41 e0       	ldi	r20, 0x01	; 1
     22c:	be 01       	movw	r22, r28
     22e:	6f 5f       	subi	r22, 0xFF	; 255
     230:	7f 4f       	sbci	r23, 0xFF	; 255
     232:	81 e6       	ldi	r24, 0x61	; 97
     234:	8f 0d       	add	r24, r15
     236:	d3 d0       	rcall	.+422    	; 0x3de <mcp2515_read>
	msg->id = result[0];
     238:	29 81       	ldd	r18, Y+1	; 0x01
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f8 01       	movw	r30, r16
     23e:	31 83       	std	Z+1, r19	; 0x01
     240:	20 83       	st	Z, r18
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
     242:	42 81       	ldd	r20, Z+2	; 0x02
     244:	be 01       	movw	r22, r28
     246:	6f 5f       	subi	r22, 0xFF	; 255
     248:	7f 4f       	sbci	r23, 0xFF	; 255
     24a:	86 e6       	ldi	r24, 0x66	; 102
     24c:	8f 0d       	add	r24, r15
     24e:	c7 d0       	rcall	.+398    	; 0x3de <mcp2515_read>
	
	for (i = 0; i < msg->length; i++)
     250:	f8 01       	movw	r30, r16
     252:	92 81       	ldd	r25, Z+2	; 0x02
     254:	99 23       	and	r25, r25
     256:	61 f0       	breq	.+24     	; 0x270 <can_data_receive+0xa0>
     258:	9e 01       	movw	r18, r28
     25a:	2f 5f       	subi	r18, 0xFF	; 255
     25c:	3f 4f       	sbci	r19, 0xFF	; 255
     25e:	d8 01       	movw	r26, r16
     260:	13 96       	adiw	r26, 0x03	; 3
     262:	f9 01       	movw	r30, r18
	{
		msg->data[i] = result[i];
     264:	81 91       	ld	r24, Z+
     266:	8d 93       	st	X+, r24
     268:	8e 2f       	mov	r24, r30
     26a:	82 1b       	sub	r24, r18
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
	msg->id = result[0];
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
	
	for (i = 0; i < msg->length; i++)
     26c:	89 17       	cp	r24, r25
     26e:	d0 f3       	brcs	.-12     	; 0x264 <can_data_receive+0x94>
		msg->data[i] = result[i];
		//printf("can messsage received %c", msg->data[i]);
	}
	//printf("\n\r");
	
	mcp2515_bit_modify(MCP_CANINTF, 0x01, 0x00);
     270:	40 e0       	ldi	r20, 0x00	; 0
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	8c e2       	ldi	r24, 0x2C	; 44
     276:	e8 d0       	rcall	.+464    	; 0x448 <mcp2515_bit_modify>
}
     278:	2a 96       	adiw	r28, 0x0a	; 10
     27a:	0f b6       	in	r0, 0x3f	; 63
     27c:	f8 94       	cli
     27e:	de bf       	out	0x3e, r29	; 62
     280:	0f be       	out	0x3f, r0	; 63
     282:	cd bf       	out	0x3d, r28	; 61
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	1f 91       	pop	r17
     28a:	0f 91       	pop	r16
     28c:	ff 90       	pop	r15
     28e:	08 95       	ret

00000290 <can_get_message>:

int can_get_message(struct can_message* message)
{
     290:	0f 93       	push	r16
     292:	1f 93       	push	r17
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62
     29c:	2a 97       	sbiw	r28, 0x0a	; 10
     29e:	0f b6       	in	r0, 0x3f	; 63
     2a0:	f8 94       	cli
     2a2:	de bf       	out	0x3e, r29	; 62
     2a4:	0f be       	out	0x3f, r0	; 63
     2a6:	cd bf       	out	0x3d, r28	; 61
     2a8:	8c 01       	movw	r16, r24
	uint8_t result[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANINTF, result, 1);
     2aa:	41 e0       	ldi	r20, 0x01	; 1
     2ac:	be 01       	movw	r22, r28
     2ae:	6f 5f       	subi	r22, 0xFF	; 255
     2b0:	7f 4f       	sbci	r23, 0xFF	; 255
     2b2:	8c e2       	ldi	r24, 0x2C	; 44
     2b4:	94 d0       	rcall	.+296    	; 0x3de <mcp2515_read>

	
	if ((result[0] & 0x01) == 0x01)
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	80 ff       	sbrs	r24, 0
     2ba:	0b c0       	rjmp	.+22     	; 0x2d2 <can_get_message+0x42>
	{
		can_data_receive(message,0);
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	c8 01       	movw	r24, r16
     2c2:	86 df       	rcall	.-244    	; 0x1d0 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     2c4:	40 e0       	ldi	r20, 0x00	; 0
     2c6:	61 e0       	ldi	r22, 0x01	; 1
     2c8:	8c e2       	ldi	r24, 0x2C	; 44
     2ca:	be d0       	rcall	.+380    	; 0x448 <mcp2515_bit_modify>
		return 1;
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	0f c0       	rjmp	.+30     	; 0x2f0 <can_get_message+0x60>
	}
	else if ((result[0] & 0x02) == 0x02)
     2d2:	81 ff       	sbrs	r24, 1
     2d4:	0b c0       	rjmp	.+22     	; 0x2ec <can_get_message+0x5c>
	{
		can_data_receive(message,1);
     2d6:	61 e0       	ldi	r22, 0x01	; 1
     2d8:	70 e0       	ldi	r23, 0x00	; 0
     2da:	c8 01       	movw	r24, r16
     2dc:	79 df       	rcall	.-270    	; 0x1d0 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
     2de:	40 e0       	ldi	r20, 0x00	; 0
     2e0:	62 e0       	ldi	r22, 0x02	; 2
     2e2:	8c e2       	ldi	r24, 0x2C	; 44
     2e4:	b1 d0       	rcall	.+354    	; 0x448 <mcp2515_bit_modify>
		return 1;
     2e6:	81 e0       	ldi	r24, 0x01	; 1
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <can_get_message+0x60>
	}
	else
	{
		return 0;
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     2f0:	2a 96       	adiw	r28, 0x0a	; 10
     2f2:	0f b6       	in	r0, 0x3f	; 63
     2f4:	f8 94       	cli
     2f6:	de bf       	out	0x3e, r29	; 62
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	cd bf       	out	0x3d, r28	; 61
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	1f 91       	pop	r17
     302:	0f 91       	pop	r16
     304:	08 95       	ret

00000306 <main>:
#include "can_controller.h"
#include "spi.h"
#include "pwm.h"


int main(void){
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
     30a:	cd b7       	in	r28, 0x3d	; 61
     30c:	de b7       	in	r29, 0x3e	; 62
     30e:	2d 97       	sbiw	r28, 0x0d	; 13
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	f8 94       	cli
     314:	de bf       	out	0x3e, r29	; 62
     316:	0f be       	out	0x3f, r0	; 63
     318:	cd bf       	out	0x3d, r28	; 61
	
	USART_Init(MYUBRR);
     31a:	87 e6       	ldi	r24, 0x67	; 103
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	84 d1       	rcall	.+776    	; 0x628 <USART_Init>
	printf("start \n\r \n");
     320:	82 e8       	ldi	r24, 0x82	; 130
     322:	92 e0       	ldi	r25, 0x02	; 2
     324:	07 d4       	rcall	.+2062   	; 0xb34 <puts>
	
	can_init();
     326:	ff de       	rcall	.-514    	; 0x126 <can_init>
	message.length = 1;
	message.data[0] = (uint8_t) 'c';
	
	
	struct can_message message2;
	message2.id = 3;
     328:	83 e0       	ldi	r24, 0x03	; 3
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	9a 83       	std	Y+2, r25	; 0x02
     32e:	89 83       	std	Y+1, r24	; 0x01
	message2.length = 1;
     330:	81 e0       	ldi	r24, 0x01	; 1
     332:	8b 83       	std	Y+3, r24	; 0x03
	printf("In the main received %c \n\r \n\r", message2.data[0]);
	*/
	int i = 4;
	char joy_equivalence[5][40] = {"Left", "Right", "Up", "Down", "Neutral"};
	
	pwm_init();	
     334:	b3 d0       	rcall	.+358    	; 0x49c <pwm_init>
	//pwm_set_pulse_width(50000);	
	float pw = 1500;
     336:	0f 2e       	mov	r0, r31
     338:	c1 2c       	mov	r12, r1
     33a:	f0 e8       	ldi	r31, 0x80	; 128
     33c:	df 2e       	mov	r13, r31
     33e:	fb eb       	ldi	r31, 0xBB	; 187
     340:	ef 2e       	mov	r14, r31
     342:	f4 e4       	ldi	r31, 0x44	; 68
     344:	ff 2e       	mov	r15, r31
     346:	f0 2d       	mov	r31, r0
			//printf("Atmega2560 received a new message %d \n \r \n\r", message2.data[0]);
			
				
			x_val = 255-(float) message2.data[0];
			a = (int) pw;
			printf("ow b: %d\n\r",  a);
     348:	0f 2e       	mov	r0, r31
     34a:	fc e8       	ldi	r31, 0x8C	; 140
     34c:	af 2e       	mov	r10, r31
     34e:	f2 e0       	ldi	r31, 0x02	; 2
     350:	bf 2e       	mov	r11, r31
     352:	f0 2d       	mov	r31, r0
			//pw = pwm_follow_joystick_val(pw, x_val);
			//a = (int) pw;
			//printf("pw not scaled: %d\n\r",  a);
			pw = pwm_scale_joystick_val(x_val);
			a = (int) pw;
			printf("pw scaled: %d\n\r",  a);
     354:	07 e9       	ldi	r16, 0x97	; 151
     356:	12 e0       	ldi	r17, 0x02	; 2
	
	int a = 0; //just for printf

    while(1)
    {
		if(can_get_message(&message2)){
     358:	ce 01       	movw	r24, r28
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	99 df       	rcall	.-206    	; 0x290 <can_get_message>
     35e:	89 2b       	or	r24, r25
     360:	d9 f3       	breq	.-10     	; 0x358 <main+0x52>
			
			//printf("Atmega2560 received a new message %d \n \r \n\r", message2.data[0]);
			
				
			x_val = 255-(float) message2.data[0];
     362:	6c 81       	ldd	r22, Y+4	; 0x04
     364:	70 e0       	ldi	r23, 0x00	; 0
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	70 d2       	rcall	.+1248   	; 0x84c <__floatunsisf>
     36c:	9b 01       	movw	r18, r22
     36e:	ac 01       	movw	r20, r24
     370:	60 e0       	ldi	r22, 0x00	; 0
     372:	70 e0       	ldi	r23, 0x00	; 0
     374:	8f e7       	ldi	r24, 0x7F	; 127
     376:	93 e4       	ldi	r25, 0x43	; 67
     378:	67 d1       	rcall	.+718    	; 0x648 <__subsf3>
     37a:	2b 01       	movw	r4, r22
     37c:	3c 01       	movw	r6, r24
			a = (int) pw;
     37e:	c7 01       	movw	r24, r14
     380:	b6 01       	movw	r22, r12
     382:	33 d2       	rcall	.+1126   	; 0x7ea <__fixsfsi>
			printf("ow b: %d\n\r",  a);
     384:	7f 93       	push	r23
     386:	6f 93       	push	r22
     388:	bf 92       	push	r11
     38a:	af 92       	push	r10
     38c:	c2 d3       	rcall	.+1924   	; 0xb12 <printf>
			//pw = pwm_follow_joystick_val(pw, x_val);
			//a = (int) pw;
			//printf("pw not scaled: %d\n\r",  a);
			pw = pwm_scale_joystick_val(x_val);
     38e:	c3 01       	movw	r24, r6
     390:	b2 01       	movw	r22, r4
     392:	ec d0       	rcall	.+472    	; 0x56c <pwm_scale_joystick_val>
     394:	6b 01       	movw	r12, r22
     396:	7c 01       	movw	r14, r24
			a = (int) pw;
     398:	28 d2       	rcall	.+1104   	; 0x7ea <__fixsfsi>
			printf("pw scaled: %d\n\r",  a);
     39a:	7f 93       	push	r23
     39c:	6f 93       	push	r22
     39e:	1f 93       	push	r17
     3a0:	0f 93       	push	r16
     3a2:	b7 d3       	rcall	.+1902   	; 0xb12 <printf>
			pwm_set_pulse_width(pw);
     3a4:	c7 01       	movw	r24, r14
     3a6:	b6 01       	movw	r22, r12
     3a8:	98 d0       	rcall	.+304    	; 0x4da <pwm_set_pulse_width>
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	f8 94       	cli
     3ae:	de bf       	out	0x3e, r29	; 62
     3b0:	0f be       	out	0x3f, r0	; 63
     3b2:	cd bf       	out	0x3d, r28	; 61
     3b4:	d1 cf       	rjmp	.-94     	; 0x358 <main+0x52>

000003b6 <mcp2515_reset>:
		
	uint8_t cmd[] = {rqs};
	spi_write(cmd, 1);		
	
	PORTB |= (1<<PB7); // Deselect CAN-controller
}
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	1f 92       	push	r1
     3bc:	cd b7       	in	r28, 0x3d	; 61
     3be:	de b7       	in	r29, 0x3e	; 62
     3c0:	2f 98       	cbi	0x05, 7	; 5
     3c2:	80 ec       	ldi	r24, 0xC0	; 192
     3c4:	89 83       	std	Y+1, r24	; 0x01
     3c6:	61 e0       	ldi	r22, 0x01	; 1
     3c8:	ce 01       	movw	r24, r28
     3ca:	01 96       	adiw	r24, 0x01	; 1
     3cc:	09 d1       	rcall	.+530    	; 0x5e0 <spi_write>
     3ce:	2f 9a       	sbi	0x05, 7	; 5
     3d0:	0f 90       	pop	r0
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	08 95       	ret

000003d8 <mcp2515_init>:
     3d8:	d4 d0       	rcall	.+424    	; 0x582 <spi_init>
     3da:	ed cf       	rjmp	.-38     	; 0x3b6 <mcp2515_reset>
     3dc:	08 95       	ret

000003de <mcp2515_read>:
     3de:	ff 92       	push	r15
     3e0:	0f 93       	push	r16
     3e2:	1f 93       	push	r17
     3e4:	cf 93       	push	r28
     3e6:	df 93       	push	r29
     3e8:	1f 92       	push	r1
     3ea:	1f 92       	push	r1
     3ec:	cd b7       	in	r28, 0x3d	; 61
     3ee:	de b7       	in	r29, 0x3e	; 62
     3f0:	8b 01       	movw	r16, r22
     3f2:	f4 2e       	mov	r15, r20
     3f4:	2f 98       	cbi	0x05, 7	; 5
     3f6:	93 e0       	ldi	r25, 0x03	; 3
     3f8:	99 83       	std	Y+1, r25	; 0x01
     3fa:	8a 83       	std	Y+2, r24	; 0x02
     3fc:	62 e0       	ldi	r22, 0x02	; 2
     3fe:	ce 01       	movw	r24, r28
     400:	01 96       	adiw	r24, 0x01	; 1
     402:	ee d0       	rcall	.+476    	; 0x5e0 <spi_write>
     404:	6f 2d       	mov	r22, r15
     406:	c8 01       	movw	r24, r16
     408:	c5 d0       	rcall	.+394    	; 0x594 <spi_read>
     40a:	2f 9a       	sbi	0x05, 7	; 5
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
     410:	df 91       	pop	r29
     412:	cf 91       	pop	r28
     414:	1f 91       	pop	r17
     416:	0f 91       	pop	r16
     418:	ff 90       	pop	r15
     41a:	08 95       	ret

0000041c <mcp2515_write>:
     41c:	cf 93       	push	r28
     41e:	df 93       	push	r29
     420:	00 d0       	rcall	.+0      	; 0x422 <mcp2515_write+0x6>
     422:	cd b7       	in	r28, 0x3d	; 61
     424:	de b7       	in	r29, 0x3e	; 62
     426:	2f 98       	cbi	0x05, 7	; 5
     428:	92 e0       	ldi	r25, 0x02	; 2
     42a:	99 83       	std	Y+1, r25	; 0x01
     42c:	8a 83       	std	Y+2, r24	; 0x02
     42e:	6b 83       	std	Y+3, r22	; 0x03
     430:	62 e0       	ldi	r22, 0x02	; 2
     432:	64 0f       	add	r22, r20
     434:	ce 01       	movw	r24, r28
     436:	01 96       	adiw	r24, 0x01	; 1
     438:	d3 d0       	rcall	.+422    	; 0x5e0 <spi_write>
     43a:	2f 9a       	sbi	0x05, 7	; 5
     43c:	0f 90       	pop	r0
     43e:	0f 90       	pop	r0
     440:	0f 90       	pop	r0
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	08 95       	ret

00000448 <mcp2515_bit_modify>:

// Modify bits in the register / See datasheet 12.10
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data) 
{
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
     44c:	00 d0       	rcall	.+0      	; 0x44e <mcp2515_bit_modify+0x6>
     44e:	1f 92       	push	r1
     450:	cd b7       	in	r28, 0x3d	; 61
     452:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PB7); // Select CAN-controller
     454:	2f 98       	cbi	0x05, 7	; 5
	//SPSR &= ~(1 << SPIF);	

	uint8_t bit_list[] = {MCP_BITMOD, address, mask, data};
     456:	95 e0       	ldi	r25, 0x05	; 5
     458:	99 83       	std	Y+1, r25	; 0x01
     45a:	8a 83       	std	Y+2, r24	; 0x02
     45c:	6b 83       	std	Y+3, r22	; 0x03
     45e:	4c 83       	std	Y+4, r20	; 0x04
	spi_write(bit_list, 4);	
     460:	64 e0       	ldi	r22, 0x04	; 4
     462:	ce 01       	movw	r24, r28
     464:	01 96       	adiw	r24, 0x01	; 1
     466:	bc d0       	rcall	.+376    	; 0x5e0 <spi_write>
	
	PORTB |= (1<<PB7); //Deselect CAN-controller
     468:	2f 9a       	sbi	0x05, 7	; 5

}
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	0f 90       	pop	r0
     470:	0f 90       	pop	r0
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	08 95       	ret

00000478 <pwm_set_signal_period>:
	
}

void pwm_set_signal_period(){
	//prescale
	set_bit(TCCR1B, CS11);
     478:	e1 e8       	ldi	r30, 0x81	; 129
     47a:	f0 e0       	ldi	r31, 0x00	; 0
     47c:	80 81       	ld	r24, Z
     47e:	82 60       	ori	r24, 0x02	; 2
     480:	80 83       	st	Z, r24
	clear_bit(TCCR1B, CS12);
     482:	80 81       	ld	r24, Z
     484:	8b 7f       	andi	r24, 0xFB	; 251
     486:	80 83       	st	Z, r24
	clear_bit(TCCR1B, CS10);
     488:	80 81       	ld	r24, Z
     48a:	8e 7f       	andi	r24, 0xFE	; 254
     48c:	80 83       	st	Z, r24
	
	ICR1 = TOP_VALUE;	//set period to 20ms
     48e:	80 e4       	ldi	r24, 0x40	; 64
     490:	9c e9       	ldi	r25, 0x9C	; 156
     492:	90 93 87 00 	sts	0x0087, r25
     496:	80 93 86 00 	sts	0x0086, r24
     49a:	08 95       	ret

0000049c <pwm_init>:
#define  TOP_VALUE FOSC/8/50


void pwm_init(){
	// set mode to fast pwm
	set_bit(TCCR1B, WGM13);
     49c:	e1 e8       	ldi	r30, 0x81	; 129
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	80 81       	ld	r24, Z
     4a2:	80 61       	ori	r24, 0x10	; 16
     4a4:	80 83       	st	Z, r24
	set_bit(TCCR1B, WGM12);
     4a6:	80 81       	ld	r24, Z
     4a8:	88 60       	ori	r24, 0x08	; 8
     4aa:	80 83       	st	Z, r24
	set_bit(TCCR1A, WGM11);
     4ac:	e0 e8       	ldi	r30, 0x80	; 128
     4ae:	f0 e0       	ldi	r31, 0x00	; 0
     4b0:	80 81       	ld	r24, Z
     4b2:	82 60       	ori	r24, 0x02	; 2
     4b4:	80 83       	st	Z, r24
	clear_bit(TCCR1A, WGM10);
     4b6:	80 81       	ld	r24, Z
     4b8:	8e 7f       	andi	r24, 0xFE	; 254
     4ba:	80 83       	st	Z, r24
	
	//set output on PB5 to compare
	set_bit(TCCR1A, COM1A1);
     4bc:	80 81       	ld	r24, Z
     4be:	80 68       	ori	r24, 0x80	; 128
     4c0:	80 83       	st	Z, r24
	clear_bit(TCCR1A, COM1A0);
     4c2:	80 81       	ld	r24, Z
     4c4:	8f 7b       	andi	r24, 0xBF	; 191
     4c6:	80 83       	st	Z, r24
	pwm_set_signal_period();
     4c8:	d7 df       	rcall	.-82     	; 0x478 <pwm_set_signal_period>
	
	//set PB5 to output mode
	set_bit(DDRB, PB5);
     4ca:	25 9a       	sbi	0x04, 5	; 4
void pwm_set_pulse_width(float pulse_width){
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
	if (pulse_width>2100.0){pulse_width=2100.0;}	
	int pulse = (int) (pulse_width/20000*TOP_VALUE);	//pw*2
	OCR1A = pulse;
     4cc:	88 eb       	ldi	r24, 0xB8	; 184
     4ce:	9b e0       	ldi	r25, 0x0B	; 11
     4d0:	90 93 89 00 	sts	0x0089, r25
     4d4:	80 93 88 00 	sts	0x0088, r24
     4d8:	08 95       	ret

000004da <pwm_set_pulse_width>:
	
	ICR1 = TOP_VALUE;	//set period to 20ms
	//ICR1 = 1250;
}

void pwm_set_pulse_width(float pulse_width){
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ef 92       	push	r14
     4e0:	ff 92       	push	r15
     4e2:	6b 01       	movw	r12, r22
     4e4:	7c 01       	movw	r14, r24
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	41 e6       	ldi	r20, 0x61	; 97
     4ec:	54 e4       	ldi	r21, 0x44	; 68
     4ee:	11 d1       	rcall	.+546    	; 0x712 <__cmpsf2>
     4f0:	88 23       	and	r24, r24
     4f2:	54 f0       	brlt	.+20     	; 0x508 <pwm_set_pulse_width+0x2e>
	if (pulse_width>2100.0){pulse_width=2100.0;}	
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e4       	ldi	r19, 0x40	; 64
     4f8:	43 e0       	ldi	r20, 0x03	; 3
     4fa:	55 e4       	ldi	r21, 0x45	; 69
     4fc:	c7 01       	movw	r24, r14
     4fe:	b6 01       	movw	r22, r12
     500:	57 d2       	rcall	.+1198   	; 0x9b0 <__gesf2>
     502:	18 16       	cp	r1, r24
     504:	54 f0       	brlt	.+20     	; 0x51a <pwm_set_pulse_width+0x40>
     506:	12 c0       	rjmp	.+36     	; 0x52c <pwm_set_pulse_width+0x52>
	//ICR1 = 1250;
}

void pwm_set_pulse_width(float pulse_width){
	//makes sure pulse with is within bounderies
	if (pulse_width<900.0){pulse_width=900.0;}
     508:	0f 2e       	mov	r0, r31
     50a:	c1 2c       	mov	r12, r1
     50c:	d1 2c       	mov	r13, r1
     50e:	f1 e6       	ldi	r31, 0x61	; 97
     510:	ef 2e       	mov	r14, r31
     512:	f4 e4       	ldi	r31, 0x44	; 68
     514:	ff 2e       	mov	r15, r31
     516:	f0 2d       	mov	r31, r0
     518:	09 c0       	rjmp	.+18     	; 0x52c <pwm_set_pulse_width+0x52>
	if (pulse_width>2100.0){pulse_width=2100.0;}	
     51a:	0f 2e       	mov	r0, r31
     51c:	c1 2c       	mov	r12, r1
     51e:	f0 e4       	ldi	r31, 0x40	; 64
     520:	df 2e       	mov	r13, r31
     522:	f3 e0       	ldi	r31, 0x03	; 3
     524:	ef 2e       	mov	r14, r31
     526:	f5 e4       	ldi	r31, 0x45	; 69
     528:	ff 2e       	mov	r15, r31
     52a:	f0 2d       	mov	r31, r0
	int pulse = (int) (pulse_width/20000*TOP_VALUE);	//pw*2
     52c:	20 e0       	ldi	r18, 0x00	; 0
     52e:	30 e4       	ldi	r19, 0x40	; 64
     530:	4c e9       	ldi	r20, 0x9C	; 156
     532:	56 e4       	ldi	r21, 0x46	; 70
     534:	c7 01       	movw	r24, r14
     536:	b6 01       	movw	r22, r12
     538:	f0 d0       	rcall	.+480    	; 0x71a <__divsf3>
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	34 e2       	ldi	r19, 0x24	; 36
     53e:	44 e7       	ldi	r20, 0x74	; 116
     540:	5b e4       	ldi	r21, 0x4B	; 75
     542:	3a d2       	rcall	.+1140   	; 0x9b8 <__mulsf3>
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	40 e0       	ldi	r20, 0x00	; 0
     54a:	5e e3       	ldi	r21, 0x3E	; 62
     54c:	35 d2       	rcall	.+1130   	; 0x9b8 <__mulsf3>
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	48 e4       	ldi	r20, 0x48	; 72
     554:	52 e4       	ldi	r21, 0x42	; 66
     556:	e1 d0       	rcall	.+450    	; 0x71a <__divsf3>
     558:	48 d1       	rcall	.+656    	; 0x7ea <__fixsfsi>
	OCR1A = pulse;
     55a:	70 93 89 00 	sts	0x0089, r23
     55e:	60 93 88 00 	sts	0x0088, r22
	
	//printf("OCR1A: %d\n\r",  OCR1A);
	
	//OCR1A = 1150;
}
     562:	ff 90       	pop	r15
     564:	ef 90       	pop	r14
     566:	df 90       	pop	r13
     568:	cf 90       	pop	r12
     56a:	08 95       	ret

0000056c <pwm_scale_joystick_val>:

float pwm_scale_joystick_val(float x_val){
		return (x_val*4.7059+900);	
     56c:	2c eb       	ldi	r18, 0xBC	; 188
     56e:	36 e9       	ldi	r19, 0x96	; 150
     570:	46 e9       	ldi	r20, 0x96	; 150
     572:	50 e4       	ldi	r21, 0x40	; 64
     574:	21 d2       	rcall	.+1090   	; 0x9b8 <__mulsf3>
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	41 e6       	ldi	r20, 0x61	; 97
     57c:	54 e4       	ldi	r21, 0x44	; 68
     57e:	65 c0       	rjmp	.+202    	; 0x64a <__addsf3>
}
     580:	08 95       	ret

00000582 <spi_init>:
#define MISO_PIN PB3

void spi_init() {

  /* Set MOSI and SCK and CS output, all others input */
  DDRB |= (1 << MOSI_PIN) | (1 << SCK_PIN) | (1 << SS_PIN) | (1 << PB0);
     582:	84 b1       	in	r24, 0x04	; 4
     584:	87 68       	ori	r24, 0x87	; 135
     586:	84 b9       	out	0x04, r24	; 4
  PORTB |= (1 << SS_PIN) | (1 << PB0); // Set Master mode
     588:	85 b1       	in	r24, 0x05	; 5
     58a:	81 68       	ori	r24, 0x81	; 129
     58c:	85 b9       	out	0x05, r24	; 5
  /* Enable interrupt */
  // SPSR = (1<<SPIF);

  /* Enable SPI interrupt, SPI, Master, set clock rate fck/16 , SPI mode 0 by
   * default*/
  SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     58e:	81 e5       	ldi	r24, 0x51	; 81
     590:	8c bd       	out	0x2c, r24	; 44
     592:	08 95       	ret

00000594 <spi_read>:
}

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
     598:	cd b7       	in	r28, 0x3d	; 61
     59a:	de b7       	in	r29, 0x3e	; 62
     59c:	2a 97       	sbiw	r28, 0x0a	; 10
     59e:	0f b6       	in	r0, 0x3f	; 63
     5a0:	f8 94       	cli
     5a2:	de bf       	out	0x3e, r29	; 62
     5a4:	0f be       	out	0x3f, r0	; 63
     5a6:	cd bf       	out	0x3d, r28	; 61
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     5a8:	66 23       	and	r22, r22
     5aa:	89 f0       	breq	.+34     	; 0x5ce <spi_read+0x3a>
     5ac:	fe 01       	movw	r30, r28
     5ae:	31 96       	adiw	r30, 0x01	; 1
     5b0:	a8 2f       	mov	r26, r24
     5b2:	b9 2f       	mov	r27, r25
     5b4:	cf 01       	movw	r24, r30
     5b6:	86 0f       	add	r24, r22
     5b8:	91 1d       	adc	r25, r1
	{
		SPDR = dummy_data[i];
     5ba:	21 91       	ld	r18, Z+
     5bc:	2e bd       	out	0x2e, r18	; 46
		int j = 0;
		while (!(SPSR & (1 << SPIF))){
     5be:	0d b4       	in	r0, 0x2d	; 45
     5c0:	07 fe       	sbrs	r0, 7
     5c2:	fd cf       	rjmp	.-6      	; 0x5be <spi_read+0x2a>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
     5c4:	2e b5       	in	r18, 0x2e	; 46
     5c6:	2d 93       	st	X+, r18

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     5c8:	e8 17       	cp	r30, r24
     5ca:	f9 07       	cpc	r31, r25
     5cc:	b1 f7       	brne	.-20     	; 0x5ba <spi_read+0x26>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
	}
	
}
     5ce:	2a 96       	adiw	r28, 0x0a	; 10
     5d0:	0f b6       	in	r0, 0x3f	; 63
     5d2:	f8 94       	cli
     5d4:	de bf       	out	0x3e, r29	; 62
     5d6:	0f be       	out	0x3f, r0	; 63
     5d8:	cd bf       	out	0x3d, r28	; 61
     5da:	df 91       	pop	r29
     5dc:	cf 91       	pop	r28
     5de:	08 95       	ret

000005e0 <spi_write>:

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     5e0:	26 2f       	mov	r18, r22
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	12 16       	cp	r1, r18
     5e6:	13 06       	cpc	r1, r19
     5e8:	74 f4       	brge	.+28     	; 0x606 <spi_write+0x26>
     5ea:	e8 2f       	mov	r30, r24
     5ec:	f9 2f       	mov	r31, r25
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	90 e0       	ldi	r25, 0x00	; 0
	{
		SPDR = send_data[i];
     5f2:	41 91       	ld	r20, Z+
     5f4:	4e bd       	out	0x2e, r20	; 46
		while (!(SPSR & (1 << SPIF)));
     5f6:	0d b4       	in	r0, 0x2d	; 45
     5f8:	07 fe       	sbrs	r0, 7
     5fa:	fd cf       	rjmp	.-6      	; 0x5f6 <spi_write+0x16>
		dummy_data[i] = SPDR;
     5fc:	4e b5       	in	r20, 0x2e	; 46
}

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     5fe:	01 96       	adiw	r24, 0x01	; 1
     600:	82 17       	cp	r24, r18
     602:	93 07       	cpc	r25, r19
     604:	b4 f3       	brlt	.-20     	; 0x5f2 <spi_write+0x12>
     606:	08 95       	ret

00000608 <USART_Transmit>:
     608:	e0 ec       	ldi	r30, 0xC0	; 192
     60a:	f0 e0       	ldi	r31, 0x00	; 0
     60c:	90 81       	ld	r25, Z
     60e:	95 ff       	sbrs	r25, 5
     610:	fd cf       	rjmp	.-6      	; 0x60c <USART_Transmit+0x4>
     612:	80 93 c6 00 	sts	0x00C6, r24
     616:	08 95       	ret

00000618 <USART_Receive>:
     618:	e0 ec       	ldi	r30, 0xC0	; 192
     61a:	f0 e0       	ldi	r31, 0x00	; 0
     61c:	80 81       	ld	r24, Z
     61e:	88 23       	and	r24, r24
     620:	ec f3       	brlt	.-6      	; 0x61c <USART_Receive+0x4>
     622:	80 91 c6 00 	lds	r24, 0x00C6
     626:	08 95       	ret

00000628 <USART_Init>:
     628:	90 93 c5 00 	sts	0x00C5, r25
     62c:	80 93 c4 00 	sts	0x00C4, r24
     630:	88 e1       	ldi	r24, 0x18	; 24
     632:	80 93 c1 00 	sts	0x00C1, r24
     636:	8e e0       	ldi	r24, 0x0E	; 14
     638:	80 93 c2 00 	sts	0x00C2, r24
     63c:	6c e0       	ldi	r22, 0x0C	; 12
     63e:	73 e0       	ldi	r23, 0x03	; 3
     640:	84 e0       	ldi	r24, 0x04	; 4
     642:	93 e0       	ldi	r25, 0x03	; 3
     644:	1c c2       	rjmp	.+1080   	; 0xa7e <fdevopen>
     646:	08 95       	ret

00000648 <__subsf3>:
     648:	50 58       	subi	r21, 0x80	; 128

0000064a <__addsf3>:
     64a:	bb 27       	eor	r27, r27
     64c:	aa 27       	eor	r26, r26
     64e:	0e d0       	rcall	.+28     	; 0x66c <__addsf3x>
     650:	75 c1       	rjmp	.+746    	; 0x93c <__fp_round>
     652:	66 d1       	rcall	.+716    	; 0x920 <__fp_pscA>
     654:	30 f0       	brcs	.+12     	; 0x662 <__addsf3+0x18>
     656:	6b d1       	rcall	.+726    	; 0x92e <__fp_pscB>
     658:	20 f0       	brcs	.+8      	; 0x662 <__addsf3+0x18>
     65a:	31 f4       	brne	.+12     	; 0x668 <__addsf3+0x1e>
     65c:	9f 3f       	cpi	r25, 0xFF	; 255
     65e:	11 f4       	brne	.+4      	; 0x664 <__addsf3+0x1a>
     660:	1e f4       	brtc	.+6      	; 0x668 <__addsf3+0x1e>
     662:	5b c1       	rjmp	.+694    	; 0x91a <__fp_nan>
     664:	0e f4       	brtc	.+2      	; 0x668 <__addsf3+0x1e>
     666:	e0 95       	com	r30
     668:	e7 fb       	bst	r30, 7
     66a:	51 c1       	rjmp	.+674    	; 0x90e <__fp_inf>

0000066c <__addsf3x>:
     66c:	e9 2f       	mov	r30, r25
     66e:	77 d1       	rcall	.+750    	; 0x95e <__fp_split3>
     670:	80 f3       	brcs	.-32     	; 0x652 <__addsf3+0x8>
     672:	ba 17       	cp	r27, r26
     674:	62 07       	cpc	r22, r18
     676:	73 07       	cpc	r23, r19
     678:	84 07       	cpc	r24, r20
     67a:	95 07       	cpc	r25, r21
     67c:	18 f0       	brcs	.+6      	; 0x684 <__addsf3x+0x18>
     67e:	71 f4       	brne	.+28     	; 0x69c <__addsf3x+0x30>
     680:	9e f5       	brtc	.+102    	; 0x6e8 <__addsf3x+0x7c>
     682:	8f c1       	rjmp	.+798    	; 0x9a2 <__fp_zero>
     684:	0e f4       	brtc	.+2      	; 0x688 <__addsf3x+0x1c>
     686:	e0 95       	com	r30
     688:	0b 2e       	mov	r0, r27
     68a:	ba 2f       	mov	r27, r26
     68c:	a0 2d       	mov	r26, r0
     68e:	0b 01       	movw	r0, r22
     690:	b9 01       	movw	r22, r18
     692:	90 01       	movw	r18, r0
     694:	0c 01       	movw	r0, r24
     696:	ca 01       	movw	r24, r20
     698:	a0 01       	movw	r20, r0
     69a:	11 24       	eor	r1, r1
     69c:	ff 27       	eor	r31, r31
     69e:	59 1b       	sub	r21, r25
     6a0:	99 f0       	breq	.+38     	; 0x6c8 <__addsf3x+0x5c>
     6a2:	59 3f       	cpi	r21, 0xF9	; 249
     6a4:	50 f4       	brcc	.+20     	; 0x6ba <__addsf3x+0x4e>
     6a6:	50 3e       	cpi	r21, 0xE0	; 224
     6a8:	68 f1       	brcs	.+90     	; 0x704 <__addsf3x+0x98>
     6aa:	1a 16       	cp	r1, r26
     6ac:	f0 40       	sbci	r31, 0x00	; 0
     6ae:	a2 2f       	mov	r26, r18
     6b0:	23 2f       	mov	r18, r19
     6b2:	34 2f       	mov	r19, r20
     6b4:	44 27       	eor	r20, r20
     6b6:	58 5f       	subi	r21, 0xF8	; 248
     6b8:	f3 cf       	rjmp	.-26     	; 0x6a0 <__addsf3x+0x34>
     6ba:	46 95       	lsr	r20
     6bc:	37 95       	ror	r19
     6be:	27 95       	ror	r18
     6c0:	a7 95       	ror	r26
     6c2:	f0 40       	sbci	r31, 0x00	; 0
     6c4:	53 95       	inc	r21
     6c6:	c9 f7       	brne	.-14     	; 0x6ba <__addsf3x+0x4e>
     6c8:	7e f4       	brtc	.+30     	; 0x6e8 <__addsf3x+0x7c>
     6ca:	1f 16       	cp	r1, r31
     6cc:	ba 0b       	sbc	r27, r26
     6ce:	62 0b       	sbc	r22, r18
     6d0:	73 0b       	sbc	r23, r19
     6d2:	84 0b       	sbc	r24, r20
     6d4:	ba f0       	brmi	.+46     	; 0x704 <__addsf3x+0x98>
     6d6:	91 50       	subi	r25, 0x01	; 1
     6d8:	a1 f0       	breq	.+40     	; 0x702 <__addsf3x+0x96>
     6da:	ff 0f       	add	r31, r31
     6dc:	bb 1f       	adc	r27, r27
     6de:	66 1f       	adc	r22, r22
     6e0:	77 1f       	adc	r23, r23
     6e2:	88 1f       	adc	r24, r24
     6e4:	c2 f7       	brpl	.-16     	; 0x6d6 <__addsf3x+0x6a>
     6e6:	0e c0       	rjmp	.+28     	; 0x704 <__addsf3x+0x98>
     6e8:	ba 0f       	add	r27, r26
     6ea:	62 1f       	adc	r22, r18
     6ec:	73 1f       	adc	r23, r19
     6ee:	84 1f       	adc	r24, r20
     6f0:	48 f4       	brcc	.+18     	; 0x704 <__addsf3x+0x98>
     6f2:	87 95       	ror	r24
     6f4:	77 95       	ror	r23
     6f6:	67 95       	ror	r22
     6f8:	b7 95       	ror	r27
     6fa:	f7 95       	ror	r31
     6fc:	9e 3f       	cpi	r25, 0xFE	; 254
     6fe:	08 f0       	brcs	.+2      	; 0x702 <__addsf3x+0x96>
     700:	b3 cf       	rjmp	.-154    	; 0x668 <__addsf3+0x1e>
     702:	93 95       	inc	r25
     704:	88 0f       	add	r24, r24
     706:	08 f0       	brcs	.+2      	; 0x70a <__addsf3x+0x9e>
     708:	99 27       	eor	r25, r25
     70a:	ee 0f       	add	r30, r30
     70c:	97 95       	ror	r25
     70e:	87 95       	ror	r24
     710:	08 95       	ret

00000712 <__cmpsf2>:
     712:	d9 d0       	rcall	.+434    	; 0x8c6 <__fp_cmp>
     714:	08 f4       	brcc	.+2      	; 0x718 <__cmpsf2+0x6>
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	08 95       	ret

0000071a <__divsf3>:
     71a:	0c d0       	rcall	.+24     	; 0x734 <__divsf3x>
     71c:	0f c1       	rjmp	.+542    	; 0x93c <__fp_round>
     71e:	07 d1       	rcall	.+526    	; 0x92e <__fp_pscB>
     720:	40 f0       	brcs	.+16     	; 0x732 <__divsf3+0x18>
     722:	fe d0       	rcall	.+508    	; 0x920 <__fp_pscA>
     724:	30 f0       	brcs	.+12     	; 0x732 <__divsf3+0x18>
     726:	21 f4       	brne	.+8      	; 0x730 <__divsf3+0x16>
     728:	5f 3f       	cpi	r21, 0xFF	; 255
     72a:	19 f0       	breq	.+6      	; 0x732 <__divsf3+0x18>
     72c:	f0 c0       	rjmp	.+480    	; 0x90e <__fp_inf>
     72e:	51 11       	cpse	r21, r1
     730:	39 c1       	rjmp	.+626    	; 0x9a4 <__fp_szero>
     732:	f3 c0       	rjmp	.+486    	; 0x91a <__fp_nan>

00000734 <__divsf3x>:
     734:	14 d1       	rcall	.+552    	; 0x95e <__fp_split3>
     736:	98 f3       	brcs	.-26     	; 0x71e <__divsf3+0x4>

00000738 <__divsf3_pse>:
     738:	99 23       	and	r25, r25
     73a:	c9 f3       	breq	.-14     	; 0x72e <__divsf3+0x14>
     73c:	55 23       	and	r21, r21
     73e:	b1 f3       	breq	.-20     	; 0x72c <__divsf3+0x12>
     740:	95 1b       	sub	r25, r21
     742:	55 0b       	sbc	r21, r21
     744:	bb 27       	eor	r27, r27
     746:	aa 27       	eor	r26, r26
     748:	62 17       	cp	r22, r18
     74a:	73 07       	cpc	r23, r19
     74c:	84 07       	cpc	r24, r20
     74e:	38 f0       	brcs	.+14     	; 0x75e <__divsf3_pse+0x26>
     750:	9f 5f       	subi	r25, 0xFF	; 255
     752:	5f 4f       	sbci	r21, 0xFF	; 255
     754:	22 0f       	add	r18, r18
     756:	33 1f       	adc	r19, r19
     758:	44 1f       	adc	r20, r20
     75a:	aa 1f       	adc	r26, r26
     75c:	a9 f3       	breq	.-22     	; 0x748 <__divsf3_pse+0x10>
     75e:	33 d0       	rcall	.+102    	; 0x7c6 <__divsf3_pse+0x8e>
     760:	0e 2e       	mov	r0, r30
     762:	3a f0       	brmi	.+14     	; 0x772 <__divsf3_pse+0x3a>
     764:	e0 e8       	ldi	r30, 0x80	; 128
     766:	30 d0       	rcall	.+96     	; 0x7c8 <__divsf3_pse+0x90>
     768:	91 50       	subi	r25, 0x01	; 1
     76a:	50 40       	sbci	r21, 0x00	; 0
     76c:	e6 95       	lsr	r30
     76e:	00 1c       	adc	r0, r0
     770:	ca f7       	brpl	.-14     	; 0x764 <__divsf3_pse+0x2c>
     772:	29 d0       	rcall	.+82     	; 0x7c6 <__divsf3_pse+0x8e>
     774:	fe 2f       	mov	r31, r30
     776:	27 d0       	rcall	.+78     	; 0x7c6 <__divsf3_pse+0x8e>
     778:	66 0f       	add	r22, r22
     77a:	77 1f       	adc	r23, r23
     77c:	88 1f       	adc	r24, r24
     77e:	bb 1f       	adc	r27, r27
     780:	26 17       	cp	r18, r22
     782:	37 07       	cpc	r19, r23
     784:	48 07       	cpc	r20, r24
     786:	ab 07       	cpc	r26, r27
     788:	b0 e8       	ldi	r27, 0x80	; 128
     78a:	09 f0       	breq	.+2      	; 0x78e <__divsf3_pse+0x56>
     78c:	bb 0b       	sbc	r27, r27
     78e:	80 2d       	mov	r24, r0
     790:	bf 01       	movw	r22, r30
     792:	ff 27       	eor	r31, r31
     794:	93 58       	subi	r25, 0x83	; 131
     796:	5f 4f       	sbci	r21, 0xFF	; 255
     798:	2a f0       	brmi	.+10     	; 0x7a4 <__divsf3_pse+0x6c>
     79a:	9e 3f       	cpi	r25, 0xFE	; 254
     79c:	51 05       	cpc	r21, r1
     79e:	68 f0       	brcs	.+26     	; 0x7ba <__divsf3_pse+0x82>
     7a0:	b6 c0       	rjmp	.+364    	; 0x90e <__fp_inf>
     7a2:	00 c1       	rjmp	.+512    	; 0x9a4 <__fp_szero>
     7a4:	5f 3f       	cpi	r21, 0xFF	; 255
     7a6:	ec f3       	brlt	.-6      	; 0x7a2 <__divsf3_pse+0x6a>
     7a8:	98 3e       	cpi	r25, 0xE8	; 232
     7aa:	dc f3       	brlt	.-10     	; 0x7a2 <__divsf3_pse+0x6a>
     7ac:	86 95       	lsr	r24
     7ae:	77 95       	ror	r23
     7b0:	67 95       	ror	r22
     7b2:	b7 95       	ror	r27
     7b4:	f7 95       	ror	r31
     7b6:	9f 5f       	subi	r25, 0xFF	; 255
     7b8:	c9 f7       	brne	.-14     	; 0x7ac <__divsf3_pse+0x74>
     7ba:	88 0f       	add	r24, r24
     7bc:	91 1d       	adc	r25, r1
     7be:	96 95       	lsr	r25
     7c0:	87 95       	ror	r24
     7c2:	97 f9       	bld	r25, 7
     7c4:	08 95       	ret
     7c6:	e1 e0       	ldi	r30, 0x01	; 1
     7c8:	66 0f       	add	r22, r22
     7ca:	77 1f       	adc	r23, r23
     7cc:	88 1f       	adc	r24, r24
     7ce:	bb 1f       	adc	r27, r27
     7d0:	62 17       	cp	r22, r18
     7d2:	73 07       	cpc	r23, r19
     7d4:	84 07       	cpc	r24, r20
     7d6:	ba 07       	cpc	r27, r26
     7d8:	20 f0       	brcs	.+8      	; 0x7e2 <__divsf3_pse+0xaa>
     7da:	62 1b       	sub	r22, r18
     7dc:	73 0b       	sbc	r23, r19
     7de:	84 0b       	sbc	r24, r20
     7e0:	ba 0b       	sbc	r27, r26
     7e2:	ee 1f       	adc	r30, r30
     7e4:	88 f7       	brcc	.-30     	; 0x7c8 <__divsf3_pse+0x90>
     7e6:	e0 95       	com	r30
     7e8:	08 95       	ret

000007ea <__fixsfsi>:
     7ea:	04 d0       	rcall	.+8      	; 0x7f4 <__fixunssfsi>
     7ec:	68 94       	set
     7ee:	b1 11       	cpse	r27, r1
     7f0:	d9 c0       	rjmp	.+434    	; 0x9a4 <__fp_szero>
     7f2:	08 95       	ret

000007f4 <__fixunssfsi>:
     7f4:	bc d0       	rcall	.+376    	; 0x96e <__fp_splitA>
     7f6:	88 f0       	brcs	.+34     	; 0x81a <__fixunssfsi+0x26>
     7f8:	9f 57       	subi	r25, 0x7F	; 127
     7fa:	90 f0       	brcs	.+36     	; 0x820 <__fixunssfsi+0x2c>
     7fc:	b9 2f       	mov	r27, r25
     7fe:	99 27       	eor	r25, r25
     800:	b7 51       	subi	r27, 0x17	; 23
     802:	a0 f0       	brcs	.+40     	; 0x82c <__fixunssfsi+0x38>
     804:	d1 f0       	breq	.+52     	; 0x83a <__fixunssfsi+0x46>
     806:	66 0f       	add	r22, r22
     808:	77 1f       	adc	r23, r23
     80a:	88 1f       	adc	r24, r24
     80c:	99 1f       	adc	r25, r25
     80e:	1a f0       	brmi	.+6      	; 0x816 <__fixunssfsi+0x22>
     810:	ba 95       	dec	r27
     812:	c9 f7       	brne	.-14     	; 0x806 <__fixunssfsi+0x12>
     814:	12 c0       	rjmp	.+36     	; 0x83a <__fixunssfsi+0x46>
     816:	b1 30       	cpi	r27, 0x01	; 1
     818:	81 f0       	breq	.+32     	; 0x83a <__fixunssfsi+0x46>
     81a:	c3 d0       	rcall	.+390    	; 0x9a2 <__fp_zero>
     81c:	b1 e0       	ldi	r27, 0x01	; 1
     81e:	08 95       	ret
     820:	c0 c0       	rjmp	.+384    	; 0x9a2 <__fp_zero>
     822:	67 2f       	mov	r22, r23
     824:	78 2f       	mov	r23, r24
     826:	88 27       	eor	r24, r24
     828:	b8 5f       	subi	r27, 0xF8	; 248
     82a:	39 f0       	breq	.+14     	; 0x83a <__fixunssfsi+0x46>
     82c:	b9 3f       	cpi	r27, 0xF9	; 249
     82e:	cc f3       	brlt	.-14     	; 0x822 <__fixunssfsi+0x2e>
     830:	86 95       	lsr	r24
     832:	77 95       	ror	r23
     834:	67 95       	ror	r22
     836:	b3 95       	inc	r27
     838:	d9 f7       	brne	.-10     	; 0x830 <__fixunssfsi+0x3c>
     83a:	3e f4       	brtc	.+14     	; 0x84a <__fixunssfsi+0x56>
     83c:	90 95       	com	r25
     83e:	80 95       	com	r24
     840:	70 95       	com	r23
     842:	61 95       	neg	r22
     844:	7f 4f       	sbci	r23, 0xFF	; 255
     846:	8f 4f       	sbci	r24, 0xFF	; 255
     848:	9f 4f       	sbci	r25, 0xFF	; 255
     84a:	08 95       	ret

0000084c <__floatunsisf>:
     84c:	e8 94       	clt
     84e:	09 c0       	rjmp	.+18     	; 0x862 <__floatsisf+0x12>

00000850 <__floatsisf>:
     850:	97 fb       	bst	r25, 7
     852:	3e f4       	brtc	.+14     	; 0x862 <__floatsisf+0x12>
     854:	90 95       	com	r25
     856:	80 95       	com	r24
     858:	70 95       	com	r23
     85a:	61 95       	neg	r22
     85c:	7f 4f       	sbci	r23, 0xFF	; 255
     85e:	8f 4f       	sbci	r24, 0xFF	; 255
     860:	9f 4f       	sbci	r25, 0xFF	; 255
     862:	99 23       	and	r25, r25
     864:	a9 f0       	breq	.+42     	; 0x890 <__floatsisf+0x40>
     866:	f9 2f       	mov	r31, r25
     868:	96 e9       	ldi	r25, 0x96	; 150
     86a:	bb 27       	eor	r27, r27
     86c:	93 95       	inc	r25
     86e:	f6 95       	lsr	r31
     870:	87 95       	ror	r24
     872:	77 95       	ror	r23
     874:	67 95       	ror	r22
     876:	b7 95       	ror	r27
     878:	f1 11       	cpse	r31, r1
     87a:	f8 cf       	rjmp	.-16     	; 0x86c <__floatsisf+0x1c>
     87c:	fa f4       	brpl	.+62     	; 0x8bc <__floatsisf+0x6c>
     87e:	bb 0f       	add	r27, r27
     880:	11 f4       	brne	.+4      	; 0x886 <__floatsisf+0x36>
     882:	60 ff       	sbrs	r22, 0
     884:	1b c0       	rjmp	.+54     	; 0x8bc <__floatsisf+0x6c>
     886:	6f 5f       	subi	r22, 0xFF	; 255
     888:	7f 4f       	sbci	r23, 0xFF	; 255
     88a:	8f 4f       	sbci	r24, 0xFF	; 255
     88c:	9f 4f       	sbci	r25, 0xFF	; 255
     88e:	16 c0       	rjmp	.+44     	; 0x8bc <__floatsisf+0x6c>
     890:	88 23       	and	r24, r24
     892:	11 f0       	breq	.+4      	; 0x898 <__floatsisf+0x48>
     894:	96 e9       	ldi	r25, 0x96	; 150
     896:	11 c0       	rjmp	.+34     	; 0x8ba <__floatsisf+0x6a>
     898:	77 23       	and	r23, r23
     89a:	21 f0       	breq	.+8      	; 0x8a4 <__floatsisf+0x54>
     89c:	9e e8       	ldi	r25, 0x8E	; 142
     89e:	87 2f       	mov	r24, r23
     8a0:	76 2f       	mov	r23, r22
     8a2:	05 c0       	rjmp	.+10     	; 0x8ae <__floatsisf+0x5e>
     8a4:	66 23       	and	r22, r22
     8a6:	71 f0       	breq	.+28     	; 0x8c4 <__floatsisf+0x74>
     8a8:	96 e8       	ldi	r25, 0x86	; 134
     8aa:	86 2f       	mov	r24, r22
     8ac:	70 e0       	ldi	r23, 0x00	; 0
     8ae:	60 e0       	ldi	r22, 0x00	; 0
     8b0:	2a f0       	brmi	.+10     	; 0x8bc <__floatsisf+0x6c>
     8b2:	9a 95       	dec	r25
     8b4:	66 0f       	add	r22, r22
     8b6:	77 1f       	adc	r23, r23
     8b8:	88 1f       	adc	r24, r24
     8ba:	da f7       	brpl	.-10     	; 0x8b2 <__floatsisf+0x62>
     8bc:	88 0f       	add	r24, r24
     8be:	96 95       	lsr	r25
     8c0:	87 95       	ror	r24
     8c2:	97 f9       	bld	r25, 7
     8c4:	08 95       	ret

000008c6 <__fp_cmp>:
     8c6:	99 0f       	add	r25, r25
     8c8:	00 08       	sbc	r0, r0
     8ca:	55 0f       	add	r21, r21
     8cc:	aa 0b       	sbc	r26, r26
     8ce:	e0 e8       	ldi	r30, 0x80	; 128
     8d0:	fe ef       	ldi	r31, 0xFE	; 254
     8d2:	16 16       	cp	r1, r22
     8d4:	17 06       	cpc	r1, r23
     8d6:	e8 07       	cpc	r30, r24
     8d8:	f9 07       	cpc	r31, r25
     8da:	c0 f0       	brcs	.+48     	; 0x90c <__fp_cmp+0x46>
     8dc:	12 16       	cp	r1, r18
     8de:	13 06       	cpc	r1, r19
     8e0:	e4 07       	cpc	r30, r20
     8e2:	f5 07       	cpc	r31, r21
     8e4:	98 f0       	brcs	.+38     	; 0x90c <__fp_cmp+0x46>
     8e6:	62 1b       	sub	r22, r18
     8e8:	73 0b       	sbc	r23, r19
     8ea:	84 0b       	sbc	r24, r20
     8ec:	95 0b       	sbc	r25, r21
     8ee:	39 f4       	brne	.+14     	; 0x8fe <__fp_cmp+0x38>
     8f0:	0a 26       	eor	r0, r26
     8f2:	61 f0       	breq	.+24     	; 0x90c <__fp_cmp+0x46>
     8f4:	23 2b       	or	r18, r19
     8f6:	24 2b       	or	r18, r20
     8f8:	25 2b       	or	r18, r21
     8fa:	21 f4       	brne	.+8      	; 0x904 <__fp_cmp+0x3e>
     8fc:	08 95       	ret
     8fe:	0a 26       	eor	r0, r26
     900:	09 f4       	brne	.+2      	; 0x904 <__fp_cmp+0x3e>
     902:	a1 40       	sbci	r26, 0x01	; 1
     904:	a6 95       	lsr	r26
     906:	8f ef       	ldi	r24, 0xFF	; 255
     908:	81 1d       	adc	r24, r1
     90a:	81 1d       	adc	r24, r1
     90c:	08 95       	ret

0000090e <__fp_inf>:
     90e:	97 f9       	bld	r25, 7
     910:	9f 67       	ori	r25, 0x7F	; 127
     912:	80 e8       	ldi	r24, 0x80	; 128
     914:	70 e0       	ldi	r23, 0x00	; 0
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	08 95       	ret

0000091a <__fp_nan>:
     91a:	9f ef       	ldi	r25, 0xFF	; 255
     91c:	80 ec       	ldi	r24, 0xC0	; 192
     91e:	08 95       	ret

00000920 <__fp_pscA>:
     920:	00 24       	eor	r0, r0
     922:	0a 94       	dec	r0
     924:	16 16       	cp	r1, r22
     926:	17 06       	cpc	r1, r23
     928:	18 06       	cpc	r1, r24
     92a:	09 06       	cpc	r0, r25
     92c:	08 95       	ret

0000092e <__fp_pscB>:
     92e:	00 24       	eor	r0, r0
     930:	0a 94       	dec	r0
     932:	12 16       	cp	r1, r18
     934:	13 06       	cpc	r1, r19
     936:	14 06       	cpc	r1, r20
     938:	05 06       	cpc	r0, r21
     93a:	08 95       	ret

0000093c <__fp_round>:
     93c:	09 2e       	mov	r0, r25
     93e:	03 94       	inc	r0
     940:	00 0c       	add	r0, r0
     942:	11 f4       	brne	.+4      	; 0x948 <__fp_round+0xc>
     944:	88 23       	and	r24, r24
     946:	52 f0       	brmi	.+20     	; 0x95c <__fp_round+0x20>
     948:	bb 0f       	add	r27, r27
     94a:	40 f4       	brcc	.+16     	; 0x95c <__fp_round+0x20>
     94c:	bf 2b       	or	r27, r31
     94e:	11 f4       	brne	.+4      	; 0x954 <__fp_round+0x18>
     950:	60 ff       	sbrs	r22, 0
     952:	04 c0       	rjmp	.+8      	; 0x95c <__fp_round+0x20>
     954:	6f 5f       	subi	r22, 0xFF	; 255
     956:	7f 4f       	sbci	r23, 0xFF	; 255
     958:	8f 4f       	sbci	r24, 0xFF	; 255
     95a:	9f 4f       	sbci	r25, 0xFF	; 255
     95c:	08 95       	ret

0000095e <__fp_split3>:
     95e:	57 fd       	sbrc	r21, 7
     960:	90 58       	subi	r25, 0x80	; 128
     962:	44 0f       	add	r20, r20
     964:	55 1f       	adc	r21, r21
     966:	59 f0       	breq	.+22     	; 0x97e <__fp_splitA+0x10>
     968:	5f 3f       	cpi	r21, 0xFF	; 255
     96a:	71 f0       	breq	.+28     	; 0x988 <__fp_splitA+0x1a>
     96c:	47 95       	ror	r20

0000096e <__fp_splitA>:
     96e:	88 0f       	add	r24, r24
     970:	97 fb       	bst	r25, 7
     972:	99 1f       	adc	r25, r25
     974:	61 f0       	breq	.+24     	; 0x98e <__fp_splitA+0x20>
     976:	9f 3f       	cpi	r25, 0xFF	; 255
     978:	79 f0       	breq	.+30     	; 0x998 <__fp_splitA+0x2a>
     97a:	87 95       	ror	r24
     97c:	08 95       	ret
     97e:	12 16       	cp	r1, r18
     980:	13 06       	cpc	r1, r19
     982:	14 06       	cpc	r1, r20
     984:	55 1f       	adc	r21, r21
     986:	f2 cf       	rjmp	.-28     	; 0x96c <__fp_split3+0xe>
     988:	46 95       	lsr	r20
     98a:	f1 df       	rcall	.-30     	; 0x96e <__fp_splitA>
     98c:	08 c0       	rjmp	.+16     	; 0x99e <__fp_splitA+0x30>
     98e:	16 16       	cp	r1, r22
     990:	17 06       	cpc	r1, r23
     992:	18 06       	cpc	r1, r24
     994:	99 1f       	adc	r25, r25
     996:	f1 cf       	rjmp	.-30     	; 0x97a <__fp_splitA+0xc>
     998:	86 95       	lsr	r24
     99a:	71 05       	cpc	r23, r1
     99c:	61 05       	cpc	r22, r1
     99e:	08 94       	sec
     9a0:	08 95       	ret

000009a2 <__fp_zero>:
     9a2:	e8 94       	clt

000009a4 <__fp_szero>:
     9a4:	bb 27       	eor	r27, r27
     9a6:	66 27       	eor	r22, r22
     9a8:	77 27       	eor	r23, r23
     9aa:	cb 01       	movw	r24, r22
     9ac:	97 f9       	bld	r25, 7
     9ae:	08 95       	ret

000009b0 <__gesf2>:
     9b0:	8a df       	rcall	.-236    	; 0x8c6 <__fp_cmp>
     9b2:	08 f4       	brcc	.+2      	; 0x9b6 <__gesf2+0x6>
     9b4:	8f ef       	ldi	r24, 0xFF	; 255
     9b6:	08 95       	ret

000009b8 <__mulsf3>:
     9b8:	0b d0       	rcall	.+22     	; 0x9d0 <__mulsf3x>
     9ba:	c0 cf       	rjmp	.-128    	; 0x93c <__fp_round>
     9bc:	b1 df       	rcall	.-158    	; 0x920 <__fp_pscA>
     9be:	28 f0       	brcs	.+10     	; 0x9ca <__mulsf3+0x12>
     9c0:	b6 df       	rcall	.-148    	; 0x92e <__fp_pscB>
     9c2:	18 f0       	brcs	.+6      	; 0x9ca <__mulsf3+0x12>
     9c4:	95 23       	and	r25, r21
     9c6:	09 f0       	breq	.+2      	; 0x9ca <__mulsf3+0x12>
     9c8:	a2 cf       	rjmp	.-188    	; 0x90e <__fp_inf>
     9ca:	a7 cf       	rjmp	.-178    	; 0x91a <__fp_nan>
     9cc:	11 24       	eor	r1, r1
     9ce:	ea cf       	rjmp	.-44     	; 0x9a4 <__fp_szero>

000009d0 <__mulsf3x>:
     9d0:	c6 df       	rcall	.-116    	; 0x95e <__fp_split3>
     9d2:	a0 f3       	brcs	.-24     	; 0x9bc <__mulsf3+0x4>

000009d4 <__mulsf3_pse>:
     9d4:	95 9f       	mul	r25, r21
     9d6:	d1 f3       	breq	.-12     	; 0x9cc <__mulsf3+0x14>
     9d8:	95 0f       	add	r25, r21
     9da:	50 e0       	ldi	r21, 0x00	; 0
     9dc:	55 1f       	adc	r21, r21
     9de:	62 9f       	mul	r22, r18
     9e0:	f0 01       	movw	r30, r0
     9e2:	72 9f       	mul	r23, r18
     9e4:	bb 27       	eor	r27, r27
     9e6:	f0 0d       	add	r31, r0
     9e8:	b1 1d       	adc	r27, r1
     9ea:	63 9f       	mul	r22, r19
     9ec:	aa 27       	eor	r26, r26
     9ee:	f0 0d       	add	r31, r0
     9f0:	b1 1d       	adc	r27, r1
     9f2:	aa 1f       	adc	r26, r26
     9f4:	64 9f       	mul	r22, r20
     9f6:	66 27       	eor	r22, r22
     9f8:	b0 0d       	add	r27, r0
     9fa:	a1 1d       	adc	r26, r1
     9fc:	66 1f       	adc	r22, r22
     9fe:	82 9f       	mul	r24, r18
     a00:	22 27       	eor	r18, r18
     a02:	b0 0d       	add	r27, r0
     a04:	a1 1d       	adc	r26, r1
     a06:	62 1f       	adc	r22, r18
     a08:	73 9f       	mul	r23, r19
     a0a:	b0 0d       	add	r27, r0
     a0c:	a1 1d       	adc	r26, r1
     a0e:	62 1f       	adc	r22, r18
     a10:	83 9f       	mul	r24, r19
     a12:	a0 0d       	add	r26, r0
     a14:	61 1d       	adc	r22, r1
     a16:	22 1f       	adc	r18, r18
     a18:	74 9f       	mul	r23, r20
     a1a:	33 27       	eor	r19, r19
     a1c:	a0 0d       	add	r26, r0
     a1e:	61 1d       	adc	r22, r1
     a20:	23 1f       	adc	r18, r19
     a22:	84 9f       	mul	r24, r20
     a24:	60 0d       	add	r22, r0
     a26:	21 1d       	adc	r18, r1
     a28:	82 2f       	mov	r24, r18
     a2a:	76 2f       	mov	r23, r22
     a2c:	6a 2f       	mov	r22, r26
     a2e:	11 24       	eor	r1, r1
     a30:	9f 57       	subi	r25, 0x7F	; 127
     a32:	50 40       	sbci	r21, 0x00	; 0
     a34:	8a f0       	brmi	.+34     	; 0xa58 <__mulsf3_pse+0x84>
     a36:	e1 f0       	breq	.+56     	; 0xa70 <__mulsf3_pse+0x9c>
     a38:	88 23       	and	r24, r24
     a3a:	4a f0       	brmi	.+18     	; 0xa4e <__mulsf3_pse+0x7a>
     a3c:	ee 0f       	add	r30, r30
     a3e:	ff 1f       	adc	r31, r31
     a40:	bb 1f       	adc	r27, r27
     a42:	66 1f       	adc	r22, r22
     a44:	77 1f       	adc	r23, r23
     a46:	88 1f       	adc	r24, r24
     a48:	91 50       	subi	r25, 0x01	; 1
     a4a:	50 40       	sbci	r21, 0x00	; 0
     a4c:	a9 f7       	brne	.-22     	; 0xa38 <__mulsf3_pse+0x64>
     a4e:	9e 3f       	cpi	r25, 0xFE	; 254
     a50:	51 05       	cpc	r21, r1
     a52:	70 f0       	brcs	.+28     	; 0xa70 <__mulsf3_pse+0x9c>
     a54:	5c cf       	rjmp	.-328    	; 0x90e <__fp_inf>
     a56:	a6 cf       	rjmp	.-180    	; 0x9a4 <__fp_szero>
     a58:	5f 3f       	cpi	r21, 0xFF	; 255
     a5a:	ec f3       	brlt	.-6      	; 0xa56 <__mulsf3_pse+0x82>
     a5c:	98 3e       	cpi	r25, 0xE8	; 232
     a5e:	dc f3       	brlt	.-10     	; 0xa56 <__mulsf3_pse+0x82>
     a60:	86 95       	lsr	r24
     a62:	77 95       	ror	r23
     a64:	67 95       	ror	r22
     a66:	b7 95       	ror	r27
     a68:	f7 95       	ror	r31
     a6a:	e7 95       	ror	r30
     a6c:	9f 5f       	subi	r25, 0xFF	; 255
     a6e:	c1 f7       	brne	.-16     	; 0xa60 <__mulsf3_pse+0x8c>
     a70:	fe 2b       	or	r31, r30
     a72:	88 0f       	add	r24, r24
     a74:	91 1d       	adc	r25, r1
     a76:	96 95       	lsr	r25
     a78:	87 95       	ror	r24
     a7a:	97 f9       	bld	r25, 7
     a7c:	08 95       	ret

00000a7e <fdevopen>:
     a7e:	0f 93       	push	r16
     a80:	1f 93       	push	r17
     a82:	cf 93       	push	r28
     a84:	df 93       	push	r29
     a86:	ec 01       	movw	r28, r24
     a88:	8b 01       	movw	r16, r22
     a8a:	00 97       	sbiw	r24, 0x00	; 0
     a8c:	31 f4       	brne	.+12     	; 0xa9a <fdevopen+0x1c>
     a8e:	61 15       	cp	r22, r1
     a90:	71 05       	cpc	r23, r1
     a92:	19 f4       	brne	.+6      	; 0xa9a <fdevopen+0x1c>
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	37 c0       	rjmp	.+110    	; 0xb08 <fdevopen+0x8a>
     a9a:	6e e0       	ldi	r22, 0x0E	; 14
     a9c:	70 e0       	ldi	r23, 0x00	; 0
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	63 d2       	rcall	.+1222   	; 0xf6a <calloc>
     aa4:	fc 01       	movw	r30, r24
     aa6:	00 97       	sbiw	r24, 0x00	; 0
     aa8:	a9 f3       	breq	.-22     	; 0xa94 <fdevopen+0x16>
     aaa:	80 e8       	ldi	r24, 0x80	; 128
     aac:	83 83       	std	Z+3, r24	; 0x03
     aae:	01 15       	cp	r16, r1
     ab0:	11 05       	cpc	r17, r1
     ab2:	71 f0       	breq	.+28     	; 0xad0 <fdevopen+0x52>
     ab4:	13 87       	std	Z+11, r17	; 0x0b
     ab6:	02 87       	std	Z+10, r16	; 0x0a
     ab8:	81 e8       	ldi	r24, 0x81	; 129
     aba:	83 83       	std	Z+3, r24	; 0x03
     abc:	80 91 a8 02 	lds	r24, 0x02A8
     ac0:	90 91 a9 02 	lds	r25, 0x02A9
     ac4:	89 2b       	or	r24, r25
     ac6:	21 f4       	brne	.+8      	; 0xad0 <fdevopen+0x52>
     ac8:	f0 93 a9 02 	sts	0x02A9, r31
     acc:	e0 93 a8 02 	sts	0x02A8, r30
     ad0:	20 97       	sbiw	r28, 0x00	; 0
     ad2:	c9 f0       	breq	.+50     	; 0xb06 <fdevopen+0x88>
     ad4:	d1 87       	std	Z+9, r29	; 0x09
     ad6:	c0 87       	std	Z+8, r28	; 0x08
     ad8:	83 81       	ldd	r24, Z+3	; 0x03
     ada:	82 60       	ori	r24, 0x02	; 2
     adc:	83 83       	std	Z+3, r24	; 0x03
     ade:	80 91 aa 02 	lds	r24, 0x02AA
     ae2:	90 91 ab 02 	lds	r25, 0x02AB
     ae6:	89 2b       	or	r24, r25
     ae8:	71 f4       	brne	.+28     	; 0xb06 <fdevopen+0x88>
     aea:	f0 93 ab 02 	sts	0x02AB, r31
     aee:	e0 93 aa 02 	sts	0x02AA, r30
     af2:	80 91 ac 02 	lds	r24, 0x02AC
     af6:	90 91 ad 02 	lds	r25, 0x02AD
     afa:	89 2b       	or	r24, r25
     afc:	21 f4       	brne	.+8      	; 0xb06 <fdevopen+0x88>
     afe:	f0 93 ad 02 	sts	0x02AD, r31
     b02:	e0 93 ac 02 	sts	0x02AC, r30
     b06:	cf 01       	movw	r24, r30
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	1f 91       	pop	r17
     b0e:	0f 91       	pop	r16
     b10:	08 95       	ret

00000b12 <printf>:
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	cd b7       	in	r28, 0x3d	; 61
     b18:	de b7       	in	r29, 0x3e	; 62
     b1a:	fe 01       	movw	r30, r28
     b1c:	36 96       	adiw	r30, 0x06	; 6
     b1e:	61 91       	ld	r22, Z+
     b20:	71 91       	ld	r23, Z+
     b22:	af 01       	movw	r20, r30
     b24:	80 91 aa 02 	lds	r24, 0x02AA
     b28:	90 91 ab 02 	lds	r25, 0x02AB
     b2c:	30 d0       	rcall	.+96     	; 0xb8e <vfprintf>
     b2e:	df 91       	pop	r29
     b30:	cf 91       	pop	r28
     b32:	08 95       	ret

00000b34 <puts>:
     b34:	0f 93       	push	r16
     b36:	1f 93       	push	r17
     b38:	cf 93       	push	r28
     b3a:	df 93       	push	r29
     b3c:	e0 91 aa 02 	lds	r30, 0x02AA
     b40:	f0 91 ab 02 	lds	r31, 0x02AB
     b44:	23 81       	ldd	r18, Z+3	; 0x03
     b46:	21 ff       	sbrs	r18, 1
     b48:	1b c0       	rjmp	.+54     	; 0xb80 <puts+0x4c>
     b4a:	ec 01       	movw	r28, r24
     b4c:	00 e0       	ldi	r16, 0x00	; 0
     b4e:	10 e0       	ldi	r17, 0x00	; 0
     b50:	89 91       	ld	r24, Y+
     b52:	60 91 aa 02 	lds	r22, 0x02AA
     b56:	70 91 ab 02 	lds	r23, 0x02AB
     b5a:	db 01       	movw	r26, r22
     b5c:	18 96       	adiw	r26, 0x08	; 8
     b5e:	ed 91       	ld	r30, X+
     b60:	fc 91       	ld	r31, X
     b62:	19 97       	sbiw	r26, 0x09	; 9
     b64:	88 23       	and	r24, r24
     b66:	31 f0       	breq	.+12     	; 0xb74 <puts+0x40>
     b68:	19 95       	eicall
     b6a:	89 2b       	or	r24, r25
     b6c:	89 f3       	breq	.-30     	; 0xb50 <puts+0x1c>
     b6e:	0f ef       	ldi	r16, 0xFF	; 255
     b70:	1f ef       	ldi	r17, 0xFF	; 255
     b72:	ee cf       	rjmp	.-36     	; 0xb50 <puts+0x1c>
     b74:	8a e0       	ldi	r24, 0x0A	; 10
     b76:	19 95       	eicall
     b78:	89 2b       	or	r24, r25
     b7a:	11 f4       	brne	.+4      	; 0xb80 <puts+0x4c>
     b7c:	c8 01       	movw	r24, r16
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <puts+0x50>
     b80:	8f ef       	ldi	r24, 0xFF	; 255
     b82:	9f ef       	ldi	r25, 0xFF	; 255
     b84:	df 91       	pop	r29
     b86:	cf 91       	pop	r28
     b88:	1f 91       	pop	r17
     b8a:	0f 91       	pop	r16
     b8c:	08 95       	ret

00000b8e <vfprintf>:
     b8e:	2f 92       	push	r2
     b90:	3f 92       	push	r3
     b92:	4f 92       	push	r4
     b94:	5f 92       	push	r5
     b96:	6f 92       	push	r6
     b98:	7f 92       	push	r7
     b9a:	8f 92       	push	r8
     b9c:	9f 92       	push	r9
     b9e:	af 92       	push	r10
     ba0:	bf 92       	push	r11
     ba2:	cf 92       	push	r12
     ba4:	df 92       	push	r13
     ba6:	ef 92       	push	r14
     ba8:	ff 92       	push	r15
     baa:	0f 93       	push	r16
     bac:	1f 93       	push	r17
     bae:	cf 93       	push	r28
     bb0:	df 93       	push	r29
     bb2:	cd b7       	in	r28, 0x3d	; 61
     bb4:	de b7       	in	r29, 0x3e	; 62
     bb6:	2c 97       	sbiw	r28, 0x0c	; 12
     bb8:	0f b6       	in	r0, 0x3f	; 63
     bba:	f8 94       	cli
     bbc:	de bf       	out	0x3e, r29	; 62
     bbe:	0f be       	out	0x3f, r0	; 63
     bc0:	cd bf       	out	0x3d, r28	; 61
     bc2:	7c 01       	movw	r14, r24
     bc4:	6b 01       	movw	r12, r22
     bc6:	8a 01       	movw	r16, r20
     bc8:	fc 01       	movw	r30, r24
     bca:	17 82       	std	Z+7, r1	; 0x07
     bcc:	16 82       	std	Z+6, r1	; 0x06
     bce:	83 81       	ldd	r24, Z+3	; 0x03
     bd0:	81 ff       	sbrs	r24, 1
     bd2:	b0 c1       	rjmp	.+864    	; 0xf34 <vfprintf+0x3a6>
     bd4:	ce 01       	movw	r24, r28
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	4c 01       	movw	r8, r24
     bda:	f7 01       	movw	r30, r14
     bdc:	93 81       	ldd	r25, Z+3	; 0x03
     bde:	f6 01       	movw	r30, r12
     be0:	93 fd       	sbrc	r25, 3
     be2:	85 91       	lpm	r24, Z+
     be4:	93 ff       	sbrs	r25, 3
     be6:	81 91       	ld	r24, Z+
     be8:	6f 01       	movw	r12, r30
     bea:	88 23       	and	r24, r24
     bec:	09 f4       	brne	.+2      	; 0xbf0 <vfprintf+0x62>
     bee:	9e c1       	rjmp	.+828    	; 0xf2c <vfprintf+0x39e>
     bf0:	85 32       	cpi	r24, 0x25	; 37
     bf2:	39 f4       	brne	.+14     	; 0xc02 <vfprintf+0x74>
     bf4:	93 fd       	sbrc	r25, 3
     bf6:	85 91       	lpm	r24, Z+
     bf8:	93 ff       	sbrs	r25, 3
     bfa:	81 91       	ld	r24, Z+
     bfc:	6f 01       	movw	r12, r30
     bfe:	85 32       	cpi	r24, 0x25	; 37
     c00:	21 f4       	brne	.+8      	; 0xc0a <vfprintf+0x7c>
     c02:	b7 01       	movw	r22, r14
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	0f d3       	rcall	.+1566   	; 0x1226 <fputc>
     c08:	e8 cf       	rjmp	.-48     	; 0xbda <vfprintf+0x4c>
     c0a:	51 2c       	mov	r5, r1
     c0c:	31 2c       	mov	r3, r1
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	20 32       	cpi	r18, 0x20	; 32
     c12:	a0 f4       	brcc	.+40     	; 0xc3c <vfprintf+0xae>
     c14:	8b 32       	cpi	r24, 0x2B	; 43
     c16:	69 f0       	breq	.+26     	; 0xc32 <vfprintf+0xa4>
     c18:	30 f4       	brcc	.+12     	; 0xc26 <vfprintf+0x98>
     c1a:	80 32       	cpi	r24, 0x20	; 32
     c1c:	59 f0       	breq	.+22     	; 0xc34 <vfprintf+0xa6>
     c1e:	83 32       	cpi	r24, 0x23	; 35
     c20:	69 f4       	brne	.+26     	; 0xc3c <vfprintf+0xae>
     c22:	20 61       	ori	r18, 0x10	; 16
     c24:	2c c0       	rjmp	.+88     	; 0xc7e <vfprintf+0xf0>
     c26:	8d 32       	cpi	r24, 0x2D	; 45
     c28:	39 f0       	breq	.+14     	; 0xc38 <vfprintf+0xaa>
     c2a:	80 33       	cpi	r24, 0x30	; 48
     c2c:	39 f4       	brne	.+14     	; 0xc3c <vfprintf+0xae>
     c2e:	21 60       	ori	r18, 0x01	; 1
     c30:	26 c0       	rjmp	.+76     	; 0xc7e <vfprintf+0xf0>
     c32:	22 60       	ori	r18, 0x02	; 2
     c34:	24 60       	ori	r18, 0x04	; 4
     c36:	23 c0       	rjmp	.+70     	; 0xc7e <vfprintf+0xf0>
     c38:	28 60       	ori	r18, 0x08	; 8
     c3a:	21 c0       	rjmp	.+66     	; 0xc7e <vfprintf+0xf0>
     c3c:	27 fd       	sbrc	r18, 7
     c3e:	27 c0       	rjmp	.+78     	; 0xc8e <vfprintf+0x100>
     c40:	30 ed       	ldi	r19, 0xD0	; 208
     c42:	38 0f       	add	r19, r24
     c44:	3a 30       	cpi	r19, 0x0A	; 10
     c46:	78 f4       	brcc	.+30     	; 0xc66 <vfprintf+0xd8>
     c48:	26 ff       	sbrs	r18, 6
     c4a:	06 c0       	rjmp	.+12     	; 0xc58 <vfprintf+0xca>
     c4c:	fa e0       	ldi	r31, 0x0A	; 10
     c4e:	5f 9e       	mul	r5, r31
     c50:	30 0d       	add	r19, r0
     c52:	11 24       	eor	r1, r1
     c54:	53 2e       	mov	r5, r19
     c56:	13 c0       	rjmp	.+38     	; 0xc7e <vfprintf+0xf0>
     c58:	8a e0       	ldi	r24, 0x0A	; 10
     c5a:	38 9e       	mul	r3, r24
     c5c:	30 0d       	add	r19, r0
     c5e:	11 24       	eor	r1, r1
     c60:	33 2e       	mov	r3, r19
     c62:	20 62       	ori	r18, 0x20	; 32
     c64:	0c c0       	rjmp	.+24     	; 0xc7e <vfprintf+0xf0>
     c66:	8e 32       	cpi	r24, 0x2E	; 46
     c68:	21 f4       	brne	.+8      	; 0xc72 <vfprintf+0xe4>
     c6a:	26 fd       	sbrc	r18, 6
     c6c:	5f c1       	rjmp	.+702    	; 0xf2c <vfprintf+0x39e>
     c6e:	20 64       	ori	r18, 0x40	; 64
     c70:	06 c0       	rjmp	.+12     	; 0xc7e <vfprintf+0xf0>
     c72:	8c 36       	cpi	r24, 0x6C	; 108
     c74:	11 f4       	brne	.+4      	; 0xc7a <vfprintf+0xec>
     c76:	20 68       	ori	r18, 0x80	; 128
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <vfprintf+0xf0>
     c7a:	88 36       	cpi	r24, 0x68	; 104
     c7c:	41 f4       	brne	.+16     	; 0xc8e <vfprintf+0x100>
     c7e:	f6 01       	movw	r30, r12
     c80:	93 fd       	sbrc	r25, 3
     c82:	85 91       	lpm	r24, Z+
     c84:	93 ff       	sbrs	r25, 3
     c86:	81 91       	ld	r24, Z+
     c88:	6f 01       	movw	r12, r30
     c8a:	81 11       	cpse	r24, r1
     c8c:	c1 cf       	rjmp	.-126    	; 0xc10 <vfprintf+0x82>
     c8e:	98 2f       	mov	r25, r24
     c90:	9f 7d       	andi	r25, 0xDF	; 223
     c92:	95 54       	subi	r25, 0x45	; 69
     c94:	93 30       	cpi	r25, 0x03	; 3
     c96:	28 f4       	brcc	.+10     	; 0xca2 <vfprintf+0x114>
     c98:	0c 5f       	subi	r16, 0xFC	; 252
     c9a:	1f 4f       	sbci	r17, 0xFF	; 255
     c9c:	ff e3       	ldi	r31, 0x3F	; 63
     c9e:	f9 83       	std	Y+1, r31	; 0x01
     ca0:	0d c0       	rjmp	.+26     	; 0xcbc <vfprintf+0x12e>
     ca2:	83 36       	cpi	r24, 0x63	; 99
     ca4:	31 f0       	breq	.+12     	; 0xcb2 <vfprintf+0x124>
     ca6:	83 37       	cpi	r24, 0x73	; 115
     ca8:	71 f0       	breq	.+28     	; 0xcc6 <vfprintf+0x138>
     caa:	83 35       	cpi	r24, 0x53	; 83
     cac:	09 f0       	breq	.+2      	; 0xcb0 <vfprintf+0x122>
     cae:	57 c0       	rjmp	.+174    	; 0xd5e <vfprintf+0x1d0>
     cb0:	21 c0       	rjmp	.+66     	; 0xcf4 <vfprintf+0x166>
     cb2:	f8 01       	movw	r30, r16
     cb4:	80 81       	ld	r24, Z
     cb6:	89 83       	std	Y+1, r24	; 0x01
     cb8:	0e 5f       	subi	r16, 0xFE	; 254
     cba:	1f 4f       	sbci	r17, 0xFF	; 255
     cbc:	44 24       	eor	r4, r4
     cbe:	43 94       	inc	r4
     cc0:	51 2c       	mov	r5, r1
     cc2:	54 01       	movw	r10, r8
     cc4:	14 c0       	rjmp	.+40     	; 0xcee <vfprintf+0x160>
     cc6:	38 01       	movw	r6, r16
     cc8:	f2 e0       	ldi	r31, 0x02	; 2
     cca:	6f 0e       	add	r6, r31
     ccc:	71 1c       	adc	r7, r1
     cce:	f8 01       	movw	r30, r16
     cd0:	a0 80       	ld	r10, Z
     cd2:	b1 80       	ldd	r11, Z+1	; 0x01
     cd4:	26 ff       	sbrs	r18, 6
     cd6:	03 c0       	rjmp	.+6      	; 0xcde <vfprintf+0x150>
     cd8:	65 2d       	mov	r22, r5
     cda:	70 e0       	ldi	r23, 0x00	; 0
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <vfprintf+0x154>
     cde:	6f ef       	ldi	r22, 0xFF	; 255
     ce0:	7f ef       	ldi	r23, 0xFF	; 255
     ce2:	c5 01       	movw	r24, r10
     ce4:	2c 87       	std	Y+12, r18	; 0x0c
     ce6:	94 d2       	rcall	.+1320   	; 0x1210 <strnlen>
     ce8:	2c 01       	movw	r4, r24
     cea:	83 01       	movw	r16, r6
     cec:	2c 85       	ldd	r18, Y+12	; 0x0c
     cee:	2f 77       	andi	r18, 0x7F	; 127
     cf0:	22 2e       	mov	r2, r18
     cf2:	16 c0       	rjmp	.+44     	; 0xd20 <vfprintf+0x192>
     cf4:	38 01       	movw	r6, r16
     cf6:	f2 e0       	ldi	r31, 0x02	; 2
     cf8:	6f 0e       	add	r6, r31
     cfa:	71 1c       	adc	r7, r1
     cfc:	f8 01       	movw	r30, r16
     cfe:	a0 80       	ld	r10, Z
     d00:	b1 80       	ldd	r11, Z+1	; 0x01
     d02:	26 ff       	sbrs	r18, 6
     d04:	03 c0       	rjmp	.+6      	; 0xd0c <vfprintf+0x17e>
     d06:	65 2d       	mov	r22, r5
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	02 c0       	rjmp	.+4      	; 0xd10 <vfprintf+0x182>
     d0c:	6f ef       	ldi	r22, 0xFF	; 255
     d0e:	7f ef       	ldi	r23, 0xFF	; 255
     d10:	c5 01       	movw	r24, r10
     d12:	2c 87       	std	Y+12, r18	; 0x0c
     d14:	6b d2       	rcall	.+1238   	; 0x11ec <strnlen_P>
     d16:	2c 01       	movw	r4, r24
     d18:	2c 85       	ldd	r18, Y+12	; 0x0c
     d1a:	20 68       	ori	r18, 0x80	; 128
     d1c:	22 2e       	mov	r2, r18
     d1e:	83 01       	movw	r16, r6
     d20:	23 fc       	sbrc	r2, 3
     d22:	19 c0       	rjmp	.+50     	; 0xd56 <vfprintf+0x1c8>
     d24:	83 2d       	mov	r24, r3
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	48 16       	cp	r4, r24
     d2a:	59 06       	cpc	r5, r25
     d2c:	a0 f4       	brcc	.+40     	; 0xd56 <vfprintf+0x1c8>
     d2e:	b7 01       	movw	r22, r14
     d30:	80 e2       	ldi	r24, 0x20	; 32
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	78 d2       	rcall	.+1264   	; 0x1226 <fputc>
     d36:	3a 94       	dec	r3
     d38:	f5 cf       	rjmp	.-22     	; 0xd24 <vfprintf+0x196>
     d3a:	f5 01       	movw	r30, r10
     d3c:	27 fc       	sbrc	r2, 7
     d3e:	85 91       	lpm	r24, Z+
     d40:	27 fe       	sbrs	r2, 7
     d42:	81 91       	ld	r24, Z+
     d44:	5f 01       	movw	r10, r30
     d46:	b7 01       	movw	r22, r14
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	6d d2       	rcall	.+1242   	; 0x1226 <fputc>
     d4c:	31 10       	cpse	r3, r1
     d4e:	3a 94       	dec	r3
     d50:	f1 e0       	ldi	r31, 0x01	; 1
     d52:	4f 1a       	sub	r4, r31
     d54:	51 08       	sbc	r5, r1
     d56:	41 14       	cp	r4, r1
     d58:	51 04       	cpc	r5, r1
     d5a:	79 f7       	brne	.-34     	; 0xd3a <vfprintf+0x1ac>
     d5c:	de c0       	rjmp	.+444    	; 0xf1a <vfprintf+0x38c>
     d5e:	84 36       	cpi	r24, 0x64	; 100
     d60:	11 f0       	breq	.+4      	; 0xd66 <vfprintf+0x1d8>
     d62:	89 36       	cpi	r24, 0x69	; 105
     d64:	31 f5       	brne	.+76     	; 0xdb2 <vfprintf+0x224>
     d66:	f8 01       	movw	r30, r16
     d68:	27 ff       	sbrs	r18, 7
     d6a:	07 c0       	rjmp	.+14     	; 0xd7a <vfprintf+0x1ec>
     d6c:	60 81       	ld	r22, Z
     d6e:	71 81       	ldd	r23, Z+1	; 0x01
     d70:	82 81       	ldd	r24, Z+2	; 0x02
     d72:	93 81       	ldd	r25, Z+3	; 0x03
     d74:	0c 5f       	subi	r16, 0xFC	; 252
     d76:	1f 4f       	sbci	r17, 0xFF	; 255
     d78:	08 c0       	rjmp	.+16     	; 0xd8a <vfprintf+0x1fc>
     d7a:	60 81       	ld	r22, Z
     d7c:	71 81       	ldd	r23, Z+1	; 0x01
     d7e:	88 27       	eor	r24, r24
     d80:	77 fd       	sbrc	r23, 7
     d82:	80 95       	com	r24
     d84:	98 2f       	mov	r25, r24
     d86:	0e 5f       	subi	r16, 0xFE	; 254
     d88:	1f 4f       	sbci	r17, 0xFF	; 255
     d8a:	2f 76       	andi	r18, 0x6F	; 111
     d8c:	b2 2e       	mov	r11, r18
     d8e:	97 ff       	sbrs	r25, 7
     d90:	09 c0       	rjmp	.+18     	; 0xda4 <vfprintf+0x216>
     d92:	90 95       	com	r25
     d94:	80 95       	com	r24
     d96:	70 95       	com	r23
     d98:	61 95       	neg	r22
     d9a:	7f 4f       	sbci	r23, 0xFF	; 255
     d9c:	8f 4f       	sbci	r24, 0xFF	; 255
     d9e:	9f 4f       	sbci	r25, 0xFF	; 255
     da0:	20 68       	ori	r18, 0x80	; 128
     da2:	b2 2e       	mov	r11, r18
     da4:	2a e0       	ldi	r18, 0x0A	; 10
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	a4 01       	movw	r20, r8
     daa:	6f d2       	rcall	.+1246   	; 0x128a <__ultoa_invert>
     dac:	a8 2e       	mov	r10, r24
     dae:	a8 18       	sub	r10, r8
     db0:	43 c0       	rjmp	.+134    	; 0xe38 <vfprintf+0x2aa>
     db2:	85 37       	cpi	r24, 0x75	; 117
     db4:	29 f4       	brne	.+10     	; 0xdc0 <vfprintf+0x232>
     db6:	2f 7e       	andi	r18, 0xEF	; 239
     db8:	b2 2e       	mov	r11, r18
     dba:	2a e0       	ldi	r18, 0x0A	; 10
     dbc:	30 e0       	ldi	r19, 0x00	; 0
     dbe:	25 c0       	rjmp	.+74     	; 0xe0a <vfprintf+0x27c>
     dc0:	f2 2f       	mov	r31, r18
     dc2:	f9 7f       	andi	r31, 0xF9	; 249
     dc4:	bf 2e       	mov	r11, r31
     dc6:	8f 36       	cpi	r24, 0x6F	; 111
     dc8:	c1 f0       	breq	.+48     	; 0xdfa <vfprintf+0x26c>
     dca:	18 f4       	brcc	.+6      	; 0xdd2 <vfprintf+0x244>
     dcc:	88 35       	cpi	r24, 0x58	; 88
     dce:	79 f0       	breq	.+30     	; 0xdee <vfprintf+0x260>
     dd0:	ad c0       	rjmp	.+346    	; 0xf2c <vfprintf+0x39e>
     dd2:	80 37       	cpi	r24, 0x70	; 112
     dd4:	19 f0       	breq	.+6      	; 0xddc <vfprintf+0x24e>
     dd6:	88 37       	cpi	r24, 0x78	; 120
     dd8:	21 f0       	breq	.+8      	; 0xde2 <vfprintf+0x254>
     dda:	a8 c0       	rjmp	.+336    	; 0xf2c <vfprintf+0x39e>
     ddc:	2f 2f       	mov	r18, r31
     dde:	20 61       	ori	r18, 0x10	; 16
     de0:	b2 2e       	mov	r11, r18
     de2:	b4 fe       	sbrs	r11, 4
     de4:	0d c0       	rjmp	.+26     	; 0xe00 <vfprintf+0x272>
     de6:	8b 2d       	mov	r24, r11
     de8:	84 60       	ori	r24, 0x04	; 4
     dea:	b8 2e       	mov	r11, r24
     dec:	09 c0       	rjmp	.+18     	; 0xe00 <vfprintf+0x272>
     dee:	24 ff       	sbrs	r18, 4
     df0:	0a c0       	rjmp	.+20     	; 0xe06 <vfprintf+0x278>
     df2:	9f 2f       	mov	r25, r31
     df4:	96 60       	ori	r25, 0x06	; 6
     df6:	b9 2e       	mov	r11, r25
     df8:	06 c0       	rjmp	.+12     	; 0xe06 <vfprintf+0x278>
     dfa:	28 e0       	ldi	r18, 0x08	; 8
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	05 c0       	rjmp	.+10     	; 0xe0a <vfprintf+0x27c>
     e00:	20 e1       	ldi	r18, 0x10	; 16
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <vfprintf+0x27c>
     e06:	20 e1       	ldi	r18, 0x10	; 16
     e08:	32 e0       	ldi	r19, 0x02	; 2
     e0a:	f8 01       	movw	r30, r16
     e0c:	b7 fe       	sbrs	r11, 7
     e0e:	07 c0       	rjmp	.+14     	; 0xe1e <vfprintf+0x290>
     e10:	60 81       	ld	r22, Z
     e12:	71 81       	ldd	r23, Z+1	; 0x01
     e14:	82 81       	ldd	r24, Z+2	; 0x02
     e16:	93 81       	ldd	r25, Z+3	; 0x03
     e18:	0c 5f       	subi	r16, 0xFC	; 252
     e1a:	1f 4f       	sbci	r17, 0xFF	; 255
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <vfprintf+0x29c>
     e1e:	60 81       	ld	r22, Z
     e20:	71 81       	ldd	r23, Z+1	; 0x01
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 5f       	subi	r16, 0xFE	; 254
     e28:	1f 4f       	sbci	r17, 0xFF	; 255
     e2a:	a4 01       	movw	r20, r8
     e2c:	2e d2       	rcall	.+1116   	; 0x128a <__ultoa_invert>
     e2e:	a8 2e       	mov	r10, r24
     e30:	a8 18       	sub	r10, r8
     e32:	fb 2d       	mov	r31, r11
     e34:	ff 77       	andi	r31, 0x7F	; 127
     e36:	bf 2e       	mov	r11, r31
     e38:	b6 fe       	sbrs	r11, 6
     e3a:	0b c0       	rjmp	.+22     	; 0xe52 <vfprintf+0x2c4>
     e3c:	2b 2d       	mov	r18, r11
     e3e:	2e 7f       	andi	r18, 0xFE	; 254
     e40:	a5 14       	cp	r10, r5
     e42:	50 f4       	brcc	.+20     	; 0xe58 <vfprintf+0x2ca>
     e44:	b4 fe       	sbrs	r11, 4
     e46:	0a c0       	rjmp	.+20     	; 0xe5c <vfprintf+0x2ce>
     e48:	b2 fc       	sbrc	r11, 2
     e4a:	08 c0       	rjmp	.+16     	; 0xe5c <vfprintf+0x2ce>
     e4c:	2b 2d       	mov	r18, r11
     e4e:	2e 7e       	andi	r18, 0xEE	; 238
     e50:	05 c0       	rjmp	.+10     	; 0xe5c <vfprintf+0x2ce>
     e52:	7a 2c       	mov	r7, r10
     e54:	2b 2d       	mov	r18, r11
     e56:	03 c0       	rjmp	.+6      	; 0xe5e <vfprintf+0x2d0>
     e58:	7a 2c       	mov	r7, r10
     e5a:	01 c0       	rjmp	.+2      	; 0xe5e <vfprintf+0x2d0>
     e5c:	75 2c       	mov	r7, r5
     e5e:	24 ff       	sbrs	r18, 4
     e60:	0d c0       	rjmp	.+26     	; 0xe7c <vfprintf+0x2ee>
     e62:	fe 01       	movw	r30, r28
     e64:	ea 0d       	add	r30, r10
     e66:	f1 1d       	adc	r31, r1
     e68:	80 81       	ld	r24, Z
     e6a:	80 33       	cpi	r24, 0x30	; 48
     e6c:	11 f4       	brne	.+4      	; 0xe72 <vfprintf+0x2e4>
     e6e:	29 7e       	andi	r18, 0xE9	; 233
     e70:	09 c0       	rjmp	.+18     	; 0xe84 <vfprintf+0x2f6>
     e72:	22 ff       	sbrs	r18, 2
     e74:	06 c0       	rjmp	.+12     	; 0xe82 <vfprintf+0x2f4>
     e76:	73 94       	inc	r7
     e78:	73 94       	inc	r7
     e7a:	04 c0       	rjmp	.+8      	; 0xe84 <vfprintf+0x2f6>
     e7c:	82 2f       	mov	r24, r18
     e7e:	86 78       	andi	r24, 0x86	; 134
     e80:	09 f0       	breq	.+2      	; 0xe84 <vfprintf+0x2f6>
     e82:	73 94       	inc	r7
     e84:	23 fd       	sbrc	r18, 3
     e86:	12 c0       	rjmp	.+36     	; 0xeac <vfprintf+0x31e>
     e88:	20 ff       	sbrs	r18, 0
     e8a:	06 c0       	rjmp	.+12     	; 0xe98 <vfprintf+0x30a>
     e8c:	5a 2c       	mov	r5, r10
     e8e:	73 14       	cp	r7, r3
     e90:	18 f4       	brcc	.+6      	; 0xe98 <vfprintf+0x30a>
     e92:	53 0c       	add	r5, r3
     e94:	57 18       	sub	r5, r7
     e96:	73 2c       	mov	r7, r3
     e98:	73 14       	cp	r7, r3
     e9a:	60 f4       	brcc	.+24     	; 0xeb4 <vfprintf+0x326>
     e9c:	b7 01       	movw	r22, r14
     e9e:	80 e2       	ldi	r24, 0x20	; 32
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	2c 87       	std	Y+12, r18	; 0x0c
     ea4:	c0 d1       	rcall	.+896    	; 0x1226 <fputc>
     ea6:	73 94       	inc	r7
     ea8:	2c 85       	ldd	r18, Y+12	; 0x0c
     eaa:	f6 cf       	rjmp	.-20     	; 0xe98 <vfprintf+0x30a>
     eac:	73 14       	cp	r7, r3
     eae:	10 f4       	brcc	.+4      	; 0xeb4 <vfprintf+0x326>
     eb0:	37 18       	sub	r3, r7
     eb2:	01 c0       	rjmp	.+2      	; 0xeb6 <vfprintf+0x328>
     eb4:	31 2c       	mov	r3, r1
     eb6:	24 ff       	sbrs	r18, 4
     eb8:	11 c0       	rjmp	.+34     	; 0xedc <vfprintf+0x34e>
     eba:	b7 01       	movw	r22, r14
     ebc:	80 e3       	ldi	r24, 0x30	; 48
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	2c 87       	std	Y+12, r18	; 0x0c
     ec2:	b1 d1       	rcall	.+866    	; 0x1226 <fputc>
     ec4:	2c 85       	ldd	r18, Y+12	; 0x0c
     ec6:	22 ff       	sbrs	r18, 2
     ec8:	16 c0       	rjmp	.+44     	; 0xef6 <vfprintf+0x368>
     eca:	21 ff       	sbrs	r18, 1
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <vfprintf+0x346>
     ece:	88 e5       	ldi	r24, 0x58	; 88
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <vfprintf+0x34a>
     ed4:	88 e7       	ldi	r24, 0x78	; 120
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	b7 01       	movw	r22, r14
     eda:	0c c0       	rjmp	.+24     	; 0xef4 <vfprintf+0x366>
     edc:	82 2f       	mov	r24, r18
     ede:	86 78       	andi	r24, 0x86	; 134
     ee0:	51 f0       	breq	.+20     	; 0xef6 <vfprintf+0x368>
     ee2:	21 fd       	sbrc	r18, 1
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x35c>
     ee6:	80 e2       	ldi	r24, 0x20	; 32
     ee8:	01 c0       	rjmp	.+2      	; 0xeec <vfprintf+0x35e>
     eea:	8b e2       	ldi	r24, 0x2B	; 43
     eec:	27 fd       	sbrc	r18, 7
     eee:	8d e2       	ldi	r24, 0x2D	; 45
     ef0:	b7 01       	movw	r22, r14
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	98 d1       	rcall	.+816    	; 0x1226 <fputc>
     ef6:	a5 14       	cp	r10, r5
     ef8:	30 f4       	brcc	.+12     	; 0xf06 <vfprintf+0x378>
     efa:	b7 01       	movw	r22, r14
     efc:	80 e3       	ldi	r24, 0x30	; 48
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	92 d1       	rcall	.+804    	; 0x1226 <fputc>
     f02:	5a 94       	dec	r5
     f04:	f8 cf       	rjmp	.-16     	; 0xef6 <vfprintf+0x368>
     f06:	aa 94       	dec	r10
     f08:	f4 01       	movw	r30, r8
     f0a:	ea 0d       	add	r30, r10
     f0c:	f1 1d       	adc	r31, r1
     f0e:	80 81       	ld	r24, Z
     f10:	b7 01       	movw	r22, r14
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	88 d1       	rcall	.+784    	; 0x1226 <fputc>
     f16:	a1 10       	cpse	r10, r1
     f18:	f6 cf       	rjmp	.-20     	; 0xf06 <vfprintf+0x378>
     f1a:	33 20       	and	r3, r3
     f1c:	09 f4       	brne	.+2      	; 0xf20 <vfprintf+0x392>
     f1e:	5d ce       	rjmp	.-838    	; 0xbda <vfprintf+0x4c>
     f20:	b7 01       	movw	r22, r14
     f22:	80 e2       	ldi	r24, 0x20	; 32
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	7f d1       	rcall	.+766    	; 0x1226 <fputc>
     f28:	3a 94       	dec	r3
     f2a:	f7 cf       	rjmp	.-18     	; 0xf1a <vfprintf+0x38c>
     f2c:	f7 01       	movw	r30, r14
     f2e:	86 81       	ldd	r24, Z+6	; 0x06
     f30:	97 81       	ldd	r25, Z+7	; 0x07
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <vfprintf+0x3aa>
     f34:	8f ef       	ldi	r24, 0xFF	; 255
     f36:	9f ef       	ldi	r25, 0xFF	; 255
     f38:	2c 96       	adiw	r28, 0x0c	; 12
     f3a:	0f b6       	in	r0, 0x3f	; 63
     f3c:	f8 94       	cli
     f3e:	de bf       	out	0x3e, r29	; 62
     f40:	0f be       	out	0x3f, r0	; 63
     f42:	cd bf       	out	0x3d, r28	; 61
     f44:	df 91       	pop	r29
     f46:	cf 91       	pop	r28
     f48:	1f 91       	pop	r17
     f4a:	0f 91       	pop	r16
     f4c:	ff 90       	pop	r15
     f4e:	ef 90       	pop	r14
     f50:	df 90       	pop	r13
     f52:	cf 90       	pop	r12
     f54:	bf 90       	pop	r11
     f56:	af 90       	pop	r10
     f58:	9f 90       	pop	r9
     f5a:	8f 90       	pop	r8
     f5c:	7f 90       	pop	r7
     f5e:	6f 90       	pop	r6
     f60:	5f 90       	pop	r5
     f62:	4f 90       	pop	r4
     f64:	3f 90       	pop	r3
     f66:	2f 90       	pop	r2
     f68:	08 95       	ret

00000f6a <calloc>:
     f6a:	0f 93       	push	r16
     f6c:	1f 93       	push	r17
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	86 9f       	mul	r24, r22
     f74:	80 01       	movw	r16, r0
     f76:	87 9f       	mul	r24, r23
     f78:	10 0d       	add	r17, r0
     f7a:	96 9f       	mul	r25, r22
     f7c:	10 0d       	add	r17, r0
     f7e:	11 24       	eor	r1, r1
     f80:	c8 01       	movw	r24, r16
     f82:	0d d0       	rcall	.+26     	; 0xf9e <malloc>
     f84:	ec 01       	movw	r28, r24
     f86:	00 97       	sbiw	r24, 0x00	; 0
     f88:	21 f0       	breq	.+8      	; 0xf92 <calloc+0x28>
     f8a:	a8 01       	movw	r20, r16
     f8c:	60 e0       	ldi	r22, 0x00	; 0
     f8e:	70 e0       	ldi	r23, 0x00	; 0
     f90:	38 d1       	rcall	.+624    	; 0x1202 <memset>
     f92:	ce 01       	movw	r24, r28
     f94:	df 91       	pop	r29
     f96:	cf 91       	pop	r28
     f98:	1f 91       	pop	r17
     f9a:	0f 91       	pop	r16
     f9c:	08 95       	ret

00000f9e <malloc>:
     f9e:	cf 93       	push	r28
     fa0:	df 93       	push	r29
     fa2:	82 30       	cpi	r24, 0x02	; 2
     fa4:	91 05       	cpc	r25, r1
     fa6:	10 f4       	brcc	.+4      	; 0xfac <malloc+0xe>
     fa8:	82 e0       	ldi	r24, 0x02	; 2
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	e0 91 b0 02 	lds	r30, 0x02B0
     fb0:	f0 91 b1 02 	lds	r31, 0x02B1
     fb4:	20 e0       	ldi	r18, 0x00	; 0
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	a0 e0       	ldi	r26, 0x00	; 0
     fba:	b0 e0       	ldi	r27, 0x00	; 0
     fbc:	30 97       	sbiw	r30, 0x00	; 0
     fbe:	39 f1       	breq	.+78     	; 0x100e <malloc+0x70>
     fc0:	40 81       	ld	r20, Z
     fc2:	51 81       	ldd	r21, Z+1	; 0x01
     fc4:	48 17       	cp	r20, r24
     fc6:	59 07       	cpc	r21, r25
     fc8:	b8 f0       	brcs	.+46     	; 0xff8 <malloc+0x5a>
     fca:	48 17       	cp	r20, r24
     fcc:	59 07       	cpc	r21, r25
     fce:	71 f4       	brne	.+28     	; 0xfec <malloc+0x4e>
     fd0:	82 81       	ldd	r24, Z+2	; 0x02
     fd2:	93 81       	ldd	r25, Z+3	; 0x03
     fd4:	10 97       	sbiw	r26, 0x00	; 0
     fd6:	29 f0       	breq	.+10     	; 0xfe2 <malloc+0x44>
     fd8:	13 96       	adiw	r26, 0x03	; 3
     fda:	9c 93       	st	X, r25
     fdc:	8e 93       	st	-X, r24
     fde:	12 97       	sbiw	r26, 0x02	; 2
     fe0:	2c c0       	rjmp	.+88     	; 0x103a <malloc+0x9c>
     fe2:	90 93 b1 02 	sts	0x02B1, r25
     fe6:	80 93 b0 02 	sts	0x02B0, r24
     fea:	27 c0       	rjmp	.+78     	; 0x103a <malloc+0x9c>
     fec:	21 15       	cp	r18, r1
     fee:	31 05       	cpc	r19, r1
     ff0:	31 f0       	breq	.+12     	; 0xffe <malloc+0x60>
     ff2:	42 17       	cp	r20, r18
     ff4:	53 07       	cpc	r21, r19
     ff6:	18 f0       	brcs	.+6      	; 0xffe <malloc+0x60>
     ff8:	a9 01       	movw	r20, r18
     ffa:	db 01       	movw	r26, r22
     ffc:	01 c0       	rjmp	.+2      	; 0x1000 <malloc+0x62>
     ffe:	ef 01       	movw	r28, r30
    1000:	9a 01       	movw	r18, r20
    1002:	bd 01       	movw	r22, r26
    1004:	df 01       	movw	r26, r30
    1006:	02 80       	ldd	r0, Z+2	; 0x02
    1008:	f3 81       	ldd	r31, Z+3	; 0x03
    100a:	e0 2d       	mov	r30, r0
    100c:	d7 cf       	rjmp	.-82     	; 0xfbc <malloc+0x1e>
    100e:	21 15       	cp	r18, r1
    1010:	31 05       	cpc	r19, r1
    1012:	f9 f0       	breq	.+62     	; 0x1052 <malloc+0xb4>
    1014:	28 1b       	sub	r18, r24
    1016:	39 0b       	sbc	r19, r25
    1018:	24 30       	cpi	r18, 0x04	; 4
    101a:	31 05       	cpc	r19, r1
    101c:	80 f4       	brcc	.+32     	; 0x103e <malloc+0xa0>
    101e:	8a 81       	ldd	r24, Y+2	; 0x02
    1020:	9b 81       	ldd	r25, Y+3	; 0x03
    1022:	61 15       	cp	r22, r1
    1024:	71 05       	cpc	r23, r1
    1026:	21 f0       	breq	.+8      	; 0x1030 <malloc+0x92>
    1028:	fb 01       	movw	r30, r22
    102a:	93 83       	std	Z+3, r25	; 0x03
    102c:	82 83       	std	Z+2, r24	; 0x02
    102e:	04 c0       	rjmp	.+8      	; 0x1038 <malloc+0x9a>
    1030:	90 93 b1 02 	sts	0x02B1, r25
    1034:	80 93 b0 02 	sts	0x02B0, r24
    1038:	fe 01       	movw	r30, r28
    103a:	32 96       	adiw	r30, 0x02	; 2
    103c:	44 c0       	rjmp	.+136    	; 0x10c6 <malloc+0x128>
    103e:	fe 01       	movw	r30, r28
    1040:	e2 0f       	add	r30, r18
    1042:	f3 1f       	adc	r31, r19
    1044:	81 93       	st	Z+, r24
    1046:	91 93       	st	Z+, r25
    1048:	22 50       	subi	r18, 0x02	; 2
    104a:	31 09       	sbc	r19, r1
    104c:	39 83       	std	Y+1, r19	; 0x01
    104e:	28 83       	st	Y, r18
    1050:	3a c0       	rjmp	.+116    	; 0x10c6 <malloc+0x128>
    1052:	20 91 ae 02 	lds	r18, 0x02AE
    1056:	30 91 af 02 	lds	r19, 0x02AF
    105a:	23 2b       	or	r18, r19
    105c:	41 f4       	brne	.+16     	; 0x106e <malloc+0xd0>
    105e:	20 91 02 02 	lds	r18, 0x0202
    1062:	30 91 03 02 	lds	r19, 0x0203
    1066:	30 93 af 02 	sts	0x02AF, r19
    106a:	20 93 ae 02 	sts	0x02AE, r18
    106e:	20 91 00 02 	lds	r18, 0x0200
    1072:	30 91 01 02 	lds	r19, 0x0201
    1076:	21 15       	cp	r18, r1
    1078:	31 05       	cpc	r19, r1
    107a:	41 f4       	brne	.+16     	; 0x108c <malloc+0xee>
    107c:	2d b7       	in	r18, 0x3d	; 61
    107e:	3e b7       	in	r19, 0x3e	; 62
    1080:	40 91 04 02 	lds	r20, 0x0204
    1084:	50 91 05 02 	lds	r21, 0x0205
    1088:	24 1b       	sub	r18, r20
    108a:	35 0b       	sbc	r19, r21
    108c:	e0 91 ae 02 	lds	r30, 0x02AE
    1090:	f0 91 af 02 	lds	r31, 0x02AF
    1094:	e2 17       	cp	r30, r18
    1096:	f3 07       	cpc	r31, r19
    1098:	a0 f4       	brcc	.+40     	; 0x10c2 <malloc+0x124>
    109a:	2e 1b       	sub	r18, r30
    109c:	3f 0b       	sbc	r19, r31
    109e:	28 17       	cp	r18, r24
    10a0:	39 07       	cpc	r19, r25
    10a2:	78 f0       	brcs	.+30     	; 0x10c2 <malloc+0x124>
    10a4:	ac 01       	movw	r20, r24
    10a6:	4e 5f       	subi	r20, 0xFE	; 254
    10a8:	5f 4f       	sbci	r21, 0xFF	; 255
    10aa:	24 17       	cp	r18, r20
    10ac:	35 07       	cpc	r19, r21
    10ae:	48 f0       	brcs	.+18     	; 0x10c2 <malloc+0x124>
    10b0:	4e 0f       	add	r20, r30
    10b2:	5f 1f       	adc	r21, r31
    10b4:	50 93 af 02 	sts	0x02AF, r21
    10b8:	40 93 ae 02 	sts	0x02AE, r20
    10bc:	81 93       	st	Z+, r24
    10be:	91 93       	st	Z+, r25
    10c0:	02 c0       	rjmp	.+4      	; 0x10c6 <malloc+0x128>
    10c2:	e0 e0       	ldi	r30, 0x00	; 0
    10c4:	f0 e0       	ldi	r31, 0x00	; 0
    10c6:	cf 01       	movw	r24, r30
    10c8:	df 91       	pop	r29
    10ca:	cf 91       	pop	r28
    10cc:	08 95       	ret

000010ce <free>:
    10ce:	cf 93       	push	r28
    10d0:	df 93       	push	r29
    10d2:	00 97       	sbiw	r24, 0x00	; 0
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <free+0xa>
    10d6:	87 c0       	rjmp	.+270    	; 0x11e6 <free+0x118>
    10d8:	fc 01       	movw	r30, r24
    10da:	32 97       	sbiw	r30, 0x02	; 2
    10dc:	13 82       	std	Z+3, r1	; 0x03
    10de:	12 82       	std	Z+2, r1	; 0x02
    10e0:	c0 91 b0 02 	lds	r28, 0x02B0
    10e4:	d0 91 b1 02 	lds	r29, 0x02B1
    10e8:	20 97       	sbiw	r28, 0x00	; 0
    10ea:	81 f4       	brne	.+32     	; 0x110c <free+0x3e>
    10ec:	20 81       	ld	r18, Z
    10ee:	31 81       	ldd	r19, Z+1	; 0x01
    10f0:	28 0f       	add	r18, r24
    10f2:	39 1f       	adc	r19, r25
    10f4:	80 91 ae 02 	lds	r24, 0x02AE
    10f8:	90 91 af 02 	lds	r25, 0x02AF
    10fc:	82 17       	cp	r24, r18
    10fe:	93 07       	cpc	r25, r19
    1100:	79 f5       	brne	.+94     	; 0x1160 <free+0x92>
    1102:	f0 93 af 02 	sts	0x02AF, r31
    1106:	e0 93 ae 02 	sts	0x02AE, r30
    110a:	6d c0       	rjmp	.+218    	; 0x11e6 <free+0x118>
    110c:	de 01       	movw	r26, r28
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	ae 17       	cp	r26, r30
    1114:	bf 07       	cpc	r27, r31
    1116:	50 f4       	brcc	.+20     	; 0x112c <free+0x5e>
    1118:	12 96       	adiw	r26, 0x02	; 2
    111a:	4d 91       	ld	r20, X+
    111c:	5c 91       	ld	r21, X
    111e:	13 97       	sbiw	r26, 0x03	; 3
    1120:	9d 01       	movw	r18, r26
    1122:	41 15       	cp	r20, r1
    1124:	51 05       	cpc	r21, r1
    1126:	09 f1       	breq	.+66     	; 0x116a <free+0x9c>
    1128:	da 01       	movw	r26, r20
    112a:	f3 cf       	rjmp	.-26     	; 0x1112 <free+0x44>
    112c:	b3 83       	std	Z+3, r27	; 0x03
    112e:	a2 83       	std	Z+2, r26	; 0x02
    1130:	40 81       	ld	r20, Z
    1132:	51 81       	ldd	r21, Z+1	; 0x01
    1134:	84 0f       	add	r24, r20
    1136:	95 1f       	adc	r25, r21
    1138:	8a 17       	cp	r24, r26
    113a:	9b 07       	cpc	r25, r27
    113c:	71 f4       	brne	.+28     	; 0x115a <free+0x8c>
    113e:	8d 91       	ld	r24, X+
    1140:	9c 91       	ld	r25, X
    1142:	11 97       	sbiw	r26, 0x01	; 1
    1144:	84 0f       	add	r24, r20
    1146:	95 1f       	adc	r25, r21
    1148:	02 96       	adiw	r24, 0x02	; 2
    114a:	91 83       	std	Z+1, r25	; 0x01
    114c:	80 83       	st	Z, r24
    114e:	12 96       	adiw	r26, 0x02	; 2
    1150:	8d 91       	ld	r24, X+
    1152:	9c 91       	ld	r25, X
    1154:	13 97       	sbiw	r26, 0x03	; 3
    1156:	93 83       	std	Z+3, r25	; 0x03
    1158:	82 83       	std	Z+2, r24	; 0x02
    115a:	21 15       	cp	r18, r1
    115c:	31 05       	cpc	r19, r1
    115e:	29 f4       	brne	.+10     	; 0x116a <free+0x9c>
    1160:	f0 93 b1 02 	sts	0x02B1, r31
    1164:	e0 93 b0 02 	sts	0x02B0, r30
    1168:	3e c0       	rjmp	.+124    	; 0x11e6 <free+0x118>
    116a:	d9 01       	movw	r26, r18
    116c:	13 96       	adiw	r26, 0x03	; 3
    116e:	fc 93       	st	X, r31
    1170:	ee 93       	st	-X, r30
    1172:	12 97       	sbiw	r26, 0x02	; 2
    1174:	4d 91       	ld	r20, X+
    1176:	5d 91       	ld	r21, X+
    1178:	a4 0f       	add	r26, r20
    117a:	b5 1f       	adc	r27, r21
    117c:	ea 17       	cp	r30, r26
    117e:	fb 07       	cpc	r31, r27
    1180:	79 f4       	brne	.+30     	; 0x11a0 <free+0xd2>
    1182:	80 81       	ld	r24, Z
    1184:	91 81       	ldd	r25, Z+1	; 0x01
    1186:	84 0f       	add	r24, r20
    1188:	95 1f       	adc	r25, r21
    118a:	02 96       	adiw	r24, 0x02	; 2
    118c:	d9 01       	movw	r26, r18
    118e:	11 96       	adiw	r26, 0x01	; 1
    1190:	9c 93       	st	X, r25
    1192:	8e 93       	st	-X, r24
    1194:	82 81       	ldd	r24, Z+2	; 0x02
    1196:	93 81       	ldd	r25, Z+3	; 0x03
    1198:	13 96       	adiw	r26, 0x03	; 3
    119a:	9c 93       	st	X, r25
    119c:	8e 93       	st	-X, r24
    119e:	12 97       	sbiw	r26, 0x02	; 2
    11a0:	e0 e0       	ldi	r30, 0x00	; 0
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	9b 81       	ldd	r25, Y+3	; 0x03
    11a8:	00 97       	sbiw	r24, 0x00	; 0
    11aa:	19 f0       	breq	.+6      	; 0x11b2 <free+0xe4>
    11ac:	fe 01       	movw	r30, r28
    11ae:	ec 01       	movw	r28, r24
    11b0:	f9 cf       	rjmp	.-14     	; 0x11a4 <free+0xd6>
    11b2:	ce 01       	movw	r24, r28
    11b4:	02 96       	adiw	r24, 0x02	; 2
    11b6:	28 81       	ld	r18, Y
    11b8:	39 81       	ldd	r19, Y+1	; 0x01
    11ba:	82 0f       	add	r24, r18
    11bc:	93 1f       	adc	r25, r19
    11be:	20 91 ae 02 	lds	r18, 0x02AE
    11c2:	30 91 af 02 	lds	r19, 0x02AF
    11c6:	28 17       	cp	r18, r24
    11c8:	39 07       	cpc	r19, r25
    11ca:	69 f4       	brne	.+26     	; 0x11e6 <free+0x118>
    11cc:	30 97       	sbiw	r30, 0x00	; 0
    11ce:	29 f4       	brne	.+10     	; 0x11da <free+0x10c>
    11d0:	10 92 b1 02 	sts	0x02B1, r1
    11d4:	10 92 b0 02 	sts	0x02B0, r1
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <free+0x110>
    11da:	13 82       	std	Z+3, r1	; 0x03
    11dc:	12 82       	std	Z+2, r1	; 0x02
    11de:	d0 93 af 02 	sts	0x02AF, r29
    11e2:	c0 93 ae 02 	sts	0x02AE, r28
    11e6:	df 91       	pop	r29
    11e8:	cf 91       	pop	r28
    11ea:	08 95       	ret

000011ec <strnlen_P>:
    11ec:	fc 01       	movw	r30, r24
    11ee:	05 90       	lpm	r0, Z+
    11f0:	61 50       	subi	r22, 0x01	; 1
    11f2:	70 40       	sbci	r23, 0x00	; 0
    11f4:	01 10       	cpse	r0, r1
    11f6:	d8 f7       	brcc	.-10     	; 0x11ee <strnlen_P+0x2>
    11f8:	80 95       	com	r24
    11fa:	90 95       	com	r25
    11fc:	8e 0f       	add	r24, r30
    11fe:	9f 1f       	adc	r25, r31
    1200:	08 95       	ret

00001202 <memset>:
    1202:	dc 01       	movw	r26, r24
    1204:	01 c0       	rjmp	.+2      	; 0x1208 <memset+0x6>
    1206:	6d 93       	st	X+, r22
    1208:	41 50       	subi	r20, 0x01	; 1
    120a:	50 40       	sbci	r21, 0x00	; 0
    120c:	e0 f7       	brcc	.-8      	; 0x1206 <memset+0x4>
    120e:	08 95       	ret

00001210 <strnlen>:
    1210:	fc 01       	movw	r30, r24
    1212:	61 50       	subi	r22, 0x01	; 1
    1214:	70 40       	sbci	r23, 0x00	; 0
    1216:	01 90       	ld	r0, Z+
    1218:	01 10       	cpse	r0, r1
    121a:	d8 f7       	brcc	.-10     	; 0x1212 <strnlen+0x2>
    121c:	80 95       	com	r24
    121e:	90 95       	com	r25
    1220:	8e 0f       	add	r24, r30
    1222:	9f 1f       	adc	r25, r31
    1224:	08 95       	ret

00001226 <fputc>:
    1226:	0f 93       	push	r16
    1228:	1f 93       	push	r17
    122a:	cf 93       	push	r28
    122c:	df 93       	push	r29
    122e:	18 2f       	mov	r17, r24
    1230:	09 2f       	mov	r16, r25
    1232:	eb 01       	movw	r28, r22
    1234:	8b 81       	ldd	r24, Y+3	; 0x03
    1236:	81 fd       	sbrc	r24, 1
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <fputc+0x1a>
    123a:	8f ef       	ldi	r24, 0xFF	; 255
    123c:	9f ef       	ldi	r25, 0xFF	; 255
    123e:	20 c0       	rjmp	.+64     	; 0x1280 <fputc+0x5a>
    1240:	82 ff       	sbrs	r24, 2
    1242:	10 c0       	rjmp	.+32     	; 0x1264 <fputc+0x3e>
    1244:	4e 81       	ldd	r20, Y+6	; 0x06
    1246:	5f 81       	ldd	r21, Y+7	; 0x07
    1248:	2c 81       	ldd	r18, Y+4	; 0x04
    124a:	3d 81       	ldd	r19, Y+5	; 0x05
    124c:	42 17       	cp	r20, r18
    124e:	53 07       	cpc	r21, r19
    1250:	7c f4       	brge	.+30     	; 0x1270 <fputc+0x4a>
    1252:	e8 81       	ld	r30, Y
    1254:	f9 81       	ldd	r31, Y+1	; 0x01
    1256:	9f 01       	movw	r18, r30
    1258:	2f 5f       	subi	r18, 0xFF	; 255
    125a:	3f 4f       	sbci	r19, 0xFF	; 255
    125c:	39 83       	std	Y+1, r19	; 0x01
    125e:	28 83       	st	Y, r18
    1260:	10 83       	st	Z, r17
    1262:	06 c0       	rjmp	.+12     	; 0x1270 <fputc+0x4a>
    1264:	e8 85       	ldd	r30, Y+8	; 0x08
    1266:	f9 85       	ldd	r31, Y+9	; 0x09
    1268:	81 2f       	mov	r24, r17
    126a:	19 95       	eicall
    126c:	89 2b       	or	r24, r25
    126e:	29 f7       	brne	.-54     	; 0x123a <fputc+0x14>
    1270:	2e 81       	ldd	r18, Y+6	; 0x06
    1272:	3f 81       	ldd	r19, Y+7	; 0x07
    1274:	2f 5f       	subi	r18, 0xFF	; 255
    1276:	3f 4f       	sbci	r19, 0xFF	; 255
    1278:	3f 83       	std	Y+7, r19	; 0x07
    127a:	2e 83       	std	Y+6, r18	; 0x06
    127c:	81 2f       	mov	r24, r17
    127e:	90 2f       	mov	r25, r16
    1280:	df 91       	pop	r29
    1282:	cf 91       	pop	r28
    1284:	1f 91       	pop	r17
    1286:	0f 91       	pop	r16
    1288:	08 95       	ret

0000128a <__ultoa_invert>:
    128a:	fa 01       	movw	r30, r20
    128c:	aa 27       	eor	r26, r26
    128e:	28 30       	cpi	r18, 0x08	; 8
    1290:	51 f1       	breq	.+84     	; 0x12e6 <__ultoa_invert+0x5c>
    1292:	20 31       	cpi	r18, 0x10	; 16
    1294:	81 f1       	breq	.+96     	; 0x12f6 <__ultoa_invert+0x6c>
    1296:	e8 94       	clt
    1298:	6f 93       	push	r22
    129a:	6e 7f       	andi	r22, 0xFE	; 254
    129c:	6e 5f       	subi	r22, 0xFE	; 254
    129e:	7f 4f       	sbci	r23, 0xFF	; 255
    12a0:	8f 4f       	sbci	r24, 0xFF	; 255
    12a2:	9f 4f       	sbci	r25, 0xFF	; 255
    12a4:	af 4f       	sbci	r26, 0xFF	; 255
    12a6:	b1 e0       	ldi	r27, 0x01	; 1
    12a8:	3e d0       	rcall	.+124    	; 0x1326 <__ultoa_invert+0x9c>
    12aa:	b4 e0       	ldi	r27, 0x04	; 4
    12ac:	3c d0       	rcall	.+120    	; 0x1326 <__ultoa_invert+0x9c>
    12ae:	67 0f       	add	r22, r23
    12b0:	78 1f       	adc	r23, r24
    12b2:	89 1f       	adc	r24, r25
    12b4:	9a 1f       	adc	r25, r26
    12b6:	a1 1d       	adc	r26, r1
    12b8:	68 0f       	add	r22, r24
    12ba:	79 1f       	adc	r23, r25
    12bc:	8a 1f       	adc	r24, r26
    12be:	91 1d       	adc	r25, r1
    12c0:	a1 1d       	adc	r26, r1
    12c2:	6a 0f       	add	r22, r26
    12c4:	71 1d       	adc	r23, r1
    12c6:	81 1d       	adc	r24, r1
    12c8:	91 1d       	adc	r25, r1
    12ca:	a1 1d       	adc	r26, r1
    12cc:	20 d0       	rcall	.+64     	; 0x130e <__ultoa_invert+0x84>
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <__ultoa_invert+0x48>
    12d0:	68 94       	set
    12d2:	3f 91       	pop	r19
    12d4:	2a e0       	ldi	r18, 0x0A	; 10
    12d6:	26 9f       	mul	r18, r22
    12d8:	11 24       	eor	r1, r1
    12da:	30 19       	sub	r19, r0
    12dc:	30 5d       	subi	r19, 0xD0	; 208
    12de:	31 93       	st	Z+, r19
    12e0:	de f6       	brtc	.-74     	; 0x1298 <__ultoa_invert+0xe>
    12e2:	cf 01       	movw	r24, r30
    12e4:	08 95       	ret
    12e6:	46 2f       	mov	r20, r22
    12e8:	47 70       	andi	r20, 0x07	; 7
    12ea:	40 5d       	subi	r20, 0xD0	; 208
    12ec:	41 93       	st	Z+, r20
    12ee:	b3 e0       	ldi	r27, 0x03	; 3
    12f0:	0f d0       	rcall	.+30     	; 0x1310 <__ultoa_invert+0x86>
    12f2:	c9 f7       	brne	.-14     	; 0x12e6 <__ultoa_invert+0x5c>
    12f4:	f6 cf       	rjmp	.-20     	; 0x12e2 <__ultoa_invert+0x58>
    12f6:	46 2f       	mov	r20, r22
    12f8:	4f 70       	andi	r20, 0x0F	; 15
    12fa:	40 5d       	subi	r20, 0xD0	; 208
    12fc:	4a 33       	cpi	r20, 0x3A	; 58
    12fe:	18 f0       	brcs	.+6      	; 0x1306 <__ultoa_invert+0x7c>
    1300:	49 5d       	subi	r20, 0xD9	; 217
    1302:	31 fd       	sbrc	r19, 1
    1304:	40 52       	subi	r20, 0x20	; 32
    1306:	41 93       	st	Z+, r20
    1308:	02 d0       	rcall	.+4      	; 0x130e <__ultoa_invert+0x84>
    130a:	a9 f7       	brne	.-22     	; 0x12f6 <__ultoa_invert+0x6c>
    130c:	ea cf       	rjmp	.-44     	; 0x12e2 <__ultoa_invert+0x58>
    130e:	b4 e0       	ldi	r27, 0x04	; 4
    1310:	a6 95       	lsr	r26
    1312:	97 95       	ror	r25
    1314:	87 95       	ror	r24
    1316:	77 95       	ror	r23
    1318:	67 95       	ror	r22
    131a:	ba 95       	dec	r27
    131c:	c9 f7       	brne	.-14     	; 0x1310 <__ultoa_invert+0x86>
    131e:	00 97       	sbiw	r24, 0x00	; 0
    1320:	61 05       	cpc	r22, r1
    1322:	71 05       	cpc	r23, r1
    1324:	08 95       	ret
    1326:	9b 01       	movw	r18, r22
    1328:	ac 01       	movw	r20, r24
    132a:	0a 2e       	mov	r0, r26
    132c:	06 94       	lsr	r0
    132e:	57 95       	ror	r21
    1330:	47 95       	ror	r20
    1332:	37 95       	ror	r19
    1334:	27 95       	ror	r18
    1336:	ba 95       	dec	r27
    1338:	c9 f7       	brne	.-14     	; 0x132c <__ultoa_invert+0xa2>
    133a:	62 0f       	add	r22, r18
    133c:	73 1f       	adc	r23, r19
    133e:	84 1f       	adc	r24, r20
    1340:	95 1f       	adc	r25, r21
    1342:	a0 1d       	adc	r26, r0
    1344:	08 95       	ret

00001346 <_exit>:
    1346:	f8 94       	cli

00001348 <__stop_program>:
    1348:	ff cf       	rjmp	.-2      	; 0x1348 <__stop_program>
