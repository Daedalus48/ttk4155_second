
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c4  00800200  000012be  00001352  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008002c4  008002c4  00001416  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001416  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  00001472  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000140a  00000000  00000000  000015aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000094b  00000000  00000000  000029b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a74  00000000  00000000  000032ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000320  00000000  00000000  00003d74  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000482  00000000  00000000  00004094  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a18  00000000  00000000  00004516  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004f2e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee eb       	ldi	r30, 0xBE	; 190
      fc:	f2 e1       	ldi	r31, 0x12	; 18
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a4 3c       	cpi	r26, 0xC4	; 196
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a4 ec       	ldi	r26, 0xC4	; 196
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ae 3c       	cpi	r26, 0xCE	; 206
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	f3 d0       	rcall	.+486    	; 0x306 <main>
     120:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <can_init>:
		printf("can message send %d", msg->data[i]);
	}
	printf("\n\r");
	mcp2515_request(MCP_RTS_TX0);
	//Do something...
}
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	2a 97       	sbiw	r28, 0x0a	; 10
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
     13a:	5e d1       	rcall	.+700    	; 0x3f8 <mcp2515_init>
     13c:	41 e0       	ldi	r20, 0x01	; 1
     13e:	60 e6       	ldi	r22, 0x60	; 96
     140:	80 e6       	ldi	r24, 0x60	; 96
     142:	7c d1       	rcall	.+760    	; 0x43c <mcp2515_write>
     144:	8f ef       	ldi	r24, 0xFF	; 255
     146:	9f e8       	ldi	r25, 0x8F	; 143
     148:	01 97       	sbiw	r24, 0x01	; 1
     14a:	f1 f7       	brne	.-4      	; 0x148 <can_init+0x22>
     14c:	00 c0       	rjmp	.+0      	; 0x14e <can_init+0x28>
     14e:	00 00       	nop
     150:	41 e0       	ldi	r20, 0x01	; 1
     152:	61 e0       	ldi	r22, 0x01	; 1
     154:	8b e2       	ldi	r24, 0x2B	; 43
     156:	88 d1       	rcall	.+784    	; 0x468 <mcp2515_bit_modify>
     158:	8f ef       	ldi	r24, 0xFF	; 255
     15a:	9f e8       	ldi	r25, 0x8F	; 143
     15c:	01 97       	sbiw	r24, 0x01	; 1
     15e:	f1 f7       	brne	.-4      	; 0x15c <can_init+0x36>
     160:	00 c0       	rjmp	.+0      	; 0x162 <can_init+0x3c>
     162:	00 00       	nop
     164:	40 e0       	ldi	r20, 0x00	; 0
     166:	60 ee       	ldi	r22, 0xE0	; 224
     168:	8f e0       	ldi	r24, 0x0F	; 15
     16a:	7e d1       	rcall	.+764    	; 0x468 <mcp2515_bit_modify>
     16c:	8f ef       	ldi	r24, 0xFF	; 255
     16e:	9f e8       	ldi	r25, 0x8F	; 143
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <can_init+0x4a>
     174:	00 c0       	rjmp	.+0      	; 0x176 <can_init+0x50>
     176:	00 00       	nop
     178:	4a e0       	ldi	r20, 0x0A	; 10
     17a:	be 01       	movw	r22, r28
     17c:	6f 5f       	subi	r22, 0xFF	; 255
     17e:	7f 4f       	sbci	r23, 0xFF	; 255
     180:	8e e0       	ldi	r24, 0x0E	; 14
     182:	3d d1       	rcall	.+634    	; 0x3fe <mcp2515_read>
     184:	89 81       	ldd	r24, Y+1	; 0x01
     186:	80 7e       	andi	r24, 0xE0	; 224
     188:	99 f0       	breq	.+38     	; 0x1b0 <can_init+0x8a>
     18a:	1f 92       	push	r1
     18c:	8f 93       	push	r24
     18e:	86 e0       	ldi	r24, 0x06	; 6
     190:	92 e0       	ldi	r25, 0x02	; 2
     192:	9f 93       	push	r25
     194:	8f 93       	push	r24
     196:	77 d4       	rcall	.+2286   	; 0xa86 <printf>
     198:	85 eb       	ldi	r24, 0xB5	; 181
     19a:	92 e0       	ldi	r25, 0x02	; 2
     19c:	9f 93       	push	r25
     19e:	8f 93       	push	r24
     1a0:	72 d4       	rcall	.+2276   	; 0xa86 <printf>
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	0f 90       	pop	r0
     1ae:	07 c0       	rjmp	.+14     	; 0x1be <can_init+0x98>
     1b0:	8a e4       	ldi	r24, 0x4A	; 74
     1b2:	92 e0       	ldi	r25, 0x02	; 2
     1b4:	9f 93       	push	r25
     1b6:	8f 93       	push	r24
     1b8:	66 d4       	rcall	.+2252   	; 0xa86 <printf>
     1ba:	0f 90       	pop	r0
     1bc:	0f 90       	pop	r0
     1be:	2a 96       	adiw	r28, 0x0a	; 10
     1c0:	0f b6       	in	r0, 0x3f	; 63
     1c2:	f8 94       	cli
     1c4:	de bf       	out	0x3e, r29	; 62
     1c6:	0f be       	out	0x3f, r0	; 63
     1c8:	cd bf       	out	0x3d, r28	; 61
     1ca:	df 91       	pop	r29
     1cc:	cf 91       	pop	r28
     1ce:	08 95       	ret

000001d0 <can_data_receive>:
{
	
}
*/
void can_data_receive(struct can_message* msg, int buffer)
{
     1d0:	ff 92       	push	r15
     1d2:	0f 93       	push	r16
     1d4:	1f 93       	push	r17
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
     1de:	2a 97       	sbiw	r28, 0x0a	; 10
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	8c 01       	movw	r16, r24
     1ec:	f6 2e       	mov	r15, r22
	uint8_t result[MAX_CAN_LENGTH];
	
		
	mcp2515_read(MCP_CANINTF, result, 1);
     1ee:	41 e0       	ldi	r20, 0x01	; 1
     1f0:	be 01       	movw	r22, r28
     1f2:	6f 5f       	subi	r22, 0xFF	; 255
     1f4:	7f 4f       	sbci	r23, 0xFF	; 255
     1f6:	8c e2       	ldi	r24, 0x2C	; 44
     1f8:	02 d1       	rcall	.+516    	; 0x3fe <mcp2515_read>

	if (!result[0]){
     1fa:	89 81       	ldd	r24, Y+1	; 0x01
     1fc:	81 11       	cpse	r24, r1
     1fe:	0b c0       	rjmp	.+22     	; 0x216 <can_data_receive+0x46>
		printf("CANINTF out %d \n\r", result[0] & 0b1);
     200:	1f 92       	push	r1
     202:	1f 92       	push	r1
     204:	20 e7       	ldi	r18, 0x70	; 112
     206:	32 e0       	ldi	r19, 0x02	; 2
     208:	3f 93       	push	r19
     20a:	2f 93       	push	r18
     20c:	3c d4       	rcall	.+2168   	; 0xa86 <printf>
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	0f 90       	pop	r0
     214:	0f 90       	pop	r0
	}
	
	uint8_t i;
	
	mcp2515_read(MCP_RXB0DLC + buffer, result, 1);
     216:	41 e0       	ldi	r20, 0x01	; 1
     218:	be 01       	movw	r22, r28
     21a:	6f 5f       	subi	r22, 0xFF	; 255
     21c:	7f 4f       	sbci	r23, 0xFF	; 255
     21e:	85 e6       	ldi	r24, 0x65	; 101
     220:	8f 0d       	add	r24, r15
     222:	ed d0       	rcall	.+474    	; 0x3fe <mcp2515_read>
	msg->length = result[0];
     224:	89 81       	ldd	r24, Y+1	; 0x01
     226:	f8 01       	movw	r30, r16
     228:	82 83       	std	Z+2, r24	; 0x02
	
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
     22a:	41 e0       	ldi	r20, 0x01	; 1
     22c:	be 01       	movw	r22, r28
     22e:	6f 5f       	subi	r22, 0xFF	; 255
     230:	7f 4f       	sbci	r23, 0xFF	; 255
     232:	81 e6       	ldi	r24, 0x61	; 97
     234:	8f 0d       	add	r24, r15
     236:	e3 d0       	rcall	.+454    	; 0x3fe <mcp2515_read>
	msg->id = result[0];
     238:	29 81       	ldd	r18, Y+1	; 0x01
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	f8 01       	movw	r30, r16
     23e:	31 83       	std	Z+1, r19	; 0x01
     240:	20 83       	st	Z, r18
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
     242:	42 81       	ldd	r20, Z+2	; 0x02
     244:	be 01       	movw	r22, r28
     246:	6f 5f       	subi	r22, 0xFF	; 255
     248:	7f 4f       	sbci	r23, 0xFF	; 255
     24a:	86 e6       	ldi	r24, 0x66	; 102
     24c:	8f 0d       	add	r24, r15
     24e:	d7 d0       	rcall	.+430    	; 0x3fe <mcp2515_read>
	
	for (i = 0; i < msg->length; i++)
     250:	f8 01       	movw	r30, r16
     252:	92 81       	ldd	r25, Z+2	; 0x02
     254:	99 23       	and	r25, r25
     256:	61 f0       	breq	.+24     	; 0x270 <can_data_receive+0xa0>
     258:	9e 01       	movw	r18, r28
     25a:	2f 5f       	subi	r18, 0xFF	; 255
     25c:	3f 4f       	sbci	r19, 0xFF	; 255
     25e:	d8 01       	movw	r26, r16
     260:	13 96       	adiw	r26, 0x03	; 3
     262:	f9 01       	movw	r30, r18
	{
		msg->data[i] = result[i];
     264:	81 91       	ld	r24, Z+
     266:	8d 93       	st	X+, r24
     268:	8e 2f       	mov	r24, r30
     26a:	82 1b       	sub	r24, r18
	mcp2515_read(MCP_RXB0SIDH + buffer, result, 1);
	msg->id = result[0];
	
	mcp2515_read(MCP_RXB0D(0) + buffer, result, msg->length);
	
	for (i = 0; i < msg->length; i++)
     26c:	89 17       	cp	r24, r25
     26e:	d0 f3       	brcs	.-12     	; 0x264 <can_data_receive+0x94>
		msg->data[i] = result[i];
		//printf("can messsage received %c", msg->data[i]);
	}
	//printf("\n\r");
	
	mcp2515_bit_modify(MCP_CANINTF, 0x01, 0x00);
     270:	40 e0       	ldi	r20, 0x00	; 0
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	8c e2       	ldi	r24, 0x2C	; 44
     276:	f8 d0       	rcall	.+496    	; 0x468 <mcp2515_bit_modify>
}
     278:	2a 96       	adiw	r28, 0x0a	; 10
     27a:	0f b6       	in	r0, 0x3f	; 63
     27c:	f8 94       	cli
     27e:	de bf       	out	0x3e, r29	; 62
     280:	0f be       	out	0x3f, r0	; 63
     282:	cd bf       	out	0x3d, r28	; 61
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	1f 91       	pop	r17
     28a:	0f 91       	pop	r16
     28c:	ff 90       	pop	r15
     28e:	08 95       	ret

00000290 <can_get_message>:

int can_get_message(struct can_message* message)
{
     290:	0f 93       	push	r16
     292:	1f 93       	push	r17
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62
     29c:	2a 97       	sbiw	r28, 0x0a	; 10
     29e:	0f b6       	in	r0, 0x3f	; 63
     2a0:	f8 94       	cli
     2a2:	de bf       	out	0x3e, r29	; 62
     2a4:	0f be       	out	0x3f, r0	; 63
     2a6:	cd bf       	out	0x3d, r28	; 61
     2a8:	8c 01       	movw	r16, r24
	uint8_t result[MAX_CAN_LENGTH];
	mcp2515_read(MCP_CANINTF, result, 1);
     2aa:	41 e0       	ldi	r20, 0x01	; 1
     2ac:	be 01       	movw	r22, r28
     2ae:	6f 5f       	subi	r22, 0xFF	; 255
     2b0:	7f 4f       	sbci	r23, 0xFF	; 255
     2b2:	8c e2       	ldi	r24, 0x2C	; 44
     2b4:	a4 d0       	rcall	.+328    	; 0x3fe <mcp2515_read>

	
	if ((result[0] & 0x01) == 0x01)
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	80 ff       	sbrs	r24, 0
     2ba:	0b c0       	rjmp	.+22     	; 0x2d2 <can_get_message+0x42>
	{
		can_data_receive(message,0);
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	c8 01       	movw	r24, r16
     2c2:	86 df       	rcall	.-244    	; 0x1d0 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x01,0x00);
     2c4:	40 e0       	ldi	r20, 0x00	; 0
     2c6:	61 e0       	ldi	r22, 0x01	; 1
     2c8:	8c e2       	ldi	r24, 0x2C	; 44
     2ca:	ce d0       	rcall	.+412    	; 0x468 <mcp2515_bit_modify>
		return 1;
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	0f c0       	rjmp	.+30     	; 0x2f0 <can_get_message+0x60>
	}
	else if ((result[0] & 0x02) == 0x02)
     2d2:	81 ff       	sbrs	r24, 1
     2d4:	0b c0       	rjmp	.+22     	; 0x2ec <can_get_message+0x5c>
	{
		can_data_receive(message,1);
     2d6:	61 e0       	ldi	r22, 0x01	; 1
     2d8:	70 e0       	ldi	r23, 0x00	; 0
     2da:	c8 01       	movw	r24, r16
     2dc:	79 df       	rcall	.-270    	; 0x1d0 <can_data_receive>
		mcp2515_bit_modify(MCP_CANINTF,0x02,0x00);
     2de:	40 e0       	ldi	r20, 0x00	; 0
     2e0:	62 e0       	ldi	r22, 0x02	; 2
     2e2:	8c e2       	ldi	r24, 0x2C	; 44
     2e4:	c1 d0       	rcall	.+386    	; 0x468 <mcp2515_bit_modify>
		return 1;
     2e6:	81 e0       	ldi	r24, 0x01	; 1
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <can_get_message+0x60>
	}
	else
	{
		return 0;
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     2f0:	2a 96       	adiw	r28, 0x0a	; 10
     2f2:	0f b6       	in	r0, 0x3f	; 63
     2f4:	f8 94       	cli
     2f6:	de bf       	out	0x3e, r29	; 62
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	cd bf       	out	0x3d, r28	; 61
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	1f 91       	pop	r17
     302:	0f 91       	pop	r16
     304:	08 95       	ret

00000306 <main>:
#include "can_controller.h"
#include "spi.h"
#include "pwm.h"


int main(void){
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
     30a:	cd b7       	in	r28, 0x3d	; 61
     30c:	de b7       	in	r29, 0x3e	; 62
     30e:	2d 97       	sbiw	r28, 0x0d	; 13
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	f8 94       	cli
     314:	de bf       	out	0x3e, r29	; 62
     316:	0f be       	out	0x3f, r0	; 63
     318:	cd bf       	out	0x3d, r28	; 61
	
	USART_Init(MYUBRR);
     31a:	87 e6       	ldi	r24, 0x67	; 103
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	a3 d1       	rcall	.+838    	; 0x666 <USART_Init>
	printf("start \n\r \n");
     320:	82 e8       	ldi	r24, 0x82	; 130
     322:	92 e0       	ldi	r25, 0x02	; 2
     324:	c1 d3       	rcall	.+1922   	; 0xaa8 <puts>
	
	can_init();
     326:	ff de       	rcall	.-514    	; 0x126 <can_init>
	message.length = 1;
	message.data[0] = (uint8_t) 'c';
	
	
	struct can_message message2;
	message2.id = 3;
     328:	83 e0       	ldi	r24, 0x03	; 3
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	9a 83       	std	Y+2, r25	; 0x02
     32e:	89 83       	std	Y+1, r24	; 0x01
	message2.length = 1;
     330:	81 e0       	ldi	r24, 0x01	; 1
     332:	8b 83       	std	Y+3, r24	; 0x03
	printf("In the main received %c \n\r \n\r", message2.data[0]);
	*/
	int i = 4;
	char joy_equivalence[5][40] = {"Left", "Right", "Up", "Down", "Neutral"};
	
	pwm_init();	
     334:	c3 d0       	rcall	.+390    	; 0x4bc <pwm_init>
	pwm_set_pulse_width(900);	
     336:	60 e0       	ldi	r22, 0x00	; 0
     338:	70 e0       	ldi	r23, 0x00	; 0
     33a:	81 e6       	ldi	r24, 0x61	; 97
     33c:	94 e4       	ldi	r25, 0x44	; 68
     33e:	ea d0       	rcall	.+468    	; 0x514 <pwm_set_pulse_width>
	int pw = 1600;
     340:	00 e4       	ldi	r16, 0x40	; 64
     342:	16 e0       	ldi	r17, 0x06	; 6

    while(1)
    {
		if(can_get_message(&message2)){
			
			printf("Atmega2560 received a new message %d \n \r \n\r", message2.data[0]);
     344:	0f 2e       	mov	r0, r31
     346:	fc e8       	ldi	r31, 0x8C	; 140
     348:	ef 2e       	mov	r14, r31
     34a:	f2 e0       	ldi	r31, 0x02	; 2
     34c:	ff 2e       	mov	r15, r31
     34e:	f0 2d       	mov	r31, r0
			
			if (message2.data[0]==0){pw = 2100;}
     350:	0f 2e       	mov	r0, r31
     352:	f4 e3       	ldi	r31, 0x34	; 52
     354:	cf 2e       	mov	r12, r31
     356:	f0 2d       	mov	r31, r0
     358:	68 94       	set
     35a:	dd 24       	eor	r13, r13
     35c:	d3 f8       	bld	r13, 3
			else if (message2.data[0]==1){pw = 900;}
     35e:	0f 2e       	mov	r0, r31
     360:	f4 e8       	ldi	r31, 0x84	; 132
     362:	af 2e       	mov	r10, r31
     364:	f0 2d       	mov	r31, r0
     366:	0f 2e       	mov	r0, r31
     368:	f3 e0       	ldi	r31, 0x03	; 3
     36a:	bf 2e       	mov	r11, r31
     36c:	f0 2d       	mov	r31, r0
			else if (message2.data[0]==4){pw=1600;}
     36e:	68 94       	set
     370:	88 24       	eor	r8, r8
     372:	86 f8       	bld	r8, 6
     374:	0f 2e       	mov	r0, r31
     376:	f6 e0       	ldi	r31, 0x06	; 6
     378:	9f 2e       	mov	r9, r31
     37a:	f0 2d       	mov	r31, r0
	pwm_set_pulse_width(900);	
	int pw = 1600;

    while(1)
    {
		if(can_get_message(&message2)){
     37c:	ce 01       	movw	r24, r28
     37e:	01 96       	adiw	r24, 0x01	; 1
     380:	87 df       	rcall	.-242    	; 0x290 <can_get_message>
     382:	89 2b       	or	r24, r25
     384:	09 f1       	breq	.+66     	; 0x3c8 <main+0xc2>
			
			printf("Atmega2560 received a new message %d \n \r \n\r", message2.data[0]);
     386:	8c 81       	ldd	r24, Y+4	; 0x04
     388:	1f 92       	push	r1
     38a:	8f 93       	push	r24
     38c:	ff 92       	push	r15
     38e:	ef 92       	push	r14
     390:	7a d3       	rcall	.+1780   	; 0xa86 <printf>
			
			if (message2.data[0]==0){pw = 2100;}
     392:	8c 81       	ldd	r24, Y+4	; 0x04
     394:	0f 90       	pop	r0
     396:	0f 90       	pop	r0
     398:	0f 90       	pop	r0
     39a:	0f 90       	pop	r0
     39c:	88 23       	and	r24, r24
     39e:	29 f0       	breq	.+10     	; 0x3aa <main+0xa4>
			else if (message2.data[0]==1){pw = 900;}
     3a0:	81 30       	cpi	r24, 0x01	; 1
     3a2:	31 f0       	breq	.+12     	; 0x3b0 <main+0xaa>
			else if (message2.data[0]==4){pw=1600;}
     3a4:	84 30       	cpi	r24, 0x04	; 4
     3a6:	49 f4       	brne	.+18     	; 0x3ba <main+0xb4>
     3a8:	06 c0       	rjmp	.+12     	; 0x3b6 <main+0xb0>
    {
		if(can_get_message(&message2)){
			
			printf("Atmega2560 received a new message %d \n \r \n\r", message2.data[0]);
			
			if (message2.data[0]==0){pw = 2100;}
     3aa:	0c 2d       	mov	r16, r12
     3ac:	1d 2d       	mov	r17, r13
     3ae:	05 c0       	rjmp	.+10     	; 0x3ba <main+0xb4>
			else if (message2.data[0]==1){pw = 900;}
     3b0:	0a 2d       	mov	r16, r10
     3b2:	1b 2d       	mov	r17, r11
     3b4:	02 c0       	rjmp	.+4      	; 0x3ba <main+0xb4>
			else if (message2.data[0]==4){pw=1600;}
     3b6:	08 2d       	mov	r16, r8
     3b8:	19 2d       	mov	r17, r9
			
			pwm_set_pulse_width(pw);
     3ba:	b8 01       	movw	r22, r16
     3bc:	88 27       	eor	r24, r24
     3be:	77 fd       	sbrc	r23, 7
     3c0:	80 95       	com	r24
     3c2:	98 2f       	mov	r25, r24
     3c4:	ff d1       	rcall	.+1022   	; 0x7c4 <__floatsisf>
     3c6:	a6 d0       	rcall	.+332    	; 0x514 <pwm_set_pulse_width>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c8:	83 ed       	ldi	r24, 0xD3	; 211
     3ca:	90 e3       	ldi	r25, 0x30	; 48
     3cc:	01 97       	sbiw	r24, 0x01	; 1
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <main+0xc6>
     3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <main+0xcc>
     3d2:	00 00       	nop
     3d4:	d3 cf       	rjmp	.-90     	; 0x37c <main+0x76>

000003d6 <mcp2515_reset>:
		
	uint8_t cmd[] = {rqs};
	spi_write(cmd, 1);		
	
	PORTB |= (1<<PB7); // Deselect CAN-controller
}
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	1f 92       	push	r1
     3dc:	cd b7       	in	r28, 0x3d	; 61
     3de:	de b7       	in	r29, 0x3e	; 62
     3e0:	2f 98       	cbi	0x05, 7	; 5
     3e2:	80 ec       	ldi	r24, 0xC0	; 192
     3e4:	89 83       	std	Y+1, r24	; 0x01
     3e6:	61 e0       	ldi	r22, 0x01	; 1
     3e8:	ce 01       	movw	r24, r28
     3ea:	01 96       	adiw	r24, 0x01	; 1
     3ec:	18 d1       	rcall	.+560    	; 0x61e <spi_write>
     3ee:	2f 9a       	sbi	0x05, 7	; 5
     3f0:	0f 90       	pop	r0
     3f2:	df 91       	pop	r29
     3f4:	cf 91       	pop	r28
     3f6:	08 95       	ret

000003f8 <mcp2515_init>:
     3f8:	e3 d0       	rcall	.+454    	; 0x5c0 <spi_init>
     3fa:	ed cf       	rjmp	.-38     	; 0x3d6 <mcp2515_reset>
     3fc:	08 95       	ret

000003fe <mcp2515_read>:
     3fe:	ff 92       	push	r15
     400:	0f 93       	push	r16
     402:	1f 93       	push	r17
     404:	cf 93       	push	r28
     406:	df 93       	push	r29
     408:	1f 92       	push	r1
     40a:	1f 92       	push	r1
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
     410:	8b 01       	movw	r16, r22
     412:	f4 2e       	mov	r15, r20
     414:	2f 98       	cbi	0x05, 7	; 5
     416:	93 e0       	ldi	r25, 0x03	; 3
     418:	99 83       	std	Y+1, r25	; 0x01
     41a:	8a 83       	std	Y+2, r24	; 0x02
     41c:	62 e0       	ldi	r22, 0x02	; 2
     41e:	ce 01       	movw	r24, r28
     420:	01 96       	adiw	r24, 0x01	; 1
     422:	fd d0       	rcall	.+506    	; 0x61e <spi_write>
     424:	6f 2d       	mov	r22, r15
     426:	c8 01       	movw	r24, r16
     428:	d4 d0       	rcall	.+424    	; 0x5d2 <spi_read>
     42a:	2f 9a       	sbi	0x05, 7	; 5
     42c:	0f 90       	pop	r0
     42e:	0f 90       	pop	r0
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	1f 91       	pop	r17
     436:	0f 91       	pop	r16
     438:	ff 90       	pop	r15
     43a:	08 95       	ret

0000043c <mcp2515_write>:
     43c:	cf 93       	push	r28
     43e:	df 93       	push	r29
     440:	00 d0       	rcall	.+0      	; 0x442 <mcp2515_write+0x6>
     442:	cd b7       	in	r28, 0x3d	; 61
     444:	de b7       	in	r29, 0x3e	; 62
     446:	2f 98       	cbi	0x05, 7	; 5
     448:	92 e0       	ldi	r25, 0x02	; 2
     44a:	99 83       	std	Y+1, r25	; 0x01
     44c:	8a 83       	std	Y+2, r24	; 0x02
     44e:	6b 83       	std	Y+3, r22	; 0x03
     450:	62 e0       	ldi	r22, 0x02	; 2
     452:	64 0f       	add	r22, r20
     454:	ce 01       	movw	r24, r28
     456:	01 96       	adiw	r24, 0x01	; 1
     458:	e2 d0       	rcall	.+452    	; 0x61e <spi_write>
     45a:	2f 9a       	sbi	0x05, 7	; 5
     45c:	0f 90       	pop	r0
     45e:	0f 90       	pop	r0
     460:	0f 90       	pop	r0
     462:	df 91       	pop	r29
     464:	cf 91       	pop	r28
     466:	08 95       	ret

00000468 <mcp2515_bit_modify>:

// Modify bits in the register / See datasheet 12.10
void mcp2515_bit_modify(uint8_t address, uint8_t mask, uint8_t data) 
{
     468:	cf 93       	push	r28
     46a:	df 93       	push	r29
     46c:	00 d0       	rcall	.+0      	; 0x46e <mcp2515_bit_modify+0x6>
     46e:	1f 92       	push	r1
     470:	cd b7       	in	r28, 0x3d	; 61
     472:	de b7       	in	r29, 0x3e	; 62
	PORTB &= ~(1<<PB7); // Select CAN-controller
     474:	2f 98       	cbi	0x05, 7	; 5
	//SPSR &= ~(1 << SPIF);	

	uint8_t bit_list[] = {MCP_BITMOD, address, mask, data};
     476:	95 e0       	ldi	r25, 0x05	; 5
     478:	99 83       	std	Y+1, r25	; 0x01
     47a:	8a 83       	std	Y+2, r24	; 0x02
     47c:	6b 83       	std	Y+3, r22	; 0x03
     47e:	4c 83       	std	Y+4, r20	; 0x04
	spi_write(bit_list, 4);	
     480:	64 e0       	ldi	r22, 0x04	; 4
     482:	ce 01       	movw	r24, r28
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	cb d0       	rcall	.+406    	; 0x61e <spi_write>
	
	PORTB |= (1<<PB7); //Deselect CAN-controller
     488:	2f 9a       	sbi	0x05, 7	; 5

}
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	0f 90       	pop	r0
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	08 95       	ret

00000498 <pwm_set_signal_period>:
     498:	e1 e8       	ldi	r30, 0x81	; 129
     49a:	f0 e0       	ldi	r31, 0x00	; 0
     49c:	80 81       	ld	r24, Z
     49e:	82 60       	ori	r24, 0x02	; 2
     4a0:	80 83       	st	Z, r24
     4a2:	80 81       	ld	r24, Z
     4a4:	8b 7f       	andi	r24, 0xFB	; 251
     4a6:	80 83       	st	Z, r24
     4a8:	80 81       	ld	r24, Z
     4aa:	8e 7f       	andi	r24, 0xFE	; 254
     4ac:	80 83       	st	Z, r24
     4ae:	80 e4       	ldi	r24, 0x40	; 64
     4b0:	9c e9       	ldi	r25, 0x9C	; 156
     4b2:	90 93 87 00 	sts	0x0087, r25
     4b6:	80 93 86 00 	sts	0x0086, r24
     4ba:	08 95       	ret

000004bc <pwm_init>:
     4bc:	e1 e8       	ldi	r30, 0x81	; 129
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	80 81       	ld	r24, Z
     4c2:	80 61       	ori	r24, 0x10	; 16
     4c4:	80 83       	st	Z, r24
     4c6:	80 81       	ld	r24, Z
     4c8:	88 60       	ori	r24, 0x08	; 8
     4ca:	80 83       	st	Z, r24
     4cc:	e0 e8       	ldi	r30, 0x80	; 128
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	80 81       	ld	r24, Z
     4d2:	82 60       	ori	r24, 0x02	; 2
     4d4:	80 83       	st	Z, r24
     4d6:	80 81       	ld	r24, Z
     4d8:	8e 7f       	andi	r24, 0xFE	; 254
     4da:	80 83       	st	Z, r24
     4dc:	80 81       	ld	r24, Z
     4de:	80 68       	ori	r24, 0x80	; 128
     4e0:	80 83       	st	Z, r24
     4e2:	80 81       	ld	r24, Z
     4e4:	8f 7b       	andi	r24, 0xBF	; 191
     4e6:	80 83       	st	Z, r24
     4e8:	d7 df       	rcall	.-82     	; 0x498 <pwm_set_signal_period>
     4ea:	25 9a       	sbi	0x04, 5	; 4
     4ec:	e8 e8       	ldi	r30, 0x88	; 136
     4ee:	f0 e0       	ldi	r31, 0x00	; 0
     4f0:	88 eb       	ldi	r24, 0xB8	; 184
     4f2:	9b e0       	ldi	r25, 0x0B	; 11
     4f4:	91 83       	std	Z+1, r25	; 0x01
     4f6:	80 83       	st	Z, r24
     4f8:	80 81       	ld	r24, Z
     4fa:	91 81       	ldd	r25, Z+1	; 0x01
     4fc:	9f 93       	push	r25
     4fe:	8f 93       	push	r24
     500:	88 eb       	ldi	r24, 0xB8	; 184
     502:	92 e0       	ldi	r25, 0x02	; 2
     504:	9f 93       	push	r25
     506:	8f 93       	push	r24
     508:	be d2       	rcall	.+1404   	; 0xa86 <printf>
     50a:	0f 90       	pop	r0
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	0f 90       	pop	r0
     512:	08 95       	ret

00000514 <pwm_set_pulse_width>:
     514:	cf 92       	push	r12
     516:	df 92       	push	r13
     518:	ef 92       	push	r14
     51a:	ff 92       	push	r15
     51c:	6b 01       	movw	r12, r22
     51e:	7c 01       	movw	r14, r24
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	41 e6       	ldi	r20, 0x61	; 97
     526:	54 e4       	ldi	r21, 0x44	; 68
     528:	ae d0       	rcall	.+348    	; 0x686 <__cmpsf2>
     52a:	88 23       	and	r24, r24
     52c:	54 f0       	brlt	.+20     	; 0x542 <pwm_set_pulse_width+0x2e>
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e4       	ldi	r19, 0x40	; 64
     532:	43 e0       	ldi	r20, 0x03	; 3
     534:	55 e4       	ldi	r21, 0x45	; 69
     536:	c7 01       	movw	r24, r14
     538:	b6 01       	movw	r22, r12
     53a:	f4 d1       	rcall	.+1000   	; 0x924 <__gesf2>
     53c:	18 16       	cp	r1, r24
     53e:	54 f0       	brlt	.+20     	; 0x554 <pwm_set_pulse_width+0x40>
     540:	12 c0       	rjmp	.+36     	; 0x566 <pwm_set_pulse_width+0x52>
     542:	0f 2e       	mov	r0, r31
     544:	c1 2c       	mov	r12, r1
     546:	d1 2c       	mov	r13, r1
     548:	f1 e6       	ldi	r31, 0x61	; 97
     54a:	ef 2e       	mov	r14, r31
     54c:	f4 e4       	ldi	r31, 0x44	; 68
     54e:	ff 2e       	mov	r15, r31
     550:	f0 2d       	mov	r31, r0
     552:	09 c0       	rjmp	.+18     	; 0x566 <pwm_set_pulse_width+0x52>
     554:	0f 2e       	mov	r0, r31
     556:	c1 2c       	mov	r12, r1
     558:	f0 e4       	ldi	r31, 0x40	; 64
     55a:	df 2e       	mov	r13, r31
     55c:	f3 e0       	ldi	r31, 0x03	; 3
     55e:	ef 2e       	mov	r14, r31
     560:	f5 e4       	ldi	r31, 0x45	; 69
     562:	ff 2e       	mov	r15, r31
     564:	f0 2d       	mov	r31, r0
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e4       	ldi	r19, 0x40	; 64
     56a:	4c e9       	ldi	r20, 0x9C	; 156
     56c:	56 e4       	ldi	r21, 0x46	; 70
     56e:	c7 01       	movw	r24, r14
     570:	b6 01       	movw	r22, r12
     572:	8d d0       	rcall	.+282    	; 0x68e <__divsf3>
     574:	20 e0       	ldi	r18, 0x00	; 0
     576:	34 e2       	ldi	r19, 0x24	; 36
     578:	44 e7       	ldi	r20, 0x74	; 116
     57a:	5b e4       	ldi	r21, 0x4B	; 75
     57c:	d7 d1       	rcall	.+942    	; 0x92c <__mulsf3>
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	40 e0       	ldi	r20, 0x00	; 0
     584:	5e e3       	ldi	r21, 0x3E	; 62
     586:	d2 d1       	rcall	.+932    	; 0x92c <__mulsf3>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	48 e4       	ldi	r20, 0x48	; 72
     58e:	52 e4       	ldi	r21, 0x42	; 66
     590:	7e d0       	rcall	.+252    	; 0x68e <__divsf3>
     592:	e5 d0       	rcall	.+458    	; 0x75e <__fixsfsi>
     594:	e8 e8       	ldi	r30, 0x88	; 136
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	71 83       	std	Z+1, r23	; 0x01
     59a:	60 83       	st	Z, r22
     59c:	80 81       	ld	r24, Z
     59e:	91 81       	ldd	r25, Z+1	; 0x01
     5a0:	9f 93       	push	r25
     5a2:	8f 93       	push	r24
     5a4:	88 eb       	ldi	r24, 0xB8	; 184
     5a6:	92 e0       	ldi	r25, 0x02	; 2
     5a8:	9f 93       	push	r25
     5aa:	8f 93       	push	r24
     5ac:	6c d2       	rcall	.+1240   	; 0xa86 <printf>
     5ae:	0f 90       	pop	r0
     5b0:	0f 90       	pop	r0
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	ff 90       	pop	r15
     5b8:	ef 90       	pop	r14
     5ba:	df 90       	pop	r13
     5bc:	cf 90       	pop	r12
     5be:	08 95       	ret

000005c0 <spi_init>:
#define MISO_PIN PB3

void spi_init() {

  /* Set MOSI and SCK and CS output, all others input */
  DDRB |= (1 << MOSI_PIN) | (1 << SCK_PIN) | (1 << SS_PIN) | (1 << PB0);
     5c0:	84 b1       	in	r24, 0x04	; 4
     5c2:	87 68       	ori	r24, 0x87	; 135
     5c4:	84 b9       	out	0x04, r24	; 4
  PORTB |= (1 << SS_PIN) | (1 << PB0); // Set Master mode
     5c6:	85 b1       	in	r24, 0x05	; 5
     5c8:	81 68       	ori	r24, 0x81	; 129
     5ca:	85 b9       	out	0x05, r24	; 5
  /* Enable interrupt */
  // SPSR = (1<<SPIF);

  /* Enable SPI interrupt, SPI, Master, set clock rate fck/16 , SPI mode 0 by
   * default*/
  SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     5cc:	81 e5       	ldi	r24, 0x51	; 81
     5ce:	8c bd       	out	0x2c, r24	; 44
     5d0:	08 95       	ret

000005d2 <spi_read>:
}

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	cd b7       	in	r28, 0x3d	; 61
     5d8:	de b7       	in	r29, 0x3e	; 62
     5da:	2a 97       	sbiw	r28, 0x0a	; 10
     5dc:	0f b6       	in	r0, 0x3f	; 63
     5de:	f8 94       	cli
     5e0:	de bf       	out	0x3e, r29	; 62
     5e2:	0f be       	out	0x3f, r0	; 63
     5e4:	cd bf       	out	0x3d, r28	; 61
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     5e6:	66 23       	and	r22, r22
     5e8:	89 f0       	breq	.+34     	; 0x60c <spi_read+0x3a>
     5ea:	fe 01       	movw	r30, r28
     5ec:	31 96       	adiw	r30, 0x01	; 1
     5ee:	a8 2f       	mov	r26, r24
     5f0:	b9 2f       	mov	r27, r25
     5f2:	cf 01       	movw	r24, r30
     5f4:	86 0f       	add	r24, r22
     5f6:	91 1d       	adc	r25, r1
	{
		SPDR = dummy_data[i];
     5f8:	21 91       	ld	r18, Z+
     5fa:	2e bd       	out	0x2e, r18	; 46
		int j = 0;
		while (!(SPSR & (1 << SPIF))){
     5fc:	0d b4       	in	r0, 0x2d	; 45
     5fe:	07 fe       	sbrs	r0, 7
     600:	fd cf       	rjmp	.-6      	; 0x5fc <spi_read+0x2a>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
     602:	2e b5       	in	r18, 0x2e	; 46
     604:	2d 93       	st	X+, r18

void spi_read(uint8_t *receive_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	
	for (int i = 0; i < data_length; i++)
     606:	e8 17       	cp	r30, r24
     608:	f9 07       	cpc	r31, r25
     60a:	b1 f7       	brne	.-20     	; 0x5f8 <spi_read+0x26>
			//printf("I am stuck here %d\n\r ",j++);			
		}
		receive_data[i] = SPDR;
	}
	
}
     60c:	2a 96       	adiw	r28, 0x0a	; 10
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	08 95       	ret

0000061e <spi_write>:

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     61e:	26 2f       	mov	r18, r22
     620:	30 e0       	ldi	r19, 0x00	; 0
     622:	12 16       	cp	r1, r18
     624:	13 06       	cpc	r1, r19
     626:	74 f4       	brge	.+28     	; 0x644 <spi_write+0x26>
     628:	e8 2f       	mov	r30, r24
     62a:	f9 2f       	mov	r31, r25
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	90 e0       	ldi	r25, 0x00	; 0
	{
		SPDR = send_data[i];
     630:	41 91       	ld	r20, Z+
     632:	4e bd       	out	0x2e, r20	; 46
		while (!(SPSR & (1 << SPIF)));
     634:	0d b4       	in	r0, 0x2d	; 45
     636:	07 fe       	sbrs	r0, 7
     638:	fd cf       	rjmp	.-6      	; 0x634 <spi_write+0x16>
		dummy_data[i] = SPDR;
     63a:	4e b5       	in	r20, 0x2e	; 46
}

void spi_write(uint8_t *send_data, uint8_t data_length) 
{
	uint8_t dummy_data[MAX_CAN_LENGTH];
	for (int i = 0; i < data_length; i++)
     63c:	01 96       	adiw	r24, 0x01	; 1
     63e:	82 17       	cp	r24, r18
     640:	93 07       	cpc	r25, r19
     642:	b4 f3       	brlt	.-20     	; 0x630 <spi_write+0x12>
     644:	08 95       	ret

00000646 <USART_Transmit>:
     646:	e0 ec       	ldi	r30, 0xC0	; 192
     648:	f0 e0       	ldi	r31, 0x00	; 0
     64a:	90 81       	ld	r25, Z
     64c:	95 ff       	sbrs	r25, 5
     64e:	fd cf       	rjmp	.-6      	; 0x64a <USART_Transmit+0x4>
     650:	80 93 c6 00 	sts	0x00C6, r24
     654:	08 95       	ret

00000656 <USART_Receive>:
     656:	e0 ec       	ldi	r30, 0xC0	; 192
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	80 81       	ld	r24, Z
     65c:	88 23       	and	r24, r24
     65e:	ec f3       	brlt	.-6      	; 0x65a <USART_Receive+0x4>
     660:	80 91 c6 00 	lds	r24, 0x00C6
     664:	08 95       	ret

00000666 <USART_Init>:
     666:	90 93 c5 00 	sts	0x00C5, r25
     66a:	80 93 c4 00 	sts	0x00C4, r24
     66e:	88 e1       	ldi	r24, 0x18	; 24
     670:	80 93 c1 00 	sts	0x00C1, r24
     674:	8e e0       	ldi	r24, 0x0E	; 14
     676:	80 93 c2 00 	sts	0x00C2, r24
     67a:	6b e2       	ldi	r22, 0x2B	; 43
     67c:	73 e0       	ldi	r23, 0x03	; 3
     67e:	83 e2       	ldi	r24, 0x23	; 35
     680:	93 e0       	ldi	r25, 0x03	; 3
     682:	b7 c1       	rjmp	.+878    	; 0x9f2 <fdevopen>
     684:	08 95       	ret

00000686 <__cmpsf2>:
     686:	d9 d0       	rcall	.+434    	; 0x83a <__fp_cmp>
     688:	08 f4       	brcc	.+2      	; 0x68c <__cmpsf2+0x6>
     68a:	81 e0       	ldi	r24, 0x01	; 1
     68c:	08 95       	ret

0000068e <__divsf3>:
     68e:	0c d0       	rcall	.+24     	; 0x6a8 <__divsf3x>
     690:	0f c1       	rjmp	.+542    	; 0x8b0 <__fp_round>
     692:	07 d1       	rcall	.+526    	; 0x8a2 <__fp_pscB>
     694:	40 f0       	brcs	.+16     	; 0x6a6 <__divsf3+0x18>
     696:	fe d0       	rcall	.+508    	; 0x894 <__fp_pscA>
     698:	30 f0       	brcs	.+12     	; 0x6a6 <__divsf3+0x18>
     69a:	21 f4       	brne	.+8      	; 0x6a4 <__divsf3+0x16>
     69c:	5f 3f       	cpi	r21, 0xFF	; 255
     69e:	19 f0       	breq	.+6      	; 0x6a6 <__divsf3+0x18>
     6a0:	f0 c0       	rjmp	.+480    	; 0x882 <__fp_inf>
     6a2:	51 11       	cpse	r21, r1
     6a4:	39 c1       	rjmp	.+626    	; 0x918 <__fp_szero>
     6a6:	f3 c0       	rjmp	.+486    	; 0x88e <__fp_nan>

000006a8 <__divsf3x>:
     6a8:	14 d1       	rcall	.+552    	; 0x8d2 <__fp_split3>
     6aa:	98 f3       	brcs	.-26     	; 0x692 <__divsf3+0x4>

000006ac <__divsf3_pse>:
     6ac:	99 23       	and	r25, r25
     6ae:	c9 f3       	breq	.-14     	; 0x6a2 <__divsf3+0x14>
     6b0:	55 23       	and	r21, r21
     6b2:	b1 f3       	breq	.-20     	; 0x6a0 <__divsf3+0x12>
     6b4:	95 1b       	sub	r25, r21
     6b6:	55 0b       	sbc	r21, r21
     6b8:	bb 27       	eor	r27, r27
     6ba:	aa 27       	eor	r26, r26
     6bc:	62 17       	cp	r22, r18
     6be:	73 07       	cpc	r23, r19
     6c0:	84 07       	cpc	r24, r20
     6c2:	38 f0       	brcs	.+14     	; 0x6d2 <__divsf3_pse+0x26>
     6c4:	9f 5f       	subi	r25, 0xFF	; 255
     6c6:	5f 4f       	sbci	r21, 0xFF	; 255
     6c8:	22 0f       	add	r18, r18
     6ca:	33 1f       	adc	r19, r19
     6cc:	44 1f       	adc	r20, r20
     6ce:	aa 1f       	adc	r26, r26
     6d0:	a9 f3       	breq	.-22     	; 0x6bc <__divsf3_pse+0x10>
     6d2:	33 d0       	rcall	.+102    	; 0x73a <__divsf3_pse+0x8e>
     6d4:	0e 2e       	mov	r0, r30
     6d6:	3a f0       	brmi	.+14     	; 0x6e6 <__divsf3_pse+0x3a>
     6d8:	e0 e8       	ldi	r30, 0x80	; 128
     6da:	30 d0       	rcall	.+96     	; 0x73c <__divsf3_pse+0x90>
     6dc:	91 50       	subi	r25, 0x01	; 1
     6de:	50 40       	sbci	r21, 0x00	; 0
     6e0:	e6 95       	lsr	r30
     6e2:	00 1c       	adc	r0, r0
     6e4:	ca f7       	brpl	.-14     	; 0x6d8 <__divsf3_pse+0x2c>
     6e6:	29 d0       	rcall	.+82     	; 0x73a <__divsf3_pse+0x8e>
     6e8:	fe 2f       	mov	r31, r30
     6ea:	27 d0       	rcall	.+78     	; 0x73a <__divsf3_pse+0x8e>
     6ec:	66 0f       	add	r22, r22
     6ee:	77 1f       	adc	r23, r23
     6f0:	88 1f       	adc	r24, r24
     6f2:	bb 1f       	adc	r27, r27
     6f4:	26 17       	cp	r18, r22
     6f6:	37 07       	cpc	r19, r23
     6f8:	48 07       	cpc	r20, r24
     6fa:	ab 07       	cpc	r26, r27
     6fc:	b0 e8       	ldi	r27, 0x80	; 128
     6fe:	09 f0       	breq	.+2      	; 0x702 <__divsf3_pse+0x56>
     700:	bb 0b       	sbc	r27, r27
     702:	80 2d       	mov	r24, r0
     704:	bf 01       	movw	r22, r30
     706:	ff 27       	eor	r31, r31
     708:	93 58       	subi	r25, 0x83	; 131
     70a:	5f 4f       	sbci	r21, 0xFF	; 255
     70c:	2a f0       	brmi	.+10     	; 0x718 <__divsf3_pse+0x6c>
     70e:	9e 3f       	cpi	r25, 0xFE	; 254
     710:	51 05       	cpc	r21, r1
     712:	68 f0       	brcs	.+26     	; 0x72e <__divsf3_pse+0x82>
     714:	b6 c0       	rjmp	.+364    	; 0x882 <__fp_inf>
     716:	00 c1       	rjmp	.+512    	; 0x918 <__fp_szero>
     718:	5f 3f       	cpi	r21, 0xFF	; 255
     71a:	ec f3       	brlt	.-6      	; 0x716 <__divsf3_pse+0x6a>
     71c:	98 3e       	cpi	r25, 0xE8	; 232
     71e:	dc f3       	brlt	.-10     	; 0x716 <__divsf3_pse+0x6a>
     720:	86 95       	lsr	r24
     722:	77 95       	ror	r23
     724:	67 95       	ror	r22
     726:	b7 95       	ror	r27
     728:	f7 95       	ror	r31
     72a:	9f 5f       	subi	r25, 0xFF	; 255
     72c:	c9 f7       	brne	.-14     	; 0x720 <__divsf3_pse+0x74>
     72e:	88 0f       	add	r24, r24
     730:	91 1d       	adc	r25, r1
     732:	96 95       	lsr	r25
     734:	87 95       	ror	r24
     736:	97 f9       	bld	r25, 7
     738:	08 95       	ret
     73a:	e1 e0       	ldi	r30, 0x01	; 1
     73c:	66 0f       	add	r22, r22
     73e:	77 1f       	adc	r23, r23
     740:	88 1f       	adc	r24, r24
     742:	bb 1f       	adc	r27, r27
     744:	62 17       	cp	r22, r18
     746:	73 07       	cpc	r23, r19
     748:	84 07       	cpc	r24, r20
     74a:	ba 07       	cpc	r27, r26
     74c:	20 f0       	brcs	.+8      	; 0x756 <__divsf3_pse+0xaa>
     74e:	62 1b       	sub	r22, r18
     750:	73 0b       	sbc	r23, r19
     752:	84 0b       	sbc	r24, r20
     754:	ba 0b       	sbc	r27, r26
     756:	ee 1f       	adc	r30, r30
     758:	88 f7       	brcc	.-30     	; 0x73c <__divsf3_pse+0x90>
     75a:	e0 95       	com	r30
     75c:	08 95       	ret

0000075e <__fixsfsi>:
     75e:	04 d0       	rcall	.+8      	; 0x768 <__fixunssfsi>
     760:	68 94       	set
     762:	b1 11       	cpse	r27, r1
     764:	d9 c0       	rjmp	.+434    	; 0x918 <__fp_szero>
     766:	08 95       	ret

00000768 <__fixunssfsi>:
     768:	bc d0       	rcall	.+376    	; 0x8e2 <__fp_splitA>
     76a:	88 f0       	brcs	.+34     	; 0x78e <__fixunssfsi+0x26>
     76c:	9f 57       	subi	r25, 0x7F	; 127
     76e:	90 f0       	brcs	.+36     	; 0x794 <__fixunssfsi+0x2c>
     770:	b9 2f       	mov	r27, r25
     772:	99 27       	eor	r25, r25
     774:	b7 51       	subi	r27, 0x17	; 23
     776:	a0 f0       	brcs	.+40     	; 0x7a0 <__fixunssfsi+0x38>
     778:	d1 f0       	breq	.+52     	; 0x7ae <__fixunssfsi+0x46>
     77a:	66 0f       	add	r22, r22
     77c:	77 1f       	adc	r23, r23
     77e:	88 1f       	adc	r24, r24
     780:	99 1f       	adc	r25, r25
     782:	1a f0       	brmi	.+6      	; 0x78a <__fixunssfsi+0x22>
     784:	ba 95       	dec	r27
     786:	c9 f7       	brne	.-14     	; 0x77a <__fixunssfsi+0x12>
     788:	12 c0       	rjmp	.+36     	; 0x7ae <__fixunssfsi+0x46>
     78a:	b1 30       	cpi	r27, 0x01	; 1
     78c:	81 f0       	breq	.+32     	; 0x7ae <__fixunssfsi+0x46>
     78e:	c3 d0       	rcall	.+390    	; 0x916 <__fp_zero>
     790:	b1 e0       	ldi	r27, 0x01	; 1
     792:	08 95       	ret
     794:	c0 c0       	rjmp	.+384    	; 0x916 <__fp_zero>
     796:	67 2f       	mov	r22, r23
     798:	78 2f       	mov	r23, r24
     79a:	88 27       	eor	r24, r24
     79c:	b8 5f       	subi	r27, 0xF8	; 248
     79e:	39 f0       	breq	.+14     	; 0x7ae <__fixunssfsi+0x46>
     7a0:	b9 3f       	cpi	r27, 0xF9	; 249
     7a2:	cc f3       	brlt	.-14     	; 0x796 <__fixunssfsi+0x2e>
     7a4:	86 95       	lsr	r24
     7a6:	77 95       	ror	r23
     7a8:	67 95       	ror	r22
     7aa:	b3 95       	inc	r27
     7ac:	d9 f7       	brne	.-10     	; 0x7a4 <__fixunssfsi+0x3c>
     7ae:	3e f4       	brtc	.+14     	; 0x7be <__fixunssfsi+0x56>
     7b0:	90 95       	com	r25
     7b2:	80 95       	com	r24
     7b4:	70 95       	com	r23
     7b6:	61 95       	neg	r22
     7b8:	7f 4f       	sbci	r23, 0xFF	; 255
     7ba:	8f 4f       	sbci	r24, 0xFF	; 255
     7bc:	9f 4f       	sbci	r25, 0xFF	; 255
     7be:	08 95       	ret

000007c0 <__floatunsisf>:
     7c0:	e8 94       	clt
     7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <__floatsisf+0x12>

000007c4 <__floatsisf>:
     7c4:	97 fb       	bst	r25, 7
     7c6:	3e f4       	brtc	.+14     	; 0x7d6 <__floatsisf+0x12>
     7c8:	90 95       	com	r25
     7ca:	80 95       	com	r24
     7cc:	70 95       	com	r23
     7ce:	61 95       	neg	r22
     7d0:	7f 4f       	sbci	r23, 0xFF	; 255
     7d2:	8f 4f       	sbci	r24, 0xFF	; 255
     7d4:	9f 4f       	sbci	r25, 0xFF	; 255
     7d6:	99 23       	and	r25, r25
     7d8:	a9 f0       	breq	.+42     	; 0x804 <__floatsisf+0x40>
     7da:	f9 2f       	mov	r31, r25
     7dc:	96 e9       	ldi	r25, 0x96	; 150
     7de:	bb 27       	eor	r27, r27
     7e0:	93 95       	inc	r25
     7e2:	f6 95       	lsr	r31
     7e4:	87 95       	ror	r24
     7e6:	77 95       	ror	r23
     7e8:	67 95       	ror	r22
     7ea:	b7 95       	ror	r27
     7ec:	f1 11       	cpse	r31, r1
     7ee:	f8 cf       	rjmp	.-16     	; 0x7e0 <__floatsisf+0x1c>
     7f0:	fa f4       	brpl	.+62     	; 0x830 <__floatsisf+0x6c>
     7f2:	bb 0f       	add	r27, r27
     7f4:	11 f4       	brne	.+4      	; 0x7fa <__floatsisf+0x36>
     7f6:	60 ff       	sbrs	r22, 0
     7f8:	1b c0       	rjmp	.+54     	; 0x830 <__floatsisf+0x6c>
     7fa:	6f 5f       	subi	r22, 0xFF	; 255
     7fc:	7f 4f       	sbci	r23, 0xFF	; 255
     7fe:	8f 4f       	sbci	r24, 0xFF	; 255
     800:	9f 4f       	sbci	r25, 0xFF	; 255
     802:	16 c0       	rjmp	.+44     	; 0x830 <__floatsisf+0x6c>
     804:	88 23       	and	r24, r24
     806:	11 f0       	breq	.+4      	; 0x80c <__floatsisf+0x48>
     808:	96 e9       	ldi	r25, 0x96	; 150
     80a:	11 c0       	rjmp	.+34     	; 0x82e <__floatsisf+0x6a>
     80c:	77 23       	and	r23, r23
     80e:	21 f0       	breq	.+8      	; 0x818 <__floatsisf+0x54>
     810:	9e e8       	ldi	r25, 0x8E	; 142
     812:	87 2f       	mov	r24, r23
     814:	76 2f       	mov	r23, r22
     816:	05 c0       	rjmp	.+10     	; 0x822 <__floatsisf+0x5e>
     818:	66 23       	and	r22, r22
     81a:	71 f0       	breq	.+28     	; 0x838 <__floatsisf+0x74>
     81c:	96 e8       	ldi	r25, 0x86	; 134
     81e:	86 2f       	mov	r24, r22
     820:	70 e0       	ldi	r23, 0x00	; 0
     822:	60 e0       	ldi	r22, 0x00	; 0
     824:	2a f0       	brmi	.+10     	; 0x830 <__floatsisf+0x6c>
     826:	9a 95       	dec	r25
     828:	66 0f       	add	r22, r22
     82a:	77 1f       	adc	r23, r23
     82c:	88 1f       	adc	r24, r24
     82e:	da f7       	brpl	.-10     	; 0x826 <__floatsisf+0x62>
     830:	88 0f       	add	r24, r24
     832:	96 95       	lsr	r25
     834:	87 95       	ror	r24
     836:	97 f9       	bld	r25, 7
     838:	08 95       	ret

0000083a <__fp_cmp>:
     83a:	99 0f       	add	r25, r25
     83c:	00 08       	sbc	r0, r0
     83e:	55 0f       	add	r21, r21
     840:	aa 0b       	sbc	r26, r26
     842:	e0 e8       	ldi	r30, 0x80	; 128
     844:	fe ef       	ldi	r31, 0xFE	; 254
     846:	16 16       	cp	r1, r22
     848:	17 06       	cpc	r1, r23
     84a:	e8 07       	cpc	r30, r24
     84c:	f9 07       	cpc	r31, r25
     84e:	c0 f0       	brcs	.+48     	; 0x880 <__fp_cmp+0x46>
     850:	12 16       	cp	r1, r18
     852:	13 06       	cpc	r1, r19
     854:	e4 07       	cpc	r30, r20
     856:	f5 07       	cpc	r31, r21
     858:	98 f0       	brcs	.+38     	; 0x880 <__fp_cmp+0x46>
     85a:	62 1b       	sub	r22, r18
     85c:	73 0b       	sbc	r23, r19
     85e:	84 0b       	sbc	r24, r20
     860:	95 0b       	sbc	r25, r21
     862:	39 f4       	brne	.+14     	; 0x872 <__fp_cmp+0x38>
     864:	0a 26       	eor	r0, r26
     866:	61 f0       	breq	.+24     	; 0x880 <__fp_cmp+0x46>
     868:	23 2b       	or	r18, r19
     86a:	24 2b       	or	r18, r20
     86c:	25 2b       	or	r18, r21
     86e:	21 f4       	brne	.+8      	; 0x878 <__fp_cmp+0x3e>
     870:	08 95       	ret
     872:	0a 26       	eor	r0, r26
     874:	09 f4       	brne	.+2      	; 0x878 <__fp_cmp+0x3e>
     876:	a1 40       	sbci	r26, 0x01	; 1
     878:	a6 95       	lsr	r26
     87a:	8f ef       	ldi	r24, 0xFF	; 255
     87c:	81 1d       	adc	r24, r1
     87e:	81 1d       	adc	r24, r1
     880:	08 95       	ret

00000882 <__fp_inf>:
     882:	97 f9       	bld	r25, 7
     884:	9f 67       	ori	r25, 0x7F	; 127
     886:	80 e8       	ldi	r24, 0x80	; 128
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	60 e0       	ldi	r22, 0x00	; 0
     88c:	08 95       	ret

0000088e <__fp_nan>:
     88e:	9f ef       	ldi	r25, 0xFF	; 255
     890:	80 ec       	ldi	r24, 0xC0	; 192
     892:	08 95       	ret

00000894 <__fp_pscA>:
     894:	00 24       	eor	r0, r0
     896:	0a 94       	dec	r0
     898:	16 16       	cp	r1, r22
     89a:	17 06       	cpc	r1, r23
     89c:	18 06       	cpc	r1, r24
     89e:	09 06       	cpc	r0, r25
     8a0:	08 95       	ret

000008a2 <__fp_pscB>:
     8a2:	00 24       	eor	r0, r0
     8a4:	0a 94       	dec	r0
     8a6:	12 16       	cp	r1, r18
     8a8:	13 06       	cpc	r1, r19
     8aa:	14 06       	cpc	r1, r20
     8ac:	05 06       	cpc	r0, r21
     8ae:	08 95       	ret

000008b0 <__fp_round>:
     8b0:	09 2e       	mov	r0, r25
     8b2:	03 94       	inc	r0
     8b4:	00 0c       	add	r0, r0
     8b6:	11 f4       	brne	.+4      	; 0x8bc <__fp_round+0xc>
     8b8:	88 23       	and	r24, r24
     8ba:	52 f0       	brmi	.+20     	; 0x8d0 <__fp_round+0x20>
     8bc:	bb 0f       	add	r27, r27
     8be:	40 f4       	brcc	.+16     	; 0x8d0 <__fp_round+0x20>
     8c0:	bf 2b       	or	r27, r31
     8c2:	11 f4       	brne	.+4      	; 0x8c8 <__fp_round+0x18>
     8c4:	60 ff       	sbrs	r22, 0
     8c6:	04 c0       	rjmp	.+8      	; 0x8d0 <__fp_round+0x20>
     8c8:	6f 5f       	subi	r22, 0xFF	; 255
     8ca:	7f 4f       	sbci	r23, 0xFF	; 255
     8cc:	8f 4f       	sbci	r24, 0xFF	; 255
     8ce:	9f 4f       	sbci	r25, 0xFF	; 255
     8d0:	08 95       	ret

000008d2 <__fp_split3>:
     8d2:	57 fd       	sbrc	r21, 7
     8d4:	90 58       	subi	r25, 0x80	; 128
     8d6:	44 0f       	add	r20, r20
     8d8:	55 1f       	adc	r21, r21
     8da:	59 f0       	breq	.+22     	; 0x8f2 <__fp_splitA+0x10>
     8dc:	5f 3f       	cpi	r21, 0xFF	; 255
     8de:	71 f0       	breq	.+28     	; 0x8fc <__fp_splitA+0x1a>
     8e0:	47 95       	ror	r20

000008e2 <__fp_splitA>:
     8e2:	88 0f       	add	r24, r24
     8e4:	97 fb       	bst	r25, 7
     8e6:	99 1f       	adc	r25, r25
     8e8:	61 f0       	breq	.+24     	; 0x902 <__fp_splitA+0x20>
     8ea:	9f 3f       	cpi	r25, 0xFF	; 255
     8ec:	79 f0       	breq	.+30     	; 0x90c <__fp_splitA+0x2a>
     8ee:	87 95       	ror	r24
     8f0:	08 95       	ret
     8f2:	12 16       	cp	r1, r18
     8f4:	13 06       	cpc	r1, r19
     8f6:	14 06       	cpc	r1, r20
     8f8:	55 1f       	adc	r21, r21
     8fa:	f2 cf       	rjmp	.-28     	; 0x8e0 <__fp_split3+0xe>
     8fc:	46 95       	lsr	r20
     8fe:	f1 df       	rcall	.-30     	; 0x8e2 <__fp_splitA>
     900:	08 c0       	rjmp	.+16     	; 0x912 <__fp_splitA+0x30>
     902:	16 16       	cp	r1, r22
     904:	17 06       	cpc	r1, r23
     906:	18 06       	cpc	r1, r24
     908:	99 1f       	adc	r25, r25
     90a:	f1 cf       	rjmp	.-30     	; 0x8ee <__fp_splitA+0xc>
     90c:	86 95       	lsr	r24
     90e:	71 05       	cpc	r23, r1
     910:	61 05       	cpc	r22, r1
     912:	08 94       	sec
     914:	08 95       	ret

00000916 <__fp_zero>:
     916:	e8 94       	clt

00000918 <__fp_szero>:
     918:	bb 27       	eor	r27, r27
     91a:	66 27       	eor	r22, r22
     91c:	77 27       	eor	r23, r23
     91e:	cb 01       	movw	r24, r22
     920:	97 f9       	bld	r25, 7
     922:	08 95       	ret

00000924 <__gesf2>:
     924:	8a df       	rcall	.-236    	; 0x83a <__fp_cmp>
     926:	08 f4       	brcc	.+2      	; 0x92a <__gesf2+0x6>
     928:	8f ef       	ldi	r24, 0xFF	; 255
     92a:	08 95       	ret

0000092c <__mulsf3>:
     92c:	0b d0       	rcall	.+22     	; 0x944 <__mulsf3x>
     92e:	c0 cf       	rjmp	.-128    	; 0x8b0 <__fp_round>
     930:	b1 df       	rcall	.-158    	; 0x894 <__fp_pscA>
     932:	28 f0       	brcs	.+10     	; 0x93e <__mulsf3+0x12>
     934:	b6 df       	rcall	.-148    	; 0x8a2 <__fp_pscB>
     936:	18 f0       	brcs	.+6      	; 0x93e <__mulsf3+0x12>
     938:	95 23       	and	r25, r21
     93a:	09 f0       	breq	.+2      	; 0x93e <__mulsf3+0x12>
     93c:	a2 cf       	rjmp	.-188    	; 0x882 <__fp_inf>
     93e:	a7 cf       	rjmp	.-178    	; 0x88e <__fp_nan>
     940:	11 24       	eor	r1, r1
     942:	ea cf       	rjmp	.-44     	; 0x918 <__fp_szero>

00000944 <__mulsf3x>:
     944:	c6 df       	rcall	.-116    	; 0x8d2 <__fp_split3>
     946:	a0 f3       	brcs	.-24     	; 0x930 <__mulsf3+0x4>

00000948 <__mulsf3_pse>:
     948:	95 9f       	mul	r25, r21
     94a:	d1 f3       	breq	.-12     	; 0x940 <__mulsf3+0x14>
     94c:	95 0f       	add	r25, r21
     94e:	50 e0       	ldi	r21, 0x00	; 0
     950:	55 1f       	adc	r21, r21
     952:	62 9f       	mul	r22, r18
     954:	f0 01       	movw	r30, r0
     956:	72 9f       	mul	r23, r18
     958:	bb 27       	eor	r27, r27
     95a:	f0 0d       	add	r31, r0
     95c:	b1 1d       	adc	r27, r1
     95e:	63 9f       	mul	r22, r19
     960:	aa 27       	eor	r26, r26
     962:	f0 0d       	add	r31, r0
     964:	b1 1d       	adc	r27, r1
     966:	aa 1f       	adc	r26, r26
     968:	64 9f       	mul	r22, r20
     96a:	66 27       	eor	r22, r22
     96c:	b0 0d       	add	r27, r0
     96e:	a1 1d       	adc	r26, r1
     970:	66 1f       	adc	r22, r22
     972:	82 9f       	mul	r24, r18
     974:	22 27       	eor	r18, r18
     976:	b0 0d       	add	r27, r0
     978:	a1 1d       	adc	r26, r1
     97a:	62 1f       	adc	r22, r18
     97c:	73 9f       	mul	r23, r19
     97e:	b0 0d       	add	r27, r0
     980:	a1 1d       	adc	r26, r1
     982:	62 1f       	adc	r22, r18
     984:	83 9f       	mul	r24, r19
     986:	a0 0d       	add	r26, r0
     988:	61 1d       	adc	r22, r1
     98a:	22 1f       	adc	r18, r18
     98c:	74 9f       	mul	r23, r20
     98e:	33 27       	eor	r19, r19
     990:	a0 0d       	add	r26, r0
     992:	61 1d       	adc	r22, r1
     994:	23 1f       	adc	r18, r19
     996:	84 9f       	mul	r24, r20
     998:	60 0d       	add	r22, r0
     99a:	21 1d       	adc	r18, r1
     99c:	82 2f       	mov	r24, r18
     99e:	76 2f       	mov	r23, r22
     9a0:	6a 2f       	mov	r22, r26
     9a2:	11 24       	eor	r1, r1
     9a4:	9f 57       	subi	r25, 0x7F	; 127
     9a6:	50 40       	sbci	r21, 0x00	; 0
     9a8:	8a f0       	brmi	.+34     	; 0x9cc <__mulsf3_pse+0x84>
     9aa:	e1 f0       	breq	.+56     	; 0x9e4 <__mulsf3_pse+0x9c>
     9ac:	88 23       	and	r24, r24
     9ae:	4a f0       	brmi	.+18     	; 0x9c2 <__mulsf3_pse+0x7a>
     9b0:	ee 0f       	add	r30, r30
     9b2:	ff 1f       	adc	r31, r31
     9b4:	bb 1f       	adc	r27, r27
     9b6:	66 1f       	adc	r22, r22
     9b8:	77 1f       	adc	r23, r23
     9ba:	88 1f       	adc	r24, r24
     9bc:	91 50       	subi	r25, 0x01	; 1
     9be:	50 40       	sbci	r21, 0x00	; 0
     9c0:	a9 f7       	brne	.-22     	; 0x9ac <__mulsf3_pse+0x64>
     9c2:	9e 3f       	cpi	r25, 0xFE	; 254
     9c4:	51 05       	cpc	r21, r1
     9c6:	70 f0       	brcs	.+28     	; 0x9e4 <__mulsf3_pse+0x9c>
     9c8:	5c cf       	rjmp	.-328    	; 0x882 <__fp_inf>
     9ca:	a6 cf       	rjmp	.-180    	; 0x918 <__fp_szero>
     9cc:	5f 3f       	cpi	r21, 0xFF	; 255
     9ce:	ec f3       	brlt	.-6      	; 0x9ca <__mulsf3_pse+0x82>
     9d0:	98 3e       	cpi	r25, 0xE8	; 232
     9d2:	dc f3       	brlt	.-10     	; 0x9ca <__mulsf3_pse+0x82>
     9d4:	86 95       	lsr	r24
     9d6:	77 95       	ror	r23
     9d8:	67 95       	ror	r22
     9da:	b7 95       	ror	r27
     9dc:	f7 95       	ror	r31
     9de:	e7 95       	ror	r30
     9e0:	9f 5f       	subi	r25, 0xFF	; 255
     9e2:	c1 f7       	brne	.-16     	; 0x9d4 <__mulsf3_pse+0x8c>
     9e4:	fe 2b       	or	r31, r30
     9e6:	88 0f       	add	r24, r24
     9e8:	91 1d       	adc	r25, r1
     9ea:	96 95       	lsr	r25
     9ec:	87 95       	ror	r24
     9ee:	97 f9       	bld	r25, 7
     9f0:	08 95       	ret

000009f2 <fdevopen>:
     9f2:	0f 93       	push	r16
     9f4:	1f 93       	push	r17
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	ec 01       	movw	r28, r24
     9fc:	8b 01       	movw	r16, r22
     9fe:	00 97       	sbiw	r24, 0x00	; 0
     a00:	31 f4       	brne	.+12     	; 0xa0e <fdevopen+0x1c>
     a02:	61 15       	cp	r22, r1
     a04:	71 05       	cpc	r23, r1
     a06:	19 f4       	brne	.+6      	; 0xa0e <fdevopen+0x1c>
     a08:	80 e0       	ldi	r24, 0x00	; 0
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	37 c0       	rjmp	.+110    	; 0xa7c <fdevopen+0x8a>
     a0e:	6e e0       	ldi	r22, 0x0E	; 14
     a10:	70 e0       	ldi	r23, 0x00	; 0
     a12:	81 e0       	ldi	r24, 0x01	; 1
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	63 d2       	rcall	.+1222   	; 0xede <calloc>
     a18:	fc 01       	movw	r30, r24
     a1a:	00 97       	sbiw	r24, 0x00	; 0
     a1c:	a9 f3       	breq	.-22     	; 0xa08 <fdevopen+0x16>
     a1e:	80 e8       	ldi	r24, 0x80	; 128
     a20:	83 83       	std	Z+3, r24	; 0x03
     a22:	01 15       	cp	r16, r1
     a24:	11 05       	cpc	r17, r1
     a26:	71 f0       	breq	.+28     	; 0xa44 <fdevopen+0x52>
     a28:	13 87       	std	Z+11, r17	; 0x0b
     a2a:	02 87       	std	Z+10, r16	; 0x0a
     a2c:	81 e8       	ldi	r24, 0x81	; 129
     a2e:	83 83       	std	Z+3, r24	; 0x03
     a30:	80 91 c4 02 	lds	r24, 0x02C4
     a34:	90 91 c5 02 	lds	r25, 0x02C5
     a38:	89 2b       	or	r24, r25
     a3a:	21 f4       	brne	.+8      	; 0xa44 <fdevopen+0x52>
     a3c:	f0 93 c5 02 	sts	0x02C5, r31
     a40:	e0 93 c4 02 	sts	0x02C4, r30
     a44:	20 97       	sbiw	r28, 0x00	; 0
     a46:	c9 f0       	breq	.+50     	; 0xa7a <fdevopen+0x88>
     a48:	d1 87       	std	Z+9, r29	; 0x09
     a4a:	c0 87       	std	Z+8, r28	; 0x08
     a4c:	83 81       	ldd	r24, Z+3	; 0x03
     a4e:	82 60       	ori	r24, 0x02	; 2
     a50:	83 83       	std	Z+3, r24	; 0x03
     a52:	80 91 c6 02 	lds	r24, 0x02C6
     a56:	90 91 c7 02 	lds	r25, 0x02C7
     a5a:	89 2b       	or	r24, r25
     a5c:	71 f4       	brne	.+28     	; 0xa7a <fdevopen+0x88>
     a5e:	f0 93 c7 02 	sts	0x02C7, r31
     a62:	e0 93 c6 02 	sts	0x02C6, r30
     a66:	80 91 c8 02 	lds	r24, 0x02C8
     a6a:	90 91 c9 02 	lds	r25, 0x02C9
     a6e:	89 2b       	or	r24, r25
     a70:	21 f4       	brne	.+8      	; 0xa7a <fdevopen+0x88>
     a72:	f0 93 c9 02 	sts	0x02C9, r31
     a76:	e0 93 c8 02 	sts	0x02C8, r30
     a7a:	cf 01       	movw	r24, r30
     a7c:	df 91       	pop	r29
     a7e:	cf 91       	pop	r28
     a80:	1f 91       	pop	r17
     a82:	0f 91       	pop	r16
     a84:	08 95       	ret

00000a86 <printf>:
     a86:	cf 93       	push	r28
     a88:	df 93       	push	r29
     a8a:	cd b7       	in	r28, 0x3d	; 61
     a8c:	de b7       	in	r29, 0x3e	; 62
     a8e:	fe 01       	movw	r30, r28
     a90:	36 96       	adiw	r30, 0x06	; 6
     a92:	61 91       	ld	r22, Z+
     a94:	71 91       	ld	r23, Z+
     a96:	af 01       	movw	r20, r30
     a98:	80 91 c6 02 	lds	r24, 0x02C6
     a9c:	90 91 c7 02 	lds	r25, 0x02C7
     aa0:	30 d0       	rcall	.+96     	; 0xb02 <vfprintf>
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	08 95       	ret

00000aa8 <puts>:
     aa8:	0f 93       	push	r16
     aaa:	1f 93       	push	r17
     aac:	cf 93       	push	r28
     aae:	df 93       	push	r29
     ab0:	e0 91 c6 02 	lds	r30, 0x02C6
     ab4:	f0 91 c7 02 	lds	r31, 0x02C7
     ab8:	23 81       	ldd	r18, Z+3	; 0x03
     aba:	21 ff       	sbrs	r18, 1
     abc:	1b c0       	rjmp	.+54     	; 0xaf4 <puts+0x4c>
     abe:	ec 01       	movw	r28, r24
     ac0:	00 e0       	ldi	r16, 0x00	; 0
     ac2:	10 e0       	ldi	r17, 0x00	; 0
     ac4:	89 91       	ld	r24, Y+
     ac6:	60 91 c6 02 	lds	r22, 0x02C6
     aca:	70 91 c7 02 	lds	r23, 0x02C7
     ace:	db 01       	movw	r26, r22
     ad0:	18 96       	adiw	r26, 0x08	; 8
     ad2:	ed 91       	ld	r30, X+
     ad4:	fc 91       	ld	r31, X
     ad6:	19 97       	sbiw	r26, 0x09	; 9
     ad8:	88 23       	and	r24, r24
     ada:	31 f0       	breq	.+12     	; 0xae8 <puts+0x40>
     adc:	19 95       	eicall
     ade:	89 2b       	or	r24, r25
     ae0:	89 f3       	breq	.-30     	; 0xac4 <puts+0x1c>
     ae2:	0f ef       	ldi	r16, 0xFF	; 255
     ae4:	1f ef       	ldi	r17, 0xFF	; 255
     ae6:	ee cf       	rjmp	.-36     	; 0xac4 <puts+0x1c>
     ae8:	8a e0       	ldi	r24, 0x0A	; 10
     aea:	19 95       	eicall
     aec:	89 2b       	or	r24, r25
     aee:	11 f4       	brne	.+4      	; 0xaf4 <puts+0x4c>
     af0:	c8 01       	movw	r24, r16
     af2:	02 c0       	rjmp	.+4      	; 0xaf8 <puts+0x50>
     af4:	8f ef       	ldi	r24, 0xFF	; 255
     af6:	9f ef       	ldi	r25, 0xFF	; 255
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	1f 91       	pop	r17
     afe:	0f 91       	pop	r16
     b00:	08 95       	ret

00000b02 <vfprintf>:
     b02:	2f 92       	push	r2
     b04:	3f 92       	push	r3
     b06:	4f 92       	push	r4
     b08:	5f 92       	push	r5
     b0a:	6f 92       	push	r6
     b0c:	7f 92       	push	r7
     b0e:	8f 92       	push	r8
     b10:	9f 92       	push	r9
     b12:	af 92       	push	r10
     b14:	bf 92       	push	r11
     b16:	cf 92       	push	r12
     b18:	df 92       	push	r13
     b1a:	ef 92       	push	r14
     b1c:	ff 92       	push	r15
     b1e:	0f 93       	push	r16
     b20:	1f 93       	push	r17
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	cd b7       	in	r28, 0x3d	; 61
     b28:	de b7       	in	r29, 0x3e	; 62
     b2a:	2c 97       	sbiw	r28, 0x0c	; 12
     b2c:	0f b6       	in	r0, 0x3f	; 63
     b2e:	f8 94       	cli
     b30:	de bf       	out	0x3e, r29	; 62
     b32:	0f be       	out	0x3f, r0	; 63
     b34:	cd bf       	out	0x3d, r28	; 61
     b36:	7c 01       	movw	r14, r24
     b38:	6b 01       	movw	r12, r22
     b3a:	8a 01       	movw	r16, r20
     b3c:	fc 01       	movw	r30, r24
     b3e:	17 82       	std	Z+7, r1	; 0x07
     b40:	16 82       	std	Z+6, r1	; 0x06
     b42:	83 81       	ldd	r24, Z+3	; 0x03
     b44:	81 ff       	sbrs	r24, 1
     b46:	b0 c1       	rjmp	.+864    	; 0xea8 <vfprintf+0x3a6>
     b48:	ce 01       	movw	r24, r28
     b4a:	01 96       	adiw	r24, 0x01	; 1
     b4c:	4c 01       	movw	r8, r24
     b4e:	f7 01       	movw	r30, r14
     b50:	93 81       	ldd	r25, Z+3	; 0x03
     b52:	f6 01       	movw	r30, r12
     b54:	93 fd       	sbrc	r25, 3
     b56:	85 91       	lpm	r24, Z+
     b58:	93 ff       	sbrs	r25, 3
     b5a:	81 91       	ld	r24, Z+
     b5c:	6f 01       	movw	r12, r30
     b5e:	88 23       	and	r24, r24
     b60:	09 f4       	brne	.+2      	; 0xb64 <vfprintf+0x62>
     b62:	9e c1       	rjmp	.+828    	; 0xea0 <vfprintf+0x39e>
     b64:	85 32       	cpi	r24, 0x25	; 37
     b66:	39 f4       	brne	.+14     	; 0xb76 <vfprintf+0x74>
     b68:	93 fd       	sbrc	r25, 3
     b6a:	85 91       	lpm	r24, Z+
     b6c:	93 ff       	sbrs	r25, 3
     b6e:	81 91       	ld	r24, Z+
     b70:	6f 01       	movw	r12, r30
     b72:	85 32       	cpi	r24, 0x25	; 37
     b74:	21 f4       	brne	.+8      	; 0xb7e <vfprintf+0x7c>
     b76:	b7 01       	movw	r22, r14
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0f d3       	rcall	.+1566   	; 0x119a <fputc>
     b7c:	e8 cf       	rjmp	.-48     	; 0xb4e <vfprintf+0x4c>
     b7e:	51 2c       	mov	r5, r1
     b80:	31 2c       	mov	r3, r1
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	20 32       	cpi	r18, 0x20	; 32
     b86:	a0 f4       	brcc	.+40     	; 0xbb0 <vfprintf+0xae>
     b88:	8b 32       	cpi	r24, 0x2B	; 43
     b8a:	69 f0       	breq	.+26     	; 0xba6 <vfprintf+0xa4>
     b8c:	30 f4       	brcc	.+12     	; 0xb9a <vfprintf+0x98>
     b8e:	80 32       	cpi	r24, 0x20	; 32
     b90:	59 f0       	breq	.+22     	; 0xba8 <vfprintf+0xa6>
     b92:	83 32       	cpi	r24, 0x23	; 35
     b94:	69 f4       	brne	.+26     	; 0xbb0 <vfprintf+0xae>
     b96:	20 61       	ori	r18, 0x10	; 16
     b98:	2c c0       	rjmp	.+88     	; 0xbf2 <vfprintf+0xf0>
     b9a:	8d 32       	cpi	r24, 0x2D	; 45
     b9c:	39 f0       	breq	.+14     	; 0xbac <vfprintf+0xaa>
     b9e:	80 33       	cpi	r24, 0x30	; 48
     ba0:	39 f4       	brne	.+14     	; 0xbb0 <vfprintf+0xae>
     ba2:	21 60       	ori	r18, 0x01	; 1
     ba4:	26 c0       	rjmp	.+76     	; 0xbf2 <vfprintf+0xf0>
     ba6:	22 60       	ori	r18, 0x02	; 2
     ba8:	24 60       	ori	r18, 0x04	; 4
     baa:	23 c0       	rjmp	.+70     	; 0xbf2 <vfprintf+0xf0>
     bac:	28 60       	ori	r18, 0x08	; 8
     bae:	21 c0       	rjmp	.+66     	; 0xbf2 <vfprintf+0xf0>
     bb0:	27 fd       	sbrc	r18, 7
     bb2:	27 c0       	rjmp	.+78     	; 0xc02 <vfprintf+0x100>
     bb4:	30 ed       	ldi	r19, 0xD0	; 208
     bb6:	38 0f       	add	r19, r24
     bb8:	3a 30       	cpi	r19, 0x0A	; 10
     bba:	78 f4       	brcc	.+30     	; 0xbda <vfprintf+0xd8>
     bbc:	26 ff       	sbrs	r18, 6
     bbe:	06 c0       	rjmp	.+12     	; 0xbcc <vfprintf+0xca>
     bc0:	fa e0       	ldi	r31, 0x0A	; 10
     bc2:	5f 9e       	mul	r5, r31
     bc4:	30 0d       	add	r19, r0
     bc6:	11 24       	eor	r1, r1
     bc8:	53 2e       	mov	r5, r19
     bca:	13 c0       	rjmp	.+38     	; 0xbf2 <vfprintf+0xf0>
     bcc:	8a e0       	ldi	r24, 0x0A	; 10
     bce:	38 9e       	mul	r3, r24
     bd0:	30 0d       	add	r19, r0
     bd2:	11 24       	eor	r1, r1
     bd4:	33 2e       	mov	r3, r19
     bd6:	20 62       	ori	r18, 0x20	; 32
     bd8:	0c c0       	rjmp	.+24     	; 0xbf2 <vfprintf+0xf0>
     bda:	8e 32       	cpi	r24, 0x2E	; 46
     bdc:	21 f4       	brne	.+8      	; 0xbe6 <vfprintf+0xe4>
     bde:	26 fd       	sbrc	r18, 6
     be0:	5f c1       	rjmp	.+702    	; 0xea0 <vfprintf+0x39e>
     be2:	20 64       	ori	r18, 0x40	; 64
     be4:	06 c0       	rjmp	.+12     	; 0xbf2 <vfprintf+0xf0>
     be6:	8c 36       	cpi	r24, 0x6C	; 108
     be8:	11 f4       	brne	.+4      	; 0xbee <vfprintf+0xec>
     bea:	20 68       	ori	r18, 0x80	; 128
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <vfprintf+0xf0>
     bee:	88 36       	cpi	r24, 0x68	; 104
     bf0:	41 f4       	brne	.+16     	; 0xc02 <vfprintf+0x100>
     bf2:	f6 01       	movw	r30, r12
     bf4:	93 fd       	sbrc	r25, 3
     bf6:	85 91       	lpm	r24, Z+
     bf8:	93 ff       	sbrs	r25, 3
     bfa:	81 91       	ld	r24, Z+
     bfc:	6f 01       	movw	r12, r30
     bfe:	81 11       	cpse	r24, r1
     c00:	c1 cf       	rjmp	.-126    	; 0xb84 <vfprintf+0x82>
     c02:	98 2f       	mov	r25, r24
     c04:	9f 7d       	andi	r25, 0xDF	; 223
     c06:	95 54       	subi	r25, 0x45	; 69
     c08:	93 30       	cpi	r25, 0x03	; 3
     c0a:	28 f4       	brcc	.+10     	; 0xc16 <vfprintf+0x114>
     c0c:	0c 5f       	subi	r16, 0xFC	; 252
     c0e:	1f 4f       	sbci	r17, 0xFF	; 255
     c10:	ff e3       	ldi	r31, 0x3F	; 63
     c12:	f9 83       	std	Y+1, r31	; 0x01
     c14:	0d c0       	rjmp	.+26     	; 0xc30 <vfprintf+0x12e>
     c16:	83 36       	cpi	r24, 0x63	; 99
     c18:	31 f0       	breq	.+12     	; 0xc26 <vfprintf+0x124>
     c1a:	83 37       	cpi	r24, 0x73	; 115
     c1c:	71 f0       	breq	.+28     	; 0xc3a <vfprintf+0x138>
     c1e:	83 35       	cpi	r24, 0x53	; 83
     c20:	09 f0       	breq	.+2      	; 0xc24 <vfprintf+0x122>
     c22:	57 c0       	rjmp	.+174    	; 0xcd2 <vfprintf+0x1d0>
     c24:	21 c0       	rjmp	.+66     	; 0xc68 <vfprintf+0x166>
     c26:	f8 01       	movw	r30, r16
     c28:	80 81       	ld	r24, Z
     c2a:	89 83       	std	Y+1, r24	; 0x01
     c2c:	0e 5f       	subi	r16, 0xFE	; 254
     c2e:	1f 4f       	sbci	r17, 0xFF	; 255
     c30:	44 24       	eor	r4, r4
     c32:	43 94       	inc	r4
     c34:	51 2c       	mov	r5, r1
     c36:	54 01       	movw	r10, r8
     c38:	14 c0       	rjmp	.+40     	; 0xc62 <vfprintf+0x160>
     c3a:	38 01       	movw	r6, r16
     c3c:	f2 e0       	ldi	r31, 0x02	; 2
     c3e:	6f 0e       	add	r6, r31
     c40:	71 1c       	adc	r7, r1
     c42:	f8 01       	movw	r30, r16
     c44:	a0 80       	ld	r10, Z
     c46:	b1 80       	ldd	r11, Z+1	; 0x01
     c48:	26 ff       	sbrs	r18, 6
     c4a:	03 c0       	rjmp	.+6      	; 0xc52 <vfprintf+0x150>
     c4c:	65 2d       	mov	r22, r5
     c4e:	70 e0       	ldi	r23, 0x00	; 0
     c50:	02 c0       	rjmp	.+4      	; 0xc56 <vfprintf+0x154>
     c52:	6f ef       	ldi	r22, 0xFF	; 255
     c54:	7f ef       	ldi	r23, 0xFF	; 255
     c56:	c5 01       	movw	r24, r10
     c58:	2c 87       	std	Y+12, r18	; 0x0c
     c5a:	94 d2       	rcall	.+1320   	; 0x1184 <strnlen>
     c5c:	2c 01       	movw	r4, r24
     c5e:	83 01       	movw	r16, r6
     c60:	2c 85       	ldd	r18, Y+12	; 0x0c
     c62:	2f 77       	andi	r18, 0x7F	; 127
     c64:	22 2e       	mov	r2, r18
     c66:	16 c0       	rjmp	.+44     	; 0xc94 <vfprintf+0x192>
     c68:	38 01       	movw	r6, r16
     c6a:	f2 e0       	ldi	r31, 0x02	; 2
     c6c:	6f 0e       	add	r6, r31
     c6e:	71 1c       	adc	r7, r1
     c70:	f8 01       	movw	r30, r16
     c72:	a0 80       	ld	r10, Z
     c74:	b1 80       	ldd	r11, Z+1	; 0x01
     c76:	26 ff       	sbrs	r18, 6
     c78:	03 c0       	rjmp	.+6      	; 0xc80 <vfprintf+0x17e>
     c7a:	65 2d       	mov	r22, r5
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	02 c0       	rjmp	.+4      	; 0xc84 <vfprintf+0x182>
     c80:	6f ef       	ldi	r22, 0xFF	; 255
     c82:	7f ef       	ldi	r23, 0xFF	; 255
     c84:	c5 01       	movw	r24, r10
     c86:	2c 87       	std	Y+12, r18	; 0x0c
     c88:	6b d2       	rcall	.+1238   	; 0x1160 <strnlen_P>
     c8a:	2c 01       	movw	r4, r24
     c8c:	2c 85       	ldd	r18, Y+12	; 0x0c
     c8e:	20 68       	ori	r18, 0x80	; 128
     c90:	22 2e       	mov	r2, r18
     c92:	83 01       	movw	r16, r6
     c94:	23 fc       	sbrc	r2, 3
     c96:	19 c0       	rjmp	.+50     	; 0xcca <vfprintf+0x1c8>
     c98:	83 2d       	mov	r24, r3
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	48 16       	cp	r4, r24
     c9e:	59 06       	cpc	r5, r25
     ca0:	a0 f4       	brcc	.+40     	; 0xcca <vfprintf+0x1c8>
     ca2:	b7 01       	movw	r22, r14
     ca4:	80 e2       	ldi	r24, 0x20	; 32
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	78 d2       	rcall	.+1264   	; 0x119a <fputc>
     caa:	3a 94       	dec	r3
     cac:	f5 cf       	rjmp	.-22     	; 0xc98 <vfprintf+0x196>
     cae:	f5 01       	movw	r30, r10
     cb0:	27 fc       	sbrc	r2, 7
     cb2:	85 91       	lpm	r24, Z+
     cb4:	27 fe       	sbrs	r2, 7
     cb6:	81 91       	ld	r24, Z+
     cb8:	5f 01       	movw	r10, r30
     cba:	b7 01       	movw	r22, r14
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	6d d2       	rcall	.+1242   	; 0x119a <fputc>
     cc0:	31 10       	cpse	r3, r1
     cc2:	3a 94       	dec	r3
     cc4:	f1 e0       	ldi	r31, 0x01	; 1
     cc6:	4f 1a       	sub	r4, r31
     cc8:	51 08       	sbc	r5, r1
     cca:	41 14       	cp	r4, r1
     ccc:	51 04       	cpc	r5, r1
     cce:	79 f7       	brne	.-34     	; 0xcae <vfprintf+0x1ac>
     cd0:	de c0       	rjmp	.+444    	; 0xe8e <vfprintf+0x38c>
     cd2:	84 36       	cpi	r24, 0x64	; 100
     cd4:	11 f0       	breq	.+4      	; 0xcda <vfprintf+0x1d8>
     cd6:	89 36       	cpi	r24, 0x69	; 105
     cd8:	31 f5       	brne	.+76     	; 0xd26 <vfprintf+0x224>
     cda:	f8 01       	movw	r30, r16
     cdc:	27 ff       	sbrs	r18, 7
     cde:	07 c0       	rjmp	.+14     	; 0xcee <vfprintf+0x1ec>
     ce0:	60 81       	ld	r22, Z
     ce2:	71 81       	ldd	r23, Z+1	; 0x01
     ce4:	82 81       	ldd	r24, Z+2	; 0x02
     ce6:	93 81       	ldd	r25, Z+3	; 0x03
     ce8:	0c 5f       	subi	r16, 0xFC	; 252
     cea:	1f 4f       	sbci	r17, 0xFF	; 255
     cec:	08 c0       	rjmp	.+16     	; 0xcfe <vfprintf+0x1fc>
     cee:	60 81       	ld	r22, Z
     cf0:	71 81       	ldd	r23, Z+1	; 0x01
     cf2:	88 27       	eor	r24, r24
     cf4:	77 fd       	sbrc	r23, 7
     cf6:	80 95       	com	r24
     cf8:	98 2f       	mov	r25, r24
     cfa:	0e 5f       	subi	r16, 0xFE	; 254
     cfc:	1f 4f       	sbci	r17, 0xFF	; 255
     cfe:	2f 76       	andi	r18, 0x6F	; 111
     d00:	b2 2e       	mov	r11, r18
     d02:	97 ff       	sbrs	r25, 7
     d04:	09 c0       	rjmp	.+18     	; 0xd18 <vfprintf+0x216>
     d06:	90 95       	com	r25
     d08:	80 95       	com	r24
     d0a:	70 95       	com	r23
     d0c:	61 95       	neg	r22
     d0e:	7f 4f       	sbci	r23, 0xFF	; 255
     d10:	8f 4f       	sbci	r24, 0xFF	; 255
     d12:	9f 4f       	sbci	r25, 0xFF	; 255
     d14:	20 68       	ori	r18, 0x80	; 128
     d16:	b2 2e       	mov	r11, r18
     d18:	2a e0       	ldi	r18, 0x0A	; 10
     d1a:	30 e0       	ldi	r19, 0x00	; 0
     d1c:	a4 01       	movw	r20, r8
     d1e:	6f d2       	rcall	.+1246   	; 0x11fe <__ultoa_invert>
     d20:	a8 2e       	mov	r10, r24
     d22:	a8 18       	sub	r10, r8
     d24:	43 c0       	rjmp	.+134    	; 0xdac <vfprintf+0x2aa>
     d26:	85 37       	cpi	r24, 0x75	; 117
     d28:	29 f4       	brne	.+10     	; 0xd34 <vfprintf+0x232>
     d2a:	2f 7e       	andi	r18, 0xEF	; 239
     d2c:	b2 2e       	mov	r11, r18
     d2e:	2a e0       	ldi	r18, 0x0A	; 10
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	25 c0       	rjmp	.+74     	; 0xd7e <vfprintf+0x27c>
     d34:	f2 2f       	mov	r31, r18
     d36:	f9 7f       	andi	r31, 0xF9	; 249
     d38:	bf 2e       	mov	r11, r31
     d3a:	8f 36       	cpi	r24, 0x6F	; 111
     d3c:	c1 f0       	breq	.+48     	; 0xd6e <vfprintf+0x26c>
     d3e:	18 f4       	brcc	.+6      	; 0xd46 <vfprintf+0x244>
     d40:	88 35       	cpi	r24, 0x58	; 88
     d42:	79 f0       	breq	.+30     	; 0xd62 <vfprintf+0x260>
     d44:	ad c0       	rjmp	.+346    	; 0xea0 <vfprintf+0x39e>
     d46:	80 37       	cpi	r24, 0x70	; 112
     d48:	19 f0       	breq	.+6      	; 0xd50 <vfprintf+0x24e>
     d4a:	88 37       	cpi	r24, 0x78	; 120
     d4c:	21 f0       	breq	.+8      	; 0xd56 <vfprintf+0x254>
     d4e:	a8 c0       	rjmp	.+336    	; 0xea0 <vfprintf+0x39e>
     d50:	2f 2f       	mov	r18, r31
     d52:	20 61       	ori	r18, 0x10	; 16
     d54:	b2 2e       	mov	r11, r18
     d56:	b4 fe       	sbrs	r11, 4
     d58:	0d c0       	rjmp	.+26     	; 0xd74 <vfprintf+0x272>
     d5a:	8b 2d       	mov	r24, r11
     d5c:	84 60       	ori	r24, 0x04	; 4
     d5e:	b8 2e       	mov	r11, r24
     d60:	09 c0       	rjmp	.+18     	; 0xd74 <vfprintf+0x272>
     d62:	24 ff       	sbrs	r18, 4
     d64:	0a c0       	rjmp	.+20     	; 0xd7a <vfprintf+0x278>
     d66:	9f 2f       	mov	r25, r31
     d68:	96 60       	ori	r25, 0x06	; 6
     d6a:	b9 2e       	mov	r11, r25
     d6c:	06 c0       	rjmp	.+12     	; 0xd7a <vfprintf+0x278>
     d6e:	28 e0       	ldi	r18, 0x08	; 8
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	05 c0       	rjmp	.+10     	; 0xd7e <vfprintf+0x27c>
     d74:	20 e1       	ldi	r18, 0x10	; 16
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <vfprintf+0x27c>
     d7a:	20 e1       	ldi	r18, 0x10	; 16
     d7c:	32 e0       	ldi	r19, 0x02	; 2
     d7e:	f8 01       	movw	r30, r16
     d80:	b7 fe       	sbrs	r11, 7
     d82:	07 c0       	rjmp	.+14     	; 0xd92 <vfprintf+0x290>
     d84:	60 81       	ld	r22, Z
     d86:	71 81       	ldd	r23, Z+1	; 0x01
     d88:	82 81       	ldd	r24, Z+2	; 0x02
     d8a:	93 81       	ldd	r25, Z+3	; 0x03
     d8c:	0c 5f       	subi	r16, 0xFC	; 252
     d8e:	1f 4f       	sbci	r17, 0xFF	; 255
     d90:	06 c0       	rjmp	.+12     	; 0xd9e <vfprintf+0x29c>
     d92:	60 81       	ld	r22, Z
     d94:	71 81       	ldd	r23, Z+1	; 0x01
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	0e 5f       	subi	r16, 0xFE	; 254
     d9c:	1f 4f       	sbci	r17, 0xFF	; 255
     d9e:	a4 01       	movw	r20, r8
     da0:	2e d2       	rcall	.+1116   	; 0x11fe <__ultoa_invert>
     da2:	a8 2e       	mov	r10, r24
     da4:	a8 18       	sub	r10, r8
     da6:	fb 2d       	mov	r31, r11
     da8:	ff 77       	andi	r31, 0x7F	; 127
     daa:	bf 2e       	mov	r11, r31
     dac:	b6 fe       	sbrs	r11, 6
     dae:	0b c0       	rjmp	.+22     	; 0xdc6 <vfprintf+0x2c4>
     db0:	2b 2d       	mov	r18, r11
     db2:	2e 7f       	andi	r18, 0xFE	; 254
     db4:	a5 14       	cp	r10, r5
     db6:	50 f4       	brcc	.+20     	; 0xdcc <vfprintf+0x2ca>
     db8:	b4 fe       	sbrs	r11, 4
     dba:	0a c0       	rjmp	.+20     	; 0xdd0 <vfprintf+0x2ce>
     dbc:	b2 fc       	sbrc	r11, 2
     dbe:	08 c0       	rjmp	.+16     	; 0xdd0 <vfprintf+0x2ce>
     dc0:	2b 2d       	mov	r18, r11
     dc2:	2e 7e       	andi	r18, 0xEE	; 238
     dc4:	05 c0       	rjmp	.+10     	; 0xdd0 <vfprintf+0x2ce>
     dc6:	7a 2c       	mov	r7, r10
     dc8:	2b 2d       	mov	r18, r11
     dca:	03 c0       	rjmp	.+6      	; 0xdd2 <vfprintf+0x2d0>
     dcc:	7a 2c       	mov	r7, r10
     dce:	01 c0       	rjmp	.+2      	; 0xdd2 <vfprintf+0x2d0>
     dd0:	75 2c       	mov	r7, r5
     dd2:	24 ff       	sbrs	r18, 4
     dd4:	0d c0       	rjmp	.+26     	; 0xdf0 <vfprintf+0x2ee>
     dd6:	fe 01       	movw	r30, r28
     dd8:	ea 0d       	add	r30, r10
     dda:	f1 1d       	adc	r31, r1
     ddc:	80 81       	ld	r24, Z
     dde:	80 33       	cpi	r24, 0x30	; 48
     de0:	11 f4       	brne	.+4      	; 0xde6 <vfprintf+0x2e4>
     de2:	29 7e       	andi	r18, 0xE9	; 233
     de4:	09 c0       	rjmp	.+18     	; 0xdf8 <vfprintf+0x2f6>
     de6:	22 ff       	sbrs	r18, 2
     de8:	06 c0       	rjmp	.+12     	; 0xdf6 <vfprintf+0x2f4>
     dea:	73 94       	inc	r7
     dec:	73 94       	inc	r7
     dee:	04 c0       	rjmp	.+8      	; 0xdf8 <vfprintf+0x2f6>
     df0:	82 2f       	mov	r24, r18
     df2:	86 78       	andi	r24, 0x86	; 134
     df4:	09 f0       	breq	.+2      	; 0xdf8 <vfprintf+0x2f6>
     df6:	73 94       	inc	r7
     df8:	23 fd       	sbrc	r18, 3
     dfa:	12 c0       	rjmp	.+36     	; 0xe20 <vfprintf+0x31e>
     dfc:	20 ff       	sbrs	r18, 0
     dfe:	06 c0       	rjmp	.+12     	; 0xe0c <vfprintf+0x30a>
     e00:	5a 2c       	mov	r5, r10
     e02:	73 14       	cp	r7, r3
     e04:	18 f4       	brcc	.+6      	; 0xe0c <vfprintf+0x30a>
     e06:	53 0c       	add	r5, r3
     e08:	57 18       	sub	r5, r7
     e0a:	73 2c       	mov	r7, r3
     e0c:	73 14       	cp	r7, r3
     e0e:	60 f4       	brcc	.+24     	; 0xe28 <vfprintf+0x326>
     e10:	b7 01       	movw	r22, r14
     e12:	80 e2       	ldi	r24, 0x20	; 32
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	2c 87       	std	Y+12, r18	; 0x0c
     e18:	c0 d1       	rcall	.+896    	; 0x119a <fputc>
     e1a:	73 94       	inc	r7
     e1c:	2c 85       	ldd	r18, Y+12	; 0x0c
     e1e:	f6 cf       	rjmp	.-20     	; 0xe0c <vfprintf+0x30a>
     e20:	73 14       	cp	r7, r3
     e22:	10 f4       	brcc	.+4      	; 0xe28 <vfprintf+0x326>
     e24:	37 18       	sub	r3, r7
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <vfprintf+0x328>
     e28:	31 2c       	mov	r3, r1
     e2a:	24 ff       	sbrs	r18, 4
     e2c:	11 c0       	rjmp	.+34     	; 0xe50 <vfprintf+0x34e>
     e2e:	b7 01       	movw	r22, r14
     e30:	80 e3       	ldi	r24, 0x30	; 48
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	2c 87       	std	Y+12, r18	; 0x0c
     e36:	b1 d1       	rcall	.+866    	; 0x119a <fputc>
     e38:	2c 85       	ldd	r18, Y+12	; 0x0c
     e3a:	22 ff       	sbrs	r18, 2
     e3c:	16 c0       	rjmp	.+44     	; 0xe6a <vfprintf+0x368>
     e3e:	21 ff       	sbrs	r18, 1
     e40:	03 c0       	rjmp	.+6      	; 0xe48 <vfprintf+0x346>
     e42:	88 e5       	ldi	r24, 0x58	; 88
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <vfprintf+0x34a>
     e48:	88 e7       	ldi	r24, 0x78	; 120
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	b7 01       	movw	r22, r14
     e4e:	0c c0       	rjmp	.+24     	; 0xe68 <vfprintf+0x366>
     e50:	82 2f       	mov	r24, r18
     e52:	86 78       	andi	r24, 0x86	; 134
     e54:	51 f0       	breq	.+20     	; 0xe6a <vfprintf+0x368>
     e56:	21 fd       	sbrc	r18, 1
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <vfprintf+0x35c>
     e5a:	80 e2       	ldi	r24, 0x20	; 32
     e5c:	01 c0       	rjmp	.+2      	; 0xe60 <vfprintf+0x35e>
     e5e:	8b e2       	ldi	r24, 0x2B	; 43
     e60:	27 fd       	sbrc	r18, 7
     e62:	8d e2       	ldi	r24, 0x2D	; 45
     e64:	b7 01       	movw	r22, r14
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	98 d1       	rcall	.+816    	; 0x119a <fputc>
     e6a:	a5 14       	cp	r10, r5
     e6c:	30 f4       	brcc	.+12     	; 0xe7a <vfprintf+0x378>
     e6e:	b7 01       	movw	r22, r14
     e70:	80 e3       	ldi	r24, 0x30	; 48
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	92 d1       	rcall	.+804    	; 0x119a <fputc>
     e76:	5a 94       	dec	r5
     e78:	f8 cf       	rjmp	.-16     	; 0xe6a <vfprintf+0x368>
     e7a:	aa 94       	dec	r10
     e7c:	f4 01       	movw	r30, r8
     e7e:	ea 0d       	add	r30, r10
     e80:	f1 1d       	adc	r31, r1
     e82:	80 81       	ld	r24, Z
     e84:	b7 01       	movw	r22, r14
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	88 d1       	rcall	.+784    	; 0x119a <fputc>
     e8a:	a1 10       	cpse	r10, r1
     e8c:	f6 cf       	rjmp	.-20     	; 0xe7a <vfprintf+0x378>
     e8e:	33 20       	and	r3, r3
     e90:	09 f4       	brne	.+2      	; 0xe94 <vfprintf+0x392>
     e92:	5d ce       	rjmp	.-838    	; 0xb4e <vfprintf+0x4c>
     e94:	b7 01       	movw	r22, r14
     e96:	80 e2       	ldi	r24, 0x20	; 32
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	7f d1       	rcall	.+766    	; 0x119a <fputc>
     e9c:	3a 94       	dec	r3
     e9e:	f7 cf       	rjmp	.-18     	; 0xe8e <vfprintf+0x38c>
     ea0:	f7 01       	movw	r30, r14
     ea2:	86 81       	ldd	r24, Z+6	; 0x06
     ea4:	97 81       	ldd	r25, Z+7	; 0x07
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <vfprintf+0x3aa>
     ea8:	8f ef       	ldi	r24, 0xFF	; 255
     eaa:	9f ef       	ldi	r25, 0xFF	; 255
     eac:	2c 96       	adiw	r28, 0x0c	; 12
     eae:	0f b6       	in	r0, 0x3f	; 63
     eb0:	f8 94       	cli
     eb2:	de bf       	out	0x3e, r29	; 62
     eb4:	0f be       	out	0x3f, r0	; 63
     eb6:	cd bf       	out	0x3d, r28	; 61
     eb8:	df 91       	pop	r29
     eba:	cf 91       	pop	r28
     ebc:	1f 91       	pop	r17
     ebe:	0f 91       	pop	r16
     ec0:	ff 90       	pop	r15
     ec2:	ef 90       	pop	r14
     ec4:	df 90       	pop	r13
     ec6:	cf 90       	pop	r12
     ec8:	bf 90       	pop	r11
     eca:	af 90       	pop	r10
     ecc:	9f 90       	pop	r9
     ece:	8f 90       	pop	r8
     ed0:	7f 90       	pop	r7
     ed2:	6f 90       	pop	r6
     ed4:	5f 90       	pop	r5
     ed6:	4f 90       	pop	r4
     ed8:	3f 90       	pop	r3
     eda:	2f 90       	pop	r2
     edc:	08 95       	ret

00000ede <calloc>:
     ede:	0f 93       	push	r16
     ee0:	1f 93       	push	r17
     ee2:	cf 93       	push	r28
     ee4:	df 93       	push	r29
     ee6:	86 9f       	mul	r24, r22
     ee8:	80 01       	movw	r16, r0
     eea:	87 9f       	mul	r24, r23
     eec:	10 0d       	add	r17, r0
     eee:	96 9f       	mul	r25, r22
     ef0:	10 0d       	add	r17, r0
     ef2:	11 24       	eor	r1, r1
     ef4:	c8 01       	movw	r24, r16
     ef6:	0d d0       	rcall	.+26     	; 0xf12 <malloc>
     ef8:	ec 01       	movw	r28, r24
     efa:	00 97       	sbiw	r24, 0x00	; 0
     efc:	21 f0       	breq	.+8      	; 0xf06 <calloc+0x28>
     efe:	a8 01       	movw	r20, r16
     f00:	60 e0       	ldi	r22, 0x00	; 0
     f02:	70 e0       	ldi	r23, 0x00	; 0
     f04:	38 d1       	rcall	.+624    	; 0x1176 <memset>
     f06:	ce 01       	movw	r24, r28
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	1f 91       	pop	r17
     f0e:	0f 91       	pop	r16
     f10:	08 95       	ret

00000f12 <malloc>:
     f12:	cf 93       	push	r28
     f14:	df 93       	push	r29
     f16:	82 30       	cpi	r24, 0x02	; 2
     f18:	91 05       	cpc	r25, r1
     f1a:	10 f4       	brcc	.+4      	; 0xf20 <malloc+0xe>
     f1c:	82 e0       	ldi	r24, 0x02	; 2
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	e0 91 cc 02 	lds	r30, 0x02CC
     f24:	f0 91 cd 02 	lds	r31, 0x02CD
     f28:	20 e0       	ldi	r18, 0x00	; 0
     f2a:	30 e0       	ldi	r19, 0x00	; 0
     f2c:	a0 e0       	ldi	r26, 0x00	; 0
     f2e:	b0 e0       	ldi	r27, 0x00	; 0
     f30:	30 97       	sbiw	r30, 0x00	; 0
     f32:	39 f1       	breq	.+78     	; 0xf82 <malloc+0x70>
     f34:	40 81       	ld	r20, Z
     f36:	51 81       	ldd	r21, Z+1	; 0x01
     f38:	48 17       	cp	r20, r24
     f3a:	59 07       	cpc	r21, r25
     f3c:	b8 f0       	brcs	.+46     	; 0xf6c <malloc+0x5a>
     f3e:	48 17       	cp	r20, r24
     f40:	59 07       	cpc	r21, r25
     f42:	71 f4       	brne	.+28     	; 0xf60 <malloc+0x4e>
     f44:	82 81       	ldd	r24, Z+2	; 0x02
     f46:	93 81       	ldd	r25, Z+3	; 0x03
     f48:	10 97       	sbiw	r26, 0x00	; 0
     f4a:	29 f0       	breq	.+10     	; 0xf56 <malloc+0x44>
     f4c:	13 96       	adiw	r26, 0x03	; 3
     f4e:	9c 93       	st	X, r25
     f50:	8e 93       	st	-X, r24
     f52:	12 97       	sbiw	r26, 0x02	; 2
     f54:	2c c0       	rjmp	.+88     	; 0xfae <malloc+0x9c>
     f56:	90 93 cd 02 	sts	0x02CD, r25
     f5a:	80 93 cc 02 	sts	0x02CC, r24
     f5e:	27 c0       	rjmp	.+78     	; 0xfae <malloc+0x9c>
     f60:	21 15       	cp	r18, r1
     f62:	31 05       	cpc	r19, r1
     f64:	31 f0       	breq	.+12     	; 0xf72 <malloc+0x60>
     f66:	42 17       	cp	r20, r18
     f68:	53 07       	cpc	r21, r19
     f6a:	18 f0       	brcs	.+6      	; 0xf72 <malloc+0x60>
     f6c:	a9 01       	movw	r20, r18
     f6e:	db 01       	movw	r26, r22
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <malloc+0x62>
     f72:	ef 01       	movw	r28, r30
     f74:	9a 01       	movw	r18, r20
     f76:	bd 01       	movw	r22, r26
     f78:	df 01       	movw	r26, r30
     f7a:	02 80       	ldd	r0, Z+2	; 0x02
     f7c:	f3 81       	ldd	r31, Z+3	; 0x03
     f7e:	e0 2d       	mov	r30, r0
     f80:	d7 cf       	rjmp	.-82     	; 0xf30 <malloc+0x1e>
     f82:	21 15       	cp	r18, r1
     f84:	31 05       	cpc	r19, r1
     f86:	f9 f0       	breq	.+62     	; 0xfc6 <malloc+0xb4>
     f88:	28 1b       	sub	r18, r24
     f8a:	39 0b       	sbc	r19, r25
     f8c:	24 30       	cpi	r18, 0x04	; 4
     f8e:	31 05       	cpc	r19, r1
     f90:	80 f4       	brcc	.+32     	; 0xfb2 <malloc+0xa0>
     f92:	8a 81       	ldd	r24, Y+2	; 0x02
     f94:	9b 81       	ldd	r25, Y+3	; 0x03
     f96:	61 15       	cp	r22, r1
     f98:	71 05       	cpc	r23, r1
     f9a:	21 f0       	breq	.+8      	; 0xfa4 <malloc+0x92>
     f9c:	fb 01       	movw	r30, r22
     f9e:	93 83       	std	Z+3, r25	; 0x03
     fa0:	82 83       	std	Z+2, r24	; 0x02
     fa2:	04 c0       	rjmp	.+8      	; 0xfac <malloc+0x9a>
     fa4:	90 93 cd 02 	sts	0x02CD, r25
     fa8:	80 93 cc 02 	sts	0x02CC, r24
     fac:	fe 01       	movw	r30, r28
     fae:	32 96       	adiw	r30, 0x02	; 2
     fb0:	44 c0       	rjmp	.+136    	; 0x103a <malloc+0x128>
     fb2:	fe 01       	movw	r30, r28
     fb4:	e2 0f       	add	r30, r18
     fb6:	f3 1f       	adc	r31, r19
     fb8:	81 93       	st	Z+, r24
     fba:	91 93       	st	Z+, r25
     fbc:	22 50       	subi	r18, 0x02	; 2
     fbe:	31 09       	sbc	r19, r1
     fc0:	39 83       	std	Y+1, r19	; 0x01
     fc2:	28 83       	st	Y, r18
     fc4:	3a c0       	rjmp	.+116    	; 0x103a <malloc+0x128>
     fc6:	20 91 ca 02 	lds	r18, 0x02CA
     fca:	30 91 cb 02 	lds	r19, 0x02CB
     fce:	23 2b       	or	r18, r19
     fd0:	41 f4       	brne	.+16     	; 0xfe2 <malloc+0xd0>
     fd2:	20 91 02 02 	lds	r18, 0x0202
     fd6:	30 91 03 02 	lds	r19, 0x0203
     fda:	30 93 cb 02 	sts	0x02CB, r19
     fde:	20 93 ca 02 	sts	0x02CA, r18
     fe2:	20 91 00 02 	lds	r18, 0x0200
     fe6:	30 91 01 02 	lds	r19, 0x0201
     fea:	21 15       	cp	r18, r1
     fec:	31 05       	cpc	r19, r1
     fee:	41 f4       	brne	.+16     	; 0x1000 <malloc+0xee>
     ff0:	2d b7       	in	r18, 0x3d	; 61
     ff2:	3e b7       	in	r19, 0x3e	; 62
     ff4:	40 91 04 02 	lds	r20, 0x0204
     ff8:	50 91 05 02 	lds	r21, 0x0205
     ffc:	24 1b       	sub	r18, r20
     ffe:	35 0b       	sbc	r19, r21
    1000:	e0 91 ca 02 	lds	r30, 0x02CA
    1004:	f0 91 cb 02 	lds	r31, 0x02CB
    1008:	e2 17       	cp	r30, r18
    100a:	f3 07       	cpc	r31, r19
    100c:	a0 f4       	brcc	.+40     	; 0x1036 <malloc+0x124>
    100e:	2e 1b       	sub	r18, r30
    1010:	3f 0b       	sbc	r19, r31
    1012:	28 17       	cp	r18, r24
    1014:	39 07       	cpc	r19, r25
    1016:	78 f0       	brcs	.+30     	; 0x1036 <malloc+0x124>
    1018:	ac 01       	movw	r20, r24
    101a:	4e 5f       	subi	r20, 0xFE	; 254
    101c:	5f 4f       	sbci	r21, 0xFF	; 255
    101e:	24 17       	cp	r18, r20
    1020:	35 07       	cpc	r19, r21
    1022:	48 f0       	brcs	.+18     	; 0x1036 <malloc+0x124>
    1024:	4e 0f       	add	r20, r30
    1026:	5f 1f       	adc	r21, r31
    1028:	50 93 cb 02 	sts	0x02CB, r21
    102c:	40 93 ca 02 	sts	0x02CA, r20
    1030:	81 93       	st	Z+, r24
    1032:	91 93       	st	Z+, r25
    1034:	02 c0       	rjmp	.+4      	; 0x103a <malloc+0x128>
    1036:	e0 e0       	ldi	r30, 0x00	; 0
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	cf 01       	movw	r24, r30
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	08 95       	ret

00001042 <free>:
    1042:	cf 93       	push	r28
    1044:	df 93       	push	r29
    1046:	00 97       	sbiw	r24, 0x00	; 0
    1048:	09 f4       	brne	.+2      	; 0x104c <free+0xa>
    104a:	87 c0       	rjmp	.+270    	; 0x115a <free+0x118>
    104c:	fc 01       	movw	r30, r24
    104e:	32 97       	sbiw	r30, 0x02	; 2
    1050:	13 82       	std	Z+3, r1	; 0x03
    1052:	12 82       	std	Z+2, r1	; 0x02
    1054:	c0 91 cc 02 	lds	r28, 0x02CC
    1058:	d0 91 cd 02 	lds	r29, 0x02CD
    105c:	20 97       	sbiw	r28, 0x00	; 0
    105e:	81 f4       	brne	.+32     	; 0x1080 <free+0x3e>
    1060:	20 81       	ld	r18, Z
    1062:	31 81       	ldd	r19, Z+1	; 0x01
    1064:	28 0f       	add	r18, r24
    1066:	39 1f       	adc	r19, r25
    1068:	80 91 ca 02 	lds	r24, 0x02CA
    106c:	90 91 cb 02 	lds	r25, 0x02CB
    1070:	82 17       	cp	r24, r18
    1072:	93 07       	cpc	r25, r19
    1074:	79 f5       	brne	.+94     	; 0x10d4 <free+0x92>
    1076:	f0 93 cb 02 	sts	0x02CB, r31
    107a:	e0 93 ca 02 	sts	0x02CA, r30
    107e:	6d c0       	rjmp	.+218    	; 0x115a <free+0x118>
    1080:	de 01       	movw	r26, r28
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	ae 17       	cp	r26, r30
    1088:	bf 07       	cpc	r27, r31
    108a:	50 f4       	brcc	.+20     	; 0x10a0 <free+0x5e>
    108c:	12 96       	adiw	r26, 0x02	; 2
    108e:	4d 91       	ld	r20, X+
    1090:	5c 91       	ld	r21, X
    1092:	13 97       	sbiw	r26, 0x03	; 3
    1094:	9d 01       	movw	r18, r26
    1096:	41 15       	cp	r20, r1
    1098:	51 05       	cpc	r21, r1
    109a:	09 f1       	breq	.+66     	; 0x10de <free+0x9c>
    109c:	da 01       	movw	r26, r20
    109e:	f3 cf       	rjmp	.-26     	; 0x1086 <free+0x44>
    10a0:	b3 83       	std	Z+3, r27	; 0x03
    10a2:	a2 83       	std	Z+2, r26	; 0x02
    10a4:	40 81       	ld	r20, Z
    10a6:	51 81       	ldd	r21, Z+1	; 0x01
    10a8:	84 0f       	add	r24, r20
    10aa:	95 1f       	adc	r25, r21
    10ac:	8a 17       	cp	r24, r26
    10ae:	9b 07       	cpc	r25, r27
    10b0:	71 f4       	brne	.+28     	; 0x10ce <free+0x8c>
    10b2:	8d 91       	ld	r24, X+
    10b4:	9c 91       	ld	r25, X
    10b6:	11 97       	sbiw	r26, 0x01	; 1
    10b8:	84 0f       	add	r24, r20
    10ba:	95 1f       	adc	r25, r21
    10bc:	02 96       	adiw	r24, 0x02	; 2
    10be:	91 83       	std	Z+1, r25	; 0x01
    10c0:	80 83       	st	Z, r24
    10c2:	12 96       	adiw	r26, 0x02	; 2
    10c4:	8d 91       	ld	r24, X+
    10c6:	9c 91       	ld	r25, X
    10c8:	13 97       	sbiw	r26, 0x03	; 3
    10ca:	93 83       	std	Z+3, r25	; 0x03
    10cc:	82 83       	std	Z+2, r24	; 0x02
    10ce:	21 15       	cp	r18, r1
    10d0:	31 05       	cpc	r19, r1
    10d2:	29 f4       	brne	.+10     	; 0x10de <free+0x9c>
    10d4:	f0 93 cd 02 	sts	0x02CD, r31
    10d8:	e0 93 cc 02 	sts	0x02CC, r30
    10dc:	3e c0       	rjmp	.+124    	; 0x115a <free+0x118>
    10de:	d9 01       	movw	r26, r18
    10e0:	13 96       	adiw	r26, 0x03	; 3
    10e2:	fc 93       	st	X, r31
    10e4:	ee 93       	st	-X, r30
    10e6:	12 97       	sbiw	r26, 0x02	; 2
    10e8:	4d 91       	ld	r20, X+
    10ea:	5d 91       	ld	r21, X+
    10ec:	a4 0f       	add	r26, r20
    10ee:	b5 1f       	adc	r27, r21
    10f0:	ea 17       	cp	r30, r26
    10f2:	fb 07       	cpc	r31, r27
    10f4:	79 f4       	brne	.+30     	; 0x1114 <free+0xd2>
    10f6:	80 81       	ld	r24, Z
    10f8:	91 81       	ldd	r25, Z+1	; 0x01
    10fa:	84 0f       	add	r24, r20
    10fc:	95 1f       	adc	r25, r21
    10fe:	02 96       	adiw	r24, 0x02	; 2
    1100:	d9 01       	movw	r26, r18
    1102:	11 96       	adiw	r26, 0x01	; 1
    1104:	9c 93       	st	X, r25
    1106:	8e 93       	st	-X, r24
    1108:	82 81       	ldd	r24, Z+2	; 0x02
    110a:	93 81       	ldd	r25, Z+3	; 0x03
    110c:	13 96       	adiw	r26, 0x03	; 3
    110e:	9c 93       	st	X, r25
    1110:	8e 93       	st	-X, r24
    1112:	12 97       	sbiw	r26, 0x02	; 2
    1114:	e0 e0       	ldi	r30, 0x00	; 0
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	8a 81       	ldd	r24, Y+2	; 0x02
    111a:	9b 81       	ldd	r25, Y+3	; 0x03
    111c:	00 97       	sbiw	r24, 0x00	; 0
    111e:	19 f0       	breq	.+6      	; 0x1126 <free+0xe4>
    1120:	fe 01       	movw	r30, r28
    1122:	ec 01       	movw	r28, r24
    1124:	f9 cf       	rjmp	.-14     	; 0x1118 <free+0xd6>
    1126:	ce 01       	movw	r24, r28
    1128:	02 96       	adiw	r24, 0x02	; 2
    112a:	28 81       	ld	r18, Y
    112c:	39 81       	ldd	r19, Y+1	; 0x01
    112e:	82 0f       	add	r24, r18
    1130:	93 1f       	adc	r25, r19
    1132:	20 91 ca 02 	lds	r18, 0x02CA
    1136:	30 91 cb 02 	lds	r19, 0x02CB
    113a:	28 17       	cp	r18, r24
    113c:	39 07       	cpc	r19, r25
    113e:	69 f4       	brne	.+26     	; 0x115a <free+0x118>
    1140:	30 97       	sbiw	r30, 0x00	; 0
    1142:	29 f4       	brne	.+10     	; 0x114e <free+0x10c>
    1144:	10 92 cd 02 	sts	0x02CD, r1
    1148:	10 92 cc 02 	sts	0x02CC, r1
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <free+0x110>
    114e:	13 82       	std	Z+3, r1	; 0x03
    1150:	12 82       	std	Z+2, r1	; 0x02
    1152:	d0 93 cb 02 	sts	0x02CB, r29
    1156:	c0 93 ca 02 	sts	0x02CA, r28
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	08 95       	ret

00001160 <strnlen_P>:
    1160:	fc 01       	movw	r30, r24
    1162:	05 90       	lpm	r0, Z+
    1164:	61 50       	subi	r22, 0x01	; 1
    1166:	70 40       	sbci	r23, 0x00	; 0
    1168:	01 10       	cpse	r0, r1
    116a:	d8 f7       	brcc	.-10     	; 0x1162 <strnlen_P+0x2>
    116c:	80 95       	com	r24
    116e:	90 95       	com	r25
    1170:	8e 0f       	add	r24, r30
    1172:	9f 1f       	adc	r25, r31
    1174:	08 95       	ret

00001176 <memset>:
    1176:	dc 01       	movw	r26, r24
    1178:	01 c0       	rjmp	.+2      	; 0x117c <memset+0x6>
    117a:	6d 93       	st	X+, r22
    117c:	41 50       	subi	r20, 0x01	; 1
    117e:	50 40       	sbci	r21, 0x00	; 0
    1180:	e0 f7       	brcc	.-8      	; 0x117a <memset+0x4>
    1182:	08 95       	ret

00001184 <strnlen>:
    1184:	fc 01       	movw	r30, r24
    1186:	61 50       	subi	r22, 0x01	; 1
    1188:	70 40       	sbci	r23, 0x00	; 0
    118a:	01 90       	ld	r0, Z+
    118c:	01 10       	cpse	r0, r1
    118e:	d8 f7       	brcc	.-10     	; 0x1186 <strnlen+0x2>
    1190:	80 95       	com	r24
    1192:	90 95       	com	r25
    1194:	8e 0f       	add	r24, r30
    1196:	9f 1f       	adc	r25, r31
    1198:	08 95       	ret

0000119a <fputc>:
    119a:	0f 93       	push	r16
    119c:	1f 93       	push	r17
    119e:	cf 93       	push	r28
    11a0:	df 93       	push	r29
    11a2:	18 2f       	mov	r17, r24
    11a4:	09 2f       	mov	r16, r25
    11a6:	eb 01       	movw	r28, r22
    11a8:	8b 81       	ldd	r24, Y+3	; 0x03
    11aa:	81 fd       	sbrc	r24, 1
    11ac:	03 c0       	rjmp	.+6      	; 0x11b4 <fputc+0x1a>
    11ae:	8f ef       	ldi	r24, 0xFF	; 255
    11b0:	9f ef       	ldi	r25, 0xFF	; 255
    11b2:	20 c0       	rjmp	.+64     	; 0x11f4 <fputc+0x5a>
    11b4:	82 ff       	sbrs	r24, 2
    11b6:	10 c0       	rjmp	.+32     	; 0x11d8 <fputc+0x3e>
    11b8:	4e 81       	ldd	r20, Y+6	; 0x06
    11ba:	5f 81       	ldd	r21, Y+7	; 0x07
    11bc:	2c 81       	ldd	r18, Y+4	; 0x04
    11be:	3d 81       	ldd	r19, Y+5	; 0x05
    11c0:	42 17       	cp	r20, r18
    11c2:	53 07       	cpc	r21, r19
    11c4:	7c f4       	brge	.+30     	; 0x11e4 <fputc+0x4a>
    11c6:	e8 81       	ld	r30, Y
    11c8:	f9 81       	ldd	r31, Y+1	; 0x01
    11ca:	9f 01       	movw	r18, r30
    11cc:	2f 5f       	subi	r18, 0xFF	; 255
    11ce:	3f 4f       	sbci	r19, 0xFF	; 255
    11d0:	39 83       	std	Y+1, r19	; 0x01
    11d2:	28 83       	st	Y, r18
    11d4:	10 83       	st	Z, r17
    11d6:	06 c0       	rjmp	.+12     	; 0x11e4 <fputc+0x4a>
    11d8:	e8 85       	ldd	r30, Y+8	; 0x08
    11da:	f9 85       	ldd	r31, Y+9	; 0x09
    11dc:	81 2f       	mov	r24, r17
    11de:	19 95       	eicall
    11e0:	89 2b       	or	r24, r25
    11e2:	29 f7       	brne	.-54     	; 0x11ae <fputc+0x14>
    11e4:	2e 81       	ldd	r18, Y+6	; 0x06
    11e6:	3f 81       	ldd	r19, Y+7	; 0x07
    11e8:	2f 5f       	subi	r18, 0xFF	; 255
    11ea:	3f 4f       	sbci	r19, 0xFF	; 255
    11ec:	3f 83       	std	Y+7, r19	; 0x07
    11ee:	2e 83       	std	Y+6, r18	; 0x06
    11f0:	81 2f       	mov	r24, r17
    11f2:	90 2f       	mov	r25, r16
    11f4:	df 91       	pop	r29
    11f6:	cf 91       	pop	r28
    11f8:	1f 91       	pop	r17
    11fa:	0f 91       	pop	r16
    11fc:	08 95       	ret

000011fe <__ultoa_invert>:
    11fe:	fa 01       	movw	r30, r20
    1200:	aa 27       	eor	r26, r26
    1202:	28 30       	cpi	r18, 0x08	; 8
    1204:	51 f1       	breq	.+84     	; 0x125a <__ultoa_invert+0x5c>
    1206:	20 31       	cpi	r18, 0x10	; 16
    1208:	81 f1       	breq	.+96     	; 0x126a <__ultoa_invert+0x6c>
    120a:	e8 94       	clt
    120c:	6f 93       	push	r22
    120e:	6e 7f       	andi	r22, 0xFE	; 254
    1210:	6e 5f       	subi	r22, 0xFE	; 254
    1212:	7f 4f       	sbci	r23, 0xFF	; 255
    1214:	8f 4f       	sbci	r24, 0xFF	; 255
    1216:	9f 4f       	sbci	r25, 0xFF	; 255
    1218:	af 4f       	sbci	r26, 0xFF	; 255
    121a:	b1 e0       	ldi	r27, 0x01	; 1
    121c:	3e d0       	rcall	.+124    	; 0x129a <__ultoa_invert+0x9c>
    121e:	b4 e0       	ldi	r27, 0x04	; 4
    1220:	3c d0       	rcall	.+120    	; 0x129a <__ultoa_invert+0x9c>
    1222:	67 0f       	add	r22, r23
    1224:	78 1f       	adc	r23, r24
    1226:	89 1f       	adc	r24, r25
    1228:	9a 1f       	adc	r25, r26
    122a:	a1 1d       	adc	r26, r1
    122c:	68 0f       	add	r22, r24
    122e:	79 1f       	adc	r23, r25
    1230:	8a 1f       	adc	r24, r26
    1232:	91 1d       	adc	r25, r1
    1234:	a1 1d       	adc	r26, r1
    1236:	6a 0f       	add	r22, r26
    1238:	71 1d       	adc	r23, r1
    123a:	81 1d       	adc	r24, r1
    123c:	91 1d       	adc	r25, r1
    123e:	a1 1d       	adc	r26, r1
    1240:	20 d0       	rcall	.+64     	; 0x1282 <__ultoa_invert+0x84>
    1242:	09 f4       	brne	.+2      	; 0x1246 <__ultoa_invert+0x48>
    1244:	68 94       	set
    1246:	3f 91       	pop	r19
    1248:	2a e0       	ldi	r18, 0x0A	; 10
    124a:	26 9f       	mul	r18, r22
    124c:	11 24       	eor	r1, r1
    124e:	30 19       	sub	r19, r0
    1250:	30 5d       	subi	r19, 0xD0	; 208
    1252:	31 93       	st	Z+, r19
    1254:	de f6       	brtc	.-74     	; 0x120c <__ultoa_invert+0xe>
    1256:	cf 01       	movw	r24, r30
    1258:	08 95       	ret
    125a:	46 2f       	mov	r20, r22
    125c:	47 70       	andi	r20, 0x07	; 7
    125e:	40 5d       	subi	r20, 0xD0	; 208
    1260:	41 93       	st	Z+, r20
    1262:	b3 e0       	ldi	r27, 0x03	; 3
    1264:	0f d0       	rcall	.+30     	; 0x1284 <__ultoa_invert+0x86>
    1266:	c9 f7       	brne	.-14     	; 0x125a <__ultoa_invert+0x5c>
    1268:	f6 cf       	rjmp	.-20     	; 0x1256 <__ultoa_invert+0x58>
    126a:	46 2f       	mov	r20, r22
    126c:	4f 70       	andi	r20, 0x0F	; 15
    126e:	40 5d       	subi	r20, 0xD0	; 208
    1270:	4a 33       	cpi	r20, 0x3A	; 58
    1272:	18 f0       	brcs	.+6      	; 0x127a <__ultoa_invert+0x7c>
    1274:	49 5d       	subi	r20, 0xD9	; 217
    1276:	31 fd       	sbrc	r19, 1
    1278:	40 52       	subi	r20, 0x20	; 32
    127a:	41 93       	st	Z+, r20
    127c:	02 d0       	rcall	.+4      	; 0x1282 <__ultoa_invert+0x84>
    127e:	a9 f7       	brne	.-22     	; 0x126a <__ultoa_invert+0x6c>
    1280:	ea cf       	rjmp	.-44     	; 0x1256 <__ultoa_invert+0x58>
    1282:	b4 e0       	ldi	r27, 0x04	; 4
    1284:	a6 95       	lsr	r26
    1286:	97 95       	ror	r25
    1288:	87 95       	ror	r24
    128a:	77 95       	ror	r23
    128c:	67 95       	ror	r22
    128e:	ba 95       	dec	r27
    1290:	c9 f7       	brne	.-14     	; 0x1284 <__ultoa_invert+0x86>
    1292:	00 97       	sbiw	r24, 0x00	; 0
    1294:	61 05       	cpc	r22, r1
    1296:	71 05       	cpc	r23, r1
    1298:	08 95       	ret
    129a:	9b 01       	movw	r18, r22
    129c:	ac 01       	movw	r20, r24
    129e:	0a 2e       	mov	r0, r26
    12a0:	06 94       	lsr	r0
    12a2:	57 95       	ror	r21
    12a4:	47 95       	ror	r20
    12a6:	37 95       	ror	r19
    12a8:	27 95       	ror	r18
    12aa:	ba 95       	dec	r27
    12ac:	c9 f7       	brne	.-14     	; 0x12a0 <__ultoa_invert+0xa2>
    12ae:	62 0f       	add	r22, r18
    12b0:	73 1f       	adc	r23, r19
    12b2:	84 1f       	adc	r24, r20
    12b4:	95 1f       	adc	r25, r21
    12b6:	a0 1d       	adc	r26, r0
    12b8:	08 95       	ret

000012ba <_exit>:
    12ba:	f8 94       	cli

000012bc <__stop_program>:
    12bc:	ff cf       	rjmp	.-2      	; 0x12bc <__stop_program>
