
ping_pong_node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b8  00800200  00001b42  00001bd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002b8  008002b8  00001c8e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c8e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000220  00000000  00000000  00001cea  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001fda  00000000  00000000  00001f0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000eb1  00000000  00000000  00003ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001323  00000000  00000000  00004d95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000554  00000000  00000000  000060b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000785  00000000  00000000  0000660c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000137e  00000000  00000000  00006d91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000190  00000000  00000000  0000810f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	28 c6       	rjmp	.+3152   	; 0xcee <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	92 06       	cpc	r9, r18
      e6:	e4 06       	cpc	r14, r20
      e8:	e4 06       	cpc	r14, r20
      ea:	e4 06       	cpc	r14, r20
      ec:	e4 06       	cpc	r14, r20
      ee:	e4 06       	cpc	r14, r20
      f0:	e4 06       	cpc	r14, r20
      f2:	e4 06       	cpc	r14, r20
      f4:	92 06       	cpc	r9, r18
      f6:	e4 06       	cpc	r14, r20
      f8:	e4 06       	cpc	r14, r20
      fa:	e4 06       	cpc	r14, r20
      fc:	e4 06       	cpc	r14, r20
      fe:	e4 06       	cpc	r14, r20
     100:	e4 06       	cpc	r14, r20
     102:	e4 06       	cpc	r14, r20
     104:	94 06       	cpc	r9, r20
     106:	e4 06       	cpc	r14, r20
     108:	e4 06       	cpc	r14, r20
     10a:	e4 06       	cpc	r14, r20
     10c:	e4 06       	cpc	r14, r20
     10e:	e4 06       	cpc	r14, r20
     110:	e4 06       	cpc	r14, r20
     112:	e4 06       	cpc	r14, r20
     114:	e4 06       	cpc	r14, r20
     116:	e4 06       	cpc	r14, r20
     118:	e4 06       	cpc	r14, r20
     11a:	e4 06       	cpc	r14, r20
     11c:	e4 06       	cpc	r14, r20
     11e:	e4 06       	cpc	r14, r20
     120:	e4 06       	cpc	r14, r20
     122:	e4 06       	cpc	r14, r20
     124:	94 06       	cpc	r9, r20
     126:	e4 06       	cpc	r14, r20
     128:	e4 06       	cpc	r14, r20
     12a:	e4 06       	cpc	r14, r20
     12c:	e4 06       	cpc	r14, r20
     12e:	e4 06       	cpc	r14, r20
     130:	e4 06       	cpc	r14, r20
     132:	e4 06       	cpc	r14, r20
     134:	e4 06       	cpc	r14, r20
     136:	e4 06       	cpc	r14, r20
     138:	e4 06       	cpc	r14, r20
     13a:	e4 06       	cpc	r14, r20
     13c:	e4 06       	cpc	r14, r20
     13e:	e4 06       	cpc	r14, r20
     140:	e4 06       	cpc	r14, r20
     142:	e4 06       	cpc	r14, r20
     144:	e0 06       	cpc	r14, r16
     146:	e4 06       	cpc	r14, r20
     148:	e4 06       	cpc	r14, r20
     14a:	e4 06       	cpc	r14, r20
     14c:	e4 06       	cpc	r14, r20
     14e:	e4 06       	cpc	r14, r20
     150:	e4 06       	cpc	r14, r20
     152:	e4 06       	cpc	r14, r20
     154:	bd 06       	cpc	r11, r29
     156:	e4 06       	cpc	r14, r20
     158:	e4 06       	cpc	r14, r20
     15a:	e4 06       	cpc	r14, r20
     15c:	e4 06       	cpc	r14, r20
     15e:	e4 06       	cpc	r14, r20
     160:	e4 06       	cpc	r14, r20
     162:	e4 06       	cpc	r14, r20
     164:	e4 06       	cpc	r14, r20
     166:	e4 06       	cpc	r14, r20
     168:	e4 06       	cpc	r14, r20
     16a:	e4 06       	cpc	r14, r20
     16c:	e4 06       	cpc	r14, r20
     16e:	e4 06       	cpc	r14, r20
     170:	e4 06       	cpc	r14, r20
     172:	e4 06       	cpc	r14, r20
     174:	b1 06       	cpc	r11, r17
     176:	e4 06       	cpc	r14, r20
     178:	e4 06       	cpc	r14, r20
     17a:	e4 06       	cpc	r14, r20
     17c:	e4 06       	cpc	r14, r20
     17e:	e4 06       	cpc	r14, r20
     180:	e4 06       	cpc	r14, r20
     182:	e4 06       	cpc	r14, r20
     184:	cf 06       	cpc	r12, r31

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e2 e4       	ldi	r30, 0x42	; 66
     19e:	fb e1       	ldi	r31, 0x1B	; 27
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a8 3b       	cpi	r26, 0xB8	; 184
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a8 eb       	ldi	r26, 0xB8	; 184
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	ad 3c       	cpi	r26, 0xCD	; 205
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	45 d1       	rcall	.+650    	; 0x44c <main>
     1c2:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <adc_init>:
     1c8:	ea e7       	ldi	r30, 0x7A	; 122
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	87 60       	ori	r24, 0x07	; 7
     1d0:	80 83       	st	Z, r24
     1d2:	80 81       	ld	r24, Z
     1d4:	80 68       	ori	r24, 0x80	; 128
     1d6:	80 83       	st	Z, r24
     1d8:	08 95       	ret

000001da <adc_read>:
     1da:	ec e7       	ldi	r30, 0x7C	; 124
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	80 68       	ori	r24, 0x80	; 128
     1e2:	80 83       	st	Z, r24
     1e4:	ea e7       	ldi	r30, 0x7A	; 122
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	80 64       	ori	r24, 0x40	; 64
     1ec:	80 83       	st	Z, r24
     1ee:	80 81       	ld	r24, Z
     1f0:	86 fd       	sbrc	r24, 6
     1f2:	fd cf       	rjmp	.-6      	; 0x1ee <adc_read+0x14>
     1f4:	20 91 78 00 	lds	r18, 0x0078
     1f8:	30 91 79 00 	lds	r19, 0x0079
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	24 36       	cpi	r18, 0x64	; 100
     202:	31 05       	cpc	r19, r1
     204:	10 f4       	brcc	.+4      	; 0x20a <adc_read+0x30>
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	08 95       	ret

0000020c <can_init>:
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	cd b7       	in	r28, 0x3d	; 61
     212:	de b7       	in	r29, 0x3e	; 62
     214:	2a 97       	sbiw	r28, 0x0a	; 10
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	f8 d1       	rcall	.+1008   	; 0x612 <mcp2515_init>
     222:	41 e0       	ldi	r20, 0x01	; 1
     224:	60 e6       	ldi	r22, 0x60	; 96
     226:	80 e6       	ldi	r24, 0x60	; 96
     228:	16 d2       	rcall	.+1068   	; 0x656 <mcp2515_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     22a:	8f ef       	ldi	r24, 0xFF	; 255
     22c:	9f e8       	ldi	r25, 0x8F	; 143
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <can_init+0x22>
     232:	00 c0       	rjmp	.+0      	; 0x234 <can_init+0x28>
     234:	00 00       	nop
     236:	41 e0       	ldi	r20, 0x01	; 1
     238:	61 e0       	ldi	r22, 0x01	; 1
     23a:	8b e2       	ldi	r24, 0x2B	; 43
     23c:	32 d2       	rcall	.+1124   	; 0x6a2 <mcp2515_bit_modify>
     23e:	8f ef       	ldi	r24, 0xFF	; 255
     240:	9f e8       	ldi	r25, 0x8F	; 143
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <can_init+0x36>
     246:	00 c0       	rjmp	.+0      	; 0x248 <can_init+0x3c>
     248:	00 00       	nop
     24a:	40 e0       	ldi	r20, 0x00	; 0
     24c:	60 ee       	ldi	r22, 0xE0	; 224
     24e:	8f e0       	ldi	r24, 0x0F	; 15
     250:	28 d2       	rcall	.+1104   	; 0x6a2 <mcp2515_bit_modify>
     252:	8f ef       	ldi	r24, 0xFF	; 255
     254:	9f e8       	ldi	r25, 0x8F	; 143
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <can_init+0x4a>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <can_init+0x50>
     25c:	00 00       	nop
     25e:	4a e0       	ldi	r20, 0x0A	; 10
     260:	be 01       	movw	r22, r28
     262:	6f 5f       	subi	r22, 0xFF	; 255
     264:	7f 4f       	sbci	r23, 0xFF	; 255
     266:	8e e0       	ldi	r24, 0x0E	; 14
     268:	d7 d1       	rcall	.+942    	; 0x618 <mcp2515_read>
     26a:	89 81       	ldd	r24, Y+1	; 0x01
     26c:	80 7e       	andi	r24, 0xE0	; 224
     26e:	a9 f0       	breq	.+42     	; 0x29a <can_init+0x8e>
     270:	1f 92       	push	r1
     272:	8f 93       	push	r24
     274:	87 e1       	ldi	r24, 0x17	; 23
     276:	92 e0       	ldi	r25, 0x02	; 2
     278:	9f 93       	push	r25
     27a:	8f 93       	push	r24
     27c:	0e 94 85 09 	call	0x130a	; 0x130a <printf>
     280:	8b ea       	ldi	r24, 0xAB	; 171
     282:	92 e0       	ldi	r25, 0x02	; 2
     284:	9f 93       	push	r25
     286:	8f 93       	push	r24
     288:	0e 94 85 09 	call	0x130a	; 0x130a <printf>
     28c:	0f 90       	pop	r0
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	0f 90       	pop	r0
     296:	0f 90       	pop	r0
     298:	08 c0       	rjmp	.+16     	; 0x2aa <can_init+0x9e>
     29a:	8b e5       	ldi	r24, 0x5B	; 91
     29c:	92 e0       	ldi	r25, 0x02	; 2
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	0e 94 85 09 	call	0x130a	; 0x130a <printf>
     2a6:	0f 90       	pop	r0
     2a8:	0f 90       	pop	r0
     2aa:	2a 96       	adiw	r28, 0x0a	; 10
     2ac:	0f b6       	in	r0, 0x3f	; 63
     2ae:	f8 94       	cli
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	cd bf       	out	0x3d, r28	; 61
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <can_message_send>:
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	ec 01       	movw	r28, r24
     2c4:	41 e0       	ldi	r20, 0x01	; 1
     2c6:	6a 81       	ldd	r22, Y+2	; 0x02
     2c8:	85 e3       	ldi	r24, 0x35	; 53
     2ca:	c5 d1       	rcall	.+906    	; 0x656 <mcp2515_write>
     2cc:	41 e0       	ldi	r20, 0x01	; 1
     2ce:	68 81       	ld	r22, Y
     2d0:	81 e3       	ldi	r24, 0x31	; 49
     2d2:	c1 d1       	rcall	.+898    	; 0x656 <mcp2515_write>
     2d4:	41 e0       	ldi	r20, 0x01	; 1
     2d6:	68 81       	ld	r22, Y
     2d8:	82 e3       	ldi	r24, 0x32	; 50
     2da:	bd d1       	rcall	.+890    	; 0x656 <mcp2515_write>
     2dc:	8a 81       	ldd	r24, Y+2	; 0x02
     2de:	88 23       	and	r24, r24
     2e0:	61 f0       	breq	.+24     	; 0x2fa <can_message_send+0x3e>
     2e2:	10 e0       	ldi	r17, 0x00	; 0
     2e4:	fe 01       	movw	r30, r28
     2e6:	e1 0f       	add	r30, r17
     2e8:	f1 1d       	adc	r31, r1
     2ea:	41 e0       	ldi	r20, 0x01	; 1
     2ec:	63 81       	ldd	r22, Z+3	; 0x03
     2ee:	86 e3       	ldi	r24, 0x36	; 54
     2f0:	b2 d1       	rcall	.+868    	; 0x656 <mcp2515_write>
     2f2:	1f 5f       	subi	r17, 0xFF	; 255
     2f4:	8a 81       	ldd	r24, Y+2	; 0x02
     2f6:	18 17       	cp	r17, r24
     2f8:	a8 f3       	brcs	.-22     	; 0x2e4 <can_message_send+0x28>
     2fa:	8b ea       	ldi	r24, 0xAB	; 171
     2fc:	92 e0       	ldi	r25, 0x02	; 2
     2fe:	9f 93       	push	r25
     300:	8f 93       	push	r24
     302:	0e 94 85 09 	call	0x130a	; 0x130a <printf>
     306:	81 e8       	ldi	r24, 0x81	; 129
     308:	bc d1       	rcall	.+888    	; 0x682 <mcp2515_request>
     30a:	0f 90       	pop	r0
     30c:	0f 90       	pop	r0
     30e:	df 91       	pop	r29
     310:	cf 91       	pop	r28
     312:	1f 91       	pop	r17
     314:	08 95       	ret

00000316 <can_data_receive>:
     316:	ff 92       	push	r15
     318:	0f 93       	push	r16
     31a:	1f 93       	push	r17
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	2a 97       	sbiw	r28, 0x0a	; 10
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	8c 01       	movw	r16, r24
     332:	f6 2e       	mov	r15, r22
     334:	41 e0       	ldi	r20, 0x01	; 1
     336:	be 01       	movw	r22, r28
     338:	6f 5f       	subi	r22, 0xFF	; 255
     33a:	7f 4f       	sbci	r23, 0xFF	; 255
     33c:	8c e2       	ldi	r24, 0x2C	; 44
     33e:	6c d1       	rcall	.+728    	; 0x618 <mcp2515_read>
     340:	89 81       	ldd	r24, Y+1	; 0x01
     342:	81 11       	cpse	r24, r1
     344:	0b c0       	rjmp	.+22     	; 0x35c <can_data_receive+0x46>
     346:	1f 92       	push	r1
     348:	1f 92       	push	r1
     34a:	2d e6       	ldi	r18, 0x6D	; 109
     34c:	32 e0       	ldi	r19, 0x02	; 2
     34e:	3f 93       	push	r19
     350:	2f 93       	push	r18
     352:	db d7       	rcall	.+4022   	; 0x130a <printf>
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
     35c:	41 e0       	ldi	r20, 0x01	; 1
     35e:	be 01       	movw	r22, r28
     360:	6f 5f       	subi	r22, 0xFF	; 255
     362:	7f 4f       	sbci	r23, 0xFF	; 255
     364:	85 e6       	ldi	r24, 0x65	; 101
     366:	8f 0d       	add	r24, r15
     368:	57 d1       	rcall	.+686    	; 0x618 <mcp2515_read>
     36a:	89 81       	ldd	r24, Y+1	; 0x01
     36c:	f8 01       	movw	r30, r16
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	41 e0       	ldi	r20, 0x01	; 1
     372:	be 01       	movw	r22, r28
     374:	6f 5f       	subi	r22, 0xFF	; 255
     376:	7f 4f       	sbci	r23, 0xFF	; 255
     378:	81 e6       	ldi	r24, 0x61	; 97
     37a:	8f 0d       	add	r24, r15
     37c:	4d d1       	rcall	.+666    	; 0x618 <mcp2515_read>
     37e:	29 81       	ldd	r18, Y+1	; 0x01
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	f8 01       	movw	r30, r16
     384:	31 83       	std	Z+1, r19	; 0x01
     386:	20 83       	st	Z, r18
     388:	42 81       	ldd	r20, Z+2	; 0x02
     38a:	be 01       	movw	r22, r28
     38c:	6f 5f       	subi	r22, 0xFF	; 255
     38e:	7f 4f       	sbci	r23, 0xFF	; 255
     390:	86 e6       	ldi	r24, 0x66	; 102
     392:	8f 0d       	add	r24, r15
     394:	41 d1       	rcall	.+642    	; 0x618 <mcp2515_read>
     396:	f8 01       	movw	r30, r16
     398:	92 81       	ldd	r25, Z+2	; 0x02
     39a:	99 23       	and	r25, r25
     39c:	61 f0       	breq	.+24     	; 0x3b6 <can_data_receive+0xa0>
     39e:	9e 01       	movw	r18, r28
     3a0:	2f 5f       	subi	r18, 0xFF	; 255
     3a2:	3f 4f       	sbci	r19, 0xFF	; 255
     3a4:	d8 01       	movw	r26, r16
     3a6:	13 96       	adiw	r26, 0x03	; 3
     3a8:	f9 01       	movw	r30, r18
     3aa:	81 91       	ld	r24, Z+
     3ac:	8d 93       	st	X+, r24
     3ae:	8e 2f       	mov	r24, r30
     3b0:	82 1b       	sub	r24, r18
     3b2:	89 17       	cp	r24, r25
     3b4:	d0 f3       	brcs	.-12     	; 0x3aa <can_data_receive+0x94>
     3b6:	40 e0       	ldi	r20, 0x00	; 0
     3b8:	61 e0       	ldi	r22, 0x01	; 1
     3ba:	8c e2       	ldi	r24, 0x2C	; 44
     3bc:	72 d1       	rcall	.+740    	; 0x6a2 <mcp2515_bit_modify>
     3be:	2a 96       	adiw	r28, 0x0a	; 10
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
     3ca:	df 91       	pop	r29
     3cc:	cf 91       	pop	r28
     3ce:	1f 91       	pop	r17
     3d0:	0f 91       	pop	r16
     3d2:	ff 90       	pop	r15
     3d4:	08 95       	ret

000003d6 <can_get_message>:
     3d6:	0f 93       	push	r16
     3d8:	1f 93       	push	r17
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	2a 97       	sbiw	r28, 0x0a	; 10
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	f8 94       	cli
     3e8:	de bf       	out	0x3e, r29	; 62
     3ea:	0f be       	out	0x3f, r0	; 63
     3ec:	cd bf       	out	0x3d, r28	; 61
     3ee:	8c 01       	movw	r16, r24
     3f0:	41 e0       	ldi	r20, 0x01	; 1
     3f2:	be 01       	movw	r22, r28
     3f4:	6f 5f       	subi	r22, 0xFF	; 255
     3f6:	7f 4f       	sbci	r23, 0xFF	; 255
     3f8:	8c e2       	ldi	r24, 0x2C	; 44
     3fa:	0e d1       	rcall	.+540    	; 0x618 <mcp2515_read>
     3fc:	89 81       	ldd	r24, Y+1	; 0x01
     3fe:	80 ff       	sbrs	r24, 0
     400:	0b c0       	rjmp	.+22     	; 0x418 <can_get_message+0x42>
     402:	60 e0       	ldi	r22, 0x00	; 0
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	c8 01       	movw	r24, r16
     408:	86 df       	rcall	.-244    	; 0x316 <can_data_receive>
     40a:	40 e0       	ldi	r20, 0x00	; 0
     40c:	61 e0       	ldi	r22, 0x01	; 1
     40e:	8c e2       	ldi	r24, 0x2C	; 44
     410:	48 d1       	rcall	.+656    	; 0x6a2 <mcp2515_bit_modify>
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0f c0       	rjmp	.+30     	; 0x436 <can_get_message+0x60>
     418:	81 ff       	sbrs	r24, 1
     41a:	0b c0       	rjmp	.+22     	; 0x432 <can_get_message+0x5c>
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	70 e0       	ldi	r23, 0x00	; 0
     420:	c8 01       	movw	r24, r16
     422:	79 df       	rcall	.-270    	; 0x316 <can_data_receive>
     424:	40 e0       	ldi	r20, 0x00	; 0
     426:	62 e0       	ldi	r22, 0x02	; 2
     428:	8c e2       	ldi	r24, 0x2C	; 44
     42a:	3b d1       	rcall	.+630    	; 0x6a2 <mcp2515_bit_modify>
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	02 c0       	rjmp	.+4      	; 0x436 <can_get_message+0x60>
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	2a 96       	adiw	r28, 0x0a	; 10
     438:	0f b6       	in	r0, 0x3f	; 63
     43a:	f8 94       	cli
     43c:	de bf       	out	0x3e, r29	; 62
     43e:	0f be       	out	0x3f, r0	; 63
     440:	cd bf       	out	0x3d, r28	; 61
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	1f 91       	pop	r17
     448:	0f 91       	pop	r16
     44a:	08 95       	ret

0000044c <main>:
#include "pwm.h"
#include "adc.h"
#include "motor.h"


int main(void){
     44c:	cf 93       	push	r28
     44e:	df 93       	push	r29
     450:	cd b7       	in	r28, 0x3d	; 61
     452:	de b7       	in	r29, 0x3e	; 62
     454:	a7 97       	sbiw	r28, 0x27	; 39
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	de bf       	out	0x3e, r29	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	cd bf       	out	0x3d, r28	; 61
	
	DDRD |= (1 << PD3);//init solenoid
     460:	53 9a       	sbi	0x0a, 3	; 10
	PORTD &= (1 << PD3);//init solenoid
     462:	8b b1       	in	r24, 0x0b	; 11
     464:	88 70       	andi	r24, 0x08	; 8
     466:	8b b9       	out	0x0b, r24	; 11
	
	USART_Init(MYUBRR);
     468:	87 e6       	ldi	r24, 0x67	; 103
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	d3 d4       	rcall	.+2470   	; 0xe14 <USART_Init>
	printf("start \n\r \n");
     46e:	8f e7       	ldi	r24, 0x7F	; 127
     470:	92 e0       	ldi	r25, 0x02	; 2
     472:	5c d7       	rcall	.+3768   	; 0x132c <puts>
	
	can_init();
     474:	cb de       	rcall	.-618    	; 0x20c <can_init>
	
	struct can_message message_input;
	message_input.id = 1;
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	89 83       	std	Y+1, r24	; 0x01
	message_input.length = 1;
     47e:	21 e0       	ldi	r18, 0x01	; 1
     480:	2b 83       	std	Y+3, r18	; 0x03
	message_input.data[0] = (uint8_t) 0;
     482:	1c 82       	std	Y+4, r1	; 0x04
	
	struct can_message message_score;
	message_score.id = 1;
     484:	9f 87       	std	Y+15, r25	; 0x0f
     486:	8e 87       	std	Y+14, r24	; 0x0e
	message_score.length = 1;
     488:	28 8b       	std	Y+16, r18	; 0x10
	message_score.data[0] = (uint8_t) 0;
     48a:	19 8a       	std	Y+17, r1	; 0x11
	
	struct can_message message_game_over;
	message_game_over.id = 2;
     48c:	82 e0       	ldi	r24, 0x02	; 2
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	9c 8f       	std	Y+28, r25	; 0x1c
     492:	8b 8f       	std	Y+27, r24	; 0x1b
	message_game_over.length = 1;
     494:	2d 8f       	std	Y+29, r18	; 0x1d
	message_game_over.data[0] = (uint8_t) 1;
     496:	2e 8f       	std	Y+30, r18	; 0x1e
	

	pwm_init();	
     498:	48 d3       	rcall	.+1680   	; 0xb2a <pwm_init>
	adc_init();
     49a:	96 de       	rcall	.-724    	; 0x1c8 <adc_init>
	
	float pw = 1500;
	float x_val = 130;
	
	int old_val = adc_read();
     49c:	9e de       	rcall	.-708    	; 0x1da <adc_read>
     49e:	8c 01       	movw	r16, r24
	int new_val = adc_read();
     4a0:	9c de       	rcall	.-712    	; 0x1da <adc_read>
	
	int succesfull_bounce = 0;
	sei();
     4a2:	78 94       	sei
	motor_init();
     4a4:	33 d1       	rcall	.+614    	; 0x70c <motor_init>
	
	motor_reset_encoder();
     4a6:	91 d1       	rcall	.+802    	; 0x7ca <motor_reset_encoder>
	motor_dac_write(0);
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	13 d1       	rcall	.+550    	; 0x6d2 <motor_dac_write>
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
	
	uint8_t gain_choise = 0;
     4ac:	71 2c       	mov	r7, r1
	
	motor_reset_encoder();
	motor_dac_write(0);
	int16_t encoder = 0;
	
	int enable_game_fail = 0;
     4ae:	e1 2c       	mov	r14, r1
     4b0:	f1 2c       	mov	r15, r1
	float x_val = 130;
	
	int old_val = adc_read();
	int new_val = adc_read();
	
	int succesfull_bounce = 0;
     4b2:	c1 2c       	mov	r12, r1
     4b4:	d1 2c       	mov	r13, r1
			}
			else if(message_input.id == 2){
				motor_pid_controller(message_input.data[0]);
			}
			else if(message_input.id == 3){	
				printf("shot \n\r");			
     4b6:	0f 2e       	mov	r0, r31
     4b8:	f9 e8       	ldi	r31, 0x89	; 137
     4ba:	af 2e       	mov	r10, r31
     4bc:	f2 e0       	ldi	r31, 0x02	; 2
     4be:	bf 2e       	mov	r11, r31
     4c0:	f0 2d       	mov	r31, r0
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
				message_score.data[0] = succesfull_bounce;
				can_message_send(&message_score);
				enable_game_fail = 1;				
     4c2:	33 24       	eor	r3, r3
     4c4:	33 94       	inc	r3
     4c6:	41 2c       	mov	r4, r1
     4c8:	51 2c       	mov	r5, r1
     4ca:	61 2c       	mov	r6, r1
	int enable_game_fail = 0;
	
	uint8_t gain_choise = 0;

    while(1){
		if(can_get_message(&message_input)){
     4cc:	ce 01       	movw	r24, r28
     4ce:	01 96       	adiw	r24, 0x01	; 1
     4d0:	82 df       	rcall	.-252    	; 0x3d6 <can_get_message>
     4d2:	89 2b       	or	r24, r25
     4d4:	09 f4       	brne	.+2      	; 0x4d8 <main+0x8c>
     4d6:	57 c0       	rjmp	.+174    	; 0x586 <main+0x13a>
			if(message_input.id == 1){
     4d8:	89 81       	ldd	r24, Y+1	; 0x01
     4da:	9a 81       	ldd	r25, Y+2	; 0x02
     4dc:	81 30       	cpi	r24, 0x01	; 1
     4de:	91 05       	cpc	r25, r1
     4e0:	79 f4       	brne	.+30     	; 0x500 <main+0xb4>
				x_val = 255-(float) message_input.data[0];
     4e2:	6c 81       	ldd	r22, Y+4	; 0x04
     4e4:	70 e0       	ldi	r23, 0x00	; 0
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	a6 d5       	rcall	.+2892   	; 0x1038 <__floatunsisf>
     4ec:	9b 01       	movw	r18, r22
     4ee:	ac 01       	movw	r20, r24
     4f0:	60 e0       	ldi	r22, 0x00	; 0
     4f2:	70 e0       	ldi	r23, 0x00	; 0
     4f4:	8f e7       	ldi	r24, 0x7F	; 127
     4f6:	93 e4       	ldi	r25, 0x43	; 67
     4f8:	9d d4       	rcall	.+2362   	; 0xe34 <__subsf3>
				pw = pwm_scale_joystick_val(x_val);
     4fa:	7f d3       	rcall	.+1790   	; 0xbfa <pwm_scale_joystick_val>
				pwm_set_pulse_width(pw);
     4fc:	35 d3       	rcall	.+1642   	; 0xb68 <pwm_set_pulse_width>
     4fe:	43 c0       	rjmp	.+134    	; 0x586 <main+0x13a>
				
			}
			else if(message_input.id == 2){
     500:	82 30       	cpi	r24, 0x02	; 2
     502:	91 05       	cpc	r25, r1
     504:	19 f4       	brne	.+6      	; 0x50c <main+0xc0>
				motor_pid_controller(message_input.data[0]);
     506:	8c 81       	ldd	r24, Y+4	; 0x04
     508:	6d d1       	rcall	.+730    	; 0x7e4 <motor_pid_controller>
     50a:	3d c0       	rjmp	.+122    	; 0x586 <main+0x13a>
			}
			else if(message_input.id == 3){	
     50c:	83 30       	cpi	r24, 0x03	; 3
     50e:	91 05       	cpc	r25, r1
     510:	f1 f4       	brne	.+60     	; 0x54e <main+0x102>
				printf("shot \n\r");			
     512:	bf 92       	push	r11
     514:	af 92       	push	r10
     516:	f9 d6       	rcall	.+3570   	; 0x130a <printf>
				PORTD |= (1 << PD3);
     518:	5b 9a       	sbi	0x0b, 3	; 11
     51a:	2f ef       	ldi	r18, 0xFF	; 255
     51c:	81 ee       	ldi	r24, 0xE1	; 225
     51e:	94 e0       	ldi	r25, 0x04	; 4
     520:	21 50       	subi	r18, 0x01	; 1
     522:	80 40       	sbci	r24, 0x00	; 0
     524:	90 40       	sbci	r25, 0x00	; 0
     526:	e1 f7       	brne	.-8      	; 0x520 <main+0xd4>
     528:	00 c0       	rjmp	.+0      	; 0x52a <main+0xde>
     52a:	00 00       	nop
				_delay_ms(100);
				PORTD &= ~(1 << PD3);
     52c:	5b 98       	cbi	0x0b, 3	; 11
     52e:	0f 90       	pop	r0
     530:	0f 90       	pop	r0
     532:	dd 20       	and	r13, r13
     534:	14 f4       	brge	.+4      	; 0x53a <main+0xee>
     536:	c5 2c       	mov	r12, r5
     538:	d6 2c       	mov	r13, r6
				if (succesfull_bounce < 0)
				{
					succesfull_bounce = 0;
				}
				succesfull_bounce++;
     53a:	af ef       	ldi	r26, 0xFF	; 255
     53c:	ca 1a       	sub	r12, r26
     53e:	da 0a       	sbc	r13, r26
				message_score.data[0] = succesfull_bounce;
     540:	c9 8a       	std	Y+17, r12	; 0x11
				can_message_send(&message_score);
     542:	ce 01       	movw	r24, r28
     544:	0e 96       	adiw	r24, 0x0e	; 14
     546:	ba de       	rcall	.-652    	; 0x2bc <can_message_send>
				enable_game_fail = 1;				
     548:	e3 2c       	mov	r14, r3
     54a:	f4 2c       	mov	r15, r4
     54c:	1c c0       	rjmp	.+56     	; 0x586 <main+0x13a>
			}
			else if (message_input.id == 4){
     54e:	84 30       	cpi	r24, 0x04	; 4
     550:	91 05       	cpc	r25, r1
     552:	29 f4       	brne	.+10     	; 0x55e <main+0x112>
				gain_choise = message_input.data[0];
     554:	7c 80       	ldd	r7, Y+4	; 0x04
				motor_set_gain(gain_choise);
     556:	87 2d       	mov	r24, r7
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	23 d2       	rcall	.+1094   	; 0x9a2 <motor_set_gain>
     55c:	14 c0       	rjmp	.+40     	; 0x586 <main+0x13a>
			}else if (message_input.id == 5){
     55e:	05 97       	sbiw	r24, 0x05	; 5
     560:	91 f4       	brne	.+36     	; 0x586 <main+0x13a>
				int gain_val = message_input.data[0];
     562:	8c 81       	ldd	r24, Y+4	; 0x04
     564:	88 2e       	mov	r8, r24
     566:	91 2c       	mov	r9, r1
				printf("kp  %d \n\r", gain_val);
     568:	1f 92       	push	r1
     56a:	8f 93       	push	r24
     56c:	a1 e9       	ldi	r26, 0x91	; 145
     56e:	b2 e0       	ldi	r27, 0x02	; 2
     570:	bf 93       	push	r27
     572:	af 93       	push	r26
     574:	ca d6       	rcall	.+3476   	; 0x130a <printf>
				motor_tune_gain(gain_choise, gain_val);
     576:	b4 01       	movw	r22, r8
     578:	87 2d       	mov	r24, r7
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	83 d2       	rcall	.+1286   	; 0xa84 <motor_tune_gain>
     57e:	0f 90       	pop	r0
     580:	0f 90       	pop	r0
     582:	0f 90       	pop	r0
     584:	0f 90       	pop	r0
			}			
		}

		
		
		new_val = adc_read();
     586:	29 de       	rcall	.-942    	; 0x1da <adc_read>

		
		if( (old_val == 0) && (new_val == 1) )
     588:	01 15       	cp	r16, r1
     58a:	11 05       	cpc	r17, r1
     58c:	79 f4       	brne	.+30     	; 0x5ac <main+0x160>
     58e:	01 97       	sbiw	r24, 0x01	; 1
     590:	09 f0       	breq	.+2      	; 0x594 <main+0x148>
     592:	9c cf       	rjmp	.-200    	; 0x4cc <main+0x80>
     594:	8f ef       	ldi	r24, 0xFF	; 255
     596:	90 e7       	ldi	r25, 0x70	; 112
     598:	a2 e0       	ldi	r26, 0x02	; 2
     59a:	81 50       	subi	r24, 0x01	; 1
     59c:	90 40       	sbci	r25, 0x00	; 0
     59e:	a0 40       	sbci	r26, 0x00	; 0
     5a0:	e1 f7       	brne	.-8      	; 0x59a <main+0x14e>
     5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <main+0x158>
     5a4:	00 00       	nop
		{
			old_val = 1;
     5a6:	03 2d       	mov	r16, r3
     5a8:	14 2d       	mov	r17, r4
     5aa:	90 cf       	rjmp	.-224    	; 0x4cc <main+0x80>
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
     5ac:	01 30       	cpi	r16, 0x01	; 1
     5ae:	11 05       	cpc	r17, r1
     5b0:	09 f0       	breq	.+2      	; 0x5b4 <main+0x168>
     5b2:	8c cf       	rjmp	.-232    	; 0x4cc <main+0x80>
     5b4:	89 2b       	or	r24, r25
     5b6:	09 f0       	breq	.+2      	; 0x5ba <main+0x16e>
     5b8:	89 cf       	rjmp	.-238    	; 0x4cc <main+0x80>
     5ba:	e1 14       	cp	r14, r1
     5bc:	f1 04       	cpc	r15, r1
     5be:	09 f4       	brne	.+2      	; 0x5c2 <main+0x176>
     5c0:	85 cf       	rjmp	.-246    	; 0x4cc <main+0x80>
     5c2:	bf ef       	ldi	r27, 0xFF	; 255
     5c4:	20 e7       	ldi	r18, 0x70	; 112
     5c6:	82 e0       	ldi	r24, 0x02	; 2
     5c8:	b1 50       	subi	r27, 0x01	; 1
     5ca:	20 40       	sbci	r18, 0x00	; 0
     5cc:	80 40       	sbci	r24, 0x00	; 0
     5ce:	e1 f7       	brne	.-8      	; 0x5c8 <main+0x17c>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <main+0x186>
     5d2:	00 00       	nop
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
			message_score.data[0] = succesfull_bounce;
     5d4:	19 8a       	std	Y+17, r1	; 0x11
			can_message_send(&message_game_over);
     5d6:	ce 01       	movw	r24, r28
     5d8:	4b 96       	adiw	r24, 0x1b	; 27
     5da:	70 de       	rcall	.-800    	; 0x2bc <can_message_send>
			can_message_send(&message_score);
     5dc:	ce 01       	movw	r24, r28
     5de:	0e 96       	adiw	r24, 0x0e	; 14
     5e0:	6d de       	rcall	.-806    	; 0x2bc <can_message_send>
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
			enable_game_fail = 0;
     5e2:	e5 2c       	mov	r14, r5
     5e4:	f6 2c       	mov	r15, r6
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
			_delay_ms(50);
			succesfull_bounce = 0;
     5e6:	c5 2c       	mov	r12, r5
     5e8:	d6 2c       	mov	r13, r6
			old_val = 1;
			_delay_ms(50);
		}
		else if( (old_val == 1) && (new_val == 0) && enable_game_fail)
		{
			old_val = 0;
     5ea:	05 2d       	mov	r16, r5
     5ec:	16 2d       	mov	r17, r6
     5ee:	6e cf       	rjmp	.-292    	; 0x4cc <main+0x80>

000005f0 <mcp2515_reset>:
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
     5f4:	1f 92       	push	r1
     5f6:	cd b7       	in	r28, 0x3d	; 61
     5f8:	de b7       	in	r29, 0x3e	; 62
     5fa:	2f 98       	cbi	0x05, 7	; 5
     5fc:	80 ec       	ldi	r24, 0xC0	; 192
     5fe:	89 83       	std	Y+1, r24	; 0x01
     600:	61 e0       	ldi	r22, 0x01	; 1
     602:	ce 01       	movw	r24, r28
     604:	01 96       	adiw	r24, 0x01	; 1
     606:	33 d3       	rcall	.+1638   	; 0xc6e <spi_write>
     608:	2f 9a       	sbi	0x05, 7	; 5
     60a:	0f 90       	pop	r0
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <mcp2515_init>:
     612:	fe d2       	rcall	.+1532   	; 0xc10 <spi_init>
     614:	ed cf       	rjmp	.-38     	; 0x5f0 <mcp2515_reset>
     616:	08 95       	ret

00000618 <mcp2515_read>:
     618:	ff 92       	push	r15
     61a:	0f 93       	push	r16
     61c:	1f 93       	push	r17
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	1f 92       	push	r1
     624:	1f 92       	push	r1
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	8b 01       	movw	r16, r22
     62c:	f4 2e       	mov	r15, r20
     62e:	2f 98       	cbi	0x05, 7	; 5
     630:	93 e0       	ldi	r25, 0x03	; 3
     632:	99 83       	std	Y+1, r25	; 0x01
     634:	8a 83       	std	Y+2, r24	; 0x02
     636:	62 e0       	ldi	r22, 0x02	; 2
     638:	ce 01       	movw	r24, r28
     63a:	01 96       	adiw	r24, 0x01	; 1
     63c:	18 d3       	rcall	.+1584   	; 0xc6e <spi_write>
     63e:	6f 2d       	mov	r22, r15
     640:	c8 01       	movw	r24, r16
     642:	ef d2       	rcall	.+1502   	; 0xc22 <spi_read>
     644:	2f 9a       	sbi	0x05, 7	; 5
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	1f 91       	pop	r17
     650:	0f 91       	pop	r16
     652:	ff 90       	pop	r15
     654:	08 95       	ret

00000656 <mcp2515_write>:
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	00 d0       	rcall	.+0      	; 0x65c <mcp2515_write+0x6>
     65c:	cd b7       	in	r28, 0x3d	; 61
     65e:	de b7       	in	r29, 0x3e	; 62
     660:	2f 98       	cbi	0x05, 7	; 5
     662:	92 e0       	ldi	r25, 0x02	; 2
     664:	99 83       	std	Y+1, r25	; 0x01
     666:	8a 83       	std	Y+2, r24	; 0x02
     668:	6b 83       	std	Y+3, r22	; 0x03
     66a:	62 e0       	ldi	r22, 0x02	; 2
     66c:	64 0f       	add	r22, r20
     66e:	ce 01       	movw	r24, r28
     670:	01 96       	adiw	r24, 0x01	; 1
     672:	fd d2       	rcall	.+1530   	; 0xc6e <spi_write>
     674:	2f 9a       	sbi	0x05, 7	; 5
     676:	0f 90       	pop	r0
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <mcp2515_request>:
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	1f 92       	push	r1
     688:	cd b7       	in	r28, 0x3d	; 61
     68a:	de b7       	in	r29, 0x3e	; 62
     68c:	2f 98       	cbi	0x05, 7	; 5
     68e:	89 83       	std	Y+1, r24	; 0x01
     690:	61 e0       	ldi	r22, 0x01	; 1
     692:	ce 01       	movw	r24, r28
     694:	01 96       	adiw	r24, 0x01	; 1
     696:	eb d2       	rcall	.+1494   	; 0xc6e <spi_write>
     698:	2f 9a       	sbi	0x05, 7	; 5
     69a:	0f 90       	pop	r0
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <mcp2515_bit_modify>:
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	00 d0       	rcall	.+0      	; 0x6a8 <mcp2515_bit_modify+0x6>
     6a8:	1f 92       	push	r1
     6aa:	cd b7       	in	r28, 0x3d	; 61
     6ac:	de b7       	in	r29, 0x3e	; 62
     6ae:	2f 98       	cbi	0x05, 7	; 5
     6b0:	95 e0       	ldi	r25, 0x05	; 5
     6b2:	99 83       	std	Y+1, r25	; 0x01
     6b4:	8a 83       	std	Y+2, r24	; 0x02
     6b6:	6b 83       	std	Y+3, r22	; 0x03
     6b8:	4c 83       	std	Y+4, r20	; 0x04
     6ba:	64 e0       	ldi	r22, 0x04	; 4
     6bc:	ce 01       	movw	r24, r28
     6be:	01 96       	adiw	r24, 0x01	; 1
     6c0:	d6 d2       	rcall	.+1452   	; 0xc6e <spi_write>
     6c2:	2f 9a       	sbi	0x05, 7	; 5
     6c4:	0f 90       	pop	r0
     6c6:	0f 90       	pop	r0
     6c8:	0f 90       	pop	r0
     6ca:	0f 90       	pop	r0
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	08 95       	ret

000006d2 <motor_dac_write>:
	}
	else {
		motor_set_dir(1);
		motor_dac_write((slider_pos - 127) * 0.5);
	}
}
     6d2:	1f 93       	push	r17
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	00 d0       	rcall	.+0      	; 0x6da <motor_dac_write+0x8>
     6da:	cd b7       	in	r28, 0x3d	; 61
     6dc:	de b7       	in	r29, 0x3e	; 62
     6de:	18 2f       	mov	r17, r24
     6e0:	2b e9       	ldi	r18, 0x9B	; 155
     6e2:	32 e0       	ldi	r19, 0x02	; 2
     6e4:	3f 93       	push	r19
     6e6:	2f 93       	push	r18
     6e8:	10 d6       	rcall	.+3104   	; 0x130a <printf>
     6ea:	80 e5       	ldi	r24, 0x50	; 80
     6ec:	89 83       	std	Y+1, r24	; 0x01
     6ee:	1a 82       	std	Y+2, r1	; 0x02
     6f0:	1b 83       	std	Y+3, r17	; 0x03
     6f2:	64 e0       	ldi	r22, 0x04	; 4
     6f4:	ce 01       	movw	r24, r28
     6f6:	01 96       	adiw	r24, 0x01	; 1
     6f8:	d8 d2       	rcall	.+1456   	; 0xcaa <TWI_Start_Transceiver_With_Data>
     6fa:	0f 90       	pop	r0
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	0f 90       	pop	r0
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	1f 91       	pop	r17
     70a:	08 95       	ret

0000070c <motor_init>:
     70c:	c4 d2       	rcall	.+1416   	; 0xc96 <TWI_Master_Initialise>
     70e:	e1 e0       	ldi	r30, 0x01	; 1
     710:	f1 e0       	ldi	r31, 0x01	; 1
     712:	80 81       	ld	r24, Z
     714:	8a 67       	ori	r24, 0x7A	; 122
     716:	80 83       	st	Z, r24
     718:	e2 e0       	ldi	r30, 0x02	; 2
     71a:	f1 e0       	ldi	r31, 0x01	; 1
     71c:	80 81       	ld	r24, Z
     71e:	82 60       	ori	r24, 0x02	; 2
     720:	80 83       	st	Z, r24
     722:	80 81       	ld	r24, Z
     724:	80 61       	ori	r24, 0x10	; 16
     726:	80 83       	st	Z, r24
     728:	10 92 07 01 	sts	0x0107, r1
     72c:	80 e5       	ldi	r24, 0x50	; 80
     72e:	d1 df       	rcall	.-94     	; 0x6d2 <motor_dac_write>
     730:	2f e7       	ldi	r18, 0x7F	; 127
     732:	8a e1       	ldi	r24, 0x1A	; 26
     734:	96 e0       	ldi	r25, 0x06	; 6
     736:	21 50       	subi	r18, 0x01	; 1
     738:	80 40       	sbci	r24, 0x00	; 0
     73a:	90 40       	sbci	r25, 0x00	; 0
     73c:	e1 f7       	brne	.-8      	; 0x736 <motor_init+0x2a>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <motor_init+0x34>
     740:	00 00       	nop
     742:	08 95       	ret

00000744 <motor_set_dir>:
     744:	88 23       	and	r24, r24
     746:	31 f0       	breq	.+12     	; 0x754 <motor_set_dir+0x10>
     748:	e2 e0       	ldi	r30, 0x02	; 2
     74a:	f1 e0       	ldi	r31, 0x01	; 1
     74c:	80 81       	ld	r24, Z
     74e:	82 60       	ori	r24, 0x02	; 2
     750:	80 83       	st	Z, r24
     752:	08 95       	ret
     754:	e2 e0       	ldi	r30, 0x02	; 2
     756:	f1 e0       	ldi	r31, 0x01	; 1
     758:	80 81       	ld	r24, Z
     75a:	8d 7f       	andi	r24, 0xFD	; 253
     75c:	80 83       	st	Z, r24
     75e:	08 95       	ret

00000760 <motor_read_encoder>:

int16_t motor_read_encoder(){
     760:	cf 93       	push	r28
     762:	df 93       	push	r29
     764:	00 d0       	rcall	.+0      	; 0x766 <motor_read_encoder+0x6>
     766:	1f 92       	push	r1
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
	volatile int16_t encoder_val;
	volatile uint8_t lsb;
	volatile uint8_t msb;
	
	PORTH &= ~(1 << PH5); //set !OE low. enable output
     76c:	e2 e0       	ldi	r30, 0x02	; 2
     76e:	f1 e0       	ldi	r31, 0x01	; 1
     770:	80 81       	ld	r24, Z
     772:	8f 7d       	andi	r24, 0xDF	; 223
     774:	80 83       	st	Z, r24
	PORTH &= ~(1 << PH3); //set SEL low to get high byte
     776:	80 81       	ld	r24, Z
     778:	87 7f       	andi	r24, 0xF7	; 247
     77a:	80 83       	st	Z, r24
     77c:	87 e8       	ldi	r24, 0x87	; 135
     77e:	93 e1       	ldi	r25, 0x13	; 19
     780:	01 97       	sbiw	r24, 0x01	; 1
     782:	f1 f7       	brne	.-4      	; 0x780 <motor_read_encoder+0x20>
     784:	00 c0       	rjmp	.+0      	; 0x786 <motor_read_encoder+0x26>
     786:	00 00       	nop
	
	_delay_ms(20);
	
	msb = PINK; // read msb
     788:	80 91 06 01 	lds	r24, 0x0106
     78c:	8c 83       	std	Y+4, r24	; 0x04
	//printf("msb  %d \n \r \n\r", msb);
	
	PORTH |= (1 << PH3); // set SEL high to get low byte
     78e:	80 81       	ld	r24, Z
     790:	88 60       	ori	r24, 0x08	; 8
     792:	80 83       	st	Z, r24
     794:	87 e8       	ldi	r24, 0x87	; 135
     796:	93 e1       	ldi	r25, 0x13	; 19
     798:	01 97       	sbiw	r24, 0x01	; 1
     79a:	f1 f7       	brne	.-4      	; 0x798 <motor_read_encoder+0x38>
     79c:	00 c0       	rjmp	.+0      	; 0x79e <motor_read_encoder+0x3e>
     79e:	00 00       	nop
	
	_delay_ms(20);
	
	lsb = PINK; // read lsb
     7a0:	80 91 06 01 	lds	r24, 0x0106
     7a4:	8b 83       	std	Y+3, r24	; 0x03
	//printf("lsb  %d \n \r \n\r", lsb);
	
	PORTH |= (1 << PH5); // Disable encoder read
     7a6:	80 81       	ld	r24, Z
     7a8:	80 62       	ori	r24, 0x20	; 32
     7aa:	80 83       	st	Z, r24
	
	encoder_val = ((msb<<8) | lsb); //process data
     7ac:	2c 81       	ldd	r18, Y+4	; 0x04
     7ae:	8b 81       	ldd	r24, Y+3	; 0x03
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	92 2b       	or	r25, r18
     7b4:	9a 83       	std	Y+2, r25	; 0x02
     7b6:	89 83       	std	Y+1, r24	; 0x01
	return encoder_val;
     7b8:	89 81       	ldd	r24, Y+1	; 0x01
     7ba:	9a 81       	ldd	r25, Y+2	; 0x02
}
     7bc:	0f 90       	pop	r0
     7be:	0f 90       	pop	r0
     7c0:	0f 90       	pop	r0
     7c2:	0f 90       	pop	r0
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	08 95       	ret

000007ca <motor_reset_encoder>:

void motor_reset_encoder() {
	PORTH &= ~(1<<PH6);
     7ca:	e2 e0       	ldi	r30, 0x02	; 2
     7cc:	f1 e0       	ldi	r31, 0x01	; 1
     7ce:	80 81       	ld	r24, Z
     7d0:	8f 7b       	andi	r24, 0xBF	; 191
     7d2:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7d4:	82 e4       	ldi	r24, 0x42	; 66
     7d6:	8a 95       	dec	r24
     7d8:	f1 f7       	brne	.-4      	; 0x7d6 <motor_reset_encoder+0xc>
     7da:	00 c0       	rjmp	.+0      	; 0x7dc <motor_reset_encoder+0x12>
	_delay_us(200);
	PORTH |= (1<<PH6);
     7dc:	80 81       	ld	r24, Z
     7de:	80 64       	ori	r24, 0x40	; 64
     7e0:	80 83       	st	Z, r24
     7e2:	08 95       	ret

000007e4 <motor_pid_controller>:
}

void motor_pid_controller(uint8_t reference){
     7e4:	af 92       	push	r10
     7e6:	bf 92       	push	r11
     7e8:	cf 92       	push	r12
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	cf 93       	push	r28
     7f6:	df 93       	push	r29
     7f8:	c8 2f       	mov	r28, r24
	reference = -reference;
	int var = 1;
	
	uint16_t encoder = motor_read_encoder();
     7fa:	b2 df       	rcall	.-156    	; 0x760 <motor_read_encoder>
	_delay_us(200);
	PORTH |= (1<<PH6);
}

void motor_pid_controller(uint8_t reference){
	reference = -reference;
     7fc:	c1 95       	neg	r28
	uint16_t encoder = motor_read_encoder();
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
	//var = (int) encoder_diff;
	double measured_val = encoder_diff * scalor;
	int error = reference - (int) measured_val;
     7fe:	d0 e0       	ldi	r29, 0x00	; 0
	reference = -reference;
	int var = 1;
	
	uint16_t encoder = motor_read_encoder();
	double scalor = 0.033031;	// 255 / (encoder_max - encoder_min)
	double encoder_diff =(double) encoder - (double) encoder_min;
     800:	bc 01       	movw	r22, r24
     802:	80 e0       	ldi	r24, 0x00	; 0
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	18 d4       	rcall	.+2096   	; 0x1038 <__floatunsisf>
     808:	6b 01       	movw	r12, r22
     80a:	7c 01       	movw	r14, r24
     80c:	60 91 06 02 	lds	r22, 0x0206
     810:	70 91 07 02 	lds	r23, 0x0207
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	0f d4       	rcall	.+2078   	; 0x1038 <__floatunsisf>
     81a:	9b 01       	movw	r18, r22
     81c:	ac 01       	movw	r20, r24
     81e:	c7 01       	movw	r24, r14
     820:	b6 01       	movw	r22, r12
     822:	08 d3       	rcall	.+1552   	; 0xe34 <__subsf3>
	//var = (int) encoder_diff;
	double measured_val = encoder_diff * scalor;
     824:	24 e8       	ldi	r18, 0x84	; 132
     826:	3b e4       	ldi	r19, 0x4B	; 75
     828:	47 e0       	ldi	r20, 0x07	; 7
     82a:	5d e3       	ldi	r21, 0x3D	; 61
     82c:	bb d4       	rcall	.+2422   	; 0x11a4 <__mulsf3>
	int error = reference - (int) measured_val;
     82e:	d3 d3       	rcall	.+1958   	; 0xfd6 <__fixsfsi>
     830:	c6 1b       	sub	r28, r22
     832:	d7 0b       	sbc	r29, r23
	//int error = reference - (encoder - encoder_min) * 255 / (encoder_max - encoder_min); 
	sum_error += error;
     834:	00 91 b8 02 	lds	r16, 0x02B8
     838:	10 91 b9 02 	lds	r17, 0x02B9
     83c:	0c 0f       	add	r16, r28
     83e:	1d 1f       	adc	r17, r29
     840:	10 93 b9 02 	sts	0x02B9, r17
     844:	00 93 b8 02 	sts	0x02B8, r16
	int integral_part = ( ki * sum_error / freq );
     848:	60 91 08 02 	lds	r22, 0x0208
     84c:	70 91 09 02 	lds	r23, 0x0209
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	f1 d3       	rcall	.+2018   	; 0x1038 <__floatunsisf>
     856:	6b 01       	movw	r12, r22
     858:	7c 01       	movw	r14, r24
     85a:	b8 01       	movw	r22, r16
     85c:	88 27       	eor	r24, r24
     85e:	77 fd       	sbrc	r23, 7
     860:	80 95       	com	r24
     862:	98 2f       	mov	r25, r24
     864:	eb d3       	rcall	.+2006   	; 0x103c <__floatsisf>
     866:	20 91 0a 02 	lds	r18, 0x020A
     86a:	30 91 0b 02 	lds	r19, 0x020B
     86e:	40 91 0c 02 	lds	r20, 0x020C
     872:	50 91 0d 02 	lds	r21, 0x020D
     876:	96 d4       	rcall	.+2348   	; 0x11a4 <__mulsf3>
     878:	a7 01       	movw	r20, r14
     87a:	96 01       	movw	r18, r12
     87c:	44 d3       	rcall	.+1672   	; 0xf06 <__divsf3>
     87e:	ab d3       	rcall	.+1878   	; 0xfd6 <__fixsfsi>
     880:	5b 01       	movw	r10, r22
     882:	89 e2       	ldi	r24, 0x29	; 41
     884:	a8 16       	cp	r10, r24
     886:	b1 04       	cpc	r11, r1
     888:	2c f0       	brlt	.+10     	; 0x894 <motor_pid_controller+0xb0>
     88a:	0f 2e       	mov	r0, r31
     88c:	f8 e2       	ldi	r31, 0x28	; 40
     88e:	af 2e       	mov	r10, r31
     890:	b1 2c       	mov	r11, r1
     892:	f0 2d       	mov	r31, r0
	if (integral_part < -40){integral_part = -40;}
	else if (integral_part > 40){integral_part = 40;}
	int derivative_part = ( kd * (error - prev_error) * freq);
     894:	80 91 ba 02 	lds	r24, 0x02BA
     898:	90 91 bb 02 	lds	r25, 0x02BB
     89c:	be 01       	movw	r22, r28
     89e:	68 1b       	sub	r22, r24
     8a0:	79 0b       	sbc	r23, r25
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	c8 d3       	rcall	.+1936   	; 0x1038 <__floatunsisf>
     8a8:	20 91 0e 02 	lds	r18, 0x020E
     8ac:	30 91 0f 02 	lds	r19, 0x020F
     8b0:	40 91 10 02 	lds	r20, 0x0210
     8b4:	50 91 11 02 	lds	r21, 0x0211
     8b8:	75 d4       	rcall	.+2282   	; 0x11a4 <__mulsf3>
     8ba:	9b 01       	movw	r18, r22
     8bc:	ac 01       	movw	r20, r24
     8be:	c7 01       	movw	r24, r14
     8c0:	b6 01       	movw	r22, r12
     8c2:	70 d4       	rcall	.+2272   	; 0x11a4 <__mulsf3>
     8c4:	88 d3       	rcall	.+1808   	; 0xfd6 <__fixsfsi>
     8c6:	8b 01       	movw	r16, r22
     8c8:	69 32       	cpi	r22, 0x29	; 41
     8ca:	71 05       	cpc	r23, r1
     8cc:	14 f0       	brlt	.+4      	; 0x8d2 <motor_pid_controller+0xee>
     8ce:	08 e2       	ldi	r16, 0x28	; 40
     8d0:	10 e0       	ldi	r17, 0x00	; 0
	if (derivative_part < -40){derivative_part = -40;}
	else if (derivative_part > 40){derivative_part = 40;}
	int u = ( kp * error ) + integral_part + derivative_part;
     8d2:	be 01       	movw	r22, r28
     8d4:	88 27       	eor	r24, r24
     8d6:	77 fd       	sbrc	r23, 7
     8d8:	80 95       	com	r24
     8da:	98 2f       	mov	r25, r24
     8dc:	af d3       	rcall	.+1886   	; 0x103c <__floatsisf>
     8de:	20 91 12 02 	lds	r18, 0x0212
     8e2:	30 91 13 02 	lds	r19, 0x0213
     8e6:	40 91 14 02 	lds	r20, 0x0214
     8ea:	50 91 15 02 	lds	r21, 0x0215
     8ee:	5a d4       	rcall	.+2228   	; 0x11a4 <__mulsf3>
     8f0:	6b 01       	movw	r12, r22
     8f2:	7c 01       	movw	r14, r24
     8f4:	b5 01       	movw	r22, r10
     8f6:	88 ed       	ldi	r24, 0xD8	; 216
     8f8:	a8 16       	cp	r10, r24
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	b8 06       	cpc	r11, r24
     8fe:	14 f4       	brge	.+4      	; 0x904 <motor_pid_controller+0x120>
     900:	68 ed       	ldi	r22, 0xD8	; 216
     902:	7f ef       	ldi	r23, 0xFF	; 255
     904:	88 27       	eor	r24, r24
     906:	77 fd       	sbrc	r23, 7
     908:	80 95       	com	r24
     90a:	98 2f       	mov	r25, r24
     90c:	97 d3       	rcall	.+1838   	; 0x103c <__floatsisf>
     90e:	9b 01       	movw	r18, r22
     910:	ac 01       	movw	r20, r24
     912:	c7 01       	movw	r24, r14
     914:	b6 01       	movw	r22, r12
     916:	8f d2       	rcall	.+1310   	; 0xe36 <__addsf3>
     918:	6b 01       	movw	r12, r22
     91a:	7c 01       	movw	r14, r24
     91c:	b8 01       	movw	r22, r16
     91e:	08 3d       	cpi	r16, 0xD8	; 216
     920:	8f ef       	ldi	r24, 0xFF	; 255
     922:	18 07       	cpc	r17, r24
     924:	14 f4       	brge	.+4      	; 0x92a <motor_pid_controller+0x146>
     926:	68 ed       	ldi	r22, 0xD8	; 216
     928:	7f ef       	ldi	r23, 0xFF	; 255
     92a:	88 27       	eor	r24, r24
     92c:	77 fd       	sbrc	r23, 7
     92e:	80 95       	com	r24
     930:	98 2f       	mov	r25, r24
     932:	84 d3       	rcall	.+1800   	; 0x103c <__floatsisf>
     934:	9b 01       	movw	r18, r22
     936:	ac 01       	movw	r20, r24
     938:	c7 01       	movw	r24, r14
     93a:	b6 01       	movw	r22, r12
     93c:	7c d2       	rcall	.+1272   	; 0xe36 <__addsf3>
     93e:	4b d3       	rcall	.+1686   	; 0xfd6 <__fixsfsi>
     940:	6b 01       	movw	r12, r22
     942:	7c 01       	movw	r14, r24
     944:	8b 01       	movw	r16, r22
	prev_error = error;
     946:	d0 93 bb 02 	sts	0x02BB, r29
     94a:	c0 93 ba 02 	sts	0x02BA, r28
// 	if (encoder < encoder_min){ u = 20; printf("under\n\r");}
// 	else if (encoder_max < encoder){ u = -20; }
	if (u > 0){motor_set_dir(0);}
     94e:	16 16       	cp	r1, r22
     950:	17 06       	cpc	r1, r23
     952:	1c f4       	brge	.+6      	; 0x95a <motor_pid_controller+0x176>
     954:	80 e0       	ldi	r24, 0x00	; 0
     956:	f6 de       	rcall	.-532    	; 0x744 <motor_set_dir>
     958:	06 c0       	rjmp	.+12     	; 0x966 <motor_pid_controller+0x182>
	else {
		motor_set_dir(1);
     95a:	81 e0       	ldi	r24, 0x01	; 1
     95c:	f3 de       	rcall	.-538    	; 0x744 <motor_set_dir>
		u = -u;
     95e:	00 27       	eor	r16, r16
     960:	11 27       	eor	r17, r17
     962:	0c 19       	sub	r16, r12
     964:	1d 09       	sbc	r17, r13
     966:	e8 01       	movw	r28, r16
     968:	05 36       	cpi	r16, 0x65	; 101
     96a:	11 05       	cpc	r17, r1
     96c:	14 f0       	brlt	.+4      	; 0x972 <motor_pid_controller+0x18e>
     96e:	c4 e6       	ldi	r28, 0x64	; 100
     970:	d0 e0       	ldi	r29, 0x00	; 0
	}
	if ( 100 < u ){ u = 100; };
	motor_dac_write(u);
     972:	8c 2f       	mov	r24, r28
     974:	ae de       	rcall	.-676    	; 0x6d2 <motor_dac_write>
 	printf("u  %d \n\r", u);
     976:	df 93       	push	r29
     978:	cf 93       	push	r28
     97a:	8e ea       	ldi	r24, 0xAE	; 174
     97c:	92 e0       	ldi	r25, 0x02	; 2
     97e:	9f 93       	push	r25
     980:	8f 93       	push	r24
     982:	c3 d4       	rcall	.+2438   	; 0x130a <printf>
     984:	0f 90       	pop	r0
     986:	0f 90       	pop	r0
     988:	0f 90       	pop	r0
     98a:	0f 90       	pop	r0
}
     98c:	df 91       	pop	r29
     98e:	cf 91       	pop	r28
     990:	1f 91       	pop	r17
     992:	0f 91       	pop	r16
     994:	ff 90       	pop	r15
     996:	ef 90       	pop	r14
     998:	df 90       	pop	r13
     99a:	cf 90       	pop	r12
     99c:	bf 90       	pop	r11
     99e:	af 90       	pop	r10
     9a0:	08 95       	ret

000009a2 <motor_set_gain>:

void motor_set_gain(int gain_choise){
	switch (gain_choise){
     9a2:	81 30       	cpi	r24, 0x01	; 1
     9a4:	91 05       	cpc	r25, r1
     9a6:	61 f1       	breq	.+88     	; 0xa00 <motor_set_gain+0x5e>
     9a8:	82 30       	cpi	r24, 0x02	; 2
     9aa:	91 05       	cpc	r25, r1
     9ac:	09 f4       	brne	.+2      	; 0x9b0 <motor_set_gain+0xe>
     9ae:	4d c0       	rjmp	.+154    	; 0xa4a <motor_set_gain+0xa8>
     9b0:	89 2b       	or	r24, r25
     9b2:	09 f0       	breq	.+2      	; 0x9b6 <motor_set_gain+0x14>
     9b4:	66 c0       	rjmp	.+204    	; 0xa82 <motor_set_gain+0xe0>
		case 0:
			kp = 1.2;
     9b6:	8a e9       	ldi	r24, 0x9A	; 154
     9b8:	99 e9       	ldi	r25, 0x99	; 153
     9ba:	a9 e9       	ldi	r26, 0x99	; 153
     9bc:	bf e3       	ldi	r27, 0x3F	; 63
     9be:	80 93 12 02 	sts	0x0212, r24
     9c2:	90 93 13 02 	sts	0x0213, r25
     9c6:	a0 93 14 02 	sts	0x0214, r26
     9ca:	b0 93 15 02 	sts	0x0215, r27
			kd = 0.2;
     9ce:	8d ec       	ldi	r24, 0xCD	; 205
     9d0:	9c ec       	ldi	r25, 0xCC	; 204
     9d2:	ac e4       	ldi	r26, 0x4C	; 76
     9d4:	be e3       	ldi	r27, 0x3E	; 62
     9d6:	80 93 0e 02 	sts	0x020E, r24
     9da:	90 93 0f 02 	sts	0x020F, r25
     9de:	a0 93 10 02 	sts	0x0210, r26
     9e2:	b0 93 11 02 	sts	0x0211, r27
			ki = 0.8;
     9e6:	8d ec       	ldi	r24, 0xCD	; 205
     9e8:	9c ec       	ldi	r25, 0xCC	; 204
     9ea:	ac e4       	ldi	r26, 0x4C	; 76
     9ec:	bf e3       	ldi	r27, 0x3F	; 63
     9ee:	80 93 0a 02 	sts	0x020A, r24
     9f2:	90 93 0b 02 	sts	0x020B, r25
     9f6:	a0 93 0c 02 	sts	0x020C, r26
     9fa:	b0 93 0d 02 	sts	0x020D, r27
			break;
     9fe:	08 95       	ret
		case 1:
			kp = 0.05;
     a00:	8d ec       	ldi	r24, 0xCD	; 205
     a02:	9c ec       	ldi	r25, 0xCC	; 204
     a04:	ac e4       	ldi	r26, 0x4C	; 76
     a06:	bd e3       	ldi	r27, 0x3D	; 61
     a08:	80 93 12 02 	sts	0x0212, r24
     a0c:	90 93 13 02 	sts	0x0213, r25
     a10:	a0 93 14 02 	sts	0x0214, r26
     a14:	b0 93 15 02 	sts	0x0215, r27
			kd = 0.2;
     a18:	8d ec       	ldi	r24, 0xCD	; 205
     a1a:	9c ec       	ldi	r25, 0xCC	; 204
     a1c:	ac e4       	ldi	r26, 0x4C	; 76
     a1e:	be e3       	ldi	r27, 0x3E	; 62
     a20:	80 93 0e 02 	sts	0x020E, r24
     a24:	90 93 0f 02 	sts	0x020F, r25
     a28:	a0 93 10 02 	sts	0x0210, r26
     a2c:	b0 93 11 02 	sts	0x0211, r27
			ki = 0.8;
     a30:	8d ec       	ldi	r24, 0xCD	; 205
     a32:	9c ec       	ldi	r25, 0xCC	; 204
     a34:	ac e4       	ldi	r26, 0x4C	; 76
     a36:	bf e3       	ldi	r27, 0x3F	; 63
     a38:	80 93 0a 02 	sts	0x020A, r24
     a3c:	90 93 0b 02 	sts	0x020B, r25
     a40:	a0 93 0c 02 	sts	0x020C, r26
     a44:	b0 93 0d 02 	sts	0x020D, r27
			break;
     a48:	08 95       	ret
		case 2:
			kp = 2.0;
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	b0 e4       	ldi	r27, 0x40	; 64
     a52:	80 93 12 02 	sts	0x0212, r24
     a56:	90 93 13 02 	sts	0x0213, r25
     a5a:	a0 93 14 02 	sts	0x0214, r26
     a5e:	b0 93 15 02 	sts	0x0215, r27
			kd = 0.0;
     a62:	10 92 0e 02 	sts	0x020E, r1
     a66:	10 92 0f 02 	sts	0x020F, r1
     a6a:	10 92 10 02 	sts	0x0210, r1
     a6e:	10 92 11 02 	sts	0x0211, r1
			ki = 0.0;
     a72:	10 92 0a 02 	sts	0x020A, r1
     a76:	10 92 0b 02 	sts	0x020B, r1
     a7a:	10 92 0c 02 	sts	0x020C, r1
     a7e:	10 92 0d 02 	sts	0x020D, r1
     a82:	08 95       	ret

00000a84 <motor_tune_gain>:
			break;
	}
}

void motor_tune_gain(int gain_choise, int gain_val){
	switch(gain_choise){
     a84:	84 30       	cpi	r24, 0x04	; 4
     a86:	91 05       	cpc	r25, r1
     a88:	c1 f0       	breq	.+48     	; 0xaba <motor_tune_gain+0x36>
     a8a:	85 30       	cpi	r24, 0x05	; 5
     a8c:	91 05       	cpc	r25, r1
     a8e:	41 f1       	breq	.+80     	; 0xae0 <motor_tune_gain+0x5c>
     a90:	03 97       	sbiw	r24, 0x03	; 3
     a92:	c1 f5       	brne	.+112    	; 0xb04 <motor_tune_gain+0x80>
		case 3:
			kp = (float)(gain_val / 100.0);
     a94:	88 27       	eor	r24, r24
     a96:	77 fd       	sbrc	r23, 7
     a98:	80 95       	com	r24
     a9a:	98 2f       	mov	r25, r24
     a9c:	cf d2       	rcall	.+1438   	; 0x103c <__floatsisf>
     a9e:	20 e0       	ldi	r18, 0x00	; 0
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	48 ec       	ldi	r20, 0xC8	; 200
     aa4:	52 e4       	ldi	r21, 0x42	; 66
     aa6:	2f d2       	rcall	.+1118   	; 0xf06 <__divsf3>
     aa8:	60 93 12 02 	sts	0x0212, r22
     aac:	70 93 13 02 	sts	0x0213, r23
     ab0:	80 93 14 02 	sts	0x0214, r24
     ab4:	90 93 15 02 	sts	0x0215, r25
			break;
     ab8:	08 95       	ret
		case 4:
			ki = (float)(gain_val / 100.0);
     aba:	88 27       	eor	r24, r24
     abc:	77 fd       	sbrc	r23, 7
     abe:	80 95       	com	r24
     ac0:	98 2f       	mov	r25, r24
     ac2:	bc d2       	rcall	.+1400   	; 0x103c <__floatsisf>
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	30 e0       	ldi	r19, 0x00	; 0
     ac8:	48 ec       	ldi	r20, 0xC8	; 200
     aca:	52 e4       	ldi	r21, 0x42	; 66
     acc:	1c d2       	rcall	.+1080   	; 0xf06 <__divsf3>
     ace:	60 93 0a 02 	sts	0x020A, r22
     ad2:	70 93 0b 02 	sts	0x020B, r23
     ad6:	80 93 0c 02 	sts	0x020C, r24
     ada:	90 93 0d 02 	sts	0x020D, r25
			break;
     ade:	08 95       	ret
		case 5:
			kd = (float)(gain_val / 100.0);
     ae0:	88 27       	eor	r24, r24
     ae2:	77 fd       	sbrc	r23, 7
     ae4:	80 95       	com	r24
     ae6:	98 2f       	mov	r25, r24
     ae8:	a9 d2       	rcall	.+1362   	; 0x103c <__floatsisf>
     aea:	20 e0       	ldi	r18, 0x00	; 0
     aec:	30 e0       	ldi	r19, 0x00	; 0
     aee:	48 ec       	ldi	r20, 0xC8	; 200
     af0:	52 e4       	ldi	r21, 0x42	; 66
     af2:	09 d2       	rcall	.+1042   	; 0xf06 <__divsf3>
     af4:	60 93 0e 02 	sts	0x020E, r22
     af8:	70 93 0f 02 	sts	0x020F, r23
     afc:	80 93 10 02 	sts	0x0210, r24
     b00:	90 93 11 02 	sts	0x0211, r25
     b04:	08 95       	ret

00000b06 <pwm_set_signal_period>:
     b06:	e1 e8       	ldi	r30, 0x81	; 129
     b08:	f0 e0       	ldi	r31, 0x00	; 0
     b0a:	80 81       	ld	r24, Z
     b0c:	82 60       	ori	r24, 0x02	; 2
     b0e:	80 83       	st	Z, r24
     b10:	80 81       	ld	r24, Z
     b12:	8b 7f       	andi	r24, 0xFB	; 251
     b14:	80 83       	st	Z, r24
     b16:	80 81       	ld	r24, Z
     b18:	8e 7f       	andi	r24, 0xFE	; 254
     b1a:	80 83       	st	Z, r24
     b1c:	80 e4       	ldi	r24, 0x40	; 64
     b1e:	9c e9       	ldi	r25, 0x9C	; 156
     b20:	90 93 87 00 	sts	0x0087, r25
     b24:	80 93 86 00 	sts	0x0086, r24
     b28:	08 95       	ret

00000b2a <pwm_init>:
     b2a:	e1 e8       	ldi	r30, 0x81	; 129
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	80 81       	ld	r24, Z
     b30:	80 61       	ori	r24, 0x10	; 16
     b32:	80 83       	st	Z, r24
     b34:	80 81       	ld	r24, Z
     b36:	88 60       	ori	r24, 0x08	; 8
     b38:	80 83       	st	Z, r24
     b3a:	e0 e8       	ldi	r30, 0x80	; 128
     b3c:	f0 e0       	ldi	r31, 0x00	; 0
     b3e:	80 81       	ld	r24, Z
     b40:	82 60       	ori	r24, 0x02	; 2
     b42:	80 83       	st	Z, r24
     b44:	80 81       	ld	r24, Z
     b46:	8e 7f       	andi	r24, 0xFE	; 254
     b48:	80 83       	st	Z, r24
     b4a:	80 81       	ld	r24, Z
     b4c:	80 68       	ori	r24, 0x80	; 128
     b4e:	80 83       	st	Z, r24
     b50:	80 81       	ld	r24, Z
     b52:	8f 7b       	andi	r24, 0xBF	; 191
     b54:	80 83       	st	Z, r24
     b56:	d7 df       	rcall	.-82     	; 0xb06 <pwm_set_signal_period>
     b58:	25 9a       	sbi	0x04, 5	; 4
     b5a:	88 eb       	ldi	r24, 0xB8	; 184
     b5c:	9b e0       	ldi	r25, 0x0B	; 11
     b5e:	90 93 89 00 	sts	0x0089, r25
     b62:	80 93 88 00 	sts	0x0088, r24
     b66:	08 95       	ret

00000b68 <pwm_set_pulse_width>:
     b68:	cf 92       	push	r12
     b6a:	df 92       	push	r13
     b6c:	ef 92       	push	r14
     b6e:	ff 92       	push	r15
     b70:	6b 01       	movw	r12, r22
     b72:	7c 01       	movw	r14, r24
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	41 e6       	ldi	r20, 0x61	; 97
     b7a:	54 e4       	ldi	r21, 0x44	; 68
     b7c:	c0 d1       	rcall	.+896    	; 0xefe <__cmpsf2>
     b7e:	88 23       	and	r24, r24
     b80:	54 f0       	brlt	.+20     	; 0xb96 <pwm_set_pulse_width+0x2e>
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	30 e4       	ldi	r19, 0x40	; 64
     b86:	43 e0       	ldi	r20, 0x03	; 3
     b88:	55 e4       	ldi	r21, 0x45	; 69
     b8a:	c7 01       	movw	r24, r14
     b8c:	b6 01       	movw	r22, r12
     b8e:	06 d3       	rcall	.+1548   	; 0x119c <__gesf2>
     b90:	18 16       	cp	r1, r24
     b92:	54 f0       	brlt	.+20     	; 0xba8 <pwm_set_pulse_width+0x40>
     b94:	12 c0       	rjmp	.+36     	; 0xbba <pwm_set_pulse_width+0x52>
     b96:	0f 2e       	mov	r0, r31
     b98:	c1 2c       	mov	r12, r1
     b9a:	d1 2c       	mov	r13, r1
     b9c:	f1 e6       	ldi	r31, 0x61	; 97
     b9e:	ef 2e       	mov	r14, r31
     ba0:	f4 e4       	ldi	r31, 0x44	; 68
     ba2:	ff 2e       	mov	r15, r31
     ba4:	f0 2d       	mov	r31, r0
     ba6:	09 c0       	rjmp	.+18     	; 0xbba <pwm_set_pulse_width+0x52>
     ba8:	0f 2e       	mov	r0, r31
     baa:	c1 2c       	mov	r12, r1
     bac:	f0 e4       	ldi	r31, 0x40	; 64
     bae:	df 2e       	mov	r13, r31
     bb0:	f3 e0       	ldi	r31, 0x03	; 3
     bb2:	ef 2e       	mov	r14, r31
     bb4:	f5 e4       	ldi	r31, 0x45	; 69
     bb6:	ff 2e       	mov	r15, r31
     bb8:	f0 2d       	mov	r31, r0
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e4       	ldi	r19, 0x40	; 64
     bbe:	4c e9       	ldi	r20, 0x9C	; 156
     bc0:	56 e4       	ldi	r21, 0x46	; 70
     bc2:	c7 01       	movw	r24, r14
     bc4:	b6 01       	movw	r22, r12
     bc6:	9f d1       	rcall	.+830    	; 0xf06 <__divsf3>
     bc8:	20 e0       	ldi	r18, 0x00	; 0
     bca:	34 e2       	ldi	r19, 0x24	; 36
     bcc:	44 e7       	ldi	r20, 0x74	; 116
     bce:	5b e4       	ldi	r21, 0x4B	; 75
     bd0:	e9 d2       	rcall	.+1490   	; 0x11a4 <__mulsf3>
     bd2:	20 e0       	ldi	r18, 0x00	; 0
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	40 e0       	ldi	r20, 0x00	; 0
     bd8:	5e e3       	ldi	r21, 0x3E	; 62
     bda:	e4 d2       	rcall	.+1480   	; 0x11a4 <__mulsf3>
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	30 e0       	ldi	r19, 0x00	; 0
     be0:	48 e4       	ldi	r20, 0x48	; 72
     be2:	52 e4       	ldi	r21, 0x42	; 66
     be4:	90 d1       	rcall	.+800    	; 0xf06 <__divsf3>
     be6:	f7 d1       	rcall	.+1006   	; 0xfd6 <__fixsfsi>
     be8:	70 93 89 00 	sts	0x0089, r23
     bec:	60 93 88 00 	sts	0x0088, r22
     bf0:	ff 90       	pop	r15
     bf2:	ef 90       	pop	r14
     bf4:	df 90       	pop	r13
     bf6:	cf 90       	pop	r12
     bf8:	08 95       	ret

00000bfa <pwm_scale_joystick_val>:
     bfa:	2c eb       	ldi	r18, 0xBC	; 188
     bfc:	36 e9       	ldi	r19, 0x96	; 150
     bfe:	46 e9       	ldi	r20, 0x96	; 150
     c00:	50 e4       	ldi	r21, 0x40	; 64
     c02:	d0 d2       	rcall	.+1440   	; 0x11a4 <__mulsf3>
     c04:	20 e0       	ldi	r18, 0x00	; 0
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	41 e6       	ldi	r20, 0x61	; 97
     c0a:	54 e4       	ldi	r21, 0x44	; 68
     c0c:	14 c1       	rjmp	.+552    	; 0xe36 <__addsf3>
     c0e:	08 95       	ret

00000c10 <spi_init>:
     c10:	84 b1       	in	r24, 0x04	; 4
     c12:	87 68       	ori	r24, 0x87	; 135
     c14:	84 b9       	out	0x04, r24	; 4
     c16:	85 b1       	in	r24, 0x05	; 5
     c18:	81 68       	ori	r24, 0x81	; 129
     c1a:	85 b9       	out	0x05, r24	; 5
     c1c:	81 e5       	ldi	r24, 0x51	; 81
     c1e:	8c bd       	out	0x2c, r24	; 44
     c20:	08 95       	ret

00000c22 <spi_read>:
     c22:	cf 93       	push	r28
     c24:	df 93       	push	r29
     c26:	cd b7       	in	r28, 0x3d	; 61
     c28:	de b7       	in	r29, 0x3e	; 62
     c2a:	2a 97       	sbiw	r28, 0x0a	; 10
     c2c:	0f b6       	in	r0, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	de bf       	out	0x3e, r29	; 62
     c32:	0f be       	out	0x3f, r0	; 63
     c34:	cd bf       	out	0x3d, r28	; 61
     c36:	66 23       	and	r22, r22
     c38:	89 f0       	breq	.+34     	; 0xc5c <spi_read+0x3a>
     c3a:	fe 01       	movw	r30, r28
     c3c:	31 96       	adiw	r30, 0x01	; 1
     c3e:	a8 2f       	mov	r26, r24
     c40:	b9 2f       	mov	r27, r25
     c42:	cf 01       	movw	r24, r30
     c44:	86 0f       	add	r24, r22
     c46:	91 1d       	adc	r25, r1
     c48:	21 91       	ld	r18, Z+
     c4a:	2e bd       	out	0x2e, r18	; 46
     c4c:	0d b4       	in	r0, 0x2d	; 45
     c4e:	07 fe       	sbrs	r0, 7
     c50:	fd cf       	rjmp	.-6      	; 0xc4c <spi_read+0x2a>
     c52:	2e b5       	in	r18, 0x2e	; 46
     c54:	2d 93       	st	X+, r18
     c56:	e8 17       	cp	r30, r24
     c58:	f9 07       	cpc	r31, r25
     c5a:	b1 f7       	brne	.-20     	; 0xc48 <spi_read+0x26>
     c5c:	2a 96       	adiw	r28, 0x0a	; 10
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	f8 94       	cli
     c62:	de bf       	out	0x3e, r29	; 62
     c64:	0f be       	out	0x3f, r0	; 63
     c66:	cd bf       	out	0x3d, r28	; 61
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	08 95       	ret

00000c6e <spi_write>:
     c6e:	26 2f       	mov	r18, r22
     c70:	30 e0       	ldi	r19, 0x00	; 0
     c72:	12 16       	cp	r1, r18
     c74:	13 06       	cpc	r1, r19
     c76:	74 f4       	brge	.+28     	; 0xc94 <spi_write+0x26>
     c78:	e8 2f       	mov	r30, r24
     c7a:	f9 2f       	mov	r31, r25
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	41 91       	ld	r20, Z+
     c82:	4e bd       	out	0x2e, r20	; 46
     c84:	0d b4       	in	r0, 0x2d	; 45
     c86:	07 fe       	sbrs	r0, 7
     c88:	fd cf       	rjmp	.-6      	; 0xc84 <spi_write+0x16>
     c8a:	4e b5       	in	r20, 0x2e	; 46
     c8c:	01 96       	adiw	r24, 0x01	; 1
     c8e:	82 17       	cp	r24, r18
     c90:	93 07       	cpc	r25, r19
     c92:	b4 f3       	brlt	.-20     	; 0xc80 <spi_write+0x12>
     c94:	08 95       	ret

00000c96 <TWI_Master_Initialise>:
     c96:	8c e0       	ldi	r24, 0x0C	; 12
     c98:	80 93 b8 00 	sts	0x00B8, r24
     c9c:	8f ef       	ldi	r24, 0xFF	; 255
     c9e:	80 93 bb 00 	sts	0x00BB, r24
     ca2:	84 e0       	ldi	r24, 0x04	; 4
     ca4:	80 93 bc 00 	sts	0x00BC, r24
     ca8:	08 95       	ret

00000caa <TWI_Start_Transceiver_With_Data>:
     caa:	ec eb       	ldi	r30, 0xBC	; 188
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	20 81       	ld	r18, Z
     cb0:	20 fd       	sbrc	r18, 0
     cb2:	fd cf       	rjmp	.-6      	; 0xcae <TWI_Start_Transceiver_With_Data+0x4>
     cb4:	60 93 be 02 	sts	0x02BE, r22
     cb8:	fc 01       	movw	r30, r24
     cba:	20 81       	ld	r18, Z
     cbc:	20 93 bf 02 	sts	0x02BF, r18
     cc0:	20 fd       	sbrc	r18, 0
     cc2:	0c c0       	rjmp	.+24     	; 0xcdc <TWI_Start_Transceiver_With_Data+0x32>
     cc4:	62 30       	cpi	r22, 0x02	; 2
     cc6:	50 f0       	brcs	.+20     	; 0xcdc <TWI_Start_Transceiver_With_Data+0x32>
     cc8:	dc 01       	movw	r26, r24
     cca:	11 96       	adiw	r26, 0x01	; 1
     ccc:	e0 ec       	ldi	r30, 0xC0	; 192
     cce:	f2 e0       	ldi	r31, 0x02	; 2
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	9d 91       	ld	r25, X+
     cd4:	91 93       	st	Z+, r25
     cd6:	8f 5f       	subi	r24, 0xFF	; 255
     cd8:	86 13       	cpse	r24, r22
     cda:	fb cf       	rjmp	.-10     	; 0xcd2 <TWI_Start_Transceiver_With_Data+0x28>
     cdc:	10 92 bd 02 	sts	0x02BD, r1
     ce0:	88 ef       	ldi	r24, 0xF8	; 248
     ce2:	80 93 16 02 	sts	0x0216, r24
     ce6:	85 ea       	ldi	r24, 0xA5	; 165
     ce8:	80 93 bc 00 	sts	0x00BC, r24
     cec:	08 95       	ret

00000cee <__vector_39>:
     cee:	1f 92       	push	r1
     cf0:	0f 92       	push	r0
     cf2:	0f b6       	in	r0, 0x3f	; 63
     cf4:	0f 92       	push	r0
     cf6:	11 24       	eor	r1, r1
     cf8:	0b b6       	in	r0, 0x3b	; 59
     cfa:	0f 92       	push	r0
     cfc:	2f 93       	push	r18
     cfe:	3f 93       	push	r19
     d00:	8f 93       	push	r24
     d02:	9f 93       	push	r25
     d04:	af 93       	push	r26
     d06:	bf 93       	push	r27
     d08:	ef 93       	push	r30
     d0a:	ff 93       	push	r31
     d0c:	80 91 b9 00 	lds	r24, 0x00B9
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	fc 01       	movw	r30, r24
     d14:	38 97       	sbiw	r30, 0x08	; 8
     d16:	e1 35       	cpi	r30, 0x51	; 81
     d18:	f1 05       	cpc	r31, r1
     d1a:	08 f0       	brcs	.+2      	; 0xd1e <__vector_39+0x30>
     d1c:	55 c0       	rjmp	.+170    	; 0xdc8 <__vector_39+0xda>
     d1e:	ee 58       	subi	r30, 0x8E	; 142
     d20:	ff 4f       	sbci	r31, 0xFF	; 255
     d22:	a3 c2       	rjmp	.+1350   	; 0x126a <__tablejump2__>
     d24:	10 92 bc 02 	sts	0x02BC, r1
     d28:	e0 91 bc 02 	lds	r30, 0x02BC
     d2c:	80 91 be 02 	lds	r24, 0x02BE
     d30:	e8 17       	cp	r30, r24
     d32:	70 f4       	brcc	.+28     	; 0xd50 <__vector_39+0x62>
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	8e 0f       	add	r24, r30
     d38:	80 93 bc 02 	sts	0x02BC, r24
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	e1 54       	subi	r30, 0x41	; 65
     d40:	fd 4f       	sbci	r31, 0xFD	; 253
     d42:	80 81       	ld	r24, Z
     d44:	80 93 bb 00 	sts	0x00BB, r24
     d48:	85 e8       	ldi	r24, 0x85	; 133
     d4a:	80 93 bc 00 	sts	0x00BC, r24
     d4e:	43 c0       	rjmp	.+134    	; 0xdd6 <__vector_39+0xe8>
     d50:	80 91 bd 02 	lds	r24, 0x02BD
     d54:	81 60       	ori	r24, 0x01	; 1
     d56:	80 93 bd 02 	sts	0x02BD, r24
     d5a:	84 e9       	ldi	r24, 0x94	; 148
     d5c:	80 93 bc 00 	sts	0x00BC, r24
     d60:	3a c0       	rjmp	.+116    	; 0xdd6 <__vector_39+0xe8>
     d62:	e0 91 bc 02 	lds	r30, 0x02BC
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	8e 0f       	add	r24, r30
     d6a:	80 93 bc 02 	sts	0x02BC, r24
     d6e:	80 91 bb 00 	lds	r24, 0x00BB
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	e1 54       	subi	r30, 0x41	; 65
     d76:	fd 4f       	sbci	r31, 0xFD	; 253
     d78:	80 83       	st	Z, r24
     d7a:	20 91 bc 02 	lds	r18, 0x02BC
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	80 91 be 02 	lds	r24, 0x02BE
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	01 97       	sbiw	r24, 0x01	; 1
     d88:	28 17       	cp	r18, r24
     d8a:	39 07       	cpc	r19, r25
     d8c:	24 f4       	brge	.+8      	; 0xd96 <__vector_39+0xa8>
     d8e:	85 ec       	ldi	r24, 0xC5	; 197
     d90:	80 93 bc 00 	sts	0x00BC, r24
     d94:	20 c0       	rjmp	.+64     	; 0xdd6 <__vector_39+0xe8>
     d96:	85 e8       	ldi	r24, 0x85	; 133
     d98:	80 93 bc 00 	sts	0x00BC, r24
     d9c:	1c c0       	rjmp	.+56     	; 0xdd6 <__vector_39+0xe8>
     d9e:	80 91 bb 00 	lds	r24, 0x00BB
     da2:	e0 91 bc 02 	lds	r30, 0x02BC
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	e1 54       	subi	r30, 0x41	; 65
     daa:	fd 4f       	sbci	r31, 0xFD	; 253
     dac:	80 83       	st	Z, r24
     dae:	80 91 bd 02 	lds	r24, 0x02BD
     db2:	81 60       	ori	r24, 0x01	; 1
     db4:	80 93 bd 02 	sts	0x02BD, r24
     db8:	84 e9       	ldi	r24, 0x94	; 148
     dba:	80 93 bc 00 	sts	0x00BC, r24
     dbe:	0b c0       	rjmp	.+22     	; 0xdd6 <__vector_39+0xe8>
     dc0:	85 ea       	ldi	r24, 0xA5	; 165
     dc2:	80 93 bc 00 	sts	0x00BC, r24
     dc6:	07 c0       	rjmp	.+14     	; 0xdd6 <__vector_39+0xe8>
     dc8:	80 91 b9 00 	lds	r24, 0x00B9
     dcc:	80 93 16 02 	sts	0x0216, r24
     dd0:	84 e0       	ldi	r24, 0x04	; 4
     dd2:	80 93 bc 00 	sts	0x00BC, r24
     dd6:	ff 91       	pop	r31
     dd8:	ef 91       	pop	r30
     dda:	bf 91       	pop	r27
     ddc:	af 91       	pop	r26
     dde:	9f 91       	pop	r25
     de0:	8f 91       	pop	r24
     de2:	3f 91       	pop	r19
     de4:	2f 91       	pop	r18
     de6:	0f 90       	pop	r0
     de8:	0b be       	out	0x3b, r0	; 59
     dea:	0f 90       	pop	r0
     dec:	0f be       	out	0x3f, r0	; 63
     dee:	0f 90       	pop	r0
     df0:	1f 90       	pop	r1
     df2:	18 95       	reti

00000df4 <USART_Transmit>:
     df4:	e0 ec       	ldi	r30, 0xC0	; 192
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	90 81       	ld	r25, Z
     dfa:	95 ff       	sbrs	r25, 5
     dfc:	fd cf       	rjmp	.-6      	; 0xdf8 <USART_Transmit+0x4>
     dfe:	80 93 c6 00 	sts	0x00C6, r24
     e02:	08 95       	ret

00000e04 <USART_Receive>:
     e04:	e0 ec       	ldi	r30, 0xC0	; 192
     e06:	f0 e0       	ldi	r31, 0x00	; 0
     e08:	80 81       	ld	r24, Z
     e0a:	88 23       	and	r24, r24
     e0c:	ec f3       	brlt	.-6      	; 0xe08 <USART_Receive+0x4>
     e0e:	80 91 c6 00 	lds	r24, 0x00C6
     e12:	08 95       	ret

00000e14 <USART_Init>:
     e14:	90 93 c5 00 	sts	0x00C5, r25
     e18:	80 93 c4 00 	sts	0x00C4, r24
     e1c:	88 e1       	ldi	r24, 0x18	; 24
     e1e:	80 93 c1 00 	sts	0x00C1, r24
     e22:	8e e0       	ldi	r24, 0x0E	; 14
     e24:	80 93 c2 00 	sts	0x00C2, r24
     e28:	62 e0       	ldi	r22, 0x02	; 2
     e2a:	77 e0       	ldi	r23, 0x07	; 7
     e2c:	8a ef       	ldi	r24, 0xFA	; 250
     e2e:	96 e0       	ldi	r25, 0x06	; 6
     e30:	22 c2       	rjmp	.+1092   	; 0x1276 <fdevopen>
     e32:	08 95       	ret

00000e34 <__subsf3>:
     e34:	50 58       	subi	r21, 0x80	; 128

00000e36 <__addsf3>:
     e36:	bb 27       	eor	r27, r27
     e38:	aa 27       	eor	r26, r26
     e3a:	0e d0       	rcall	.+28     	; 0xe58 <__addsf3x>
     e3c:	75 c1       	rjmp	.+746    	; 0x1128 <__fp_round>
     e3e:	66 d1       	rcall	.+716    	; 0x110c <__fp_pscA>
     e40:	30 f0       	brcs	.+12     	; 0xe4e <__addsf3+0x18>
     e42:	6b d1       	rcall	.+726    	; 0x111a <__fp_pscB>
     e44:	20 f0       	brcs	.+8      	; 0xe4e <__addsf3+0x18>
     e46:	31 f4       	brne	.+12     	; 0xe54 <__addsf3+0x1e>
     e48:	9f 3f       	cpi	r25, 0xFF	; 255
     e4a:	11 f4       	brne	.+4      	; 0xe50 <__addsf3+0x1a>
     e4c:	1e f4       	brtc	.+6      	; 0xe54 <__addsf3+0x1e>
     e4e:	5b c1       	rjmp	.+694    	; 0x1106 <__fp_nan>
     e50:	0e f4       	brtc	.+2      	; 0xe54 <__addsf3+0x1e>
     e52:	e0 95       	com	r30
     e54:	e7 fb       	bst	r30, 7
     e56:	51 c1       	rjmp	.+674    	; 0x10fa <__fp_inf>

00000e58 <__addsf3x>:
     e58:	e9 2f       	mov	r30, r25
     e5a:	77 d1       	rcall	.+750    	; 0x114a <__fp_split3>
     e5c:	80 f3       	brcs	.-32     	; 0xe3e <__addsf3+0x8>
     e5e:	ba 17       	cp	r27, r26
     e60:	62 07       	cpc	r22, r18
     e62:	73 07       	cpc	r23, r19
     e64:	84 07       	cpc	r24, r20
     e66:	95 07       	cpc	r25, r21
     e68:	18 f0       	brcs	.+6      	; 0xe70 <__addsf3x+0x18>
     e6a:	71 f4       	brne	.+28     	; 0xe88 <__addsf3x+0x30>
     e6c:	9e f5       	brtc	.+102    	; 0xed4 <__addsf3x+0x7c>
     e6e:	8f c1       	rjmp	.+798    	; 0x118e <__fp_zero>
     e70:	0e f4       	brtc	.+2      	; 0xe74 <__addsf3x+0x1c>
     e72:	e0 95       	com	r30
     e74:	0b 2e       	mov	r0, r27
     e76:	ba 2f       	mov	r27, r26
     e78:	a0 2d       	mov	r26, r0
     e7a:	0b 01       	movw	r0, r22
     e7c:	b9 01       	movw	r22, r18
     e7e:	90 01       	movw	r18, r0
     e80:	0c 01       	movw	r0, r24
     e82:	ca 01       	movw	r24, r20
     e84:	a0 01       	movw	r20, r0
     e86:	11 24       	eor	r1, r1
     e88:	ff 27       	eor	r31, r31
     e8a:	59 1b       	sub	r21, r25
     e8c:	99 f0       	breq	.+38     	; 0xeb4 <__addsf3x+0x5c>
     e8e:	59 3f       	cpi	r21, 0xF9	; 249
     e90:	50 f4       	brcc	.+20     	; 0xea6 <__addsf3x+0x4e>
     e92:	50 3e       	cpi	r21, 0xE0	; 224
     e94:	68 f1       	brcs	.+90     	; 0xef0 <__addsf3x+0x98>
     e96:	1a 16       	cp	r1, r26
     e98:	f0 40       	sbci	r31, 0x00	; 0
     e9a:	a2 2f       	mov	r26, r18
     e9c:	23 2f       	mov	r18, r19
     e9e:	34 2f       	mov	r19, r20
     ea0:	44 27       	eor	r20, r20
     ea2:	58 5f       	subi	r21, 0xF8	; 248
     ea4:	f3 cf       	rjmp	.-26     	; 0xe8c <__addsf3x+0x34>
     ea6:	46 95       	lsr	r20
     ea8:	37 95       	ror	r19
     eaa:	27 95       	ror	r18
     eac:	a7 95       	ror	r26
     eae:	f0 40       	sbci	r31, 0x00	; 0
     eb0:	53 95       	inc	r21
     eb2:	c9 f7       	brne	.-14     	; 0xea6 <__addsf3x+0x4e>
     eb4:	7e f4       	brtc	.+30     	; 0xed4 <__addsf3x+0x7c>
     eb6:	1f 16       	cp	r1, r31
     eb8:	ba 0b       	sbc	r27, r26
     eba:	62 0b       	sbc	r22, r18
     ebc:	73 0b       	sbc	r23, r19
     ebe:	84 0b       	sbc	r24, r20
     ec0:	ba f0       	brmi	.+46     	; 0xef0 <__addsf3x+0x98>
     ec2:	91 50       	subi	r25, 0x01	; 1
     ec4:	a1 f0       	breq	.+40     	; 0xeee <__addsf3x+0x96>
     ec6:	ff 0f       	add	r31, r31
     ec8:	bb 1f       	adc	r27, r27
     eca:	66 1f       	adc	r22, r22
     ecc:	77 1f       	adc	r23, r23
     ece:	88 1f       	adc	r24, r24
     ed0:	c2 f7       	brpl	.-16     	; 0xec2 <__addsf3x+0x6a>
     ed2:	0e c0       	rjmp	.+28     	; 0xef0 <__addsf3x+0x98>
     ed4:	ba 0f       	add	r27, r26
     ed6:	62 1f       	adc	r22, r18
     ed8:	73 1f       	adc	r23, r19
     eda:	84 1f       	adc	r24, r20
     edc:	48 f4       	brcc	.+18     	; 0xef0 <__addsf3x+0x98>
     ede:	87 95       	ror	r24
     ee0:	77 95       	ror	r23
     ee2:	67 95       	ror	r22
     ee4:	b7 95       	ror	r27
     ee6:	f7 95       	ror	r31
     ee8:	9e 3f       	cpi	r25, 0xFE	; 254
     eea:	08 f0       	brcs	.+2      	; 0xeee <__addsf3x+0x96>
     eec:	b3 cf       	rjmp	.-154    	; 0xe54 <__addsf3+0x1e>
     eee:	93 95       	inc	r25
     ef0:	88 0f       	add	r24, r24
     ef2:	08 f0       	brcs	.+2      	; 0xef6 <__addsf3x+0x9e>
     ef4:	99 27       	eor	r25, r25
     ef6:	ee 0f       	add	r30, r30
     ef8:	97 95       	ror	r25
     efa:	87 95       	ror	r24
     efc:	08 95       	ret

00000efe <__cmpsf2>:
     efe:	d9 d0       	rcall	.+434    	; 0x10b2 <__fp_cmp>
     f00:	08 f4       	brcc	.+2      	; 0xf04 <__cmpsf2+0x6>
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	08 95       	ret

00000f06 <__divsf3>:
     f06:	0c d0       	rcall	.+24     	; 0xf20 <__divsf3x>
     f08:	0f c1       	rjmp	.+542    	; 0x1128 <__fp_round>
     f0a:	07 d1       	rcall	.+526    	; 0x111a <__fp_pscB>
     f0c:	40 f0       	brcs	.+16     	; 0xf1e <__divsf3+0x18>
     f0e:	fe d0       	rcall	.+508    	; 0x110c <__fp_pscA>
     f10:	30 f0       	brcs	.+12     	; 0xf1e <__divsf3+0x18>
     f12:	21 f4       	brne	.+8      	; 0xf1c <__divsf3+0x16>
     f14:	5f 3f       	cpi	r21, 0xFF	; 255
     f16:	19 f0       	breq	.+6      	; 0xf1e <__divsf3+0x18>
     f18:	f0 c0       	rjmp	.+480    	; 0x10fa <__fp_inf>
     f1a:	51 11       	cpse	r21, r1
     f1c:	39 c1       	rjmp	.+626    	; 0x1190 <__fp_szero>
     f1e:	f3 c0       	rjmp	.+486    	; 0x1106 <__fp_nan>

00000f20 <__divsf3x>:
     f20:	14 d1       	rcall	.+552    	; 0x114a <__fp_split3>
     f22:	98 f3       	brcs	.-26     	; 0xf0a <__divsf3+0x4>

00000f24 <__divsf3_pse>:
     f24:	99 23       	and	r25, r25
     f26:	c9 f3       	breq	.-14     	; 0xf1a <__divsf3+0x14>
     f28:	55 23       	and	r21, r21
     f2a:	b1 f3       	breq	.-20     	; 0xf18 <__divsf3+0x12>
     f2c:	95 1b       	sub	r25, r21
     f2e:	55 0b       	sbc	r21, r21
     f30:	bb 27       	eor	r27, r27
     f32:	aa 27       	eor	r26, r26
     f34:	62 17       	cp	r22, r18
     f36:	73 07       	cpc	r23, r19
     f38:	84 07       	cpc	r24, r20
     f3a:	38 f0       	brcs	.+14     	; 0xf4a <__divsf3_pse+0x26>
     f3c:	9f 5f       	subi	r25, 0xFF	; 255
     f3e:	5f 4f       	sbci	r21, 0xFF	; 255
     f40:	22 0f       	add	r18, r18
     f42:	33 1f       	adc	r19, r19
     f44:	44 1f       	adc	r20, r20
     f46:	aa 1f       	adc	r26, r26
     f48:	a9 f3       	breq	.-22     	; 0xf34 <__divsf3_pse+0x10>
     f4a:	33 d0       	rcall	.+102    	; 0xfb2 <__divsf3_pse+0x8e>
     f4c:	0e 2e       	mov	r0, r30
     f4e:	3a f0       	brmi	.+14     	; 0xf5e <__divsf3_pse+0x3a>
     f50:	e0 e8       	ldi	r30, 0x80	; 128
     f52:	30 d0       	rcall	.+96     	; 0xfb4 <__divsf3_pse+0x90>
     f54:	91 50       	subi	r25, 0x01	; 1
     f56:	50 40       	sbci	r21, 0x00	; 0
     f58:	e6 95       	lsr	r30
     f5a:	00 1c       	adc	r0, r0
     f5c:	ca f7       	brpl	.-14     	; 0xf50 <__divsf3_pse+0x2c>
     f5e:	29 d0       	rcall	.+82     	; 0xfb2 <__divsf3_pse+0x8e>
     f60:	fe 2f       	mov	r31, r30
     f62:	27 d0       	rcall	.+78     	; 0xfb2 <__divsf3_pse+0x8e>
     f64:	66 0f       	add	r22, r22
     f66:	77 1f       	adc	r23, r23
     f68:	88 1f       	adc	r24, r24
     f6a:	bb 1f       	adc	r27, r27
     f6c:	26 17       	cp	r18, r22
     f6e:	37 07       	cpc	r19, r23
     f70:	48 07       	cpc	r20, r24
     f72:	ab 07       	cpc	r26, r27
     f74:	b0 e8       	ldi	r27, 0x80	; 128
     f76:	09 f0       	breq	.+2      	; 0xf7a <__divsf3_pse+0x56>
     f78:	bb 0b       	sbc	r27, r27
     f7a:	80 2d       	mov	r24, r0
     f7c:	bf 01       	movw	r22, r30
     f7e:	ff 27       	eor	r31, r31
     f80:	93 58       	subi	r25, 0x83	; 131
     f82:	5f 4f       	sbci	r21, 0xFF	; 255
     f84:	2a f0       	brmi	.+10     	; 0xf90 <__divsf3_pse+0x6c>
     f86:	9e 3f       	cpi	r25, 0xFE	; 254
     f88:	51 05       	cpc	r21, r1
     f8a:	68 f0       	brcs	.+26     	; 0xfa6 <__divsf3_pse+0x82>
     f8c:	b6 c0       	rjmp	.+364    	; 0x10fa <__fp_inf>
     f8e:	00 c1       	rjmp	.+512    	; 0x1190 <__fp_szero>
     f90:	5f 3f       	cpi	r21, 0xFF	; 255
     f92:	ec f3       	brlt	.-6      	; 0xf8e <__divsf3_pse+0x6a>
     f94:	98 3e       	cpi	r25, 0xE8	; 232
     f96:	dc f3       	brlt	.-10     	; 0xf8e <__divsf3_pse+0x6a>
     f98:	86 95       	lsr	r24
     f9a:	77 95       	ror	r23
     f9c:	67 95       	ror	r22
     f9e:	b7 95       	ror	r27
     fa0:	f7 95       	ror	r31
     fa2:	9f 5f       	subi	r25, 0xFF	; 255
     fa4:	c9 f7       	brne	.-14     	; 0xf98 <__divsf3_pse+0x74>
     fa6:	88 0f       	add	r24, r24
     fa8:	91 1d       	adc	r25, r1
     faa:	96 95       	lsr	r25
     fac:	87 95       	ror	r24
     fae:	97 f9       	bld	r25, 7
     fb0:	08 95       	ret
     fb2:	e1 e0       	ldi	r30, 0x01	; 1
     fb4:	66 0f       	add	r22, r22
     fb6:	77 1f       	adc	r23, r23
     fb8:	88 1f       	adc	r24, r24
     fba:	bb 1f       	adc	r27, r27
     fbc:	62 17       	cp	r22, r18
     fbe:	73 07       	cpc	r23, r19
     fc0:	84 07       	cpc	r24, r20
     fc2:	ba 07       	cpc	r27, r26
     fc4:	20 f0       	brcs	.+8      	; 0xfce <__divsf3_pse+0xaa>
     fc6:	62 1b       	sub	r22, r18
     fc8:	73 0b       	sbc	r23, r19
     fca:	84 0b       	sbc	r24, r20
     fcc:	ba 0b       	sbc	r27, r26
     fce:	ee 1f       	adc	r30, r30
     fd0:	88 f7       	brcc	.-30     	; 0xfb4 <__divsf3_pse+0x90>
     fd2:	e0 95       	com	r30
     fd4:	08 95       	ret

00000fd6 <__fixsfsi>:
     fd6:	04 d0       	rcall	.+8      	; 0xfe0 <__fixunssfsi>
     fd8:	68 94       	set
     fda:	b1 11       	cpse	r27, r1
     fdc:	d9 c0       	rjmp	.+434    	; 0x1190 <__fp_szero>
     fde:	08 95       	ret

00000fe0 <__fixunssfsi>:
     fe0:	bc d0       	rcall	.+376    	; 0x115a <__fp_splitA>
     fe2:	88 f0       	brcs	.+34     	; 0x1006 <__fixunssfsi+0x26>
     fe4:	9f 57       	subi	r25, 0x7F	; 127
     fe6:	90 f0       	brcs	.+36     	; 0x100c <__fixunssfsi+0x2c>
     fe8:	b9 2f       	mov	r27, r25
     fea:	99 27       	eor	r25, r25
     fec:	b7 51       	subi	r27, 0x17	; 23
     fee:	a0 f0       	brcs	.+40     	; 0x1018 <__fixunssfsi+0x38>
     ff0:	d1 f0       	breq	.+52     	; 0x1026 <__fixunssfsi+0x46>
     ff2:	66 0f       	add	r22, r22
     ff4:	77 1f       	adc	r23, r23
     ff6:	88 1f       	adc	r24, r24
     ff8:	99 1f       	adc	r25, r25
     ffa:	1a f0       	brmi	.+6      	; 0x1002 <__fixunssfsi+0x22>
     ffc:	ba 95       	dec	r27
     ffe:	c9 f7       	brne	.-14     	; 0xff2 <__fixunssfsi+0x12>
    1000:	12 c0       	rjmp	.+36     	; 0x1026 <__fixunssfsi+0x46>
    1002:	b1 30       	cpi	r27, 0x01	; 1
    1004:	81 f0       	breq	.+32     	; 0x1026 <__fixunssfsi+0x46>
    1006:	c3 d0       	rcall	.+390    	; 0x118e <__fp_zero>
    1008:	b1 e0       	ldi	r27, 0x01	; 1
    100a:	08 95       	ret
    100c:	c0 c0       	rjmp	.+384    	; 0x118e <__fp_zero>
    100e:	67 2f       	mov	r22, r23
    1010:	78 2f       	mov	r23, r24
    1012:	88 27       	eor	r24, r24
    1014:	b8 5f       	subi	r27, 0xF8	; 248
    1016:	39 f0       	breq	.+14     	; 0x1026 <__fixunssfsi+0x46>
    1018:	b9 3f       	cpi	r27, 0xF9	; 249
    101a:	cc f3       	brlt	.-14     	; 0x100e <__fixunssfsi+0x2e>
    101c:	86 95       	lsr	r24
    101e:	77 95       	ror	r23
    1020:	67 95       	ror	r22
    1022:	b3 95       	inc	r27
    1024:	d9 f7       	brne	.-10     	; 0x101c <__fixunssfsi+0x3c>
    1026:	3e f4       	brtc	.+14     	; 0x1036 <__fixunssfsi+0x56>
    1028:	90 95       	com	r25
    102a:	80 95       	com	r24
    102c:	70 95       	com	r23
    102e:	61 95       	neg	r22
    1030:	7f 4f       	sbci	r23, 0xFF	; 255
    1032:	8f 4f       	sbci	r24, 0xFF	; 255
    1034:	9f 4f       	sbci	r25, 0xFF	; 255
    1036:	08 95       	ret

00001038 <__floatunsisf>:
    1038:	e8 94       	clt
    103a:	09 c0       	rjmp	.+18     	; 0x104e <__floatsisf+0x12>

0000103c <__floatsisf>:
    103c:	97 fb       	bst	r25, 7
    103e:	3e f4       	brtc	.+14     	; 0x104e <__floatsisf+0x12>
    1040:	90 95       	com	r25
    1042:	80 95       	com	r24
    1044:	70 95       	com	r23
    1046:	61 95       	neg	r22
    1048:	7f 4f       	sbci	r23, 0xFF	; 255
    104a:	8f 4f       	sbci	r24, 0xFF	; 255
    104c:	9f 4f       	sbci	r25, 0xFF	; 255
    104e:	99 23       	and	r25, r25
    1050:	a9 f0       	breq	.+42     	; 0x107c <__floatsisf+0x40>
    1052:	f9 2f       	mov	r31, r25
    1054:	96 e9       	ldi	r25, 0x96	; 150
    1056:	bb 27       	eor	r27, r27
    1058:	93 95       	inc	r25
    105a:	f6 95       	lsr	r31
    105c:	87 95       	ror	r24
    105e:	77 95       	ror	r23
    1060:	67 95       	ror	r22
    1062:	b7 95       	ror	r27
    1064:	f1 11       	cpse	r31, r1
    1066:	f8 cf       	rjmp	.-16     	; 0x1058 <__floatsisf+0x1c>
    1068:	fa f4       	brpl	.+62     	; 0x10a8 <__floatsisf+0x6c>
    106a:	bb 0f       	add	r27, r27
    106c:	11 f4       	brne	.+4      	; 0x1072 <__floatsisf+0x36>
    106e:	60 ff       	sbrs	r22, 0
    1070:	1b c0       	rjmp	.+54     	; 0x10a8 <__floatsisf+0x6c>
    1072:	6f 5f       	subi	r22, 0xFF	; 255
    1074:	7f 4f       	sbci	r23, 0xFF	; 255
    1076:	8f 4f       	sbci	r24, 0xFF	; 255
    1078:	9f 4f       	sbci	r25, 0xFF	; 255
    107a:	16 c0       	rjmp	.+44     	; 0x10a8 <__floatsisf+0x6c>
    107c:	88 23       	and	r24, r24
    107e:	11 f0       	breq	.+4      	; 0x1084 <__floatsisf+0x48>
    1080:	96 e9       	ldi	r25, 0x96	; 150
    1082:	11 c0       	rjmp	.+34     	; 0x10a6 <__floatsisf+0x6a>
    1084:	77 23       	and	r23, r23
    1086:	21 f0       	breq	.+8      	; 0x1090 <__floatsisf+0x54>
    1088:	9e e8       	ldi	r25, 0x8E	; 142
    108a:	87 2f       	mov	r24, r23
    108c:	76 2f       	mov	r23, r22
    108e:	05 c0       	rjmp	.+10     	; 0x109a <__floatsisf+0x5e>
    1090:	66 23       	and	r22, r22
    1092:	71 f0       	breq	.+28     	; 0x10b0 <__floatsisf+0x74>
    1094:	96 e8       	ldi	r25, 0x86	; 134
    1096:	86 2f       	mov	r24, r22
    1098:	70 e0       	ldi	r23, 0x00	; 0
    109a:	60 e0       	ldi	r22, 0x00	; 0
    109c:	2a f0       	brmi	.+10     	; 0x10a8 <__floatsisf+0x6c>
    109e:	9a 95       	dec	r25
    10a0:	66 0f       	add	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	88 1f       	adc	r24, r24
    10a6:	da f7       	brpl	.-10     	; 0x109e <__floatsisf+0x62>
    10a8:	88 0f       	add	r24, r24
    10aa:	96 95       	lsr	r25
    10ac:	87 95       	ror	r24
    10ae:	97 f9       	bld	r25, 7
    10b0:	08 95       	ret

000010b2 <__fp_cmp>:
    10b2:	99 0f       	add	r25, r25
    10b4:	00 08       	sbc	r0, r0
    10b6:	55 0f       	add	r21, r21
    10b8:	aa 0b       	sbc	r26, r26
    10ba:	e0 e8       	ldi	r30, 0x80	; 128
    10bc:	fe ef       	ldi	r31, 0xFE	; 254
    10be:	16 16       	cp	r1, r22
    10c0:	17 06       	cpc	r1, r23
    10c2:	e8 07       	cpc	r30, r24
    10c4:	f9 07       	cpc	r31, r25
    10c6:	c0 f0       	brcs	.+48     	; 0x10f8 <__fp_cmp+0x46>
    10c8:	12 16       	cp	r1, r18
    10ca:	13 06       	cpc	r1, r19
    10cc:	e4 07       	cpc	r30, r20
    10ce:	f5 07       	cpc	r31, r21
    10d0:	98 f0       	brcs	.+38     	; 0x10f8 <__fp_cmp+0x46>
    10d2:	62 1b       	sub	r22, r18
    10d4:	73 0b       	sbc	r23, r19
    10d6:	84 0b       	sbc	r24, r20
    10d8:	95 0b       	sbc	r25, r21
    10da:	39 f4       	brne	.+14     	; 0x10ea <__fp_cmp+0x38>
    10dc:	0a 26       	eor	r0, r26
    10de:	61 f0       	breq	.+24     	; 0x10f8 <__fp_cmp+0x46>
    10e0:	23 2b       	or	r18, r19
    10e2:	24 2b       	or	r18, r20
    10e4:	25 2b       	or	r18, r21
    10e6:	21 f4       	brne	.+8      	; 0x10f0 <__fp_cmp+0x3e>
    10e8:	08 95       	ret
    10ea:	0a 26       	eor	r0, r26
    10ec:	09 f4       	brne	.+2      	; 0x10f0 <__fp_cmp+0x3e>
    10ee:	a1 40       	sbci	r26, 0x01	; 1
    10f0:	a6 95       	lsr	r26
    10f2:	8f ef       	ldi	r24, 0xFF	; 255
    10f4:	81 1d       	adc	r24, r1
    10f6:	81 1d       	adc	r24, r1
    10f8:	08 95       	ret

000010fa <__fp_inf>:
    10fa:	97 f9       	bld	r25, 7
    10fc:	9f 67       	ori	r25, 0x7F	; 127
    10fe:	80 e8       	ldi	r24, 0x80	; 128
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	60 e0       	ldi	r22, 0x00	; 0
    1104:	08 95       	ret

00001106 <__fp_nan>:
    1106:	9f ef       	ldi	r25, 0xFF	; 255
    1108:	80 ec       	ldi	r24, 0xC0	; 192
    110a:	08 95       	ret

0000110c <__fp_pscA>:
    110c:	00 24       	eor	r0, r0
    110e:	0a 94       	dec	r0
    1110:	16 16       	cp	r1, r22
    1112:	17 06       	cpc	r1, r23
    1114:	18 06       	cpc	r1, r24
    1116:	09 06       	cpc	r0, r25
    1118:	08 95       	ret

0000111a <__fp_pscB>:
    111a:	00 24       	eor	r0, r0
    111c:	0a 94       	dec	r0
    111e:	12 16       	cp	r1, r18
    1120:	13 06       	cpc	r1, r19
    1122:	14 06       	cpc	r1, r20
    1124:	05 06       	cpc	r0, r21
    1126:	08 95       	ret

00001128 <__fp_round>:
    1128:	09 2e       	mov	r0, r25
    112a:	03 94       	inc	r0
    112c:	00 0c       	add	r0, r0
    112e:	11 f4       	brne	.+4      	; 0x1134 <__fp_round+0xc>
    1130:	88 23       	and	r24, r24
    1132:	52 f0       	brmi	.+20     	; 0x1148 <__fp_round+0x20>
    1134:	bb 0f       	add	r27, r27
    1136:	40 f4       	brcc	.+16     	; 0x1148 <__fp_round+0x20>
    1138:	bf 2b       	or	r27, r31
    113a:	11 f4       	brne	.+4      	; 0x1140 <__fp_round+0x18>
    113c:	60 ff       	sbrs	r22, 0
    113e:	04 c0       	rjmp	.+8      	; 0x1148 <__fp_round+0x20>
    1140:	6f 5f       	subi	r22, 0xFF	; 255
    1142:	7f 4f       	sbci	r23, 0xFF	; 255
    1144:	8f 4f       	sbci	r24, 0xFF	; 255
    1146:	9f 4f       	sbci	r25, 0xFF	; 255
    1148:	08 95       	ret

0000114a <__fp_split3>:
    114a:	57 fd       	sbrc	r21, 7
    114c:	90 58       	subi	r25, 0x80	; 128
    114e:	44 0f       	add	r20, r20
    1150:	55 1f       	adc	r21, r21
    1152:	59 f0       	breq	.+22     	; 0x116a <__fp_splitA+0x10>
    1154:	5f 3f       	cpi	r21, 0xFF	; 255
    1156:	71 f0       	breq	.+28     	; 0x1174 <__fp_splitA+0x1a>
    1158:	47 95       	ror	r20

0000115a <__fp_splitA>:
    115a:	88 0f       	add	r24, r24
    115c:	97 fb       	bst	r25, 7
    115e:	99 1f       	adc	r25, r25
    1160:	61 f0       	breq	.+24     	; 0x117a <__fp_splitA+0x20>
    1162:	9f 3f       	cpi	r25, 0xFF	; 255
    1164:	79 f0       	breq	.+30     	; 0x1184 <__fp_splitA+0x2a>
    1166:	87 95       	ror	r24
    1168:	08 95       	ret
    116a:	12 16       	cp	r1, r18
    116c:	13 06       	cpc	r1, r19
    116e:	14 06       	cpc	r1, r20
    1170:	55 1f       	adc	r21, r21
    1172:	f2 cf       	rjmp	.-28     	; 0x1158 <__fp_split3+0xe>
    1174:	46 95       	lsr	r20
    1176:	f1 df       	rcall	.-30     	; 0x115a <__fp_splitA>
    1178:	08 c0       	rjmp	.+16     	; 0x118a <__fp_splitA+0x30>
    117a:	16 16       	cp	r1, r22
    117c:	17 06       	cpc	r1, r23
    117e:	18 06       	cpc	r1, r24
    1180:	99 1f       	adc	r25, r25
    1182:	f1 cf       	rjmp	.-30     	; 0x1166 <__fp_splitA+0xc>
    1184:	86 95       	lsr	r24
    1186:	71 05       	cpc	r23, r1
    1188:	61 05       	cpc	r22, r1
    118a:	08 94       	sec
    118c:	08 95       	ret

0000118e <__fp_zero>:
    118e:	e8 94       	clt

00001190 <__fp_szero>:
    1190:	bb 27       	eor	r27, r27
    1192:	66 27       	eor	r22, r22
    1194:	77 27       	eor	r23, r23
    1196:	cb 01       	movw	r24, r22
    1198:	97 f9       	bld	r25, 7
    119a:	08 95       	ret

0000119c <__gesf2>:
    119c:	8a df       	rcall	.-236    	; 0x10b2 <__fp_cmp>
    119e:	08 f4       	brcc	.+2      	; 0x11a2 <__gesf2+0x6>
    11a0:	8f ef       	ldi	r24, 0xFF	; 255
    11a2:	08 95       	ret

000011a4 <__mulsf3>:
    11a4:	0b d0       	rcall	.+22     	; 0x11bc <__mulsf3x>
    11a6:	c0 cf       	rjmp	.-128    	; 0x1128 <__fp_round>
    11a8:	b1 df       	rcall	.-158    	; 0x110c <__fp_pscA>
    11aa:	28 f0       	brcs	.+10     	; 0x11b6 <__mulsf3+0x12>
    11ac:	b6 df       	rcall	.-148    	; 0x111a <__fp_pscB>
    11ae:	18 f0       	brcs	.+6      	; 0x11b6 <__mulsf3+0x12>
    11b0:	95 23       	and	r25, r21
    11b2:	09 f0       	breq	.+2      	; 0x11b6 <__mulsf3+0x12>
    11b4:	a2 cf       	rjmp	.-188    	; 0x10fa <__fp_inf>
    11b6:	a7 cf       	rjmp	.-178    	; 0x1106 <__fp_nan>
    11b8:	11 24       	eor	r1, r1
    11ba:	ea cf       	rjmp	.-44     	; 0x1190 <__fp_szero>

000011bc <__mulsf3x>:
    11bc:	c6 df       	rcall	.-116    	; 0x114a <__fp_split3>
    11be:	a0 f3       	brcs	.-24     	; 0x11a8 <__mulsf3+0x4>

000011c0 <__mulsf3_pse>:
    11c0:	95 9f       	mul	r25, r21
    11c2:	d1 f3       	breq	.-12     	; 0x11b8 <__mulsf3+0x14>
    11c4:	95 0f       	add	r25, r21
    11c6:	50 e0       	ldi	r21, 0x00	; 0
    11c8:	55 1f       	adc	r21, r21
    11ca:	62 9f       	mul	r22, r18
    11cc:	f0 01       	movw	r30, r0
    11ce:	72 9f       	mul	r23, r18
    11d0:	bb 27       	eor	r27, r27
    11d2:	f0 0d       	add	r31, r0
    11d4:	b1 1d       	adc	r27, r1
    11d6:	63 9f       	mul	r22, r19
    11d8:	aa 27       	eor	r26, r26
    11da:	f0 0d       	add	r31, r0
    11dc:	b1 1d       	adc	r27, r1
    11de:	aa 1f       	adc	r26, r26
    11e0:	64 9f       	mul	r22, r20
    11e2:	66 27       	eor	r22, r22
    11e4:	b0 0d       	add	r27, r0
    11e6:	a1 1d       	adc	r26, r1
    11e8:	66 1f       	adc	r22, r22
    11ea:	82 9f       	mul	r24, r18
    11ec:	22 27       	eor	r18, r18
    11ee:	b0 0d       	add	r27, r0
    11f0:	a1 1d       	adc	r26, r1
    11f2:	62 1f       	adc	r22, r18
    11f4:	73 9f       	mul	r23, r19
    11f6:	b0 0d       	add	r27, r0
    11f8:	a1 1d       	adc	r26, r1
    11fa:	62 1f       	adc	r22, r18
    11fc:	83 9f       	mul	r24, r19
    11fe:	a0 0d       	add	r26, r0
    1200:	61 1d       	adc	r22, r1
    1202:	22 1f       	adc	r18, r18
    1204:	74 9f       	mul	r23, r20
    1206:	33 27       	eor	r19, r19
    1208:	a0 0d       	add	r26, r0
    120a:	61 1d       	adc	r22, r1
    120c:	23 1f       	adc	r18, r19
    120e:	84 9f       	mul	r24, r20
    1210:	60 0d       	add	r22, r0
    1212:	21 1d       	adc	r18, r1
    1214:	82 2f       	mov	r24, r18
    1216:	76 2f       	mov	r23, r22
    1218:	6a 2f       	mov	r22, r26
    121a:	11 24       	eor	r1, r1
    121c:	9f 57       	subi	r25, 0x7F	; 127
    121e:	50 40       	sbci	r21, 0x00	; 0
    1220:	8a f0       	brmi	.+34     	; 0x1244 <__mulsf3_pse+0x84>
    1222:	e1 f0       	breq	.+56     	; 0x125c <__mulsf3_pse+0x9c>
    1224:	88 23       	and	r24, r24
    1226:	4a f0       	brmi	.+18     	; 0x123a <__mulsf3_pse+0x7a>
    1228:	ee 0f       	add	r30, r30
    122a:	ff 1f       	adc	r31, r31
    122c:	bb 1f       	adc	r27, r27
    122e:	66 1f       	adc	r22, r22
    1230:	77 1f       	adc	r23, r23
    1232:	88 1f       	adc	r24, r24
    1234:	91 50       	subi	r25, 0x01	; 1
    1236:	50 40       	sbci	r21, 0x00	; 0
    1238:	a9 f7       	brne	.-22     	; 0x1224 <__mulsf3_pse+0x64>
    123a:	9e 3f       	cpi	r25, 0xFE	; 254
    123c:	51 05       	cpc	r21, r1
    123e:	70 f0       	brcs	.+28     	; 0x125c <__mulsf3_pse+0x9c>
    1240:	5c cf       	rjmp	.-328    	; 0x10fa <__fp_inf>
    1242:	a6 cf       	rjmp	.-180    	; 0x1190 <__fp_szero>
    1244:	5f 3f       	cpi	r21, 0xFF	; 255
    1246:	ec f3       	brlt	.-6      	; 0x1242 <__mulsf3_pse+0x82>
    1248:	98 3e       	cpi	r25, 0xE8	; 232
    124a:	dc f3       	brlt	.-10     	; 0x1242 <__mulsf3_pse+0x82>
    124c:	86 95       	lsr	r24
    124e:	77 95       	ror	r23
    1250:	67 95       	ror	r22
    1252:	b7 95       	ror	r27
    1254:	f7 95       	ror	r31
    1256:	e7 95       	ror	r30
    1258:	9f 5f       	subi	r25, 0xFF	; 255
    125a:	c1 f7       	brne	.-16     	; 0x124c <__mulsf3_pse+0x8c>
    125c:	fe 2b       	or	r31, r30
    125e:	88 0f       	add	r24, r24
    1260:	91 1d       	adc	r25, r1
    1262:	96 95       	lsr	r25
    1264:	87 95       	ror	r24
    1266:	97 f9       	bld	r25, 7
    1268:	08 95       	ret

0000126a <__tablejump2__>:
    126a:	ee 0f       	add	r30, r30
    126c:	ff 1f       	adc	r31, r31

0000126e <__tablejump__>:
    126e:	05 90       	lpm	r0, Z+
    1270:	f4 91       	lpm	r31, Z
    1272:	e0 2d       	mov	r30, r0
    1274:	19 94       	eijmp

00001276 <fdevopen>:
    1276:	0f 93       	push	r16
    1278:	1f 93       	push	r17
    127a:	cf 93       	push	r28
    127c:	df 93       	push	r29
    127e:	ec 01       	movw	r28, r24
    1280:	8b 01       	movw	r16, r22
    1282:	00 97       	sbiw	r24, 0x00	; 0
    1284:	31 f4       	brne	.+12     	; 0x1292 <fdevopen+0x1c>
    1286:	61 15       	cp	r22, r1
    1288:	71 05       	cpc	r23, r1
    128a:	19 f4       	brne	.+6      	; 0x1292 <fdevopen+0x1c>
    128c:	80 e0       	ldi	r24, 0x00	; 0
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	37 c0       	rjmp	.+110    	; 0x1300 <fdevopen+0x8a>
    1292:	6e e0       	ldi	r22, 0x0E	; 14
    1294:	70 e0       	ldi	r23, 0x00	; 0
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	63 d2       	rcall	.+1222   	; 0x1762 <calloc>
    129c:	fc 01       	movw	r30, r24
    129e:	00 97       	sbiw	r24, 0x00	; 0
    12a0:	a9 f3       	breq	.-22     	; 0x128c <fdevopen+0x16>
    12a2:	80 e8       	ldi	r24, 0x80	; 128
    12a4:	83 83       	std	Z+3, r24	; 0x03
    12a6:	01 15       	cp	r16, r1
    12a8:	11 05       	cpc	r17, r1
    12aa:	71 f0       	breq	.+28     	; 0x12c8 <fdevopen+0x52>
    12ac:	13 87       	std	Z+11, r17	; 0x0b
    12ae:	02 87       	std	Z+10, r16	; 0x0a
    12b0:	81 e8       	ldi	r24, 0x81	; 129
    12b2:	83 83       	std	Z+3, r24	; 0x03
    12b4:	80 91 c3 02 	lds	r24, 0x02C3
    12b8:	90 91 c4 02 	lds	r25, 0x02C4
    12bc:	89 2b       	or	r24, r25
    12be:	21 f4       	brne	.+8      	; 0x12c8 <fdevopen+0x52>
    12c0:	f0 93 c4 02 	sts	0x02C4, r31
    12c4:	e0 93 c3 02 	sts	0x02C3, r30
    12c8:	20 97       	sbiw	r28, 0x00	; 0
    12ca:	c9 f0       	breq	.+50     	; 0x12fe <fdevopen+0x88>
    12cc:	d1 87       	std	Z+9, r29	; 0x09
    12ce:	c0 87       	std	Z+8, r28	; 0x08
    12d0:	83 81       	ldd	r24, Z+3	; 0x03
    12d2:	82 60       	ori	r24, 0x02	; 2
    12d4:	83 83       	std	Z+3, r24	; 0x03
    12d6:	80 91 c5 02 	lds	r24, 0x02C5
    12da:	90 91 c6 02 	lds	r25, 0x02C6
    12de:	89 2b       	or	r24, r25
    12e0:	71 f4       	brne	.+28     	; 0x12fe <fdevopen+0x88>
    12e2:	f0 93 c6 02 	sts	0x02C6, r31
    12e6:	e0 93 c5 02 	sts	0x02C5, r30
    12ea:	80 91 c7 02 	lds	r24, 0x02C7
    12ee:	90 91 c8 02 	lds	r25, 0x02C8
    12f2:	89 2b       	or	r24, r25
    12f4:	21 f4       	brne	.+8      	; 0x12fe <fdevopen+0x88>
    12f6:	f0 93 c8 02 	sts	0x02C8, r31
    12fa:	e0 93 c7 02 	sts	0x02C7, r30
    12fe:	cf 01       	movw	r24, r30
    1300:	df 91       	pop	r29
    1302:	cf 91       	pop	r28
    1304:	1f 91       	pop	r17
    1306:	0f 91       	pop	r16
    1308:	08 95       	ret

0000130a <printf>:
    130a:	cf 93       	push	r28
    130c:	df 93       	push	r29
    130e:	cd b7       	in	r28, 0x3d	; 61
    1310:	de b7       	in	r29, 0x3e	; 62
    1312:	fe 01       	movw	r30, r28
    1314:	36 96       	adiw	r30, 0x06	; 6
    1316:	61 91       	ld	r22, Z+
    1318:	71 91       	ld	r23, Z+
    131a:	af 01       	movw	r20, r30
    131c:	80 91 c5 02 	lds	r24, 0x02C5
    1320:	90 91 c6 02 	lds	r25, 0x02C6
    1324:	30 d0       	rcall	.+96     	; 0x1386 <vfprintf>
    1326:	df 91       	pop	r29
    1328:	cf 91       	pop	r28
    132a:	08 95       	ret

0000132c <puts>:
    132c:	0f 93       	push	r16
    132e:	1f 93       	push	r17
    1330:	cf 93       	push	r28
    1332:	df 93       	push	r29
    1334:	e0 91 c5 02 	lds	r30, 0x02C5
    1338:	f0 91 c6 02 	lds	r31, 0x02C6
    133c:	23 81       	ldd	r18, Z+3	; 0x03
    133e:	21 ff       	sbrs	r18, 1
    1340:	1b c0       	rjmp	.+54     	; 0x1378 <puts+0x4c>
    1342:	ec 01       	movw	r28, r24
    1344:	00 e0       	ldi	r16, 0x00	; 0
    1346:	10 e0       	ldi	r17, 0x00	; 0
    1348:	89 91       	ld	r24, Y+
    134a:	60 91 c5 02 	lds	r22, 0x02C5
    134e:	70 91 c6 02 	lds	r23, 0x02C6
    1352:	db 01       	movw	r26, r22
    1354:	18 96       	adiw	r26, 0x08	; 8
    1356:	ed 91       	ld	r30, X+
    1358:	fc 91       	ld	r31, X
    135a:	19 97       	sbiw	r26, 0x09	; 9
    135c:	88 23       	and	r24, r24
    135e:	31 f0       	breq	.+12     	; 0x136c <puts+0x40>
    1360:	19 95       	eicall
    1362:	89 2b       	or	r24, r25
    1364:	89 f3       	breq	.-30     	; 0x1348 <puts+0x1c>
    1366:	0f ef       	ldi	r16, 0xFF	; 255
    1368:	1f ef       	ldi	r17, 0xFF	; 255
    136a:	ee cf       	rjmp	.-36     	; 0x1348 <puts+0x1c>
    136c:	8a e0       	ldi	r24, 0x0A	; 10
    136e:	19 95       	eicall
    1370:	89 2b       	or	r24, r25
    1372:	11 f4       	brne	.+4      	; 0x1378 <puts+0x4c>
    1374:	c8 01       	movw	r24, r16
    1376:	02 c0       	rjmp	.+4      	; 0x137c <puts+0x50>
    1378:	8f ef       	ldi	r24, 0xFF	; 255
    137a:	9f ef       	ldi	r25, 0xFF	; 255
    137c:	df 91       	pop	r29
    137e:	cf 91       	pop	r28
    1380:	1f 91       	pop	r17
    1382:	0f 91       	pop	r16
    1384:	08 95       	ret

00001386 <vfprintf>:
    1386:	2f 92       	push	r2
    1388:	3f 92       	push	r3
    138a:	4f 92       	push	r4
    138c:	5f 92       	push	r5
    138e:	6f 92       	push	r6
    1390:	7f 92       	push	r7
    1392:	8f 92       	push	r8
    1394:	9f 92       	push	r9
    1396:	af 92       	push	r10
    1398:	bf 92       	push	r11
    139a:	cf 92       	push	r12
    139c:	df 92       	push	r13
    139e:	ef 92       	push	r14
    13a0:	ff 92       	push	r15
    13a2:	0f 93       	push	r16
    13a4:	1f 93       	push	r17
    13a6:	cf 93       	push	r28
    13a8:	df 93       	push	r29
    13aa:	cd b7       	in	r28, 0x3d	; 61
    13ac:	de b7       	in	r29, 0x3e	; 62
    13ae:	2c 97       	sbiw	r28, 0x0c	; 12
    13b0:	0f b6       	in	r0, 0x3f	; 63
    13b2:	f8 94       	cli
    13b4:	de bf       	out	0x3e, r29	; 62
    13b6:	0f be       	out	0x3f, r0	; 63
    13b8:	cd bf       	out	0x3d, r28	; 61
    13ba:	7c 01       	movw	r14, r24
    13bc:	6b 01       	movw	r12, r22
    13be:	8a 01       	movw	r16, r20
    13c0:	fc 01       	movw	r30, r24
    13c2:	17 82       	std	Z+7, r1	; 0x07
    13c4:	16 82       	std	Z+6, r1	; 0x06
    13c6:	83 81       	ldd	r24, Z+3	; 0x03
    13c8:	81 ff       	sbrs	r24, 1
    13ca:	b0 c1       	rjmp	.+864    	; 0x172c <vfprintf+0x3a6>
    13cc:	ce 01       	movw	r24, r28
    13ce:	01 96       	adiw	r24, 0x01	; 1
    13d0:	4c 01       	movw	r8, r24
    13d2:	f7 01       	movw	r30, r14
    13d4:	93 81       	ldd	r25, Z+3	; 0x03
    13d6:	f6 01       	movw	r30, r12
    13d8:	93 fd       	sbrc	r25, 3
    13da:	85 91       	lpm	r24, Z+
    13dc:	93 ff       	sbrs	r25, 3
    13de:	81 91       	ld	r24, Z+
    13e0:	6f 01       	movw	r12, r30
    13e2:	88 23       	and	r24, r24
    13e4:	09 f4       	brne	.+2      	; 0x13e8 <vfprintf+0x62>
    13e6:	9e c1       	rjmp	.+828    	; 0x1724 <vfprintf+0x39e>
    13e8:	85 32       	cpi	r24, 0x25	; 37
    13ea:	39 f4       	brne	.+14     	; 0x13fa <vfprintf+0x74>
    13ec:	93 fd       	sbrc	r25, 3
    13ee:	85 91       	lpm	r24, Z+
    13f0:	93 ff       	sbrs	r25, 3
    13f2:	81 91       	ld	r24, Z+
    13f4:	6f 01       	movw	r12, r30
    13f6:	85 32       	cpi	r24, 0x25	; 37
    13f8:	21 f4       	brne	.+8      	; 0x1402 <vfprintf+0x7c>
    13fa:	b7 01       	movw	r22, r14
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	0f d3       	rcall	.+1566   	; 0x1a1e <fputc>
    1400:	e8 cf       	rjmp	.-48     	; 0x13d2 <vfprintf+0x4c>
    1402:	51 2c       	mov	r5, r1
    1404:	31 2c       	mov	r3, r1
    1406:	20 e0       	ldi	r18, 0x00	; 0
    1408:	20 32       	cpi	r18, 0x20	; 32
    140a:	a0 f4       	brcc	.+40     	; 0x1434 <vfprintf+0xae>
    140c:	8b 32       	cpi	r24, 0x2B	; 43
    140e:	69 f0       	breq	.+26     	; 0x142a <vfprintf+0xa4>
    1410:	30 f4       	brcc	.+12     	; 0x141e <vfprintf+0x98>
    1412:	80 32       	cpi	r24, 0x20	; 32
    1414:	59 f0       	breq	.+22     	; 0x142c <vfprintf+0xa6>
    1416:	83 32       	cpi	r24, 0x23	; 35
    1418:	69 f4       	brne	.+26     	; 0x1434 <vfprintf+0xae>
    141a:	20 61       	ori	r18, 0x10	; 16
    141c:	2c c0       	rjmp	.+88     	; 0x1476 <vfprintf+0xf0>
    141e:	8d 32       	cpi	r24, 0x2D	; 45
    1420:	39 f0       	breq	.+14     	; 0x1430 <vfprintf+0xaa>
    1422:	80 33       	cpi	r24, 0x30	; 48
    1424:	39 f4       	brne	.+14     	; 0x1434 <vfprintf+0xae>
    1426:	21 60       	ori	r18, 0x01	; 1
    1428:	26 c0       	rjmp	.+76     	; 0x1476 <vfprintf+0xf0>
    142a:	22 60       	ori	r18, 0x02	; 2
    142c:	24 60       	ori	r18, 0x04	; 4
    142e:	23 c0       	rjmp	.+70     	; 0x1476 <vfprintf+0xf0>
    1430:	28 60       	ori	r18, 0x08	; 8
    1432:	21 c0       	rjmp	.+66     	; 0x1476 <vfprintf+0xf0>
    1434:	27 fd       	sbrc	r18, 7
    1436:	27 c0       	rjmp	.+78     	; 0x1486 <vfprintf+0x100>
    1438:	30 ed       	ldi	r19, 0xD0	; 208
    143a:	38 0f       	add	r19, r24
    143c:	3a 30       	cpi	r19, 0x0A	; 10
    143e:	78 f4       	brcc	.+30     	; 0x145e <vfprintf+0xd8>
    1440:	26 ff       	sbrs	r18, 6
    1442:	06 c0       	rjmp	.+12     	; 0x1450 <vfprintf+0xca>
    1444:	fa e0       	ldi	r31, 0x0A	; 10
    1446:	5f 9e       	mul	r5, r31
    1448:	30 0d       	add	r19, r0
    144a:	11 24       	eor	r1, r1
    144c:	53 2e       	mov	r5, r19
    144e:	13 c0       	rjmp	.+38     	; 0x1476 <vfprintf+0xf0>
    1450:	8a e0       	ldi	r24, 0x0A	; 10
    1452:	38 9e       	mul	r3, r24
    1454:	30 0d       	add	r19, r0
    1456:	11 24       	eor	r1, r1
    1458:	33 2e       	mov	r3, r19
    145a:	20 62       	ori	r18, 0x20	; 32
    145c:	0c c0       	rjmp	.+24     	; 0x1476 <vfprintf+0xf0>
    145e:	8e 32       	cpi	r24, 0x2E	; 46
    1460:	21 f4       	brne	.+8      	; 0x146a <vfprintf+0xe4>
    1462:	26 fd       	sbrc	r18, 6
    1464:	5f c1       	rjmp	.+702    	; 0x1724 <vfprintf+0x39e>
    1466:	20 64       	ori	r18, 0x40	; 64
    1468:	06 c0       	rjmp	.+12     	; 0x1476 <vfprintf+0xf0>
    146a:	8c 36       	cpi	r24, 0x6C	; 108
    146c:	11 f4       	brne	.+4      	; 0x1472 <vfprintf+0xec>
    146e:	20 68       	ori	r18, 0x80	; 128
    1470:	02 c0       	rjmp	.+4      	; 0x1476 <vfprintf+0xf0>
    1472:	88 36       	cpi	r24, 0x68	; 104
    1474:	41 f4       	brne	.+16     	; 0x1486 <vfprintf+0x100>
    1476:	f6 01       	movw	r30, r12
    1478:	93 fd       	sbrc	r25, 3
    147a:	85 91       	lpm	r24, Z+
    147c:	93 ff       	sbrs	r25, 3
    147e:	81 91       	ld	r24, Z+
    1480:	6f 01       	movw	r12, r30
    1482:	81 11       	cpse	r24, r1
    1484:	c1 cf       	rjmp	.-126    	; 0x1408 <vfprintf+0x82>
    1486:	98 2f       	mov	r25, r24
    1488:	9f 7d       	andi	r25, 0xDF	; 223
    148a:	95 54       	subi	r25, 0x45	; 69
    148c:	93 30       	cpi	r25, 0x03	; 3
    148e:	28 f4       	brcc	.+10     	; 0x149a <vfprintf+0x114>
    1490:	0c 5f       	subi	r16, 0xFC	; 252
    1492:	1f 4f       	sbci	r17, 0xFF	; 255
    1494:	ff e3       	ldi	r31, 0x3F	; 63
    1496:	f9 83       	std	Y+1, r31	; 0x01
    1498:	0d c0       	rjmp	.+26     	; 0x14b4 <vfprintf+0x12e>
    149a:	83 36       	cpi	r24, 0x63	; 99
    149c:	31 f0       	breq	.+12     	; 0x14aa <vfprintf+0x124>
    149e:	83 37       	cpi	r24, 0x73	; 115
    14a0:	71 f0       	breq	.+28     	; 0x14be <vfprintf+0x138>
    14a2:	83 35       	cpi	r24, 0x53	; 83
    14a4:	09 f0       	breq	.+2      	; 0x14a8 <vfprintf+0x122>
    14a6:	57 c0       	rjmp	.+174    	; 0x1556 <vfprintf+0x1d0>
    14a8:	21 c0       	rjmp	.+66     	; 0x14ec <vfprintf+0x166>
    14aa:	f8 01       	movw	r30, r16
    14ac:	80 81       	ld	r24, Z
    14ae:	89 83       	std	Y+1, r24	; 0x01
    14b0:	0e 5f       	subi	r16, 0xFE	; 254
    14b2:	1f 4f       	sbci	r17, 0xFF	; 255
    14b4:	44 24       	eor	r4, r4
    14b6:	43 94       	inc	r4
    14b8:	51 2c       	mov	r5, r1
    14ba:	54 01       	movw	r10, r8
    14bc:	14 c0       	rjmp	.+40     	; 0x14e6 <vfprintf+0x160>
    14be:	38 01       	movw	r6, r16
    14c0:	f2 e0       	ldi	r31, 0x02	; 2
    14c2:	6f 0e       	add	r6, r31
    14c4:	71 1c       	adc	r7, r1
    14c6:	f8 01       	movw	r30, r16
    14c8:	a0 80       	ld	r10, Z
    14ca:	b1 80       	ldd	r11, Z+1	; 0x01
    14cc:	26 ff       	sbrs	r18, 6
    14ce:	03 c0       	rjmp	.+6      	; 0x14d6 <vfprintf+0x150>
    14d0:	65 2d       	mov	r22, r5
    14d2:	70 e0       	ldi	r23, 0x00	; 0
    14d4:	02 c0       	rjmp	.+4      	; 0x14da <vfprintf+0x154>
    14d6:	6f ef       	ldi	r22, 0xFF	; 255
    14d8:	7f ef       	ldi	r23, 0xFF	; 255
    14da:	c5 01       	movw	r24, r10
    14dc:	2c 87       	std	Y+12, r18	; 0x0c
    14de:	94 d2       	rcall	.+1320   	; 0x1a08 <strnlen>
    14e0:	2c 01       	movw	r4, r24
    14e2:	83 01       	movw	r16, r6
    14e4:	2c 85       	ldd	r18, Y+12	; 0x0c
    14e6:	2f 77       	andi	r18, 0x7F	; 127
    14e8:	22 2e       	mov	r2, r18
    14ea:	16 c0       	rjmp	.+44     	; 0x1518 <vfprintf+0x192>
    14ec:	38 01       	movw	r6, r16
    14ee:	f2 e0       	ldi	r31, 0x02	; 2
    14f0:	6f 0e       	add	r6, r31
    14f2:	71 1c       	adc	r7, r1
    14f4:	f8 01       	movw	r30, r16
    14f6:	a0 80       	ld	r10, Z
    14f8:	b1 80       	ldd	r11, Z+1	; 0x01
    14fa:	26 ff       	sbrs	r18, 6
    14fc:	03 c0       	rjmp	.+6      	; 0x1504 <vfprintf+0x17e>
    14fe:	65 2d       	mov	r22, r5
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <vfprintf+0x182>
    1504:	6f ef       	ldi	r22, 0xFF	; 255
    1506:	7f ef       	ldi	r23, 0xFF	; 255
    1508:	c5 01       	movw	r24, r10
    150a:	2c 87       	std	Y+12, r18	; 0x0c
    150c:	6b d2       	rcall	.+1238   	; 0x19e4 <strnlen_P>
    150e:	2c 01       	movw	r4, r24
    1510:	2c 85       	ldd	r18, Y+12	; 0x0c
    1512:	20 68       	ori	r18, 0x80	; 128
    1514:	22 2e       	mov	r2, r18
    1516:	83 01       	movw	r16, r6
    1518:	23 fc       	sbrc	r2, 3
    151a:	19 c0       	rjmp	.+50     	; 0x154e <vfprintf+0x1c8>
    151c:	83 2d       	mov	r24, r3
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	48 16       	cp	r4, r24
    1522:	59 06       	cpc	r5, r25
    1524:	a0 f4       	brcc	.+40     	; 0x154e <vfprintf+0x1c8>
    1526:	b7 01       	movw	r22, r14
    1528:	80 e2       	ldi	r24, 0x20	; 32
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	78 d2       	rcall	.+1264   	; 0x1a1e <fputc>
    152e:	3a 94       	dec	r3
    1530:	f5 cf       	rjmp	.-22     	; 0x151c <vfprintf+0x196>
    1532:	f5 01       	movw	r30, r10
    1534:	27 fc       	sbrc	r2, 7
    1536:	85 91       	lpm	r24, Z+
    1538:	27 fe       	sbrs	r2, 7
    153a:	81 91       	ld	r24, Z+
    153c:	5f 01       	movw	r10, r30
    153e:	b7 01       	movw	r22, r14
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	6d d2       	rcall	.+1242   	; 0x1a1e <fputc>
    1544:	31 10       	cpse	r3, r1
    1546:	3a 94       	dec	r3
    1548:	f1 e0       	ldi	r31, 0x01	; 1
    154a:	4f 1a       	sub	r4, r31
    154c:	51 08       	sbc	r5, r1
    154e:	41 14       	cp	r4, r1
    1550:	51 04       	cpc	r5, r1
    1552:	79 f7       	brne	.-34     	; 0x1532 <vfprintf+0x1ac>
    1554:	de c0       	rjmp	.+444    	; 0x1712 <vfprintf+0x38c>
    1556:	84 36       	cpi	r24, 0x64	; 100
    1558:	11 f0       	breq	.+4      	; 0x155e <vfprintf+0x1d8>
    155a:	89 36       	cpi	r24, 0x69	; 105
    155c:	31 f5       	brne	.+76     	; 0x15aa <vfprintf+0x224>
    155e:	f8 01       	movw	r30, r16
    1560:	27 ff       	sbrs	r18, 7
    1562:	07 c0       	rjmp	.+14     	; 0x1572 <vfprintf+0x1ec>
    1564:	60 81       	ld	r22, Z
    1566:	71 81       	ldd	r23, Z+1	; 0x01
    1568:	82 81       	ldd	r24, Z+2	; 0x02
    156a:	93 81       	ldd	r25, Z+3	; 0x03
    156c:	0c 5f       	subi	r16, 0xFC	; 252
    156e:	1f 4f       	sbci	r17, 0xFF	; 255
    1570:	08 c0       	rjmp	.+16     	; 0x1582 <vfprintf+0x1fc>
    1572:	60 81       	ld	r22, Z
    1574:	71 81       	ldd	r23, Z+1	; 0x01
    1576:	88 27       	eor	r24, r24
    1578:	77 fd       	sbrc	r23, 7
    157a:	80 95       	com	r24
    157c:	98 2f       	mov	r25, r24
    157e:	0e 5f       	subi	r16, 0xFE	; 254
    1580:	1f 4f       	sbci	r17, 0xFF	; 255
    1582:	2f 76       	andi	r18, 0x6F	; 111
    1584:	b2 2e       	mov	r11, r18
    1586:	97 ff       	sbrs	r25, 7
    1588:	09 c0       	rjmp	.+18     	; 0x159c <vfprintf+0x216>
    158a:	90 95       	com	r25
    158c:	80 95       	com	r24
    158e:	70 95       	com	r23
    1590:	61 95       	neg	r22
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	8f 4f       	sbci	r24, 0xFF	; 255
    1596:	9f 4f       	sbci	r25, 0xFF	; 255
    1598:	20 68       	ori	r18, 0x80	; 128
    159a:	b2 2e       	mov	r11, r18
    159c:	2a e0       	ldi	r18, 0x0A	; 10
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	a4 01       	movw	r20, r8
    15a2:	6f d2       	rcall	.+1246   	; 0x1a82 <__ultoa_invert>
    15a4:	a8 2e       	mov	r10, r24
    15a6:	a8 18       	sub	r10, r8
    15a8:	43 c0       	rjmp	.+134    	; 0x1630 <vfprintf+0x2aa>
    15aa:	85 37       	cpi	r24, 0x75	; 117
    15ac:	29 f4       	brne	.+10     	; 0x15b8 <vfprintf+0x232>
    15ae:	2f 7e       	andi	r18, 0xEF	; 239
    15b0:	b2 2e       	mov	r11, r18
    15b2:	2a e0       	ldi	r18, 0x0A	; 10
    15b4:	30 e0       	ldi	r19, 0x00	; 0
    15b6:	25 c0       	rjmp	.+74     	; 0x1602 <vfprintf+0x27c>
    15b8:	f2 2f       	mov	r31, r18
    15ba:	f9 7f       	andi	r31, 0xF9	; 249
    15bc:	bf 2e       	mov	r11, r31
    15be:	8f 36       	cpi	r24, 0x6F	; 111
    15c0:	c1 f0       	breq	.+48     	; 0x15f2 <vfprintf+0x26c>
    15c2:	18 f4       	brcc	.+6      	; 0x15ca <vfprintf+0x244>
    15c4:	88 35       	cpi	r24, 0x58	; 88
    15c6:	79 f0       	breq	.+30     	; 0x15e6 <vfprintf+0x260>
    15c8:	ad c0       	rjmp	.+346    	; 0x1724 <vfprintf+0x39e>
    15ca:	80 37       	cpi	r24, 0x70	; 112
    15cc:	19 f0       	breq	.+6      	; 0x15d4 <vfprintf+0x24e>
    15ce:	88 37       	cpi	r24, 0x78	; 120
    15d0:	21 f0       	breq	.+8      	; 0x15da <vfprintf+0x254>
    15d2:	a8 c0       	rjmp	.+336    	; 0x1724 <vfprintf+0x39e>
    15d4:	2f 2f       	mov	r18, r31
    15d6:	20 61       	ori	r18, 0x10	; 16
    15d8:	b2 2e       	mov	r11, r18
    15da:	b4 fe       	sbrs	r11, 4
    15dc:	0d c0       	rjmp	.+26     	; 0x15f8 <vfprintf+0x272>
    15de:	8b 2d       	mov	r24, r11
    15e0:	84 60       	ori	r24, 0x04	; 4
    15e2:	b8 2e       	mov	r11, r24
    15e4:	09 c0       	rjmp	.+18     	; 0x15f8 <vfprintf+0x272>
    15e6:	24 ff       	sbrs	r18, 4
    15e8:	0a c0       	rjmp	.+20     	; 0x15fe <vfprintf+0x278>
    15ea:	9f 2f       	mov	r25, r31
    15ec:	96 60       	ori	r25, 0x06	; 6
    15ee:	b9 2e       	mov	r11, r25
    15f0:	06 c0       	rjmp	.+12     	; 0x15fe <vfprintf+0x278>
    15f2:	28 e0       	ldi	r18, 0x08	; 8
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	05 c0       	rjmp	.+10     	; 0x1602 <vfprintf+0x27c>
    15f8:	20 e1       	ldi	r18, 0x10	; 16
    15fa:	30 e0       	ldi	r19, 0x00	; 0
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <vfprintf+0x27c>
    15fe:	20 e1       	ldi	r18, 0x10	; 16
    1600:	32 e0       	ldi	r19, 0x02	; 2
    1602:	f8 01       	movw	r30, r16
    1604:	b7 fe       	sbrs	r11, 7
    1606:	07 c0       	rjmp	.+14     	; 0x1616 <vfprintf+0x290>
    1608:	60 81       	ld	r22, Z
    160a:	71 81       	ldd	r23, Z+1	; 0x01
    160c:	82 81       	ldd	r24, Z+2	; 0x02
    160e:	93 81       	ldd	r25, Z+3	; 0x03
    1610:	0c 5f       	subi	r16, 0xFC	; 252
    1612:	1f 4f       	sbci	r17, 0xFF	; 255
    1614:	06 c0       	rjmp	.+12     	; 0x1622 <vfprintf+0x29c>
    1616:	60 81       	ld	r22, Z
    1618:	71 81       	ldd	r23, Z+1	; 0x01
    161a:	80 e0       	ldi	r24, 0x00	; 0
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	0e 5f       	subi	r16, 0xFE	; 254
    1620:	1f 4f       	sbci	r17, 0xFF	; 255
    1622:	a4 01       	movw	r20, r8
    1624:	2e d2       	rcall	.+1116   	; 0x1a82 <__ultoa_invert>
    1626:	a8 2e       	mov	r10, r24
    1628:	a8 18       	sub	r10, r8
    162a:	fb 2d       	mov	r31, r11
    162c:	ff 77       	andi	r31, 0x7F	; 127
    162e:	bf 2e       	mov	r11, r31
    1630:	b6 fe       	sbrs	r11, 6
    1632:	0b c0       	rjmp	.+22     	; 0x164a <vfprintf+0x2c4>
    1634:	2b 2d       	mov	r18, r11
    1636:	2e 7f       	andi	r18, 0xFE	; 254
    1638:	a5 14       	cp	r10, r5
    163a:	50 f4       	brcc	.+20     	; 0x1650 <vfprintf+0x2ca>
    163c:	b4 fe       	sbrs	r11, 4
    163e:	0a c0       	rjmp	.+20     	; 0x1654 <vfprintf+0x2ce>
    1640:	b2 fc       	sbrc	r11, 2
    1642:	08 c0       	rjmp	.+16     	; 0x1654 <vfprintf+0x2ce>
    1644:	2b 2d       	mov	r18, r11
    1646:	2e 7e       	andi	r18, 0xEE	; 238
    1648:	05 c0       	rjmp	.+10     	; 0x1654 <vfprintf+0x2ce>
    164a:	7a 2c       	mov	r7, r10
    164c:	2b 2d       	mov	r18, r11
    164e:	03 c0       	rjmp	.+6      	; 0x1656 <vfprintf+0x2d0>
    1650:	7a 2c       	mov	r7, r10
    1652:	01 c0       	rjmp	.+2      	; 0x1656 <vfprintf+0x2d0>
    1654:	75 2c       	mov	r7, r5
    1656:	24 ff       	sbrs	r18, 4
    1658:	0d c0       	rjmp	.+26     	; 0x1674 <vfprintf+0x2ee>
    165a:	fe 01       	movw	r30, r28
    165c:	ea 0d       	add	r30, r10
    165e:	f1 1d       	adc	r31, r1
    1660:	80 81       	ld	r24, Z
    1662:	80 33       	cpi	r24, 0x30	; 48
    1664:	11 f4       	brne	.+4      	; 0x166a <vfprintf+0x2e4>
    1666:	29 7e       	andi	r18, 0xE9	; 233
    1668:	09 c0       	rjmp	.+18     	; 0x167c <vfprintf+0x2f6>
    166a:	22 ff       	sbrs	r18, 2
    166c:	06 c0       	rjmp	.+12     	; 0x167a <vfprintf+0x2f4>
    166e:	73 94       	inc	r7
    1670:	73 94       	inc	r7
    1672:	04 c0       	rjmp	.+8      	; 0x167c <vfprintf+0x2f6>
    1674:	82 2f       	mov	r24, r18
    1676:	86 78       	andi	r24, 0x86	; 134
    1678:	09 f0       	breq	.+2      	; 0x167c <vfprintf+0x2f6>
    167a:	73 94       	inc	r7
    167c:	23 fd       	sbrc	r18, 3
    167e:	12 c0       	rjmp	.+36     	; 0x16a4 <vfprintf+0x31e>
    1680:	20 ff       	sbrs	r18, 0
    1682:	06 c0       	rjmp	.+12     	; 0x1690 <vfprintf+0x30a>
    1684:	5a 2c       	mov	r5, r10
    1686:	73 14       	cp	r7, r3
    1688:	18 f4       	brcc	.+6      	; 0x1690 <vfprintf+0x30a>
    168a:	53 0c       	add	r5, r3
    168c:	57 18       	sub	r5, r7
    168e:	73 2c       	mov	r7, r3
    1690:	73 14       	cp	r7, r3
    1692:	60 f4       	brcc	.+24     	; 0x16ac <vfprintf+0x326>
    1694:	b7 01       	movw	r22, r14
    1696:	80 e2       	ldi	r24, 0x20	; 32
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	2c 87       	std	Y+12, r18	; 0x0c
    169c:	c0 d1       	rcall	.+896    	; 0x1a1e <fputc>
    169e:	73 94       	inc	r7
    16a0:	2c 85       	ldd	r18, Y+12	; 0x0c
    16a2:	f6 cf       	rjmp	.-20     	; 0x1690 <vfprintf+0x30a>
    16a4:	73 14       	cp	r7, r3
    16a6:	10 f4       	brcc	.+4      	; 0x16ac <vfprintf+0x326>
    16a8:	37 18       	sub	r3, r7
    16aa:	01 c0       	rjmp	.+2      	; 0x16ae <vfprintf+0x328>
    16ac:	31 2c       	mov	r3, r1
    16ae:	24 ff       	sbrs	r18, 4
    16b0:	11 c0       	rjmp	.+34     	; 0x16d4 <vfprintf+0x34e>
    16b2:	b7 01       	movw	r22, r14
    16b4:	80 e3       	ldi	r24, 0x30	; 48
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	2c 87       	std	Y+12, r18	; 0x0c
    16ba:	b1 d1       	rcall	.+866    	; 0x1a1e <fputc>
    16bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    16be:	22 ff       	sbrs	r18, 2
    16c0:	16 c0       	rjmp	.+44     	; 0x16ee <vfprintf+0x368>
    16c2:	21 ff       	sbrs	r18, 1
    16c4:	03 c0       	rjmp	.+6      	; 0x16cc <vfprintf+0x346>
    16c6:	88 e5       	ldi	r24, 0x58	; 88
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	02 c0       	rjmp	.+4      	; 0x16d0 <vfprintf+0x34a>
    16cc:	88 e7       	ldi	r24, 0x78	; 120
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	b7 01       	movw	r22, r14
    16d2:	0c c0       	rjmp	.+24     	; 0x16ec <vfprintf+0x366>
    16d4:	82 2f       	mov	r24, r18
    16d6:	86 78       	andi	r24, 0x86	; 134
    16d8:	51 f0       	breq	.+20     	; 0x16ee <vfprintf+0x368>
    16da:	21 fd       	sbrc	r18, 1
    16dc:	02 c0       	rjmp	.+4      	; 0x16e2 <vfprintf+0x35c>
    16de:	80 e2       	ldi	r24, 0x20	; 32
    16e0:	01 c0       	rjmp	.+2      	; 0x16e4 <vfprintf+0x35e>
    16e2:	8b e2       	ldi	r24, 0x2B	; 43
    16e4:	27 fd       	sbrc	r18, 7
    16e6:	8d e2       	ldi	r24, 0x2D	; 45
    16e8:	b7 01       	movw	r22, r14
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	98 d1       	rcall	.+816    	; 0x1a1e <fputc>
    16ee:	a5 14       	cp	r10, r5
    16f0:	30 f4       	brcc	.+12     	; 0x16fe <vfprintf+0x378>
    16f2:	b7 01       	movw	r22, r14
    16f4:	80 e3       	ldi	r24, 0x30	; 48
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	92 d1       	rcall	.+804    	; 0x1a1e <fputc>
    16fa:	5a 94       	dec	r5
    16fc:	f8 cf       	rjmp	.-16     	; 0x16ee <vfprintf+0x368>
    16fe:	aa 94       	dec	r10
    1700:	f4 01       	movw	r30, r8
    1702:	ea 0d       	add	r30, r10
    1704:	f1 1d       	adc	r31, r1
    1706:	80 81       	ld	r24, Z
    1708:	b7 01       	movw	r22, r14
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	88 d1       	rcall	.+784    	; 0x1a1e <fputc>
    170e:	a1 10       	cpse	r10, r1
    1710:	f6 cf       	rjmp	.-20     	; 0x16fe <vfprintf+0x378>
    1712:	33 20       	and	r3, r3
    1714:	09 f4       	brne	.+2      	; 0x1718 <vfprintf+0x392>
    1716:	5d ce       	rjmp	.-838    	; 0x13d2 <vfprintf+0x4c>
    1718:	b7 01       	movw	r22, r14
    171a:	80 e2       	ldi	r24, 0x20	; 32
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	7f d1       	rcall	.+766    	; 0x1a1e <fputc>
    1720:	3a 94       	dec	r3
    1722:	f7 cf       	rjmp	.-18     	; 0x1712 <vfprintf+0x38c>
    1724:	f7 01       	movw	r30, r14
    1726:	86 81       	ldd	r24, Z+6	; 0x06
    1728:	97 81       	ldd	r25, Z+7	; 0x07
    172a:	02 c0       	rjmp	.+4      	; 0x1730 <vfprintf+0x3aa>
    172c:	8f ef       	ldi	r24, 0xFF	; 255
    172e:	9f ef       	ldi	r25, 0xFF	; 255
    1730:	2c 96       	adiw	r28, 0x0c	; 12
    1732:	0f b6       	in	r0, 0x3f	; 63
    1734:	f8 94       	cli
    1736:	de bf       	out	0x3e, r29	; 62
    1738:	0f be       	out	0x3f, r0	; 63
    173a:	cd bf       	out	0x3d, r28	; 61
    173c:	df 91       	pop	r29
    173e:	cf 91       	pop	r28
    1740:	1f 91       	pop	r17
    1742:	0f 91       	pop	r16
    1744:	ff 90       	pop	r15
    1746:	ef 90       	pop	r14
    1748:	df 90       	pop	r13
    174a:	cf 90       	pop	r12
    174c:	bf 90       	pop	r11
    174e:	af 90       	pop	r10
    1750:	9f 90       	pop	r9
    1752:	8f 90       	pop	r8
    1754:	7f 90       	pop	r7
    1756:	6f 90       	pop	r6
    1758:	5f 90       	pop	r5
    175a:	4f 90       	pop	r4
    175c:	3f 90       	pop	r3
    175e:	2f 90       	pop	r2
    1760:	08 95       	ret

00001762 <calloc>:
    1762:	0f 93       	push	r16
    1764:	1f 93       	push	r17
    1766:	cf 93       	push	r28
    1768:	df 93       	push	r29
    176a:	86 9f       	mul	r24, r22
    176c:	80 01       	movw	r16, r0
    176e:	87 9f       	mul	r24, r23
    1770:	10 0d       	add	r17, r0
    1772:	96 9f       	mul	r25, r22
    1774:	10 0d       	add	r17, r0
    1776:	11 24       	eor	r1, r1
    1778:	c8 01       	movw	r24, r16
    177a:	0d d0       	rcall	.+26     	; 0x1796 <malloc>
    177c:	ec 01       	movw	r28, r24
    177e:	00 97       	sbiw	r24, 0x00	; 0
    1780:	21 f0       	breq	.+8      	; 0x178a <calloc+0x28>
    1782:	a8 01       	movw	r20, r16
    1784:	60 e0       	ldi	r22, 0x00	; 0
    1786:	70 e0       	ldi	r23, 0x00	; 0
    1788:	38 d1       	rcall	.+624    	; 0x19fa <memset>
    178a:	ce 01       	movw	r24, r28
    178c:	df 91       	pop	r29
    178e:	cf 91       	pop	r28
    1790:	1f 91       	pop	r17
    1792:	0f 91       	pop	r16
    1794:	08 95       	ret

00001796 <malloc>:
    1796:	cf 93       	push	r28
    1798:	df 93       	push	r29
    179a:	82 30       	cpi	r24, 0x02	; 2
    179c:	91 05       	cpc	r25, r1
    179e:	10 f4       	brcc	.+4      	; 0x17a4 <malloc+0xe>
    17a0:	82 e0       	ldi	r24, 0x02	; 2
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	e0 91 cb 02 	lds	r30, 0x02CB
    17a8:	f0 91 cc 02 	lds	r31, 0x02CC
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	a0 e0       	ldi	r26, 0x00	; 0
    17b2:	b0 e0       	ldi	r27, 0x00	; 0
    17b4:	30 97       	sbiw	r30, 0x00	; 0
    17b6:	39 f1       	breq	.+78     	; 0x1806 <malloc+0x70>
    17b8:	40 81       	ld	r20, Z
    17ba:	51 81       	ldd	r21, Z+1	; 0x01
    17bc:	48 17       	cp	r20, r24
    17be:	59 07       	cpc	r21, r25
    17c0:	b8 f0       	brcs	.+46     	; 0x17f0 <malloc+0x5a>
    17c2:	48 17       	cp	r20, r24
    17c4:	59 07       	cpc	r21, r25
    17c6:	71 f4       	brne	.+28     	; 0x17e4 <malloc+0x4e>
    17c8:	82 81       	ldd	r24, Z+2	; 0x02
    17ca:	93 81       	ldd	r25, Z+3	; 0x03
    17cc:	10 97       	sbiw	r26, 0x00	; 0
    17ce:	29 f0       	breq	.+10     	; 0x17da <malloc+0x44>
    17d0:	13 96       	adiw	r26, 0x03	; 3
    17d2:	9c 93       	st	X, r25
    17d4:	8e 93       	st	-X, r24
    17d6:	12 97       	sbiw	r26, 0x02	; 2
    17d8:	2c c0       	rjmp	.+88     	; 0x1832 <malloc+0x9c>
    17da:	90 93 cc 02 	sts	0x02CC, r25
    17de:	80 93 cb 02 	sts	0x02CB, r24
    17e2:	27 c0       	rjmp	.+78     	; 0x1832 <malloc+0x9c>
    17e4:	21 15       	cp	r18, r1
    17e6:	31 05       	cpc	r19, r1
    17e8:	31 f0       	breq	.+12     	; 0x17f6 <malloc+0x60>
    17ea:	42 17       	cp	r20, r18
    17ec:	53 07       	cpc	r21, r19
    17ee:	18 f0       	brcs	.+6      	; 0x17f6 <malloc+0x60>
    17f0:	a9 01       	movw	r20, r18
    17f2:	db 01       	movw	r26, r22
    17f4:	01 c0       	rjmp	.+2      	; 0x17f8 <malloc+0x62>
    17f6:	ef 01       	movw	r28, r30
    17f8:	9a 01       	movw	r18, r20
    17fa:	bd 01       	movw	r22, r26
    17fc:	df 01       	movw	r26, r30
    17fe:	02 80       	ldd	r0, Z+2	; 0x02
    1800:	f3 81       	ldd	r31, Z+3	; 0x03
    1802:	e0 2d       	mov	r30, r0
    1804:	d7 cf       	rjmp	.-82     	; 0x17b4 <malloc+0x1e>
    1806:	21 15       	cp	r18, r1
    1808:	31 05       	cpc	r19, r1
    180a:	f9 f0       	breq	.+62     	; 0x184a <malloc+0xb4>
    180c:	28 1b       	sub	r18, r24
    180e:	39 0b       	sbc	r19, r25
    1810:	24 30       	cpi	r18, 0x04	; 4
    1812:	31 05       	cpc	r19, r1
    1814:	80 f4       	brcc	.+32     	; 0x1836 <malloc+0xa0>
    1816:	8a 81       	ldd	r24, Y+2	; 0x02
    1818:	9b 81       	ldd	r25, Y+3	; 0x03
    181a:	61 15       	cp	r22, r1
    181c:	71 05       	cpc	r23, r1
    181e:	21 f0       	breq	.+8      	; 0x1828 <malloc+0x92>
    1820:	fb 01       	movw	r30, r22
    1822:	93 83       	std	Z+3, r25	; 0x03
    1824:	82 83       	std	Z+2, r24	; 0x02
    1826:	04 c0       	rjmp	.+8      	; 0x1830 <malloc+0x9a>
    1828:	90 93 cc 02 	sts	0x02CC, r25
    182c:	80 93 cb 02 	sts	0x02CB, r24
    1830:	fe 01       	movw	r30, r28
    1832:	32 96       	adiw	r30, 0x02	; 2
    1834:	44 c0       	rjmp	.+136    	; 0x18be <malloc+0x128>
    1836:	fe 01       	movw	r30, r28
    1838:	e2 0f       	add	r30, r18
    183a:	f3 1f       	adc	r31, r19
    183c:	81 93       	st	Z+, r24
    183e:	91 93       	st	Z+, r25
    1840:	22 50       	subi	r18, 0x02	; 2
    1842:	31 09       	sbc	r19, r1
    1844:	39 83       	std	Y+1, r19	; 0x01
    1846:	28 83       	st	Y, r18
    1848:	3a c0       	rjmp	.+116    	; 0x18be <malloc+0x128>
    184a:	20 91 c9 02 	lds	r18, 0x02C9
    184e:	30 91 ca 02 	lds	r19, 0x02CA
    1852:	23 2b       	or	r18, r19
    1854:	41 f4       	brne	.+16     	; 0x1866 <malloc+0xd0>
    1856:	20 91 02 02 	lds	r18, 0x0202
    185a:	30 91 03 02 	lds	r19, 0x0203
    185e:	30 93 ca 02 	sts	0x02CA, r19
    1862:	20 93 c9 02 	sts	0x02C9, r18
    1866:	20 91 00 02 	lds	r18, 0x0200
    186a:	30 91 01 02 	lds	r19, 0x0201
    186e:	21 15       	cp	r18, r1
    1870:	31 05       	cpc	r19, r1
    1872:	41 f4       	brne	.+16     	; 0x1884 <malloc+0xee>
    1874:	2d b7       	in	r18, 0x3d	; 61
    1876:	3e b7       	in	r19, 0x3e	; 62
    1878:	40 91 04 02 	lds	r20, 0x0204
    187c:	50 91 05 02 	lds	r21, 0x0205
    1880:	24 1b       	sub	r18, r20
    1882:	35 0b       	sbc	r19, r21
    1884:	e0 91 c9 02 	lds	r30, 0x02C9
    1888:	f0 91 ca 02 	lds	r31, 0x02CA
    188c:	e2 17       	cp	r30, r18
    188e:	f3 07       	cpc	r31, r19
    1890:	a0 f4       	brcc	.+40     	; 0x18ba <malloc+0x124>
    1892:	2e 1b       	sub	r18, r30
    1894:	3f 0b       	sbc	r19, r31
    1896:	28 17       	cp	r18, r24
    1898:	39 07       	cpc	r19, r25
    189a:	78 f0       	brcs	.+30     	; 0x18ba <malloc+0x124>
    189c:	ac 01       	movw	r20, r24
    189e:	4e 5f       	subi	r20, 0xFE	; 254
    18a0:	5f 4f       	sbci	r21, 0xFF	; 255
    18a2:	24 17       	cp	r18, r20
    18a4:	35 07       	cpc	r19, r21
    18a6:	48 f0       	brcs	.+18     	; 0x18ba <malloc+0x124>
    18a8:	4e 0f       	add	r20, r30
    18aa:	5f 1f       	adc	r21, r31
    18ac:	50 93 ca 02 	sts	0x02CA, r21
    18b0:	40 93 c9 02 	sts	0x02C9, r20
    18b4:	81 93       	st	Z+, r24
    18b6:	91 93       	st	Z+, r25
    18b8:	02 c0       	rjmp	.+4      	; 0x18be <malloc+0x128>
    18ba:	e0 e0       	ldi	r30, 0x00	; 0
    18bc:	f0 e0       	ldi	r31, 0x00	; 0
    18be:	cf 01       	movw	r24, r30
    18c0:	df 91       	pop	r29
    18c2:	cf 91       	pop	r28
    18c4:	08 95       	ret

000018c6 <free>:
    18c6:	cf 93       	push	r28
    18c8:	df 93       	push	r29
    18ca:	00 97       	sbiw	r24, 0x00	; 0
    18cc:	09 f4       	brne	.+2      	; 0x18d0 <free+0xa>
    18ce:	87 c0       	rjmp	.+270    	; 0x19de <free+0x118>
    18d0:	fc 01       	movw	r30, r24
    18d2:	32 97       	sbiw	r30, 0x02	; 2
    18d4:	13 82       	std	Z+3, r1	; 0x03
    18d6:	12 82       	std	Z+2, r1	; 0x02
    18d8:	c0 91 cb 02 	lds	r28, 0x02CB
    18dc:	d0 91 cc 02 	lds	r29, 0x02CC
    18e0:	20 97       	sbiw	r28, 0x00	; 0
    18e2:	81 f4       	brne	.+32     	; 0x1904 <free+0x3e>
    18e4:	20 81       	ld	r18, Z
    18e6:	31 81       	ldd	r19, Z+1	; 0x01
    18e8:	28 0f       	add	r18, r24
    18ea:	39 1f       	adc	r19, r25
    18ec:	80 91 c9 02 	lds	r24, 0x02C9
    18f0:	90 91 ca 02 	lds	r25, 0x02CA
    18f4:	82 17       	cp	r24, r18
    18f6:	93 07       	cpc	r25, r19
    18f8:	79 f5       	brne	.+94     	; 0x1958 <free+0x92>
    18fa:	f0 93 ca 02 	sts	0x02CA, r31
    18fe:	e0 93 c9 02 	sts	0x02C9, r30
    1902:	6d c0       	rjmp	.+218    	; 0x19de <free+0x118>
    1904:	de 01       	movw	r26, r28
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	ae 17       	cp	r26, r30
    190c:	bf 07       	cpc	r27, r31
    190e:	50 f4       	brcc	.+20     	; 0x1924 <free+0x5e>
    1910:	12 96       	adiw	r26, 0x02	; 2
    1912:	4d 91       	ld	r20, X+
    1914:	5c 91       	ld	r21, X
    1916:	13 97       	sbiw	r26, 0x03	; 3
    1918:	9d 01       	movw	r18, r26
    191a:	41 15       	cp	r20, r1
    191c:	51 05       	cpc	r21, r1
    191e:	09 f1       	breq	.+66     	; 0x1962 <free+0x9c>
    1920:	da 01       	movw	r26, r20
    1922:	f3 cf       	rjmp	.-26     	; 0x190a <free+0x44>
    1924:	b3 83       	std	Z+3, r27	; 0x03
    1926:	a2 83       	std	Z+2, r26	; 0x02
    1928:	40 81       	ld	r20, Z
    192a:	51 81       	ldd	r21, Z+1	; 0x01
    192c:	84 0f       	add	r24, r20
    192e:	95 1f       	adc	r25, r21
    1930:	8a 17       	cp	r24, r26
    1932:	9b 07       	cpc	r25, r27
    1934:	71 f4       	brne	.+28     	; 0x1952 <free+0x8c>
    1936:	8d 91       	ld	r24, X+
    1938:	9c 91       	ld	r25, X
    193a:	11 97       	sbiw	r26, 0x01	; 1
    193c:	84 0f       	add	r24, r20
    193e:	95 1f       	adc	r25, r21
    1940:	02 96       	adiw	r24, 0x02	; 2
    1942:	91 83       	std	Z+1, r25	; 0x01
    1944:	80 83       	st	Z, r24
    1946:	12 96       	adiw	r26, 0x02	; 2
    1948:	8d 91       	ld	r24, X+
    194a:	9c 91       	ld	r25, X
    194c:	13 97       	sbiw	r26, 0x03	; 3
    194e:	93 83       	std	Z+3, r25	; 0x03
    1950:	82 83       	std	Z+2, r24	; 0x02
    1952:	21 15       	cp	r18, r1
    1954:	31 05       	cpc	r19, r1
    1956:	29 f4       	brne	.+10     	; 0x1962 <free+0x9c>
    1958:	f0 93 cc 02 	sts	0x02CC, r31
    195c:	e0 93 cb 02 	sts	0x02CB, r30
    1960:	3e c0       	rjmp	.+124    	; 0x19de <free+0x118>
    1962:	d9 01       	movw	r26, r18
    1964:	13 96       	adiw	r26, 0x03	; 3
    1966:	fc 93       	st	X, r31
    1968:	ee 93       	st	-X, r30
    196a:	12 97       	sbiw	r26, 0x02	; 2
    196c:	4d 91       	ld	r20, X+
    196e:	5d 91       	ld	r21, X+
    1970:	a4 0f       	add	r26, r20
    1972:	b5 1f       	adc	r27, r21
    1974:	ea 17       	cp	r30, r26
    1976:	fb 07       	cpc	r31, r27
    1978:	79 f4       	brne	.+30     	; 0x1998 <free+0xd2>
    197a:	80 81       	ld	r24, Z
    197c:	91 81       	ldd	r25, Z+1	; 0x01
    197e:	84 0f       	add	r24, r20
    1980:	95 1f       	adc	r25, r21
    1982:	02 96       	adiw	r24, 0x02	; 2
    1984:	d9 01       	movw	r26, r18
    1986:	11 96       	adiw	r26, 0x01	; 1
    1988:	9c 93       	st	X, r25
    198a:	8e 93       	st	-X, r24
    198c:	82 81       	ldd	r24, Z+2	; 0x02
    198e:	93 81       	ldd	r25, Z+3	; 0x03
    1990:	13 96       	adiw	r26, 0x03	; 3
    1992:	9c 93       	st	X, r25
    1994:	8e 93       	st	-X, r24
    1996:	12 97       	sbiw	r26, 0x02	; 2
    1998:	e0 e0       	ldi	r30, 0x00	; 0
    199a:	f0 e0       	ldi	r31, 0x00	; 0
    199c:	8a 81       	ldd	r24, Y+2	; 0x02
    199e:	9b 81       	ldd	r25, Y+3	; 0x03
    19a0:	00 97       	sbiw	r24, 0x00	; 0
    19a2:	19 f0       	breq	.+6      	; 0x19aa <free+0xe4>
    19a4:	fe 01       	movw	r30, r28
    19a6:	ec 01       	movw	r28, r24
    19a8:	f9 cf       	rjmp	.-14     	; 0x199c <free+0xd6>
    19aa:	ce 01       	movw	r24, r28
    19ac:	02 96       	adiw	r24, 0x02	; 2
    19ae:	28 81       	ld	r18, Y
    19b0:	39 81       	ldd	r19, Y+1	; 0x01
    19b2:	82 0f       	add	r24, r18
    19b4:	93 1f       	adc	r25, r19
    19b6:	20 91 c9 02 	lds	r18, 0x02C9
    19ba:	30 91 ca 02 	lds	r19, 0x02CA
    19be:	28 17       	cp	r18, r24
    19c0:	39 07       	cpc	r19, r25
    19c2:	69 f4       	brne	.+26     	; 0x19de <free+0x118>
    19c4:	30 97       	sbiw	r30, 0x00	; 0
    19c6:	29 f4       	brne	.+10     	; 0x19d2 <free+0x10c>
    19c8:	10 92 cc 02 	sts	0x02CC, r1
    19cc:	10 92 cb 02 	sts	0x02CB, r1
    19d0:	02 c0       	rjmp	.+4      	; 0x19d6 <free+0x110>
    19d2:	13 82       	std	Z+3, r1	; 0x03
    19d4:	12 82       	std	Z+2, r1	; 0x02
    19d6:	d0 93 ca 02 	sts	0x02CA, r29
    19da:	c0 93 c9 02 	sts	0x02C9, r28
    19de:	df 91       	pop	r29
    19e0:	cf 91       	pop	r28
    19e2:	08 95       	ret

000019e4 <strnlen_P>:
    19e4:	fc 01       	movw	r30, r24
    19e6:	05 90       	lpm	r0, Z+
    19e8:	61 50       	subi	r22, 0x01	; 1
    19ea:	70 40       	sbci	r23, 0x00	; 0
    19ec:	01 10       	cpse	r0, r1
    19ee:	d8 f7       	brcc	.-10     	; 0x19e6 <strnlen_P+0x2>
    19f0:	80 95       	com	r24
    19f2:	90 95       	com	r25
    19f4:	8e 0f       	add	r24, r30
    19f6:	9f 1f       	adc	r25, r31
    19f8:	08 95       	ret

000019fa <memset>:
    19fa:	dc 01       	movw	r26, r24
    19fc:	01 c0       	rjmp	.+2      	; 0x1a00 <memset+0x6>
    19fe:	6d 93       	st	X+, r22
    1a00:	41 50       	subi	r20, 0x01	; 1
    1a02:	50 40       	sbci	r21, 0x00	; 0
    1a04:	e0 f7       	brcc	.-8      	; 0x19fe <memset+0x4>
    1a06:	08 95       	ret

00001a08 <strnlen>:
    1a08:	fc 01       	movw	r30, r24
    1a0a:	61 50       	subi	r22, 0x01	; 1
    1a0c:	70 40       	sbci	r23, 0x00	; 0
    1a0e:	01 90       	ld	r0, Z+
    1a10:	01 10       	cpse	r0, r1
    1a12:	d8 f7       	brcc	.-10     	; 0x1a0a <strnlen+0x2>
    1a14:	80 95       	com	r24
    1a16:	90 95       	com	r25
    1a18:	8e 0f       	add	r24, r30
    1a1a:	9f 1f       	adc	r25, r31
    1a1c:	08 95       	ret

00001a1e <fputc>:
    1a1e:	0f 93       	push	r16
    1a20:	1f 93       	push	r17
    1a22:	cf 93       	push	r28
    1a24:	df 93       	push	r29
    1a26:	18 2f       	mov	r17, r24
    1a28:	09 2f       	mov	r16, r25
    1a2a:	eb 01       	movw	r28, r22
    1a2c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a2e:	81 fd       	sbrc	r24, 1
    1a30:	03 c0       	rjmp	.+6      	; 0x1a38 <fputc+0x1a>
    1a32:	8f ef       	ldi	r24, 0xFF	; 255
    1a34:	9f ef       	ldi	r25, 0xFF	; 255
    1a36:	20 c0       	rjmp	.+64     	; 0x1a78 <fputc+0x5a>
    1a38:	82 ff       	sbrs	r24, 2
    1a3a:	10 c0       	rjmp	.+32     	; 0x1a5c <fputc+0x3e>
    1a3c:	4e 81       	ldd	r20, Y+6	; 0x06
    1a3e:	5f 81       	ldd	r21, Y+7	; 0x07
    1a40:	2c 81       	ldd	r18, Y+4	; 0x04
    1a42:	3d 81       	ldd	r19, Y+5	; 0x05
    1a44:	42 17       	cp	r20, r18
    1a46:	53 07       	cpc	r21, r19
    1a48:	7c f4       	brge	.+30     	; 0x1a68 <fputc+0x4a>
    1a4a:	e8 81       	ld	r30, Y
    1a4c:	f9 81       	ldd	r31, Y+1	; 0x01
    1a4e:	9f 01       	movw	r18, r30
    1a50:	2f 5f       	subi	r18, 0xFF	; 255
    1a52:	3f 4f       	sbci	r19, 0xFF	; 255
    1a54:	39 83       	std	Y+1, r19	; 0x01
    1a56:	28 83       	st	Y, r18
    1a58:	10 83       	st	Z, r17
    1a5a:	06 c0       	rjmp	.+12     	; 0x1a68 <fputc+0x4a>
    1a5c:	e8 85       	ldd	r30, Y+8	; 0x08
    1a5e:	f9 85       	ldd	r31, Y+9	; 0x09
    1a60:	81 2f       	mov	r24, r17
    1a62:	19 95       	eicall
    1a64:	89 2b       	or	r24, r25
    1a66:	29 f7       	brne	.-54     	; 0x1a32 <fputc+0x14>
    1a68:	2e 81       	ldd	r18, Y+6	; 0x06
    1a6a:	3f 81       	ldd	r19, Y+7	; 0x07
    1a6c:	2f 5f       	subi	r18, 0xFF	; 255
    1a6e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a70:	3f 83       	std	Y+7, r19	; 0x07
    1a72:	2e 83       	std	Y+6, r18	; 0x06
    1a74:	81 2f       	mov	r24, r17
    1a76:	90 2f       	mov	r25, r16
    1a78:	df 91       	pop	r29
    1a7a:	cf 91       	pop	r28
    1a7c:	1f 91       	pop	r17
    1a7e:	0f 91       	pop	r16
    1a80:	08 95       	ret

00001a82 <__ultoa_invert>:
    1a82:	fa 01       	movw	r30, r20
    1a84:	aa 27       	eor	r26, r26
    1a86:	28 30       	cpi	r18, 0x08	; 8
    1a88:	51 f1       	breq	.+84     	; 0x1ade <__ultoa_invert+0x5c>
    1a8a:	20 31       	cpi	r18, 0x10	; 16
    1a8c:	81 f1       	breq	.+96     	; 0x1aee <__ultoa_invert+0x6c>
    1a8e:	e8 94       	clt
    1a90:	6f 93       	push	r22
    1a92:	6e 7f       	andi	r22, 0xFE	; 254
    1a94:	6e 5f       	subi	r22, 0xFE	; 254
    1a96:	7f 4f       	sbci	r23, 0xFF	; 255
    1a98:	8f 4f       	sbci	r24, 0xFF	; 255
    1a9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a9c:	af 4f       	sbci	r26, 0xFF	; 255
    1a9e:	b1 e0       	ldi	r27, 0x01	; 1
    1aa0:	3e d0       	rcall	.+124    	; 0x1b1e <__ultoa_invert+0x9c>
    1aa2:	b4 e0       	ldi	r27, 0x04	; 4
    1aa4:	3c d0       	rcall	.+120    	; 0x1b1e <__ultoa_invert+0x9c>
    1aa6:	67 0f       	add	r22, r23
    1aa8:	78 1f       	adc	r23, r24
    1aaa:	89 1f       	adc	r24, r25
    1aac:	9a 1f       	adc	r25, r26
    1aae:	a1 1d       	adc	r26, r1
    1ab0:	68 0f       	add	r22, r24
    1ab2:	79 1f       	adc	r23, r25
    1ab4:	8a 1f       	adc	r24, r26
    1ab6:	91 1d       	adc	r25, r1
    1ab8:	a1 1d       	adc	r26, r1
    1aba:	6a 0f       	add	r22, r26
    1abc:	71 1d       	adc	r23, r1
    1abe:	81 1d       	adc	r24, r1
    1ac0:	91 1d       	adc	r25, r1
    1ac2:	a1 1d       	adc	r26, r1
    1ac4:	20 d0       	rcall	.+64     	; 0x1b06 <__ultoa_invert+0x84>
    1ac6:	09 f4       	brne	.+2      	; 0x1aca <__ultoa_invert+0x48>
    1ac8:	68 94       	set
    1aca:	3f 91       	pop	r19
    1acc:	2a e0       	ldi	r18, 0x0A	; 10
    1ace:	26 9f       	mul	r18, r22
    1ad0:	11 24       	eor	r1, r1
    1ad2:	30 19       	sub	r19, r0
    1ad4:	30 5d       	subi	r19, 0xD0	; 208
    1ad6:	31 93       	st	Z+, r19
    1ad8:	de f6       	brtc	.-74     	; 0x1a90 <__ultoa_invert+0xe>
    1ada:	cf 01       	movw	r24, r30
    1adc:	08 95       	ret
    1ade:	46 2f       	mov	r20, r22
    1ae0:	47 70       	andi	r20, 0x07	; 7
    1ae2:	40 5d       	subi	r20, 0xD0	; 208
    1ae4:	41 93       	st	Z+, r20
    1ae6:	b3 e0       	ldi	r27, 0x03	; 3
    1ae8:	0f d0       	rcall	.+30     	; 0x1b08 <__ultoa_invert+0x86>
    1aea:	c9 f7       	brne	.-14     	; 0x1ade <__ultoa_invert+0x5c>
    1aec:	f6 cf       	rjmp	.-20     	; 0x1ada <__ultoa_invert+0x58>
    1aee:	46 2f       	mov	r20, r22
    1af0:	4f 70       	andi	r20, 0x0F	; 15
    1af2:	40 5d       	subi	r20, 0xD0	; 208
    1af4:	4a 33       	cpi	r20, 0x3A	; 58
    1af6:	18 f0       	brcs	.+6      	; 0x1afe <__ultoa_invert+0x7c>
    1af8:	49 5d       	subi	r20, 0xD9	; 217
    1afa:	31 fd       	sbrc	r19, 1
    1afc:	40 52       	subi	r20, 0x20	; 32
    1afe:	41 93       	st	Z+, r20
    1b00:	02 d0       	rcall	.+4      	; 0x1b06 <__ultoa_invert+0x84>
    1b02:	a9 f7       	brne	.-22     	; 0x1aee <__ultoa_invert+0x6c>
    1b04:	ea cf       	rjmp	.-44     	; 0x1ada <__ultoa_invert+0x58>
    1b06:	b4 e0       	ldi	r27, 0x04	; 4
    1b08:	a6 95       	lsr	r26
    1b0a:	97 95       	ror	r25
    1b0c:	87 95       	ror	r24
    1b0e:	77 95       	ror	r23
    1b10:	67 95       	ror	r22
    1b12:	ba 95       	dec	r27
    1b14:	c9 f7       	brne	.-14     	; 0x1b08 <__ultoa_invert+0x86>
    1b16:	00 97       	sbiw	r24, 0x00	; 0
    1b18:	61 05       	cpc	r22, r1
    1b1a:	71 05       	cpc	r23, r1
    1b1c:	08 95       	ret
    1b1e:	9b 01       	movw	r18, r22
    1b20:	ac 01       	movw	r20, r24
    1b22:	0a 2e       	mov	r0, r26
    1b24:	06 94       	lsr	r0
    1b26:	57 95       	ror	r21
    1b28:	47 95       	ror	r20
    1b2a:	37 95       	ror	r19
    1b2c:	27 95       	ror	r18
    1b2e:	ba 95       	dec	r27
    1b30:	c9 f7       	brne	.-14     	; 0x1b24 <__ultoa_invert+0xa2>
    1b32:	62 0f       	add	r22, r18
    1b34:	73 1f       	adc	r23, r19
    1b36:	84 1f       	adc	r24, r20
    1b38:	95 1f       	adc	r25, r21
    1b3a:	a0 1d       	adc	r26, r0
    1b3c:	08 95       	ret

00001b3e <_exit>:
    1b3e:	f8 94       	cli

00001b40 <__stop_program>:
    1b40:	ff cf       	rjmp	.-2      	; 0x1b40 <__stop_program>
